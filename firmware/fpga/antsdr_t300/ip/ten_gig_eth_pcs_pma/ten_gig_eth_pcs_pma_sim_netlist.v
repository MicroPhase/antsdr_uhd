// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// --------------------------------------------------------------------------------
// Tool Version: Vivado v.2019.1 (lin64) Build 2552052 Fri May 24 14:47:09 MDT 2019
// Date        : Thu Sep  8 15:37:56 2022
// Host        : mp-dev running 64-bit Kylin V10 SP1
// Command     : write_verilog -force -mode funcsim
//               /home/mp/wcc_demo/network/n3xx_ethernet/top/n3xx/build-ip/xc7z100ffg900-2/ten_gig_eth_pcs_pma/ten_gig_eth_pcs_pma_sim_netlist.v
// Design      : ten_gig_eth_pcs_pma
// Purpose     : This verilog netlist is a functional simulation representation of the design and should not be modified
//               or synthesized. This netlist cannot be used for SDF annotated simulation.
// Device      : xc7z100ffg900-2
// --------------------------------------------------------------------------------
`timescale 1 ps / 1 ps

(* DowngradeIPIdentifiedWarnings = "yes" *) (* X_CORE_INFO = "ten_gig_eth_pcs_pma_v6_0_15,Vivado 2019.1" *) 
(* NotValidForBitStream *)
module ten_gig_eth_pcs_pma
   (dclk,
    rxrecclk_out,
    coreclk,
    txusrclk,
    txusrclk2,
    txoutclk,
    areset,
    areset_coreclk,
    gttxreset,
    gtrxreset,
    sim_speedup_control,
    txuserrdy,
    qplllock,
    qplloutclk,
    qplloutrefclk,
    reset_counter_done,
    xgmii_txd,
    xgmii_txc,
    xgmii_rxd,
    xgmii_rxc,
    txp,
    txn,
    rxp,
    rxn,
    mdc,
    mdio_in,
    mdio_out,
    mdio_tri,
    prtad,
    core_status,
    tx_resetdone,
    rx_resetdone,
    signal_detect,
    tx_fault,
    drp_req,
    drp_gnt,
    drp_den_o,
    drp_dwe_o,
    drp_daddr_o,
    drp_di_o,
    drp_drdy_o,
    drp_drpdo_o,
    drp_den_i,
    drp_dwe_i,
    drp_daddr_i,
    drp_di_i,
    drp_drdy_i,
    drp_drpdo_i,
    pma_pmd_type,
    tx_disable);
  input dclk;
  output rxrecclk_out;
  input coreclk;
  input txusrclk;
  input txusrclk2;
  output txoutclk;
  input areset;
  input areset_coreclk;
  input gttxreset;
  input gtrxreset;
  input sim_speedup_control;
  input txuserrdy;
  input qplllock;
  input qplloutclk;
  input qplloutrefclk;
  input reset_counter_done;
  input [63:0]xgmii_txd;
  input [7:0]xgmii_txc;
  output [63:0]xgmii_rxd;
  output [7:0]xgmii_rxc;
  output txp;
  output txn;
  input rxp;
  input rxn;
  input mdc;
  input mdio_in;
  output mdio_out;
  output mdio_tri;
  input [4:0]prtad;
  output [7:0]core_status;
  output tx_resetdone;
  output rx_resetdone;
  input signal_detect;
  input tx_fault;
  output drp_req;
  input drp_gnt;
  output drp_den_o;
  output drp_dwe_o;
  output [15:0]drp_daddr_o;
  output [15:0]drp_di_o;
  output drp_drdy_o;
  output [15:0]drp_drpdo_o;
  input drp_den_i;
  input drp_dwe_i;
  input [15:0]drp_daddr_i;
  input [15:0]drp_di_i;
  input drp_drdy_i;
  input [15:0]drp_drpdo_i;
  input [2:0]pma_pmd_type;
  output tx_disable;

  wire areset;
  wire areset_coreclk;
  wire [7:0]core_status;
  wire coreclk;
  wire dclk;
  wire [15:0]drp_daddr_i;
  wire [15:0]drp_daddr_o;
  wire drp_den_i;
  wire drp_den_o;
  wire [15:0]drp_di_i;
  wire [15:0]drp_di_o;
  wire drp_drdy_i;
  wire drp_drdy_o;
  wire [15:0]drp_drpdo_i;
  wire [15:0]drp_drpdo_o;
  wire drp_dwe_i;
  wire drp_dwe_o;
  wire drp_gnt;
  wire drp_req;
  wire gtrxreset;
  wire gttxreset;
  wire mdc;
  wire mdio_in;
  wire mdio_out;
  wire mdio_tri;
  wire [2:0]pma_pmd_type;
  wire [4:0]prtad;
  wire qplllock;
  wire qplloutclk;
  wire qplloutrefclk;
  wire reset_counter_done;
  wire rx_resetdone;
  wire rxn;
  wire rxp;
  wire rxrecclk_out;
  wire signal_detect;
  wire sim_speedup_control;
  wire tx_disable;
  wire tx_fault;
  wire tx_resetdone;
  wire txn;
  wire txoutclk;
  wire txp;
  wire txuserrdy;
  wire txusrclk;
  wire txusrclk2;
  wire [7:0]xgmii_rxc;
  wire [63:0]xgmii_rxd;
  wire [7:0]xgmii_txc;
  wire [63:0]xgmii_txd;

  (* DowngradeIPIdentifiedWarnings = "yes" *) 
  (* MASTER_WATCHDOG_TIMER_RESET = "29'b00110111111000010010110100000" *) 
  ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_block inst
       (.areset(areset),
        .areset_coreclk(areset_coreclk),
        .core_status(core_status),
        .coreclk(coreclk),
        .dclk(dclk),
        .drp_daddr_i(drp_daddr_i),
        .drp_daddr_o(drp_daddr_o),
        .drp_den_i(drp_den_i),
        .drp_den_o(drp_den_o),
        .drp_di_i(drp_di_i),
        .drp_di_o(drp_di_o),
        .drp_drdy_i(drp_drdy_i),
        .drp_drdy_o(drp_drdy_o),
        .drp_drpdo_i(drp_drpdo_i),
        .drp_drpdo_o(drp_drpdo_o),
        .drp_dwe_i(drp_dwe_i),
        .drp_dwe_o(drp_dwe_o),
        .drp_gnt(drp_gnt),
        .drp_req(drp_req),
        .gtrxreset(gtrxreset),
        .gttxreset(gttxreset),
        .mdc(mdc),
        .mdio_in(mdio_in),
        .mdio_out(mdio_out),
        .mdio_tri(mdio_tri),
        .pma_pmd_type(pma_pmd_type),
        .prtad(prtad),
        .qplllock(qplllock),
        .qplloutclk(qplloutclk),
        .qplloutrefclk(qplloutrefclk),
        .reset_counter_done(reset_counter_done),
        .rx_resetdone(rx_resetdone),
        .rxn(rxn),
        .rxp(rxp),
        .rxrecclk_out(rxrecclk_out),
        .signal_detect(signal_detect),
        .sim_speedup_control(sim_speedup_control),
        .tx_disable(tx_disable),
        .tx_fault(tx_fault),
        .tx_resetdone(tx_resetdone),
        .txn(txn),
        .txoutclk(txoutclk),
        .txp(txp),
        .txuserrdy(txuserrdy),
        .txusrclk(txusrclk),
        .txusrclk2(txusrclk2),
        .xgmii_rxc(xgmii_rxc),
        .xgmii_rxd(xgmii_rxd),
        .xgmii_txc(xgmii_txc),
        .xgmii_txd(xgmii_txd));
endmodule

(* DowngradeIPIdentifiedWarnings = "yes" *) (* MASTER_WATCHDOG_TIMER_RESET = "29'b00110111111000010010110100000" *) (* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_block" *) 
module ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_block
   (dclk,
    coreclk,
    txusrclk,
    txusrclk2,
    rxrecclk_out,
    txoutclk,
    areset,
    areset_coreclk,
    txuserrdy,
    gttxreset,
    gtrxreset,
    sim_speedup_control,
    qplllock,
    qplloutclk,
    qplloutrefclk,
    reset_counter_done,
    xgmii_txd,
    xgmii_txc,
    xgmii_rxd,
    xgmii_rxc,
    txp,
    txn,
    rxp,
    rxn,
    mdc,
    mdio_in,
    mdio_out,
    mdio_tri,
    prtad,
    core_status,
    tx_resetdone,
    rx_resetdone,
    signal_detect,
    tx_fault,
    drp_req,
    drp_gnt,
    drp_den_o,
    drp_dwe_o,
    drp_daddr_o,
    drp_di_o,
    drp_drdy_o,
    drp_drpdo_o,
    drp_den_i,
    drp_dwe_i,
    drp_daddr_i,
    drp_di_i,
    drp_drdy_i,
    drp_drpdo_i,
    pma_pmd_type,
    tx_disable);
  input dclk;
  input coreclk;
  input txusrclk;
  input txusrclk2;
  output rxrecclk_out;
  output txoutclk;
  input areset;
  input areset_coreclk;
  input txuserrdy;
  input gttxreset;
  input gtrxreset;
  input sim_speedup_control;
  input qplllock;
  input qplloutclk;
  input qplloutrefclk;
  input reset_counter_done;
  input [63:0]xgmii_txd;
  input [7:0]xgmii_txc;
  output [63:0]xgmii_rxd;
  output [7:0]xgmii_rxc;
  output txp;
  output txn;
  input rxp;
  input rxn;
  input mdc;
  input mdio_in;
  output mdio_out;
  output mdio_tri;
  input [4:0]prtad;
  output [7:0]core_status;
  output tx_resetdone;
  output rx_resetdone;
  input signal_detect;
  input tx_fault;
  output drp_req;
  input drp_gnt;
  output drp_den_o;
  output drp_dwe_o;
  output [15:0]drp_daddr_o;
  output [15:0]drp_di_o;
  output drp_drdy_o;
  output [15:0]drp_drpdo_o;
  input drp_den_i;
  input drp_dwe_i;
  input [15:0]drp_daddr_i;
  input [15:0]drp_di_i;
  input drp_drdy_i;
  input [15:0]drp_drpdo_i;
  input [2:0]pma_pmd_type;
  output tx_disable;

  wire \<const0> ;
  wire areset;
  wire areset_coreclk;
  wire areset_rxusrclk2;
  wire cable_is_pulled;
  wire cable_pull;
  wire cable_pull_coreclk_sync;
  wire cable_pull_falling;
  wire cable_pull_falling0;
  wire cable_pull_reg;
  wire cable_pull_reset_rising_reg;
  wire cable_pull_rising;
  wire cable_pull_rising0;
  wire cable_unpull_reset_rising_reg;
  wire core_in_testmode;
  wire [0:0]\^core_status ;
  wire coreclk;
  wire coreclk_reset_tx;
  wire dclk;
  wire dclk_reset;
  wire [15:0]drp_daddr_i;
  wire [15:0]drp_daddr_o;
  wire drp_den_i;
  wire drp_den_o;
  wire [15:0]drp_di_i;
  wire [15:0]drp_di_o;
  wire drp_drdy_i;
  wire drp_drdy_o;
  wire [15:0]drp_drpdo_i;
  wire [15:0]drp_drpdo_o;
  wire drp_dwe_i;
  wire drp_dwe_o;
  wire drp_gnt;
  wire drp_req;
  wire gt0_clear_rx_prbs_err_count_i;
  wire gt0_gtrxreset_c;
  wire gt0_gtrxreset_i;
  wire gt0_gttxreset_c;
  wire gt0_gttxreset_i;
  wire [1:1]gt0_loopback_i;
  wire gt0_rxbufreset_i;
  wire gt0_rxbufreset_i0;
  wire [31:0]gt0_rxdata_i;
  wire gt0_rxdatavalid_i;
  wire gt0_rxgearboxslip_i;
  wire [1:0]gt0_rxheader_i;
  wire gt0_rxheadervalid_i;
  wire gt0_rxresetdone_i_reg_rxusrclk2;
  (* DONT_TOUCH *) wire gt0_rxresetdone_reg;
  wire gt0_rxresetdone_reg1;
  (* DONT_TOUCH *) wire gt0_rxresetdone_reg_dup;
  wire gt0_rxresetdone_reg_reg0;
  wire gt0_rxuserrdy_i;
  wire gt0_txresetdone_i_sync_i_n_1;
  wire gt0_txresetdone_reg;
  wire gt0_txresetdone_reg0;
  wire gt0_txresetdone_reg1;
  wire [3:0]gt_rxc_d1;
  wire [31:0]gt_rxd_d1;
  wire [7:0]gt_txc;
  wire [31:0]gt_txd;
  wire gtrxreset;
  wire gtrxreset_coreclk;
  wire gttxreset;
  wire \master_watchdog[0]_i_3_n_0 ;
  wire \master_watchdog[0]_i_4_n_0 ;
  wire \master_watchdog[0]_i_5_n_0 ;
  wire \master_watchdog[0]_i_6_n_0 ;
  wire \master_watchdog[12]_i_2_n_0 ;
  wire \master_watchdog[12]_i_3_n_0 ;
  wire \master_watchdog[12]_i_4_n_0 ;
  wire \master_watchdog[12]_i_5_n_0 ;
  wire \master_watchdog[16]_i_2_n_0 ;
  wire \master_watchdog[16]_i_3_n_0 ;
  wire \master_watchdog[16]_i_4_n_0 ;
  wire \master_watchdog[16]_i_5_n_0 ;
  wire \master_watchdog[20]_i_2_n_0 ;
  wire \master_watchdog[20]_i_3_n_0 ;
  wire \master_watchdog[20]_i_4_n_0 ;
  wire \master_watchdog[20]_i_5_n_0 ;
  wire \master_watchdog[24]_i_2_n_0 ;
  wire \master_watchdog[24]_i_3_n_0 ;
  wire \master_watchdog[24]_i_4_n_0 ;
  wire \master_watchdog[24]_i_5_n_0 ;
  wire \master_watchdog[28]_i_2_n_0 ;
  wire \master_watchdog[4]_i_2_n_0 ;
  wire \master_watchdog[4]_i_3_n_0 ;
  wire \master_watchdog[4]_i_4_n_0 ;
  wire \master_watchdog[4]_i_5_n_0 ;
  wire \master_watchdog[8]_i_2_n_0 ;
  wire \master_watchdog[8]_i_3_n_0 ;
  wire \master_watchdog[8]_i_4_n_0 ;
  wire \master_watchdog[8]_i_5_n_0 ;
  wire master_watchdog_barking_i_1_n_0;
  wire master_watchdog_barking_i_2_n_0;
  wire master_watchdog_barking_i_3_n_0;
  wire master_watchdog_barking_i_4_n_0;
  wire master_watchdog_barking_i_5_n_0;
  wire master_watchdog_barking_i_6_n_0;
  wire master_watchdog_barking_reg_n_0;
  wire [28:0]master_watchdog_reg;
  wire \master_watchdog_reg[0]_i_2_n_0 ;
  wire \master_watchdog_reg[0]_i_2_n_1 ;
  wire \master_watchdog_reg[0]_i_2_n_2 ;
  wire \master_watchdog_reg[0]_i_2_n_3 ;
  wire \master_watchdog_reg[0]_i_2_n_4 ;
  wire \master_watchdog_reg[0]_i_2_n_5 ;
  wire \master_watchdog_reg[0]_i_2_n_6 ;
  wire \master_watchdog_reg[0]_i_2_n_7 ;
  wire \master_watchdog_reg[12]_i_1_n_0 ;
  wire \master_watchdog_reg[12]_i_1_n_1 ;
  wire \master_watchdog_reg[12]_i_1_n_2 ;
  wire \master_watchdog_reg[12]_i_1_n_3 ;
  wire \master_watchdog_reg[12]_i_1_n_4 ;
  wire \master_watchdog_reg[12]_i_1_n_5 ;
  wire \master_watchdog_reg[12]_i_1_n_6 ;
  wire \master_watchdog_reg[12]_i_1_n_7 ;
  wire \master_watchdog_reg[16]_i_1_n_0 ;
  wire \master_watchdog_reg[16]_i_1_n_1 ;
  wire \master_watchdog_reg[16]_i_1_n_2 ;
  wire \master_watchdog_reg[16]_i_1_n_3 ;
  wire \master_watchdog_reg[16]_i_1_n_4 ;
  wire \master_watchdog_reg[16]_i_1_n_5 ;
  wire \master_watchdog_reg[16]_i_1_n_6 ;
  wire \master_watchdog_reg[16]_i_1_n_7 ;
  wire \master_watchdog_reg[20]_i_1_n_0 ;
  wire \master_watchdog_reg[20]_i_1_n_1 ;
  wire \master_watchdog_reg[20]_i_1_n_2 ;
  wire \master_watchdog_reg[20]_i_1_n_3 ;
  wire \master_watchdog_reg[20]_i_1_n_4 ;
  wire \master_watchdog_reg[20]_i_1_n_5 ;
  wire \master_watchdog_reg[20]_i_1_n_6 ;
  wire \master_watchdog_reg[20]_i_1_n_7 ;
  wire \master_watchdog_reg[24]_i_1_n_0 ;
  wire \master_watchdog_reg[24]_i_1_n_1 ;
  wire \master_watchdog_reg[24]_i_1_n_2 ;
  wire \master_watchdog_reg[24]_i_1_n_3 ;
  wire \master_watchdog_reg[24]_i_1_n_4 ;
  wire \master_watchdog_reg[24]_i_1_n_5 ;
  wire \master_watchdog_reg[24]_i_1_n_6 ;
  wire \master_watchdog_reg[24]_i_1_n_7 ;
  wire \master_watchdog_reg[28]_i_1_n_7 ;
  wire \master_watchdog_reg[4]_i_1_n_0 ;
  wire \master_watchdog_reg[4]_i_1_n_1 ;
  wire \master_watchdog_reg[4]_i_1_n_2 ;
  wire \master_watchdog_reg[4]_i_1_n_3 ;
  wire \master_watchdog_reg[4]_i_1_n_4 ;
  wire \master_watchdog_reg[4]_i_1_n_5 ;
  wire \master_watchdog_reg[4]_i_1_n_6 ;
  wire \master_watchdog_reg[4]_i_1_n_7 ;
  wire \master_watchdog_reg[8]_i_1_n_0 ;
  wire \master_watchdog_reg[8]_i_1_n_1 ;
  wire \master_watchdog_reg[8]_i_1_n_2 ;
  wire \master_watchdog_reg[8]_i_1_n_3 ;
  wire \master_watchdog_reg[8]_i_1_n_4 ;
  wire \master_watchdog_reg[8]_i_1_n_5 ;
  wire \master_watchdog_reg[8]_i_1_n_6 ;
  wire \master_watchdog_reg[8]_i_1_n_7 ;
  wire mdc;
  wire mdio_in;
  wire mdio_out;
  wire mdio_tri;
  wire pcs_resetout;
  wire pcs_resetout_reg;
  wire pcs_resetout_rising;
  wire pcs_resetout_rising0;
  wire [2:0]pma_pmd_type;
  wire pma_resetout;
  wire pma_resetout_reg;
  wire pma_resetout_rising;
  wire pma_resetout_rising0;
  wire pma_resetout_rising_rxusrclk2;
  wire [4:0]prtad;
  wire qplllock;
  wire qplllock_coreclk_sync_i_n_0;
  wire qplllock_rxusrclk2;
  wire qplllock_txusrclk2;
  wire qplloutclk;
  wire qplloutrefclk;
  wire reset_counter_done;
  wire resetdone;
  wire rst0;
  wire rx_prbs31_en;
  wire rx_resetdone;
  wire rxn;
  wire rxp;
  wire rxrecclk_out;
  wire rxreset_rxusrclk2;
  wire rxusrclk2;
  wire signal_detect;
  wire signal_detect_comb;
  wire signal_detect_comb0;
  wire sim_speedup_control;
  wire tx_disable;
  wire tx_prbs31_en;
  wire tx_resetdone;
  wire txn;
  wire txoutclk;
  wire txp;
  wire txreset_txusrclk2;
  wire txuserrdy;
  wire txusrclk;
  wire txusrclk2;
  wire [7:0]xgmii_rxc;
  wire [63:0]xgmii_rxd;
  wire [7:0]xgmii_txc;
  wire [63:0]xgmii_txd;
  wire [3:0]\NLW_master_watchdog_reg[28]_i_1_CO_UNCONNECTED ;
  wire [3:1]\NLW_master_watchdog_reg[28]_i_1_O_UNCONNECTED ;
  wire NLW_ten_gig_eth_pcs_pma_core_gt_progdiv_reset_UNCONNECTED;
  wire NLW_ten_gig_eth_pcs_pma_core_is_eval_UNCONNECTED;
  wire NLW_ten_gig_eth_pcs_pma_core_training_rdack_UNCONNECTED;
  wire NLW_ten_gig_eth_pcs_pma_core_training_wrack_UNCONNECTED;
  wire [4:0]NLW_ten_gig_eth_pcs_pma_core_coeff_minus_1_UNCONNECTED;
  wire [4:0]NLW_ten_gig_eth_pcs_pma_core_coeff_plus_1_UNCONNECTED;
  wire [6:0]NLW_ten_gig_eth_pcs_pma_core_coeff_zero_UNCONNECTED;
  wire [7:1]NLW_ten_gig_eth_pcs_pma_core_core_status_UNCONNECTED;
  wire [2:0]NLW_ten_gig_eth_pcs_pma_core_loopback_ctrl_UNCONNECTED;
  wire [63:0]NLW_ten_gig_eth_pcs_pma_core_rxphy_correction_timer_UNCONNECTED;
  wire [35:0]NLW_ten_gig_eth_pcs_pma_core_rxphy_ns_field_UNCONNECTED;
  wire [47:0]NLW_ten_gig_eth_pcs_pma_core_rxphy_s_field_UNCONNECTED;
  wire [447:0]NLW_ten_gig_eth_pcs_pma_core_status_vector_UNCONNECTED;
  wire [15:0]NLW_ten_gig_eth_pcs_pma_core_training_rddata_UNCONNECTED;
  wire [4:0]NLW_ten_gig_eth_pcs_pma_core_txdiffctrl_UNCONNECTED;
  wire [15:0]NLW_ten_gig_eth_pcs_pma_core_txphy_async_gb_latency_UNCONNECTED;

  assign core_status[7] = \<const0> ;
  assign core_status[6] = \<const0> ;
  assign core_status[5] = \<const0> ;
  assign core_status[4] = \<const0> ;
  assign core_status[3] = \<const0> ;
  assign core_status[2] = \<const0> ;
  assign core_status[1] = \<const0> ;
  assign core_status[0] = \^core_status [0];
  GND GND
       (.G(\<const0> ));
  ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_ff_synchronizer cable_pull_coreclk_sync_i
       (.D(cable_pull),
        .cable_pull_coreclk_sync(cable_pull_coreclk_sync),
        .cable_pull_falling0(cable_pull_falling0),
        .cable_pull_reg(cable_pull_reg),
        .cable_pull_rising0(cable_pull_rising0),
        .coreclk(coreclk));
  FDRE #(
    .INIT(1'b0)) 
    cable_pull_falling_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(cable_pull_falling0),
        .Q(cable_pull_falling),
        .R(areset_coreclk));
  ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_cable_pull_logic cable_pull_logic_i
       (.CLK(rxusrclk2),
        .D({gt0_rxdata_i[24],gt0_rxdata_i[25],gt0_rxdata_i[26],gt0_rxdata_i[27]}),
        .SS(gt0_rxgearboxslip_i),
        .areset_rxusrclk2(areset_rxusrclk2),
        .cable_is_pulled(cable_is_pulled),
        .cable_pull_reset_rising_reg(cable_pull_reset_rising_reg),
        .cable_unpull_reset_rising_reg(cable_unpull_reset_rising_reg),
        .coreclk(coreclk),
        .gt0_rxresetdone_i_reg_rxusrclk2(gt0_rxresetdone_i_reg_rxusrclk2),
        .pma_resetout_rising_rxusrclk2(pma_resetout_rising_rxusrclk2));
  FDRE cable_pull_reg_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(cable_pull_coreclk_sync),
        .Q(cable_pull_reg),
        .R(areset_coreclk));
  FDRE #(
    .INIT(1'b0)) 
    cable_pull_rising_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(cable_pull_rising0),
        .Q(cable_pull_rising),
        .R(areset_coreclk));
  FDRE gt0_gtrxreset_i_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(gt0_gtrxreset_c),
        .Q(gt0_gtrxreset_i),
        .R(1'b0));
  FDRE gt0_gttxreset_i_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(gt0_gttxreset_c),
        .Q(gt0_gttxreset_i),
        .R(1'b0));
  ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_gtwizard_10gbaser_multi_GT gt0_gtwizard_10gbaser_multi_gt_i
       (.AS(gt0_gtrxreset_i),
        .CLK(rxusrclk2),
        .D({gt0_rxheadervalid_i,gt0_rxdatavalid_i,gt0_rxheader_i[0],gt0_rxheader_i[1]}),
        .clear_rx_prbs_err_count(gt0_clear_rx_prbs_err_count_i),
        .dclk(dclk),
        .dclk_0({gt0_rxdata_i[0],gt0_rxdata_i[1],gt0_rxdata_i[2],gt0_rxdata_i[3],gt0_rxdata_i[4],gt0_rxdata_i[5],gt0_rxdata_i[6],gt0_rxdata_i[7],gt0_rxdata_i[8],gt0_rxdata_i[9],gt0_rxdata_i[10],gt0_rxdata_i[11],gt0_rxdata_i[12],gt0_rxdata_i[13],gt0_rxdata_i[14],gt0_rxdata_i[15],gt0_rxdata_i[16],gt0_rxdata_i[17],gt0_rxdata_i[18],gt0_rxdata_i[19],gt0_rxdata_i[20],gt0_rxdata_i[21],gt0_rxdata_i[22],gt0_rxdata_i[23],gt0_rxdata_i[24],gt0_rxdata_i[25],gt0_rxdata_i[26],gt0_rxdata_i[27],gt0_rxdata_i[28],gt0_rxdata_i[29],gt0_rxdata_i[30],gt0_rxdata_i[31]}),
        .drp_daddr_i(drp_daddr_i[8:0]),
        .drp_den_i(drp_den_i),
        .drp_di_i(drp_di_i),
        .drp_drdy_o(drp_drdy_o),
        .drp_drpdo_o(drp_drpdo_o),
        .drp_dwe_i(drp_dwe_i),
        .gt0_gttxreset_i(gt0_gttxreset_i),
        .gt0_rxbufreset_i(gt0_rxbufreset_i),
        .gt0_rxbufreset_i0(gt0_rxbufreset_i0),
        .gt0_rxresetdone_i_reg_rxusrclk2(gt0_rxresetdone_i_reg_rxusrclk2),
        .gt0_rxresetdone_reg_reg0(gt0_rxresetdone_reg_reg0),
        .gt0_rxuserrdy_i(gt0_rxuserrdy_i),
        .gt0_txresetdone_reg0(gt0_txresetdone_reg0),
        .gt_slip(gt0_rxgearboxslip_i),
        .gt_txc(gt_txc),
        .gt_txd(gt_txd),
        .loopback_ctrl(gt0_loopback_i),
        .pcs_resetout_rising(pcs_resetout_rising),
        .qplllock_rxusrclk2(qplllock_rxusrclk2),
        .qplllock_txusrclk2(qplllock_txusrclk2),
        .qplloutclk(qplloutclk),
        .qplloutrefclk(qplloutrefclk),
        .rx_prbs31_en(rx_prbs31_en),
        .rxn(rxn),
        .rxp(rxp),
        .rxrecclk_out(rxrecclk_out),
        .tx_disable(tx_disable),
        .tx_prbs31_en(tx_prbs31_en),
        .txn(txn),
        .txoutclk(txoutclk),
        .txp(txp),
        .txuserrdy(txuserrdy),
        .txusrclk(txusrclk),
        .txusrclk2(txusrclk2));
  FDRE #(
    .INIT(1'b0)) 
    gt0_rxbufreset_i_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(gt0_rxbufreset_i0),
        .Q(gt0_rxbufreset_i),
        .R(1'b0));
  ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_ff_synchronizer_0 gt0_rxresetdone_i_reg_rxusrclk2_sync_i
       (.CLK(rxusrclk2),
        .D(gt0_rxresetdone_reg_dup),
        .gt0_rxresetdone_i_reg_rxusrclk2(gt0_rxresetdone_i_reg_rxusrclk2));
  ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_ff_synchronizer_1 gt0_rxresetdone_i_sync_i
       (.D(gt0_rxresetdone_reg1),
        .coreclk(coreclk),
        .data_out_reg_0(rx_resetdone),
        .pma_pmd_reset_clear_core_intr_reg(tx_resetdone),
        .resetdone(resetdone));
  FDRE #(
    .INIT(1'b0)) 
    gt0_rxresetdone_reg1_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(gt0_rxresetdone_reg),
        .Q(gt0_rxresetdone_reg1),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    gt0_rxresetdone_reg_dup_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(gt0_rxresetdone_reg_reg0),
        .Q(gt0_rxresetdone_reg_dup),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    gt0_rxresetdone_reg_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(gt0_rxresetdone_reg_reg0),
        .Q(gt0_rxresetdone_reg),
        .R(1'b0));
  ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_ff_synchronizer_2 gt0_txresetdone_i_sync_i
       (.D(rx_resetdone),
        .core_in_testmode(core_in_testmode),
        .core_in_testmode_reg(gt0_txresetdone_i_sync_i_n_1),
        .core_status(\^core_status ),
        .coreclk(coreclk),
        .data_out_reg_0(tx_resetdone),
        .\sync1_r_reg[0]_0 (gt0_txresetdone_reg1));
  FDRE #(
    .INIT(1'b0)) 
    gt0_txresetdone_reg1_reg
       (.C(txusrclk2),
        .CE(1'b1),
        .D(gt0_txresetdone_reg),
        .Q(gt0_txresetdone_reg1),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    gt0_txresetdone_reg_reg
       (.C(txusrclk2),
        .CE(1'b1),
        .D(gt0_txresetdone_reg0),
        .Q(gt0_txresetdone_reg),
        .R(1'b0));
  FDRE \gt_rxc_d1_reg[0] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(gt0_rxheader_i[1]),
        .Q(gt_rxc_d1[0]),
        .R(1'b0));
  FDRE \gt_rxc_d1_reg[1] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(gt0_rxheader_i[0]),
        .Q(gt_rxc_d1[1]),
        .R(1'b0));
  FDRE \gt_rxc_d1_reg[2] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(gt0_rxdatavalid_i),
        .Q(gt_rxc_d1[2]),
        .R(1'b0));
  FDRE \gt_rxc_d1_reg[3] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(gt0_rxheadervalid_i),
        .Q(gt_rxc_d1[3]),
        .R(1'b0));
  FDRE \gt_rxd_d1_reg[0] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(gt0_rxdata_i[31]),
        .Q(gt_rxd_d1[0]),
        .R(1'b0));
  FDRE \gt_rxd_d1_reg[10] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(gt0_rxdata_i[21]),
        .Q(gt_rxd_d1[10]),
        .R(1'b0));
  FDRE \gt_rxd_d1_reg[11] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(gt0_rxdata_i[20]),
        .Q(gt_rxd_d1[11]),
        .R(1'b0));
  FDRE \gt_rxd_d1_reg[12] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(gt0_rxdata_i[19]),
        .Q(gt_rxd_d1[12]),
        .R(1'b0));
  FDRE \gt_rxd_d1_reg[13] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(gt0_rxdata_i[18]),
        .Q(gt_rxd_d1[13]),
        .R(1'b0));
  FDRE \gt_rxd_d1_reg[14] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(gt0_rxdata_i[17]),
        .Q(gt_rxd_d1[14]),
        .R(1'b0));
  FDRE \gt_rxd_d1_reg[15] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(gt0_rxdata_i[16]),
        .Q(gt_rxd_d1[15]),
        .R(1'b0));
  FDRE \gt_rxd_d1_reg[16] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(gt0_rxdata_i[15]),
        .Q(gt_rxd_d1[16]),
        .R(1'b0));
  FDRE \gt_rxd_d1_reg[17] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(gt0_rxdata_i[14]),
        .Q(gt_rxd_d1[17]),
        .R(1'b0));
  FDRE \gt_rxd_d1_reg[18] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(gt0_rxdata_i[13]),
        .Q(gt_rxd_d1[18]),
        .R(1'b0));
  FDRE \gt_rxd_d1_reg[19] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(gt0_rxdata_i[12]),
        .Q(gt_rxd_d1[19]),
        .R(1'b0));
  FDRE \gt_rxd_d1_reg[1] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(gt0_rxdata_i[30]),
        .Q(gt_rxd_d1[1]),
        .R(1'b0));
  FDRE \gt_rxd_d1_reg[20] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(gt0_rxdata_i[11]),
        .Q(gt_rxd_d1[20]),
        .R(1'b0));
  FDRE \gt_rxd_d1_reg[21] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(gt0_rxdata_i[10]),
        .Q(gt_rxd_d1[21]),
        .R(1'b0));
  FDRE \gt_rxd_d1_reg[22] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(gt0_rxdata_i[9]),
        .Q(gt_rxd_d1[22]),
        .R(1'b0));
  FDRE \gt_rxd_d1_reg[23] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(gt0_rxdata_i[8]),
        .Q(gt_rxd_d1[23]),
        .R(1'b0));
  FDRE \gt_rxd_d1_reg[24] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(gt0_rxdata_i[7]),
        .Q(gt_rxd_d1[24]),
        .R(1'b0));
  FDRE \gt_rxd_d1_reg[25] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(gt0_rxdata_i[6]),
        .Q(gt_rxd_d1[25]),
        .R(1'b0));
  FDRE \gt_rxd_d1_reg[26] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(gt0_rxdata_i[5]),
        .Q(gt_rxd_d1[26]),
        .R(1'b0));
  FDRE \gt_rxd_d1_reg[27] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(gt0_rxdata_i[4]),
        .Q(gt_rxd_d1[27]),
        .R(1'b0));
  FDRE \gt_rxd_d1_reg[28] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(gt0_rxdata_i[3]),
        .Q(gt_rxd_d1[28]),
        .R(1'b0));
  FDRE \gt_rxd_d1_reg[29] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(gt0_rxdata_i[2]),
        .Q(gt_rxd_d1[29]),
        .R(1'b0));
  FDRE \gt_rxd_d1_reg[2] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(gt0_rxdata_i[29]),
        .Q(gt_rxd_d1[2]),
        .R(1'b0));
  FDRE \gt_rxd_d1_reg[30] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(gt0_rxdata_i[1]),
        .Q(gt_rxd_d1[30]),
        .R(1'b0));
  FDRE \gt_rxd_d1_reg[31] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(gt0_rxdata_i[0]),
        .Q(gt_rxd_d1[31]),
        .R(1'b0));
  FDRE \gt_rxd_d1_reg[3] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(gt0_rxdata_i[28]),
        .Q(gt_rxd_d1[3]),
        .R(1'b0));
  FDRE \gt_rxd_d1_reg[4] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(gt0_rxdata_i[27]),
        .Q(gt_rxd_d1[4]),
        .R(1'b0));
  FDRE \gt_rxd_d1_reg[5] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(gt0_rxdata_i[26]),
        .Q(gt_rxd_d1[5]),
        .R(1'b0));
  FDRE \gt_rxd_d1_reg[6] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(gt0_rxdata_i[25]),
        .Q(gt_rxd_d1[6]),
        .R(1'b0));
  FDRE \gt_rxd_d1_reg[7] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(gt0_rxdata_i[24]),
        .Q(gt_rxd_d1[7]),
        .R(1'b0));
  FDRE \gt_rxd_d1_reg[8] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(gt0_rxdata_i[23]),
        .Q(gt_rxd_d1[8]),
        .R(1'b0));
  FDRE \gt_rxd_d1_reg[9] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(gt0_rxdata_i[22]),
        .Q(gt_rxd_d1[9]),
        .R(1'b0));
  ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_ff_synchronizer_rst gtrxreset_coreclk_sync_i
       (.coreclk(coreclk),
        .gtrxreset(gtrxreset),
        .gtrxreset_coreclk(gtrxreset_coreclk));
  LUT1 #(
    .INIT(2'h1)) 
    \master_watchdog[0]_i_3 
       (.I0(master_watchdog_reg[3]),
        .O(\master_watchdog[0]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \master_watchdog[0]_i_4 
       (.I0(master_watchdog_reg[2]),
        .O(\master_watchdog[0]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \master_watchdog[0]_i_5 
       (.I0(master_watchdog_reg[1]),
        .O(\master_watchdog[0]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \master_watchdog[0]_i_6 
       (.I0(master_watchdog_reg[0]),
        .O(\master_watchdog[0]_i_6_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \master_watchdog[12]_i_2 
       (.I0(master_watchdog_reg[15]),
        .O(\master_watchdog[12]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \master_watchdog[12]_i_3 
       (.I0(master_watchdog_reg[14]),
        .O(\master_watchdog[12]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \master_watchdog[12]_i_4 
       (.I0(master_watchdog_reg[13]),
        .O(\master_watchdog[12]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \master_watchdog[12]_i_5 
       (.I0(master_watchdog_reg[12]),
        .O(\master_watchdog[12]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \master_watchdog[16]_i_2 
       (.I0(master_watchdog_reg[19]),
        .O(\master_watchdog[16]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \master_watchdog[16]_i_3 
       (.I0(master_watchdog_reg[18]),
        .O(\master_watchdog[16]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \master_watchdog[16]_i_4 
       (.I0(master_watchdog_reg[17]),
        .O(\master_watchdog[16]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \master_watchdog[16]_i_5 
       (.I0(master_watchdog_reg[16]),
        .O(\master_watchdog[16]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \master_watchdog[20]_i_2 
       (.I0(master_watchdog_reg[23]),
        .O(\master_watchdog[20]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \master_watchdog[20]_i_3 
       (.I0(master_watchdog_reg[22]),
        .O(\master_watchdog[20]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \master_watchdog[20]_i_4 
       (.I0(master_watchdog_reg[21]),
        .O(\master_watchdog[20]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \master_watchdog[20]_i_5 
       (.I0(master_watchdog_reg[20]),
        .O(\master_watchdog[20]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \master_watchdog[24]_i_2 
       (.I0(master_watchdog_reg[27]),
        .O(\master_watchdog[24]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \master_watchdog[24]_i_3 
       (.I0(master_watchdog_reg[26]),
        .O(\master_watchdog[24]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \master_watchdog[24]_i_4 
       (.I0(master_watchdog_reg[25]),
        .O(\master_watchdog[24]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \master_watchdog[24]_i_5 
       (.I0(master_watchdog_reg[24]),
        .O(\master_watchdog[24]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \master_watchdog[28]_i_2 
       (.I0(master_watchdog_reg[28]),
        .O(\master_watchdog[28]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \master_watchdog[4]_i_2 
       (.I0(master_watchdog_reg[7]),
        .O(\master_watchdog[4]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \master_watchdog[4]_i_3 
       (.I0(master_watchdog_reg[6]),
        .O(\master_watchdog[4]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \master_watchdog[4]_i_4 
       (.I0(master_watchdog_reg[5]),
        .O(\master_watchdog[4]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \master_watchdog[4]_i_5 
       (.I0(master_watchdog_reg[4]),
        .O(\master_watchdog[4]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \master_watchdog[8]_i_2 
       (.I0(master_watchdog_reg[11]),
        .O(\master_watchdog[8]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \master_watchdog[8]_i_3 
       (.I0(master_watchdog_reg[10]),
        .O(\master_watchdog[8]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \master_watchdog[8]_i_4 
       (.I0(master_watchdog_reg[9]),
        .O(\master_watchdog[8]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \master_watchdog[8]_i_5 
       (.I0(master_watchdog_reg[8]),
        .O(\master_watchdog[8]_i_5_n_0 ));
  LUT5 #(
    .INIT(32'h80000000)) 
    master_watchdog_barking_i_1
       (.I0(master_watchdog_barking_i_2_n_0),
        .I1(master_watchdog_barking_i_3_n_0),
        .I2(master_watchdog_barking_i_4_n_0),
        .I3(master_watchdog_barking_i_5_n_0),
        .I4(master_watchdog_barking_i_6_n_0),
        .O(master_watchdog_barking_i_1_n_0));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    master_watchdog_barking_i_2
       (.I0(master_watchdog_reg[25]),
        .I1(master_watchdog_reg[26]),
        .I2(master_watchdog_reg[23]),
        .I3(master_watchdog_reg[24]),
        .I4(master_watchdog_reg[28]),
        .I5(master_watchdog_reg[27]),
        .O(master_watchdog_barking_i_2_n_0));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    master_watchdog_barking_i_3
       (.I0(master_watchdog_reg[19]),
        .I1(master_watchdog_reg[20]),
        .I2(master_watchdog_reg[17]),
        .I3(master_watchdog_reg[18]),
        .I4(master_watchdog_reg[22]),
        .I5(master_watchdog_reg[21]),
        .O(master_watchdog_barking_i_3_n_0));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    master_watchdog_barking_i_4
       (.I0(master_watchdog_reg[13]),
        .I1(master_watchdog_reg[14]),
        .I2(master_watchdog_reg[11]),
        .I3(master_watchdog_reg[12]),
        .I4(master_watchdog_reg[16]),
        .I5(master_watchdog_reg[15]),
        .O(master_watchdog_barking_i_4_n_0));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    master_watchdog_barking_i_5
       (.I0(master_watchdog_reg[7]),
        .I1(master_watchdog_reg[8]),
        .I2(master_watchdog_reg[5]),
        .I3(master_watchdog_reg[6]),
        .I4(master_watchdog_reg[10]),
        .I5(master_watchdog_reg[9]),
        .O(master_watchdog_barking_i_5_n_0));
  LUT5 #(
    .INIT(32'h00000001)) 
    master_watchdog_barking_i_6
       (.I0(master_watchdog_reg[0]),
        .I1(master_watchdog_reg[1]),
        .I2(master_watchdog_reg[2]),
        .I3(master_watchdog_reg[4]),
        .I4(master_watchdog_reg[3]),
        .O(master_watchdog_barking_i_6_n_0));
  FDRE #(
    .INIT(1'b0)) 
    master_watchdog_barking_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(master_watchdog_barking_i_1_n_0),
        .Q(master_watchdog_barking_reg_n_0),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \master_watchdog_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\master_watchdog_reg[0]_i_2_n_7 ),
        .Q(master_watchdog_reg[0]),
        .R(gt0_txresetdone_i_sync_i_n_1));
  CARRY4 \master_watchdog_reg[0]_i_2 
       (.CI(1'b0),
        .CO({\master_watchdog_reg[0]_i_2_n_0 ,\master_watchdog_reg[0]_i_2_n_1 ,\master_watchdog_reg[0]_i_2_n_2 ,\master_watchdog_reg[0]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b1,1'b1,1'b1,1'b1}),
        .O({\master_watchdog_reg[0]_i_2_n_4 ,\master_watchdog_reg[0]_i_2_n_5 ,\master_watchdog_reg[0]_i_2_n_6 ,\master_watchdog_reg[0]_i_2_n_7 }),
        .S({\master_watchdog[0]_i_3_n_0 ,\master_watchdog[0]_i_4_n_0 ,\master_watchdog[0]_i_5_n_0 ,\master_watchdog[0]_i_6_n_0 }));
  FDSE #(
    .INIT(1'b1)) 
    \master_watchdog_reg[10] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\master_watchdog_reg[8]_i_1_n_5 ),
        .Q(master_watchdog_reg[10]),
        .S(gt0_txresetdone_i_sync_i_n_1));
  FDRE #(
    .INIT(1'b0)) 
    \master_watchdog_reg[11] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\master_watchdog_reg[8]_i_1_n_4 ),
        .Q(master_watchdog_reg[11]),
        .R(gt0_txresetdone_i_sync_i_n_1));
  FDRE #(
    .INIT(1'b0)) 
    \master_watchdog_reg[12] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\master_watchdog_reg[12]_i_1_n_7 ),
        .Q(master_watchdog_reg[12]),
        .R(gt0_txresetdone_i_sync_i_n_1));
  CARRY4 \master_watchdog_reg[12]_i_1 
       (.CI(\master_watchdog_reg[8]_i_1_n_0 ),
        .CO({\master_watchdog_reg[12]_i_1_n_0 ,\master_watchdog_reg[12]_i_1_n_1 ,\master_watchdog_reg[12]_i_1_n_2 ,\master_watchdog_reg[12]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b1,1'b1,1'b1,1'b1}),
        .O({\master_watchdog_reg[12]_i_1_n_4 ,\master_watchdog_reg[12]_i_1_n_5 ,\master_watchdog_reg[12]_i_1_n_6 ,\master_watchdog_reg[12]_i_1_n_7 }),
        .S({\master_watchdog[12]_i_2_n_0 ,\master_watchdog[12]_i_3_n_0 ,\master_watchdog[12]_i_4_n_0 ,\master_watchdog[12]_i_5_n_0 }));
  FDSE #(
    .INIT(1'b1)) 
    \master_watchdog_reg[13] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\master_watchdog_reg[12]_i_1_n_6 ),
        .Q(master_watchdog_reg[13]),
        .S(gt0_txresetdone_i_sync_i_n_1));
  FDRE #(
    .INIT(1'b0)) 
    \master_watchdog_reg[14] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\master_watchdog_reg[12]_i_1_n_5 ),
        .Q(master_watchdog_reg[14]),
        .R(gt0_txresetdone_i_sync_i_n_1));
  FDRE #(
    .INIT(1'b0)) 
    \master_watchdog_reg[15] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\master_watchdog_reg[12]_i_1_n_4 ),
        .Q(master_watchdog_reg[15]),
        .R(gt0_txresetdone_i_sync_i_n_1));
  FDRE #(
    .INIT(1'b0)) 
    \master_watchdog_reg[16] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\master_watchdog_reg[16]_i_1_n_7 ),
        .Q(master_watchdog_reg[16]),
        .R(gt0_txresetdone_i_sync_i_n_1));
  CARRY4 \master_watchdog_reg[16]_i_1 
       (.CI(\master_watchdog_reg[12]_i_1_n_0 ),
        .CO({\master_watchdog_reg[16]_i_1_n_0 ,\master_watchdog_reg[16]_i_1_n_1 ,\master_watchdog_reg[16]_i_1_n_2 ,\master_watchdog_reg[16]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b1,1'b1,1'b1,1'b1}),
        .O({\master_watchdog_reg[16]_i_1_n_4 ,\master_watchdog_reg[16]_i_1_n_5 ,\master_watchdog_reg[16]_i_1_n_6 ,\master_watchdog_reg[16]_i_1_n_7 }),
        .S({\master_watchdog[16]_i_2_n_0 ,\master_watchdog[16]_i_3_n_0 ,\master_watchdog[16]_i_4_n_0 ,\master_watchdog[16]_i_5_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \master_watchdog_reg[17] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\master_watchdog_reg[16]_i_1_n_6 ),
        .Q(master_watchdog_reg[17]),
        .R(gt0_txresetdone_i_sync_i_n_1));
  FDSE #(
    .INIT(1'b1)) 
    \master_watchdog_reg[18] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\master_watchdog_reg[16]_i_1_n_5 ),
        .Q(master_watchdog_reg[18]),
        .S(gt0_txresetdone_i_sync_i_n_1));
  FDSE #(
    .INIT(1'b1)) 
    \master_watchdog_reg[19] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\master_watchdog_reg[16]_i_1_n_4 ),
        .Q(master_watchdog_reg[19]),
        .S(gt0_txresetdone_i_sync_i_n_1));
  FDRE #(
    .INIT(1'b0)) 
    \master_watchdog_reg[1] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\master_watchdog_reg[0]_i_2_n_6 ),
        .Q(master_watchdog_reg[1]),
        .R(gt0_txresetdone_i_sync_i_n_1));
  FDSE #(
    .INIT(1'b1)) 
    \master_watchdog_reg[20] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\master_watchdog_reg[20]_i_1_n_7 ),
        .Q(master_watchdog_reg[20]),
        .S(gt0_txresetdone_i_sync_i_n_1));
  CARRY4 \master_watchdog_reg[20]_i_1 
       (.CI(\master_watchdog_reg[16]_i_1_n_0 ),
        .CO({\master_watchdog_reg[20]_i_1_n_0 ,\master_watchdog_reg[20]_i_1_n_1 ,\master_watchdog_reg[20]_i_1_n_2 ,\master_watchdog_reg[20]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b1,1'b1,1'b1,1'b1}),
        .O({\master_watchdog_reg[20]_i_1_n_4 ,\master_watchdog_reg[20]_i_1_n_5 ,\master_watchdog_reg[20]_i_1_n_6 ,\master_watchdog_reg[20]_i_1_n_7 }),
        .S({\master_watchdog[20]_i_2_n_0 ,\master_watchdog[20]_i_3_n_0 ,\master_watchdog[20]_i_4_n_0 ,\master_watchdog[20]_i_5_n_0 }));
  FDSE #(
    .INIT(1'b1)) 
    \master_watchdog_reg[21] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\master_watchdog_reg[20]_i_1_n_6 ),
        .Q(master_watchdog_reg[21]),
        .S(gt0_txresetdone_i_sync_i_n_1));
  FDSE #(
    .INIT(1'b1)) 
    \master_watchdog_reg[22] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\master_watchdog_reg[20]_i_1_n_5 ),
        .Q(master_watchdog_reg[22]),
        .S(gt0_txresetdone_i_sync_i_n_1));
  FDSE #(
    .INIT(1'b1)) 
    \master_watchdog_reg[23] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\master_watchdog_reg[20]_i_1_n_4 ),
        .Q(master_watchdog_reg[23]),
        .S(gt0_txresetdone_i_sync_i_n_1));
  FDRE #(
    .INIT(1'b0)) 
    \master_watchdog_reg[24] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\master_watchdog_reg[24]_i_1_n_7 ),
        .Q(master_watchdog_reg[24]),
        .R(gt0_txresetdone_i_sync_i_n_1));
  CARRY4 \master_watchdog_reg[24]_i_1 
       (.CI(\master_watchdog_reg[20]_i_1_n_0 ),
        .CO({\master_watchdog_reg[24]_i_1_n_0 ,\master_watchdog_reg[24]_i_1_n_1 ,\master_watchdog_reg[24]_i_1_n_2 ,\master_watchdog_reg[24]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b1,1'b1,1'b1,1'b1}),
        .O({\master_watchdog_reg[24]_i_1_n_4 ,\master_watchdog_reg[24]_i_1_n_5 ,\master_watchdog_reg[24]_i_1_n_6 ,\master_watchdog_reg[24]_i_1_n_7 }),
        .S({\master_watchdog[24]_i_2_n_0 ,\master_watchdog[24]_i_3_n_0 ,\master_watchdog[24]_i_4_n_0 ,\master_watchdog[24]_i_5_n_0 }));
  FDSE #(
    .INIT(1'b1)) 
    \master_watchdog_reg[25] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\master_watchdog_reg[24]_i_1_n_6 ),
        .Q(master_watchdog_reg[25]),
        .S(gt0_txresetdone_i_sync_i_n_1));
  FDSE #(
    .INIT(1'b1)) 
    \master_watchdog_reg[26] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\master_watchdog_reg[24]_i_1_n_5 ),
        .Q(master_watchdog_reg[26]),
        .S(gt0_txresetdone_i_sync_i_n_1));
  FDRE #(
    .INIT(1'b0)) 
    \master_watchdog_reg[27] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\master_watchdog_reg[24]_i_1_n_4 ),
        .Q(master_watchdog_reg[27]),
        .R(gt0_txresetdone_i_sync_i_n_1));
  FDRE #(
    .INIT(1'b0)) 
    \master_watchdog_reg[28] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\master_watchdog_reg[28]_i_1_n_7 ),
        .Q(master_watchdog_reg[28]),
        .R(gt0_txresetdone_i_sync_i_n_1));
  CARRY4 \master_watchdog_reg[28]_i_1 
       (.CI(\master_watchdog_reg[24]_i_1_n_0 ),
        .CO(\NLW_master_watchdog_reg[28]_i_1_CO_UNCONNECTED [3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_master_watchdog_reg[28]_i_1_O_UNCONNECTED [3:1],\master_watchdog_reg[28]_i_1_n_7 }),
        .S({1'b0,1'b0,1'b0,\master_watchdog[28]_i_2_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \master_watchdog_reg[2] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\master_watchdog_reg[0]_i_2_n_5 ),
        .Q(master_watchdog_reg[2]),
        .R(gt0_txresetdone_i_sync_i_n_1));
  FDRE #(
    .INIT(1'b0)) 
    \master_watchdog_reg[3] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\master_watchdog_reg[0]_i_2_n_4 ),
        .Q(master_watchdog_reg[3]),
        .R(gt0_txresetdone_i_sync_i_n_1));
  FDRE #(
    .INIT(1'b0)) 
    \master_watchdog_reg[4] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\master_watchdog_reg[4]_i_1_n_7 ),
        .Q(master_watchdog_reg[4]),
        .R(gt0_txresetdone_i_sync_i_n_1));
  CARRY4 \master_watchdog_reg[4]_i_1 
       (.CI(\master_watchdog_reg[0]_i_2_n_0 ),
        .CO({\master_watchdog_reg[4]_i_1_n_0 ,\master_watchdog_reg[4]_i_1_n_1 ,\master_watchdog_reg[4]_i_1_n_2 ,\master_watchdog_reg[4]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b1,1'b1,1'b1,1'b1}),
        .O({\master_watchdog_reg[4]_i_1_n_4 ,\master_watchdog_reg[4]_i_1_n_5 ,\master_watchdog_reg[4]_i_1_n_6 ,\master_watchdog_reg[4]_i_1_n_7 }),
        .S({\master_watchdog[4]_i_2_n_0 ,\master_watchdog[4]_i_3_n_0 ,\master_watchdog[4]_i_4_n_0 ,\master_watchdog[4]_i_5_n_0 }));
  FDSE #(
    .INIT(1'b1)) 
    \master_watchdog_reg[5] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\master_watchdog_reg[4]_i_1_n_6 ),
        .Q(master_watchdog_reg[5]),
        .S(gt0_txresetdone_i_sync_i_n_1));
  FDRE #(
    .INIT(1'b0)) 
    \master_watchdog_reg[6] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\master_watchdog_reg[4]_i_1_n_5 ),
        .Q(master_watchdog_reg[6]),
        .R(gt0_txresetdone_i_sync_i_n_1));
  FDSE #(
    .INIT(1'b1)) 
    \master_watchdog_reg[7] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\master_watchdog_reg[4]_i_1_n_4 ),
        .Q(master_watchdog_reg[7]),
        .S(gt0_txresetdone_i_sync_i_n_1));
  FDSE #(
    .INIT(1'b1)) 
    \master_watchdog_reg[8] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\master_watchdog_reg[8]_i_1_n_7 ),
        .Q(master_watchdog_reg[8]),
        .S(gt0_txresetdone_i_sync_i_n_1));
  CARRY4 \master_watchdog_reg[8]_i_1 
       (.CI(\master_watchdog_reg[4]_i_1_n_0 ),
        .CO({\master_watchdog_reg[8]_i_1_n_0 ,\master_watchdog_reg[8]_i_1_n_1 ,\master_watchdog_reg[8]_i_1_n_2 ,\master_watchdog_reg[8]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b1,1'b1,1'b1,1'b1}),
        .O({\master_watchdog_reg[8]_i_1_n_4 ,\master_watchdog_reg[8]_i_1_n_5 ,\master_watchdog_reg[8]_i_1_n_6 ,\master_watchdog_reg[8]_i_1_n_7 }),
        .S({\master_watchdog[8]_i_2_n_0 ,\master_watchdog[8]_i_3_n_0 ,\master_watchdog[8]_i_4_n_0 ,\master_watchdog[8]_i_5_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \master_watchdog_reg[9] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\master_watchdog_reg[8]_i_1_n_6 ),
        .Q(master_watchdog_reg[9]),
        .R(gt0_txresetdone_i_sync_i_n_1));
  FDRE #(
    .INIT(1'b0)) 
    pcs_resetout_reg_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(pcs_resetout),
        .Q(pcs_resetout_reg),
        .R(areset_coreclk));
  LUT2 #(
    .INIT(4'h2)) 
    pcs_resetout_rising_i_1
       (.I0(pcs_resetout),
        .I1(pcs_resetout_reg),
        .O(pcs_resetout_rising0));
  FDRE #(
    .INIT(1'b0)) 
    pcs_resetout_rising_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(pcs_resetout_rising0),
        .Q(pcs_resetout_rising),
        .R(areset_coreclk));
  FDRE #(
    .INIT(1'b0)) 
    pma_resetout_reg_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(pma_resetout),
        .Q(pma_resetout_reg),
        .R(areset_coreclk));
  LUT2 #(
    .INIT(4'h2)) 
    pma_resetout_rising_i_1
       (.I0(pma_resetout),
        .I1(pma_resetout_reg),
        .O(pma_resetout_rising0));
  FDRE pma_resetout_rising_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(pma_resetout_rising0),
        .Q(pma_resetout_rising),
        .R(areset_coreclk));
  ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_ff_synchronizer_rst__parameterized1 qplllock_coreclk_sync_i
       (.AR(rst0),
        .AS(pma_resetout_rising),
        .cable_pull_falling(cable_pull_falling),
        .cable_pull_falling_reg(qplllock_coreclk_sync_i_n_0),
        .cable_pull_rising(cable_pull_rising),
        .cable_unpull_reset_rising_reg(cable_unpull_reset_rising_reg),
        .coreclk(coreclk),
        .gt0_gttxreset_c(gt0_gttxreset_c),
        .gttxreset(gttxreset),
        .reset_counter_done(reset_counter_done));
  ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_ff_synchronizer_rst__parameterized1_3 qplllock_rxusrclk2_sync_i
       (.AR(rst0),
        .CLK(rxusrclk2),
        .qplllock(qplllock),
        .qplllock_rxusrclk2(qplllock_rxusrclk2));
  ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_ff_synchronizer_rst__parameterized1_4 qplllock_txusrclk2_sync_i
       (.AR(rst0),
        .qplllock_txusrclk2(qplllock_txusrclk2),
        .txusrclk2(txusrclk2));
  FDRE #(
    .INIT(1'b1)) 
    signal_detect_comb_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(signal_detect_comb0),
        .Q(signal_detect_comb),
        .R(1'b0));
  ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_ff_synchronizer_5 signal_detect_coreclk_sync_i
       (.cable_pull_reset_rising_reg(cable_pull_reset_rising_reg),
        .coreclk(coreclk),
        .gt0_gtrxreset_c(gt0_gtrxreset_c),
        .gt0_gtrxreset_i_reg(master_watchdog_barking_reg_n_0),
        .gt0_gtrxreset_i_reg_0(qplllock_coreclk_sync_i_n_0),
        .gtrxreset_coreclk(gtrxreset_coreclk),
        .reset_counter_done(reset_counter_done),
        .signal_detect(signal_detect));
  ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_ff_synchronizer_6 signal_detect_rxusrclk2_sync_i
       (.CLK(rxusrclk2),
        .cable_is_pulled(cable_is_pulled),
        .signal_detect(signal_detect),
        .signal_detect_comb0(signal_detect_comb0));
  (* C_1588 = "0" *) 
  (* C_DP_WIDTH = "64" *) 
  (* C_GTIF_WIDTH = "32" *) 
  (* C_GTTYPE = "0" *) 
  (* C_HAS_AN = "1'b0" *) 
  (* C_HAS_FEC = "1'b0" *) 
  (* C_HAS_MDIO = "1'b1" *) 
  (* C_IS_32BIT = "1'b0" *) 
  (* C_IS_KR = "1'b0" *) 
  (* C_NO_EBUFF = "1'b0" *) 
  (* C_REFCLKRATE = "156" *) 
  (* C_SPEED10_25 = "10" *) 
  (* DowngradeIPIdentifiedWarnings = "yes" *) 
  ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15 ten_gig_eth_pcs_pma_core
       (.an_enable(1'b0),
        .areset_coreclk(areset_coreclk),
        .areset_rxusrclk2(1'b0),
        .cable_pull(cable_pull),
        .clear_rx_prbs_err_count(gt0_clear_rx_prbs_err_count_i),
        .coeff_minus_1(NLW_ten_gig_eth_pcs_pma_core_coeff_minus_1_UNCONNECTED[4:0]),
        .coeff_plus_1(NLW_ten_gig_eth_pcs_pma_core_coeff_plus_1_UNCONNECTED[4:0]),
        .coeff_zero(NLW_ten_gig_eth_pcs_pma_core_coeff_zero_UNCONNECTED[6:0]),
        .configuration_vector({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .core_in_testmode(core_in_testmode),
        .core_status({NLW_ten_gig_eth_pcs_pma_core_core_status_UNCONNECTED[7:1],\^core_status }),
        .coreclk(coreclk),
        .correction_timer({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .dclk(dclk),
        .dclk_reset(dclk_reset),
        .drp_daddr(drp_daddr_o),
        .drp_den(drp_den_o),
        .drp_di(drp_di_o),
        .drp_drdy(drp_drdy_i),
        .drp_drpdo(drp_drpdo_i),
        .drp_dwe(drp_dwe_o),
        .drp_gnt(drp_gnt),
        .drp_req(drp_req),
        .fr_clk(1'b0),
        .gt_latclk(1'b0),
        .gt_progdiv_reset(NLW_ten_gig_eth_pcs_pma_core_gt_progdiv_reset_UNCONNECTED),
        .gt_rxc({1'b0,1'b0,1'b0,1'b0,gt_rxc_d1}),
        .gt_rxd(gt_rxd_d1),
        .gt_rxstartofseq(1'b0),
        .gt_slip(gt0_rxgearboxslip_i),
        .gt_txc(gt_txc),
        .gt_txd(gt_txd),
        .is_eval(NLW_ten_gig_eth_pcs_pma_core_is_eval_UNCONNECTED),
        .lfreset(1'b0),
        .loopback_ctrl({NLW_ten_gig_eth_pcs_pma_core_loopback_ctrl_UNCONNECTED[2],gt0_loopback_i,NLW_ten_gig_eth_pcs_pma_core_loopback_ctrl_UNCONNECTED[0]}),
        .mdc(mdc),
        .mdio_in(mdio_in),
        .mdio_out(mdio_out),
        .mdio_tri(mdio_tri),
        .pcs_resetout(pcs_resetout),
        .pma_pmd_type(pma_pmd_type),
        .pma_resetout(pma_resetout),
        .prtad(prtad),
        .reset(coreclk_reset_tx),
        .resetdone(resetdone),
        .rx_prbs31_en(rx_prbs31_en),
        .rxphy_correction_timer(NLW_ten_gig_eth_pcs_pma_core_rxphy_correction_timer_UNCONNECTED[63:0]),
        .rxphy_ns_field(NLW_ten_gig_eth_pcs_pma_core_rxphy_ns_field_UNCONNECTED[35:0]),
        .rxphy_s_field(NLW_ten_gig_eth_pcs_pma_core_rxphy_s_field_UNCONNECTED[47:0]),
        .rxreset_rxusrclk2(rxreset_rxusrclk2),
        .rxusrclk2(rxusrclk2),
        .signal_detect(signal_detect_comb),
        .sim_speedup_control(1'b0),
        .status_vector(NLW_ten_gig_eth_pcs_pma_core_status_vector_UNCONNECTED[447:0]),
        .systemtimer_ns_field({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .systemtimer_s_field({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .training_addr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .training_drp_cs(1'b0),
        .training_enable(1'b0),
        .training_ipif_cs(1'b0),
        .training_rdack(NLW_ten_gig_eth_pcs_pma_core_training_rdack_UNCONNECTED),
        .training_rddata(NLW_ten_gig_eth_pcs_pma_core_training_rddata_UNCONNECTED[15:0]),
        .training_rnw(1'b0),
        .training_wrack(NLW_ten_gig_eth_pcs_pma_core_training_wrack_UNCONNECTED),
        .training_wrdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .tx_disable(tx_disable),
        .tx_fault(1'b0),
        .tx_prbs31_en(tx_prbs31_en),
        .txdiffctrl(NLW_ten_gig_eth_pcs_pma_core_txdiffctrl_UNCONNECTED[4:0]),
        .txphy_async_gb_latency(NLW_ten_gig_eth_pcs_pma_core_txphy_async_gb_latency_UNCONNECTED[15:0]),
        .txreset_txusrclk2(txreset_txusrclk2),
        .txusrclk2(txusrclk2),
        .xgmii_rxc(xgmii_rxc),
        .xgmii_rxd(xgmii_rxd),
        .xgmii_txc(xgmii_txc),
        .xgmii_txd(xgmii_txd));
  ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_local_clock_and_reset ten_gig_eth_pcs_pma_local_clock_reset_block
       (.AS(coreclk_reset_tx),
        .CLK(rxusrclk2),
        .D(rx_resetdone),
        .areset(areset),
        .areset_rxusrclk2(areset_rxusrclk2),
        .coreclk(coreclk),
        .dclk(dclk),
        .dclk_reset(dclk_reset),
        .gt0_rxuserrdy_i(gt0_rxuserrdy_i),
        .pma_resetout_rising_rxusrclk2(pma_resetout_rising_rxusrclk2),
        .qplllock_rxusrclk2(qplllock_rxusrclk2),
        .rxrecclk_out(rxrecclk_out),
        .rxreset_rxusrclk2(rxreset_rxusrclk2),
        .signal_detect(signal_detect),
        .sim_speedup_control(sim_speedup_control),
        .\sync1_r_reg[0] (pma_resetout_rising),
        .\sync1_r_reg[0]_0 (gt0_gtrxreset_i),
        .tx_resetdone(tx_resetdone),
        .txreset_txusrclk2(txreset_txusrclk2),
        .txusrclk2(txusrclk2));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_cable_pull_logic" *) 
module ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_cable_pull_logic
   (cable_pull_reset_rising_reg,
    cable_unpull_reset_rising_reg,
    cable_is_pulled,
    CLK,
    coreclk,
    gt0_rxresetdone_i_reg_rxusrclk2,
    pma_resetout_rising_rxusrclk2,
    areset_rxusrclk2,
    SS,
    D);
  output cable_pull_reset_rising_reg;
  output cable_unpull_reset_rising_reg;
  output cable_is_pulled;
  input CLK;
  input coreclk;
  input gt0_rxresetdone_i_reg_rxusrclk2;
  input pma_resetout_rising_rxusrclk2;
  input areset_rxusrclk2;
  input [0:0]SS;
  input [3:0]D;

  wire CLK;
  wire [3:0]D;
  wire [0:0]SS;
  wire areset_rxusrclk2;
  wire cable_is_pulled;
  wire cable_pull_reset;
  wire cable_pull_reset_i_2_n_0;
  wire cable_pull_reset_i_3_n_0;
  wire cable_pull_reset_i_4_n_0;
  wire cable_pull_reset_i_5_n_0;
  wire cable_pull_reset_i_6_n_0;
  wire cable_pull_reset_reg__0;
  wire cable_pull_reset_reg_reg;
  wire cable_pull_reset_rising;
  wire cable_pull_reset_rising0;
  wire cable_pull_reset_rising_reg;
  wire cable_pull_reset_rising_rxusrclk2;
  wire cable_pull_reset_rising_rxusrclk2_sync_i_n_1;
  wire cable_pull_reset_rising_rxusrclk2_sync_i_n_2;
  wire \cable_pull_watchdog[0]_i_4_n_0 ;
  wire \cable_pull_watchdog[0]_i_5_n_0 ;
  wire \cable_pull_watchdog[0]_i_6_n_0 ;
  wire \cable_pull_watchdog[0]_i_7_n_0 ;
  wire \cable_pull_watchdog[12]_i_2_n_0 ;
  wire \cable_pull_watchdog[12]_i_3_n_0 ;
  wire \cable_pull_watchdog[12]_i_4_n_0 ;
  wire \cable_pull_watchdog[12]_i_5_n_0 ;
  wire \cable_pull_watchdog[16]_i_2_n_0 ;
  wire \cable_pull_watchdog[16]_i_3_n_0 ;
  wire \cable_pull_watchdog[16]_i_4_n_0 ;
  wire \cable_pull_watchdog[16]_i_5_n_0 ;
  wire \cable_pull_watchdog[4]_i_2_n_0 ;
  wire \cable_pull_watchdog[4]_i_3_n_0 ;
  wire \cable_pull_watchdog[4]_i_4_n_0 ;
  wire \cable_pull_watchdog[4]_i_5_n_0 ;
  wire \cable_pull_watchdog[8]_i_2_n_0 ;
  wire \cable_pull_watchdog[8]_i_3_n_0 ;
  wire \cable_pull_watchdog[8]_i_4_n_0 ;
  wire \cable_pull_watchdog[8]_i_5_n_0 ;
  wire [1:0]cable_pull_watchdog_event;
  wire cable_pull_watchdog_event0;
  wire cable_pull_watchdog_event1__2;
  wire \cable_pull_watchdog_event[0]_i_1_n_0 ;
  wire \cable_pull_watchdog_event[1]_i_1_n_0 ;
  wire \cable_pull_watchdog_event[1]_i_3_n_0 ;
  wire [19:0]cable_pull_watchdog_reg;
  wire \cable_pull_watchdog_reg[0]_i_3_n_0 ;
  wire \cable_pull_watchdog_reg[0]_i_3_n_1 ;
  wire \cable_pull_watchdog_reg[0]_i_3_n_2 ;
  wire \cable_pull_watchdog_reg[0]_i_3_n_3 ;
  wire \cable_pull_watchdog_reg[0]_i_3_n_4 ;
  wire \cable_pull_watchdog_reg[0]_i_3_n_5 ;
  wire \cable_pull_watchdog_reg[0]_i_3_n_6 ;
  wire \cable_pull_watchdog_reg[0]_i_3_n_7 ;
  wire \cable_pull_watchdog_reg[12]_i_1_n_0 ;
  wire \cable_pull_watchdog_reg[12]_i_1_n_1 ;
  wire \cable_pull_watchdog_reg[12]_i_1_n_2 ;
  wire \cable_pull_watchdog_reg[12]_i_1_n_3 ;
  wire \cable_pull_watchdog_reg[12]_i_1_n_4 ;
  wire \cable_pull_watchdog_reg[12]_i_1_n_5 ;
  wire \cable_pull_watchdog_reg[12]_i_1_n_6 ;
  wire \cable_pull_watchdog_reg[12]_i_1_n_7 ;
  wire \cable_pull_watchdog_reg[16]_i_1_n_1 ;
  wire \cable_pull_watchdog_reg[16]_i_1_n_2 ;
  wire \cable_pull_watchdog_reg[16]_i_1_n_3 ;
  wire \cable_pull_watchdog_reg[16]_i_1_n_4 ;
  wire \cable_pull_watchdog_reg[16]_i_1_n_5 ;
  wire \cable_pull_watchdog_reg[16]_i_1_n_6 ;
  wire \cable_pull_watchdog_reg[16]_i_1_n_7 ;
  wire \cable_pull_watchdog_reg[4]_i_1_n_0 ;
  wire \cable_pull_watchdog_reg[4]_i_1_n_1 ;
  wire \cable_pull_watchdog_reg[4]_i_1_n_2 ;
  wire \cable_pull_watchdog_reg[4]_i_1_n_3 ;
  wire \cable_pull_watchdog_reg[4]_i_1_n_4 ;
  wire \cable_pull_watchdog_reg[4]_i_1_n_5 ;
  wire \cable_pull_watchdog_reg[4]_i_1_n_6 ;
  wire \cable_pull_watchdog_reg[4]_i_1_n_7 ;
  wire \cable_pull_watchdog_reg[8]_i_1_n_0 ;
  wire \cable_pull_watchdog_reg[8]_i_1_n_1 ;
  wire \cable_pull_watchdog_reg[8]_i_1_n_2 ;
  wire \cable_pull_watchdog_reg[8]_i_1_n_3 ;
  wire \cable_pull_watchdog_reg[8]_i_1_n_4 ;
  wire \cable_pull_watchdog_reg[8]_i_1_n_5 ;
  wire \cable_pull_watchdog_reg[8]_i_1_n_6 ;
  wire \cable_pull_watchdog_reg[8]_i_1_n_7 ;
  wire cable_unpull_enable_i_1_n_0;
  wire cable_unpull_reset1;
  wire cable_unpull_reset_reg__0;
  wire cable_unpull_reset_reg_n_0;
  wire cable_unpull_reset_reg_reg;
  wire cable_unpull_reset_rising;
  wire cable_unpull_reset_rising0;
  wire cable_unpull_reset_rising_reg;
  wire cable_unpull_reset_rising_rxusrclk2_sync_i_n_0;
  wire cable_unpull_reset_rising_rxusrclk2_sync_i_n_1;
  wire cable_unpull_reset_rising_rxusrclk2_sync_i_n_2;
  wire \cable_unpull_watchdog[0]_i_10_n_0 ;
  wire \cable_unpull_watchdog[0]_i_11_n_0 ;
  wire \cable_unpull_watchdog[0]_i_12_n_0 ;
  wire \cable_unpull_watchdog[0]_i_13_n_0 ;
  wire \cable_unpull_watchdog[0]_i_4_n_0 ;
  wire \cable_unpull_watchdog[0]_i_5_n_0 ;
  wire \cable_unpull_watchdog[0]_i_6_n_0 ;
  wire \cable_unpull_watchdog[0]_i_7_n_0 ;
  wire \cable_unpull_watchdog[0]_i_8_n_0 ;
  wire \cable_unpull_watchdog[0]_i_9_n_0 ;
  wire \cable_unpull_watchdog[12]_i_2_n_0 ;
  wire \cable_unpull_watchdog[12]_i_3_n_0 ;
  wire \cable_unpull_watchdog[12]_i_4_n_0 ;
  wire \cable_unpull_watchdog[12]_i_5_n_0 ;
  wire \cable_unpull_watchdog[16]_i_2_n_0 ;
  wire \cable_unpull_watchdog[16]_i_3_n_0 ;
  wire \cable_unpull_watchdog[16]_i_4_n_0 ;
  wire \cable_unpull_watchdog[16]_i_5_n_0 ;
  wire \cable_unpull_watchdog[4]_i_2_n_0 ;
  wire \cable_unpull_watchdog[4]_i_3_n_0 ;
  wire \cable_unpull_watchdog[4]_i_4_n_0 ;
  wire \cable_unpull_watchdog[4]_i_5_n_0 ;
  wire \cable_unpull_watchdog[8]_i_2_n_0 ;
  wire \cable_unpull_watchdog[8]_i_3_n_0 ;
  wire \cable_unpull_watchdog[8]_i_4_n_0 ;
  wire \cable_unpull_watchdog[8]_i_5_n_0 ;
  wire cable_unpull_watchdog_event;
  wire \cable_unpull_watchdog_event[10]_i_4_n_0 ;
  wire \cable_unpull_watchdog_event_reg_n_0_[0] ;
  wire \cable_unpull_watchdog_event_reg_n_0_[1] ;
  wire \cable_unpull_watchdog_event_reg_n_0_[2] ;
  wire \cable_unpull_watchdog_event_reg_n_0_[3] ;
  wire \cable_unpull_watchdog_event_reg_n_0_[4] ;
  wire \cable_unpull_watchdog_event_reg_n_0_[5] ;
  wire \cable_unpull_watchdog_event_reg_n_0_[6] ;
  wire \cable_unpull_watchdog_event_reg_n_0_[7] ;
  wire \cable_unpull_watchdog_event_reg_n_0_[8] ;
  wire \cable_unpull_watchdog_event_reg_n_0_[9] ;
  wire [19:0]cable_unpull_watchdog_reg;
  wire \cable_unpull_watchdog_reg[0]_i_3_n_0 ;
  wire \cable_unpull_watchdog_reg[0]_i_3_n_1 ;
  wire \cable_unpull_watchdog_reg[0]_i_3_n_2 ;
  wire \cable_unpull_watchdog_reg[0]_i_3_n_3 ;
  wire \cable_unpull_watchdog_reg[0]_i_3_n_4 ;
  wire \cable_unpull_watchdog_reg[0]_i_3_n_5 ;
  wire \cable_unpull_watchdog_reg[0]_i_3_n_6 ;
  wire \cable_unpull_watchdog_reg[0]_i_3_n_7 ;
  wire \cable_unpull_watchdog_reg[12]_i_1_n_0 ;
  wire \cable_unpull_watchdog_reg[12]_i_1_n_1 ;
  wire \cable_unpull_watchdog_reg[12]_i_1_n_2 ;
  wire \cable_unpull_watchdog_reg[12]_i_1_n_3 ;
  wire \cable_unpull_watchdog_reg[12]_i_1_n_4 ;
  wire \cable_unpull_watchdog_reg[12]_i_1_n_5 ;
  wire \cable_unpull_watchdog_reg[12]_i_1_n_6 ;
  wire \cable_unpull_watchdog_reg[12]_i_1_n_7 ;
  wire \cable_unpull_watchdog_reg[16]_i_1_n_1 ;
  wire \cable_unpull_watchdog_reg[16]_i_1_n_2 ;
  wire \cable_unpull_watchdog_reg[16]_i_1_n_3 ;
  wire \cable_unpull_watchdog_reg[16]_i_1_n_4 ;
  wire \cable_unpull_watchdog_reg[16]_i_1_n_5 ;
  wire \cable_unpull_watchdog_reg[16]_i_1_n_6 ;
  wire \cable_unpull_watchdog_reg[16]_i_1_n_7 ;
  wire \cable_unpull_watchdog_reg[4]_i_1_n_0 ;
  wire \cable_unpull_watchdog_reg[4]_i_1_n_1 ;
  wire \cable_unpull_watchdog_reg[4]_i_1_n_2 ;
  wire \cable_unpull_watchdog_reg[4]_i_1_n_3 ;
  wire \cable_unpull_watchdog_reg[4]_i_1_n_4 ;
  wire \cable_unpull_watchdog_reg[4]_i_1_n_5 ;
  wire \cable_unpull_watchdog_reg[4]_i_1_n_6 ;
  wire \cable_unpull_watchdog_reg[4]_i_1_n_7 ;
  wire \cable_unpull_watchdog_reg[8]_i_1_n_0 ;
  wire \cable_unpull_watchdog_reg[8]_i_1_n_1 ;
  wire \cable_unpull_watchdog_reg[8]_i_1_n_2 ;
  wire \cable_unpull_watchdog_reg[8]_i_1_n_3 ;
  wire \cable_unpull_watchdog_reg[8]_i_1_n_4 ;
  wire \cable_unpull_watchdog_reg[8]_i_1_n_5 ;
  wire \cable_unpull_watchdog_reg[8]_i_1_n_6 ;
  wire \cable_unpull_watchdog_reg[8]_i_1_n_7 ;
  wire coreclk;
  wire gearboxslipignore;
  wire gearboxslipignore_i_1_n_0;
  wire [0:0]gearboxslipignorecount0;
  wire \gearboxslipignorecount[1]_i_1_n_0 ;
  wire \gearboxslipignorecount[2]_i_1_n_0 ;
  wire \gearboxslipignorecount[3]_i_1_n_0 ;
  wire \gearboxslipignorecount[3]_i_2_n_0 ;
  wire [3:0]gearboxslipignorecount_reg;
  wire gt0_rxresetdone_i_reg_rxusrclk2;
  wire [10:0]p_0_in;
  wire p_1_in;
  wire pma_resetout_rising_rxusrclk2;
  wire [3:0]rx_sample;
  wire \rx_sample[3]_i_1_n_0 ;
  wire [3:0]rx_sample_prev;
  wire [3:3]\NLW_cable_pull_watchdog_reg[16]_i_1_CO_UNCONNECTED ;
  wire [3:3]\NLW_cable_unpull_watchdog_reg[16]_i_1_CO_UNCONNECTED ;

  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    cable_pull_reset_i_2
       (.I0(cable_pull_watchdog_reg[6]),
        .I1(cable_pull_watchdog_reg[7]),
        .I2(cable_pull_watchdog_reg[4]),
        .I3(cable_pull_watchdog_reg[5]),
        .I4(cable_pull_reset_i_5_n_0),
        .O(cable_pull_reset_i_2_n_0));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    cable_pull_reset_i_3
       (.I0(cable_pull_watchdog_reg[14]),
        .I1(cable_pull_watchdog_reg[15]),
        .I2(cable_pull_watchdog_reg[12]),
        .I3(cable_pull_watchdog_reg[13]),
        .I4(cable_pull_reset_i_6_n_0),
        .O(cable_pull_reset_i_3_n_0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    cable_pull_reset_i_4
       (.I0(cable_pull_watchdog_reg[1]),
        .I1(cable_pull_watchdog_reg[0]),
        .I2(cable_pull_watchdog_reg[3]),
        .I3(cable_pull_watchdog_reg[2]),
        .O(cable_pull_reset_i_4_n_0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    cable_pull_reset_i_5
       (.I0(cable_pull_watchdog_reg[9]),
        .I1(cable_pull_watchdog_reg[8]),
        .I2(cable_pull_watchdog_reg[11]),
        .I3(cable_pull_watchdog_reg[10]),
        .O(cable_pull_reset_i_5_n_0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    cable_pull_reset_i_6
       (.I0(cable_pull_watchdog_reg[17]),
        .I1(cable_pull_watchdog_reg[16]),
        .I2(cable_pull_watchdog_reg[19]),
        .I3(cable_pull_watchdog_reg[18]),
        .O(cable_pull_reset_i_6_n_0));
  FDRE #(
    .INIT(1'b0)) 
    cable_pull_reset_reg
       (.C(CLK),
        .CE(1'b1),
        .D(cable_pull_reset_rising_rxusrclk2_sync_i_n_2),
        .Q(cable_pull_reset),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    cable_pull_reset_reg_reg_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(cable_pull_reset_reg__0),
        .Q(cable_pull_reset_reg_reg),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    cable_pull_reset_rising_reg__0
       (.C(coreclk),
        .CE(1'b1),
        .D(cable_pull_reset_rising0),
        .Q(cable_pull_reset_rising),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    cable_pull_reset_rising_reg_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(cable_pull_reset_rising),
        .Q(cable_pull_reset_rising_reg),
        .R(1'b0));
  ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_ff_synchronizer_rst_19 cable_pull_reset_rising_rxusrclk2_sync_i
       (.AS(cable_pull_reset_rising),
        .CLK(CLK),
        .cable_pull_reset(cable_pull_reset),
        .cable_pull_reset_reg(cable_pull_reset_rising_rxusrclk2_sync_i_n_2),
        .cable_pull_reset_reg_0(cable_pull_reset_i_2_n_0),
        .cable_pull_reset_reg_1(cable_pull_reset_i_3_n_0),
        .cable_pull_reset_reg_2(cable_pull_reset_i_4_n_0),
        .cable_pull_reset_rising_rxusrclk2(cable_pull_reset_rising_rxusrclk2),
        .cable_pull_watchdog_event(cable_pull_watchdog_event),
        .cable_pull_watchdog_event0(cable_pull_watchdog_event0),
        .\cable_pull_watchdog_reg[0] (cable_is_pulled),
        .data_out_reg_0(cable_pull_reset_rising_rxusrclk2_sync_i_n_1),
        .gt0_rxresetdone_i_reg_rxusrclk2(gt0_rxresetdone_i_reg_rxusrclk2));
  ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_ff_synchronizer_20 cable_pull_reset_sync_i
       (.cable_pull_reset(cable_pull_reset),
        .cable_pull_reset_reg__0(cable_pull_reset_reg__0),
        .cable_pull_reset_reg_reg(cable_pull_reset_reg_reg),
        .cable_pull_reset_rising0(cable_pull_reset_rising0),
        .coreclk(coreclk));
  LUT3 #(
    .INIT(8'h04)) 
    \cable_pull_watchdog[0]_i_2 
       (.I0(cable_is_pulled),
        .I1(gt0_rxresetdone_i_reg_rxusrclk2),
        .I2(cable_pull_reset),
        .O(cable_pull_watchdog_event0));
  LUT1 #(
    .INIT(2'h1)) 
    \cable_pull_watchdog[0]_i_4 
       (.I0(cable_pull_watchdog_reg[3]),
        .O(\cable_pull_watchdog[0]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \cable_pull_watchdog[0]_i_5 
       (.I0(cable_pull_watchdog_reg[2]),
        .O(\cable_pull_watchdog[0]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \cable_pull_watchdog[0]_i_6 
       (.I0(cable_pull_watchdog_reg[1]),
        .O(\cable_pull_watchdog[0]_i_6_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \cable_pull_watchdog[0]_i_7 
       (.I0(cable_pull_watchdog_reg[0]),
        .O(\cable_pull_watchdog[0]_i_7_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \cable_pull_watchdog[12]_i_2 
       (.I0(cable_pull_watchdog_reg[15]),
        .O(\cable_pull_watchdog[12]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \cable_pull_watchdog[12]_i_3 
       (.I0(cable_pull_watchdog_reg[14]),
        .O(\cable_pull_watchdog[12]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \cable_pull_watchdog[12]_i_4 
       (.I0(cable_pull_watchdog_reg[13]),
        .O(\cable_pull_watchdog[12]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \cable_pull_watchdog[12]_i_5 
       (.I0(cable_pull_watchdog_reg[12]),
        .O(\cable_pull_watchdog[12]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \cable_pull_watchdog[16]_i_2 
       (.I0(cable_pull_watchdog_reg[19]),
        .O(\cable_pull_watchdog[16]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \cable_pull_watchdog[16]_i_3 
       (.I0(cable_pull_watchdog_reg[18]),
        .O(\cable_pull_watchdog[16]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \cable_pull_watchdog[16]_i_4 
       (.I0(cable_pull_watchdog_reg[17]),
        .O(\cable_pull_watchdog[16]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \cable_pull_watchdog[16]_i_5 
       (.I0(cable_pull_watchdog_reg[16]),
        .O(\cable_pull_watchdog[16]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \cable_pull_watchdog[4]_i_2 
       (.I0(cable_pull_watchdog_reg[7]),
        .O(\cable_pull_watchdog[4]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \cable_pull_watchdog[4]_i_3 
       (.I0(cable_pull_watchdog_reg[6]),
        .O(\cable_pull_watchdog[4]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \cable_pull_watchdog[4]_i_4 
       (.I0(cable_pull_watchdog_reg[5]),
        .O(\cable_pull_watchdog[4]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \cable_pull_watchdog[4]_i_5 
       (.I0(cable_pull_watchdog_reg[4]),
        .O(\cable_pull_watchdog[4]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \cable_pull_watchdog[8]_i_2 
       (.I0(cable_pull_watchdog_reg[11]),
        .O(\cable_pull_watchdog[8]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \cable_pull_watchdog[8]_i_3 
       (.I0(cable_pull_watchdog_reg[10]),
        .O(\cable_pull_watchdog[8]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \cable_pull_watchdog[8]_i_4 
       (.I0(cable_pull_watchdog_reg[9]),
        .O(\cable_pull_watchdog[8]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \cable_pull_watchdog[8]_i_5 
       (.I0(cable_pull_watchdog_reg[8]),
        .O(\cable_pull_watchdog[8]_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair301" *) 
  LUT5 #(
    .INIT(32'h00002622)) 
    \cable_pull_watchdog_event[0]_i_1 
       (.I0(cable_pull_watchdog_event[0]),
        .I1(cable_pull_watchdog_event0),
        .I2(cable_pull_watchdog_event[1]),
        .I3(cable_pull_watchdog_event1__2),
        .I4(cable_pull_reset_rising_rxusrclk2),
        .O(\cable_pull_watchdog_event[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair301" *) 
  LUT5 #(
    .INIT(32'h00006222)) 
    \cable_pull_watchdog_event[1]_i_1 
       (.I0(cable_pull_watchdog_event[1]),
        .I1(cable_pull_watchdog_event0),
        .I2(cable_pull_watchdog_event[0]),
        .I3(cable_pull_watchdog_event1__2),
        .I4(cable_pull_reset_rising_rxusrclk2),
        .O(\cable_pull_watchdog_event[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h7777BB0B7077BBB0)) 
    \cable_pull_watchdog_event[1]_i_2 
       (.I0(rx_sample_prev[3]),
        .I1(\cable_pull_watchdog_event[1]_i_3_n_0 ),
        .I2(rx_sample[0]),
        .I3(rx_sample[1]),
        .I4(rx_sample[3]),
        .I5(rx_sample[2]),
        .O(cable_pull_watchdog_event1__2));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \cable_pull_watchdog_event[1]_i_3 
       (.I0(rx_sample[0]),
        .I1(rx_sample_prev[0]),
        .I2(rx_sample_prev[2]),
        .I3(rx_sample[2]),
        .I4(rx_sample_prev[1]),
        .I5(rx_sample[1]),
        .O(\cable_pull_watchdog_event[1]_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \cable_pull_watchdog_event_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(\cable_pull_watchdog_event[0]_i_1_n_0 ),
        .Q(cable_pull_watchdog_event[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \cable_pull_watchdog_event_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(\cable_pull_watchdog_event[1]_i_1_n_0 ),
        .Q(cable_pull_watchdog_event[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \cable_pull_watchdog_reg[0] 
       (.C(CLK),
        .CE(cable_pull_watchdog_event0),
        .D(\cable_pull_watchdog_reg[0]_i_3_n_7 ),
        .Q(cable_pull_watchdog_reg[0]),
        .R(cable_pull_reset_rising_rxusrclk2_sync_i_n_1));
  CARRY4 \cable_pull_watchdog_reg[0]_i_3 
       (.CI(1'b0),
        .CO({\cable_pull_watchdog_reg[0]_i_3_n_0 ,\cable_pull_watchdog_reg[0]_i_3_n_1 ,\cable_pull_watchdog_reg[0]_i_3_n_2 ,\cable_pull_watchdog_reg[0]_i_3_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b1,1'b1,1'b1,1'b1}),
        .O({\cable_pull_watchdog_reg[0]_i_3_n_4 ,\cable_pull_watchdog_reg[0]_i_3_n_5 ,\cable_pull_watchdog_reg[0]_i_3_n_6 ,\cable_pull_watchdog_reg[0]_i_3_n_7 }),
        .S({\cable_pull_watchdog[0]_i_4_n_0 ,\cable_pull_watchdog[0]_i_5_n_0 ,\cable_pull_watchdog[0]_i_6_n_0 ,\cable_pull_watchdog[0]_i_7_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \cable_pull_watchdog_reg[10] 
       (.C(CLK),
        .CE(cable_pull_watchdog_event0),
        .D(\cable_pull_watchdog_reg[8]_i_1_n_5 ),
        .Q(cable_pull_watchdog_reg[10]),
        .R(cable_pull_reset_rising_rxusrclk2_sync_i_n_1));
  FDRE #(
    .INIT(1'b0)) 
    \cable_pull_watchdog_reg[11] 
       (.C(CLK),
        .CE(cable_pull_watchdog_event0),
        .D(\cable_pull_watchdog_reg[8]_i_1_n_4 ),
        .Q(cable_pull_watchdog_reg[11]),
        .R(cable_pull_reset_rising_rxusrclk2_sync_i_n_1));
  FDRE #(
    .INIT(1'b0)) 
    \cable_pull_watchdog_reg[12] 
       (.C(CLK),
        .CE(cable_pull_watchdog_event0),
        .D(\cable_pull_watchdog_reg[12]_i_1_n_7 ),
        .Q(cable_pull_watchdog_reg[12]),
        .R(cable_pull_reset_rising_rxusrclk2_sync_i_n_1));
  CARRY4 \cable_pull_watchdog_reg[12]_i_1 
       (.CI(\cable_pull_watchdog_reg[8]_i_1_n_0 ),
        .CO({\cable_pull_watchdog_reg[12]_i_1_n_0 ,\cable_pull_watchdog_reg[12]_i_1_n_1 ,\cable_pull_watchdog_reg[12]_i_1_n_2 ,\cable_pull_watchdog_reg[12]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b1,1'b1,1'b1,1'b1}),
        .O({\cable_pull_watchdog_reg[12]_i_1_n_4 ,\cable_pull_watchdog_reg[12]_i_1_n_5 ,\cable_pull_watchdog_reg[12]_i_1_n_6 ,\cable_pull_watchdog_reg[12]_i_1_n_7 }),
        .S({\cable_pull_watchdog[12]_i_2_n_0 ,\cable_pull_watchdog[12]_i_3_n_0 ,\cable_pull_watchdog[12]_i_4_n_0 ,\cable_pull_watchdog[12]_i_5_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \cable_pull_watchdog_reg[13] 
       (.C(CLK),
        .CE(cable_pull_watchdog_event0),
        .D(\cable_pull_watchdog_reg[12]_i_1_n_6 ),
        .Q(cable_pull_watchdog_reg[13]),
        .R(cable_pull_reset_rising_rxusrclk2_sync_i_n_1));
  FDRE #(
    .INIT(1'b0)) 
    \cable_pull_watchdog_reg[14] 
       (.C(CLK),
        .CE(cable_pull_watchdog_event0),
        .D(\cable_pull_watchdog_reg[12]_i_1_n_5 ),
        .Q(cable_pull_watchdog_reg[14]),
        .R(cable_pull_reset_rising_rxusrclk2_sync_i_n_1));
  FDRE #(
    .INIT(1'b0)) 
    \cable_pull_watchdog_reg[15] 
       (.C(CLK),
        .CE(cable_pull_watchdog_event0),
        .D(\cable_pull_watchdog_reg[12]_i_1_n_4 ),
        .Q(cable_pull_watchdog_reg[15]),
        .R(cable_pull_reset_rising_rxusrclk2_sync_i_n_1));
  FDRE #(
    .INIT(1'b0)) 
    \cable_pull_watchdog_reg[16] 
       (.C(CLK),
        .CE(cable_pull_watchdog_event0),
        .D(\cable_pull_watchdog_reg[16]_i_1_n_7 ),
        .Q(cable_pull_watchdog_reg[16]),
        .R(cable_pull_reset_rising_rxusrclk2_sync_i_n_1));
  CARRY4 \cable_pull_watchdog_reg[16]_i_1 
       (.CI(\cable_pull_watchdog_reg[12]_i_1_n_0 ),
        .CO({\NLW_cable_pull_watchdog_reg[16]_i_1_CO_UNCONNECTED [3],\cable_pull_watchdog_reg[16]_i_1_n_1 ,\cable_pull_watchdog_reg[16]_i_1_n_2 ,\cable_pull_watchdog_reg[16]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b1,1'b1,1'b1}),
        .O({\cable_pull_watchdog_reg[16]_i_1_n_4 ,\cable_pull_watchdog_reg[16]_i_1_n_5 ,\cable_pull_watchdog_reg[16]_i_1_n_6 ,\cable_pull_watchdog_reg[16]_i_1_n_7 }),
        .S({\cable_pull_watchdog[16]_i_2_n_0 ,\cable_pull_watchdog[16]_i_3_n_0 ,\cable_pull_watchdog[16]_i_4_n_0 ,\cable_pull_watchdog[16]_i_5_n_0 }));
  FDSE #(
    .INIT(1'b1)) 
    \cable_pull_watchdog_reg[17] 
       (.C(CLK),
        .CE(cable_pull_watchdog_event0),
        .D(\cable_pull_watchdog_reg[16]_i_1_n_6 ),
        .Q(cable_pull_watchdog_reg[17]),
        .S(cable_pull_reset_rising_rxusrclk2_sync_i_n_1));
  FDRE #(
    .INIT(1'b0)) 
    \cable_pull_watchdog_reg[18] 
       (.C(CLK),
        .CE(cable_pull_watchdog_event0),
        .D(\cable_pull_watchdog_reg[16]_i_1_n_5 ),
        .Q(cable_pull_watchdog_reg[18]),
        .R(cable_pull_reset_rising_rxusrclk2_sync_i_n_1));
  FDRE #(
    .INIT(1'b0)) 
    \cable_pull_watchdog_reg[19] 
       (.C(CLK),
        .CE(cable_pull_watchdog_event0),
        .D(\cable_pull_watchdog_reg[16]_i_1_n_4 ),
        .Q(cable_pull_watchdog_reg[19]),
        .R(cable_pull_reset_rising_rxusrclk2_sync_i_n_1));
  FDRE #(
    .INIT(1'b0)) 
    \cable_pull_watchdog_reg[1] 
       (.C(CLK),
        .CE(cable_pull_watchdog_event0),
        .D(\cable_pull_watchdog_reg[0]_i_3_n_6 ),
        .Q(cable_pull_watchdog_reg[1]),
        .R(cable_pull_reset_rising_rxusrclk2_sync_i_n_1));
  FDRE #(
    .INIT(1'b0)) 
    \cable_pull_watchdog_reg[2] 
       (.C(CLK),
        .CE(cable_pull_watchdog_event0),
        .D(\cable_pull_watchdog_reg[0]_i_3_n_5 ),
        .Q(cable_pull_watchdog_reg[2]),
        .R(cable_pull_reset_rising_rxusrclk2_sync_i_n_1));
  FDRE #(
    .INIT(1'b0)) 
    \cable_pull_watchdog_reg[3] 
       (.C(CLK),
        .CE(cable_pull_watchdog_event0),
        .D(\cable_pull_watchdog_reg[0]_i_3_n_4 ),
        .Q(cable_pull_watchdog_reg[3]),
        .R(cable_pull_reset_rising_rxusrclk2_sync_i_n_1));
  FDRE #(
    .INIT(1'b0)) 
    \cable_pull_watchdog_reg[4] 
       (.C(CLK),
        .CE(cable_pull_watchdog_event0),
        .D(\cable_pull_watchdog_reg[4]_i_1_n_7 ),
        .Q(cable_pull_watchdog_reg[4]),
        .R(cable_pull_reset_rising_rxusrclk2_sync_i_n_1));
  CARRY4 \cable_pull_watchdog_reg[4]_i_1 
       (.CI(\cable_pull_watchdog_reg[0]_i_3_n_0 ),
        .CO({\cable_pull_watchdog_reg[4]_i_1_n_0 ,\cable_pull_watchdog_reg[4]_i_1_n_1 ,\cable_pull_watchdog_reg[4]_i_1_n_2 ,\cable_pull_watchdog_reg[4]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b1,1'b1,1'b1,1'b1}),
        .O({\cable_pull_watchdog_reg[4]_i_1_n_4 ,\cable_pull_watchdog_reg[4]_i_1_n_5 ,\cable_pull_watchdog_reg[4]_i_1_n_6 ,\cable_pull_watchdog_reg[4]_i_1_n_7 }),
        .S({\cable_pull_watchdog[4]_i_2_n_0 ,\cable_pull_watchdog[4]_i_3_n_0 ,\cable_pull_watchdog[4]_i_4_n_0 ,\cable_pull_watchdog[4]_i_5_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \cable_pull_watchdog_reg[5] 
       (.C(CLK),
        .CE(cable_pull_watchdog_event0),
        .D(\cable_pull_watchdog_reg[4]_i_1_n_6 ),
        .Q(cable_pull_watchdog_reg[5]),
        .R(cable_pull_reset_rising_rxusrclk2_sync_i_n_1));
  FDRE #(
    .INIT(1'b0)) 
    \cable_pull_watchdog_reg[6] 
       (.C(CLK),
        .CE(cable_pull_watchdog_event0),
        .D(\cable_pull_watchdog_reg[4]_i_1_n_5 ),
        .Q(cable_pull_watchdog_reg[6]),
        .R(cable_pull_reset_rising_rxusrclk2_sync_i_n_1));
  FDRE #(
    .INIT(1'b0)) 
    \cable_pull_watchdog_reg[7] 
       (.C(CLK),
        .CE(cable_pull_watchdog_event0),
        .D(\cable_pull_watchdog_reg[4]_i_1_n_4 ),
        .Q(cable_pull_watchdog_reg[7]),
        .R(cable_pull_reset_rising_rxusrclk2_sync_i_n_1));
  FDRE #(
    .INIT(1'b0)) 
    \cable_pull_watchdog_reg[8] 
       (.C(CLK),
        .CE(cable_pull_watchdog_event0),
        .D(\cable_pull_watchdog_reg[8]_i_1_n_7 ),
        .Q(cable_pull_watchdog_reg[8]),
        .R(cable_pull_reset_rising_rxusrclk2_sync_i_n_1));
  CARRY4 \cable_pull_watchdog_reg[8]_i_1 
       (.CI(\cable_pull_watchdog_reg[4]_i_1_n_0 ),
        .CO({\cable_pull_watchdog_reg[8]_i_1_n_0 ,\cable_pull_watchdog_reg[8]_i_1_n_1 ,\cable_pull_watchdog_reg[8]_i_1_n_2 ,\cable_pull_watchdog_reg[8]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b1,1'b1,1'b1,1'b1}),
        .O({\cable_pull_watchdog_reg[8]_i_1_n_4 ,\cable_pull_watchdog_reg[8]_i_1_n_5 ,\cable_pull_watchdog_reg[8]_i_1_n_6 ,\cable_pull_watchdog_reg[8]_i_1_n_7 }),
        .S({\cable_pull_watchdog[8]_i_2_n_0 ,\cable_pull_watchdog[8]_i_3_n_0 ,\cable_pull_watchdog[8]_i_4_n_0 ,\cable_pull_watchdog[8]_i_5_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \cable_pull_watchdog_reg[9] 
       (.C(CLK),
        .CE(cable_pull_watchdog_event0),
        .D(\cable_pull_watchdog_reg[8]_i_1_n_6 ),
        .Q(cable_pull_watchdog_reg[9]),
        .R(cable_pull_reset_rising_rxusrclk2_sync_i_n_1));
  LUT5 #(
    .INIT(32'h000000F2)) 
    cable_unpull_enable_i_1
       (.I0(cable_is_pulled),
        .I1(cable_unpull_reset_reg_n_0),
        .I2(cable_pull_reset),
        .I3(pma_resetout_rising_rxusrclk2),
        .I4(areset_rxusrclk2),
        .O(cable_unpull_enable_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    cable_unpull_enable_reg
       (.C(CLK),
        .CE(1'b1),
        .D(cable_unpull_enable_i_1_n_0),
        .Q(cable_is_pulled),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    cable_unpull_reset_reg
       (.C(CLK),
        .CE(1'b1),
        .D(cable_unpull_reset_rising_rxusrclk2_sync_i_n_2),
        .Q(cable_unpull_reset_reg_n_0),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    cable_unpull_reset_reg_reg_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(cable_unpull_reset_reg__0),
        .Q(cable_unpull_reset_reg_reg),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    cable_unpull_reset_rising_reg__0
       (.C(coreclk),
        .CE(1'b1),
        .D(cable_unpull_reset_rising0),
        .Q(cable_unpull_reset_rising),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    cable_unpull_reset_rising_reg_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(cable_unpull_reset_rising),
        .Q(cable_unpull_reset_rising_reg),
        .R(1'b0));
  ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_ff_synchronizer_rst_21 cable_unpull_reset_rising_rxusrclk2_sync_i
       (.AS(cable_unpull_reset_rising),
        .CLK(CLK),
        .Q(p_1_in),
        .SR(cable_unpull_reset_rising_rxusrclk2_sync_i_n_1),
        .cable_unpull_reset_reg(cable_unpull_reset_rising_rxusrclk2_sync_i_n_2),
        .cable_unpull_reset_reg_0(cable_is_pulled),
        .\cable_unpull_watchdog_reg[0] (\cable_unpull_watchdog[0]_i_4_n_0 ),
        .\cable_unpull_watchdog_reg[0]_0 (cable_unpull_reset_reg_n_0),
        .data_out_reg_0(cable_unpull_reset_rising_rxusrclk2_sync_i_n_0),
        .gt0_rxresetdone_i_reg_rxusrclk2(gt0_rxresetdone_i_reg_rxusrclk2));
  ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_ff_synchronizer_22 cable_unpull_reset_sync_i
       (.cable_unpull_reset_reg__0(cable_unpull_reset_reg__0),
        .cable_unpull_reset_reg_reg(cable_unpull_reset_reg_reg),
        .cable_unpull_reset_rising0(cable_unpull_reset_rising0),
        .coreclk(coreclk),
        .\sync1_r_reg[0]_0 (cable_unpull_reset_reg_n_0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \cable_unpull_watchdog[0]_i_10 
       (.I0(cable_unpull_watchdog_reg[13]),
        .I1(cable_unpull_watchdog_reg[12]),
        .I2(cable_unpull_watchdog_reg[15]),
        .I3(cable_unpull_watchdog_reg[14]),
        .O(\cable_unpull_watchdog[0]_i_10_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \cable_unpull_watchdog[0]_i_11 
       (.I0(cable_unpull_watchdog_reg[17]),
        .I1(cable_unpull_watchdog_reg[16]),
        .I2(cable_unpull_watchdog_reg[19]),
        .I3(cable_unpull_watchdog_reg[18]),
        .O(\cable_unpull_watchdog[0]_i_11_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \cable_unpull_watchdog[0]_i_12 
       (.I0(cable_unpull_watchdog_reg[5]),
        .I1(cable_unpull_watchdog_reg[4]),
        .I2(cable_unpull_watchdog_reg[7]),
        .I3(cable_unpull_watchdog_reg[6]),
        .O(\cable_unpull_watchdog[0]_i_12_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \cable_unpull_watchdog[0]_i_13 
       (.I0(cable_unpull_watchdog_reg[9]),
        .I1(cable_unpull_watchdog_reg[8]),
        .I2(cable_unpull_watchdog_reg[11]),
        .I3(cable_unpull_watchdog_reg[10]),
        .O(\cable_unpull_watchdog[0]_i_13_n_0 ));
  LUT3 #(
    .INIT(8'h08)) 
    \cable_unpull_watchdog[0]_i_2 
       (.I0(cable_is_pulled),
        .I1(gt0_rxresetdone_i_reg_rxusrclk2),
        .I2(cable_unpull_reset_reg_n_0),
        .O(cable_unpull_reset1));
  LUT5 #(
    .INIT(32'h00000001)) 
    \cable_unpull_watchdog[0]_i_4 
       (.I0(\cable_unpull_watchdog[0]_i_9_n_0 ),
        .I1(\cable_unpull_watchdog[0]_i_10_n_0 ),
        .I2(\cable_unpull_watchdog[0]_i_11_n_0 ),
        .I3(\cable_unpull_watchdog[0]_i_12_n_0 ),
        .I4(\cable_unpull_watchdog[0]_i_13_n_0 ),
        .O(\cable_unpull_watchdog[0]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \cable_unpull_watchdog[0]_i_5 
       (.I0(cable_unpull_watchdog_reg[3]),
        .O(\cable_unpull_watchdog[0]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \cable_unpull_watchdog[0]_i_6 
       (.I0(cable_unpull_watchdog_reg[2]),
        .O(\cable_unpull_watchdog[0]_i_6_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \cable_unpull_watchdog[0]_i_7 
       (.I0(cable_unpull_watchdog_reg[1]),
        .O(\cable_unpull_watchdog[0]_i_7_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \cable_unpull_watchdog[0]_i_8 
       (.I0(cable_unpull_watchdog_reg[0]),
        .O(\cable_unpull_watchdog[0]_i_8_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \cable_unpull_watchdog[0]_i_9 
       (.I0(cable_unpull_watchdog_reg[1]),
        .I1(cable_unpull_watchdog_reg[0]),
        .I2(cable_unpull_watchdog_reg[3]),
        .I3(cable_unpull_watchdog_reg[2]),
        .O(\cable_unpull_watchdog[0]_i_9_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \cable_unpull_watchdog[12]_i_2 
       (.I0(cable_unpull_watchdog_reg[15]),
        .O(\cable_unpull_watchdog[12]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \cable_unpull_watchdog[12]_i_3 
       (.I0(cable_unpull_watchdog_reg[14]),
        .O(\cable_unpull_watchdog[12]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \cable_unpull_watchdog[12]_i_4 
       (.I0(cable_unpull_watchdog_reg[13]),
        .O(\cable_unpull_watchdog[12]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \cable_unpull_watchdog[12]_i_5 
       (.I0(cable_unpull_watchdog_reg[12]),
        .O(\cable_unpull_watchdog[12]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \cable_unpull_watchdog[16]_i_2 
       (.I0(cable_unpull_watchdog_reg[19]),
        .O(\cable_unpull_watchdog[16]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \cable_unpull_watchdog[16]_i_3 
       (.I0(cable_unpull_watchdog_reg[18]),
        .O(\cable_unpull_watchdog[16]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \cable_unpull_watchdog[16]_i_4 
       (.I0(cable_unpull_watchdog_reg[17]),
        .O(\cable_unpull_watchdog[16]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \cable_unpull_watchdog[16]_i_5 
       (.I0(cable_unpull_watchdog_reg[16]),
        .O(\cable_unpull_watchdog[16]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \cable_unpull_watchdog[4]_i_2 
       (.I0(cable_unpull_watchdog_reg[7]),
        .O(\cable_unpull_watchdog[4]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \cable_unpull_watchdog[4]_i_3 
       (.I0(cable_unpull_watchdog_reg[6]),
        .O(\cable_unpull_watchdog[4]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \cable_unpull_watchdog[4]_i_4 
       (.I0(cable_unpull_watchdog_reg[5]),
        .O(\cable_unpull_watchdog[4]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \cable_unpull_watchdog[4]_i_5 
       (.I0(cable_unpull_watchdog_reg[4]),
        .O(\cable_unpull_watchdog[4]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \cable_unpull_watchdog[8]_i_2 
       (.I0(cable_unpull_watchdog_reg[11]),
        .O(\cable_unpull_watchdog[8]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \cable_unpull_watchdog[8]_i_3 
       (.I0(cable_unpull_watchdog_reg[10]),
        .O(\cable_unpull_watchdog[8]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \cable_unpull_watchdog[8]_i_4 
       (.I0(cable_unpull_watchdog_reg[9]),
        .O(\cable_unpull_watchdog[8]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \cable_unpull_watchdog[8]_i_5 
       (.I0(cable_unpull_watchdog_reg[8]),
        .O(\cable_unpull_watchdog[8]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \cable_unpull_watchdog_event[0]_i_1 
       (.I0(\cable_unpull_watchdog_event_reg_n_0_[0] ),
        .O(p_0_in[0]));
  LUT4 #(
    .INIT(16'h4000)) 
    \cable_unpull_watchdog_event[10]_i_2 
       (.I0(cable_unpull_reset_reg_n_0),
        .I1(gt0_rxresetdone_i_reg_rxusrclk2),
        .I2(cable_is_pulled),
        .I3(cable_pull_watchdog_event1__2),
        .O(cable_unpull_watchdog_event));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \cable_unpull_watchdog_event[10]_i_3 
       (.I0(\cable_unpull_watchdog_event_reg_n_0_[8] ),
        .I1(\cable_unpull_watchdog_event_reg_n_0_[6] ),
        .I2(\cable_unpull_watchdog_event[10]_i_4_n_0 ),
        .I3(\cable_unpull_watchdog_event_reg_n_0_[7] ),
        .I4(\cable_unpull_watchdog_event_reg_n_0_[9] ),
        .I5(p_1_in),
        .O(p_0_in[10]));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \cable_unpull_watchdog_event[10]_i_4 
       (.I0(\cable_unpull_watchdog_event_reg_n_0_[5] ),
        .I1(\cable_unpull_watchdog_event_reg_n_0_[3] ),
        .I2(\cable_unpull_watchdog_event_reg_n_0_[1] ),
        .I3(\cable_unpull_watchdog_event_reg_n_0_[0] ),
        .I4(\cable_unpull_watchdog_event_reg_n_0_[2] ),
        .I5(\cable_unpull_watchdog_event_reg_n_0_[4] ),
        .O(\cable_unpull_watchdog_event[10]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \cable_unpull_watchdog_event[1]_i_1 
       (.I0(\cable_unpull_watchdog_event_reg_n_0_[0] ),
        .I1(\cable_unpull_watchdog_event_reg_n_0_[1] ),
        .O(p_0_in[1]));
  LUT3 #(
    .INIT(8'h78)) 
    \cable_unpull_watchdog_event[2]_i_1 
       (.I0(\cable_unpull_watchdog_event_reg_n_0_[0] ),
        .I1(\cable_unpull_watchdog_event_reg_n_0_[1] ),
        .I2(\cable_unpull_watchdog_event_reg_n_0_[2] ),
        .O(p_0_in[2]));
  (* SOFT_HLUTNM = "soft_lutpair303" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \cable_unpull_watchdog_event[3]_i_1 
       (.I0(\cable_unpull_watchdog_event_reg_n_0_[1] ),
        .I1(\cable_unpull_watchdog_event_reg_n_0_[0] ),
        .I2(\cable_unpull_watchdog_event_reg_n_0_[2] ),
        .I3(\cable_unpull_watchdog_event_reg_n_0_[3] ),
        .O(p_0_in[3]));
  (* SOFT_HLUTNM = "soft_lutpair303" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \cable_unpull_watchdog_event[4]_i_1 
       (.I0(\cable_unpull_watchdog_event_reg_n_0_[2] ),
        .I1(\cable_unpull_watchdog_event_reg_n_0_[0] ),
        .I2(\cable_unpull_watchdog_event_reg_n_0_[1] ),
        .I3(\cable_unpull_watchdog_event_reg_n_0_[3] ),
        .I4(\cable_unpull_watchdog_event_reg_n_0_[4] ),
        .O(p_0_in[4]));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \cable_unpull_watchdog_event[5]_i_1 
       (.I0(\cable_unpull_watchdog_event_reg_n_0_[3] ),
        .I1(\cable_unpull_watchdog_event_reg_n_0_[1] ),
        .I2(\cable_unpull_watchdog_event_reg_n_0_[0] ),
        .I3(\cable_unpull_watchdog_event_reg_n_0_[2] ),
        .I4(\cable_unpull_watchdog_event_reg_n_0_[4] ),
        .I5(\cable_unpull_watchdog_event_reg_n_0_[5] ),
        .O(p_0_in[5]));
  LUT2 #(
    .INIT(4'h6)) 
    \cable_unpull_watchdog_event[6]_i_1 
       (.I0(\cable_unpull_watchdog_event[10]_i_4_n_0 ),
        .I1(\cable_unpull_watchdog_event_reg_n_0_[6] ),
        .O(p_0_in[6]));
  LUT3 #(
    .INIT(8'h78)) 
    \cable_unpull_watchdog_event[7]_i_1 
       (.I0(\cable_unpull_watchdog_event[10]_i_4_n_0 ),
        .I1(\cable_unpull_watchdog_event_reg_n_0_[6] ),
        .I2(\cable_unpull_watchdog_event_reg_n_0_[7] ),
        .O(p_0_in[7]));
  (* SOFT_HLUTNM = "soft_lutpair302" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \cable_unpull_watchdog_event[8]_i_1 
       (.I0(\cable_unpull_watchdog_event_reg_n_0_[6] ),
        .I1(\cable_unpull_watchdog_event[10]_i_4_n_0 ),
        .I2(\cable_unpull_watchdog_event_reg_n_0_[7] ),
        .I3(\cable_unpull_watchdog_event_reg_n_0_[8] ),
        .O(p_0_in[8]));
  (* SOFT_HLUTNM = "soft_lutpair302" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \cable_unpull_watchdog_event[9]_i_1 
       (.I0(\cable_unpull_watchdog_event_reg_n_0_[7] ),
        .I1(\cable_unpull_watchdog_event[10]_i_4_n_0 ),
        .I2(\cable_unpull_watchdog_event_reg_n_0_[6] ),
        .I3(\cable_unpull_watchdog_event_reg_n_0_[8] ),
        .I4(\cable_unpull_watchdog_event_reg_n_0_[9] ),
        .O(p_0_in[9]));
  FDRE #(
    .INIT(1'b0)) 
    \cable_unpull_watchdog_event_reg[0] 
       (.C(CLK),
        .CE(cable_unpull_watchdog_event),
        .D(p_0_in[0]),
        .Q(\cable_unpull_watchdog_event_reg_n_0_[0] ),
        .R(cable_unpull_reset_rising_rxusrclk2_sync_i_n_1));
  FDRE #(
    .INIT(1'b0)) 
    \cable_unpull_watchdog_event_reg[10] 
       (.C(CLK),
        .CE(cable_unpull_watchdog_event),
        .D(p_0_in[10]),
        .Q(p_1_in),
        .R(cable_unpull_reset_rising_rxusrclk2_sync_i_n_1));
  FDRE #(
    .INIT(1'b0)) 
    \cable_unpull_watchdog_event_reg[1] 
       (.C(CLK),
        .CE(cable_unpull_watchdog_event),
        .D(p_0_in[1]),
        .Q(\cable_unpull_watchdog_event_reg_n_0_[1] ),
        .R(cable_unpull_reset_rising_rxusrclk2_sync_i_n_1));
  FDRE #(
    .INIT(1'b0)) 
    \cable_unpull_watchdog_event_reg[2] 
       (.C(CLK),
        .CE(cable_unpull_watchdog_event),
        .D(p_0_in[2]),
        .Q(\cable_unpull_watchdog_event_reg_n_0_[2] ),
        .R(cable_unpull_reset_rising_rxusrclk2_sync_i_n_1));
  FDRE #(
    .INIT(1'b0)) 
    \cable_unpull_watchdog_event_reg[3] 
       (.C(CLK),
        .CE(cable_unpull_watchdog_event),
        .D(p_0_in[3]),
        .Q(\cable_unpull_watchdog_event_reg_n_0_[3] ),
        .R(cable_unpull_reset_rising_rxusrclk2_sync_i_n_1));
  FDRE #(
    .INIT(1'b0)) 
    \cable_unpull_watchdog_event_reg[4] 
       (.C(CLK),
        .CE(cable_unpull_watchdog_event),
        .D(p_0_in[4]),
        .Q(\cable_unpull_watchdog_event_reg_n_0_[4] ),
        .R(cable_unpull_reset_rising_rxusrclk2_sync_i_n_1));
  FDRE #(
    .INIT(1'b0)) 
    \cable_unpull_watchdog_event_reg[5] 
       (.C(CLK),
        .CE(cable_unpull_watchdog_event),
        .D(p_0_in[5]),
        .Q(\cable_unpull_watchdog_event_reg_n_0_[5] ),
        .R(cable_unpull_reset_rising_rxusrclk2_sync_i_n_1));
  FDRE #(
    .INIT(1'b0)) 
    \cable_unpull_watchdog_event_reg[6] 
       (.C(CLK),
        .CE(cable_unpull_watchdog_event),
        .D(p_0_in[6]),
        .Q(\cable_unpull_watchdog_event_reg_n_0_[6] ),
        .R(cable_unpull_reset_rising_rxusrclk2_sync_i_n_1));
  FDRE #(
    .INIT(1'b0)) 
    \cable_unpull_watchdog_event_reg[7] 
       (.C(CLK),
        .CE(cable_unpull_watchdog_event),
        .D(p_0_in[7]),
        .Q(\cable_unpull_watchdog_event_reg_n_0_[7] ),
        .R(cable_unpull_reset_rising_rxusrclk2_sync_i_n_1));
  FDRE #(
    .INIT(1'b0)) 
    \cable_unpull_watchdog_event_reg[8] 
       (.C(CLK),
        .CE(cable_unpull_watchdog_event),
        .D(p_0_in[8]),
        .Q(\cable_unpull_watchdog_event_reg_n_0_[8] ),
        .R(cable_unpull_reset_rising_rxusrclk2_sync_i_n_1));
  FDRE #(
    .INIT(1'b0)) 
    \cable_unpull_watchdog_event_reg[9] 
       (.C(CLK),
        .CE(cable_unpull_watchdog_event),
        .D(p_0_in[9]),
        .Q(\cable_unpull_watchdog_event_reg_n_0_[9] ),
        .R(cable_unpull_reset_rising_rxusrclk2_sync_i_n_1));
  FDRE #(
    .INIT(1'b0)) 
    \cable_unpull_watchdog_reg[0] 
       (.C(CLK),
        .CE(cable_unpull_reset1),
        .D(\cable_unpull_watchdog_reg[0]_i_3_n_7 ),
        .Q(cable_unpull_watchdog_reg[0]),
        .R(cable_unpull_reset_rising_rxusrclk2_sync_i_n_0));
  CARRY4 \cable_unpull_watchdog_reg[0]_i_3 
       (.CI(1'b0),
        .CO({\cable_unpull_watchdog_reg[0]_i_3_n_0 ,\cable_unpull_watchdog_reg[0]_i_3_n_1 ,\cable_unpull_watchdog_reg[0]_i_3_n_2 ,\cable_unpull_watchdog_reg[0]_i_3_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b1,1'b1,1'b1,1'b1}),
        .O({\cable_unpull_watchdog_reg[0]_i_3_n_4 ,\cable_unpull_watchdog_reg[0]_i_3_n_5 ,\cable_unpull_watchdog_reg[0]_i_3_n_6 ,\cable_unpull_watchdog_reg[0]_i_3_n_7 }),
        .S({\cable_unpull_watchdog[0]_i_5_n_0 ,\cable_unpull_watchdog[0]_i_6_n_0 ,\cable_unpull_watchdog[0]_i_7_n_0 ,\cable_unpull_watchdog[0]_i_8_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \cable_unpull_watchdog_reg[10] 
       (.C(CLK),
        .CE(cable_unpull_reset1),
        .D(\cable_unpull_watchdog_reg[8]_i_1_n_5 ),
        .Q(cable_unpull_watchdog_reg[10]),
        .R(cable_unpull_reset_rising_rxusrclk2_sync_i_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \cable_unpull_watchdog_reg[11] 
       (.C(CLK),
        .CE(cable_unpull_reset1),
        .D(\cable_unpull_watchdog_reg[8]_i_1_n_4 ),
        .Q(cable_unpull_watchdog_reg[11]),
        .R(cable_unpull_reset_rising_rxusrclk2_sync_i_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \cable_unpull_watchdog_reg[12] 
       (.C(CLK),
        .CE(cable_unpull_reset1),
        .D(\cable_unpull_watchdog_reg[12]_i_1_n_7 ),
        .Q(cable_unpull_watchdog_reg[12]),
        .R(cable_unpull_reset_rising_rxusrclk2_sync_i_n_0));
  CARRY4 \cable_unpull_watchdog_reg[12]_i_1 
       (.CI(\cable_unpull_watchdog_reg[8]_i_1_n_0 ),
        .CO({\cable_unpull_watchdog_reg[12]_i_1_n_0 ,\cable_unpull_watchdog_reg[12]_i_1_n_1 ,\cable_unpull_watchdog_reg[12]_i_1_n_2 ,\cable_unpull_watchdog_reg[12]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b1,1'b1,1'b1,1'b1}),
        .O({\cable_unpull_watchdog_reg[12]_i_1_n_4 ,\cable_unpull_watchdog_reg[12]_i_1_n_5 ,\cable_unpull_watchdog_reg[12]_i_1_n_6 ,\cable_unpull_watchdog_reg[12]_i_1_n_7 }),
        .S({\cable_unpull_watchdog[12]_i_2_n_0 ,\cable_unpull_watchdog[12]_i_3_n_0 ,\cable_unpull_watchdog[12]_i_4_n_0 ,\cable_unpull_watchdog[12]_i_5_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \cable_unpull_watchdog_reg[13] 
       (.C(CLK),
        .CE(cable_unpull_reset1),
        .D(\cable_unpull_watchdog_reg[12]_i_1_n_6 ),
        .Q(cable_unpull_watchdog_reg[13]),
        .R(cable_unpull_reset_rising_rxusrclk2_sync_i_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \cable_unpull_watchdog_reg[14] 
       (.C(CLK),
        .CE(cable_unpull_reset1),
        .D(\cable_unpull_watchdog_reg[12]_i_1_n_5 ),
        .Q(cable_unpull_watchdog_reg[14]),
        .R(cable_unpull_reset_rising_rxusrclk2_sync_i_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \cable_unpull_watchdog_reg[15] 
       (.C(CLK),
        .CE(cable_unpull_reset1),
        .D(\cable_unpull_watchdog_reg[12]_i_1_n_4 ),
        .Q(cable_unpull_watchdog_reg[15]),
        .R(cable_unpull_reset_rising_rxusrclk2_sync_i_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \cable_unpull_watchdog_reg[16] 
       (.C(CLK),
        .CE(cable_unpull_reset1),
        .D(\cable_unpull_watchdog_reg[16]_i_1_n_7 ),
        .Q(cable_unpull_watchdog_reg[16]),
        .R(cable_unpull_reset_rising_rxusrclk2_sync_i_n_0));
  CARRY4 \cable_unpull_watchdog_reg[16]_i_1 
       (.CI(\cable_unpull_watchdog_reg[12]_i_1_n_0 ),
        .CO({\NLW_cable_unpull_watchdog_reg[16]_i_1_CO_UNCONNECTED [3],\cable_unpull_watchdog_reg[16]_i_1_n_1 ,\cable_unpull_watchdog_reg[16]_i_1_n_2 ,\cable_unpull_watchdog_reg[16]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b1,1'b1,1'b1}),
        .O({\cable_unpull_watchdog_reg[16]_i_1_n_4 ,\cable_unpull_watchdog_reg[16]_i_1_n_5 ,\cable_unpull_watchdog_reg[16]_i_1_n_6 ,\cable_unpull_watchdog_reg[16]_i_1_n_7 }),
        .S({\cable_unpull_watchdog[16]_i_2_n_0 ,\cable_unpull_watchdog[16]_i_3_n_0 ,\cable_unpull_watchdog[16]_i_4_n_0 ,\cable_unpull_watchdog[16]_i_5_n_0 }));
  FDSE #(
    .INIT(1'b1)) 
    \cable_unpull_watchdog_reg[17] 
       (.C(CLK),
        .CE(cable_unpull_reset1),
        .D(\cable_unpull_watchdog_reg[16]_i_1_n_6 ),
        .Q(cable_unpull_watchdog_reg[17]),
        .S(cable_unpull_reset_rising_rxusrclk2_sync_i_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \cable_unpull_watchdog_reg[18] 
       (.C(CLK),
        .CE(cable_unpull_reset1),
        .D(\cable_unpull_watchdog_reg[16]_i_1_n_5 ),
        .Q(cable_unpull_watchdog_reg[18]),
        .R(cable_unpull_reset_rising_rxusrclk2_sync_i_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \cable_unpull_watchdog_reg[19] 
       (.C(CLK),
        .CE(cable_unpull_reset1),
        .D(\cable_unpull_watchdog_reg[16]_i_1_n_4 ),
        .Q(cable_unpull_watchdog_reg[19]),
        .R(cable_unpull_reset_rising_rxusrclk2_sync_i_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \cable_unpull_watchdog_reg[1] 
       (.C(CLK),
        .CE(cable_unpull_reset1),
        .D(\cable_unpull_watchdog_reg[0]_i_3_n_6 ),
        .Q(cable_unpull_watchdog_reg[1]),
        .R(cable_unpull_reset_rising_rxusrclk2_sync_i_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \cable_unpull_watchdog_reg[2] 
       (.C(CLK),
        .CE(cable_unpull_reset1),
        .D(\cable_unpull_watchdog_reg[0]_i_3_n_5 ),
        .Q(cable_unpull_watchdog_reg[2]),
        .R(cable_unpull_reset_rising_rxusrclk2_sync_i_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \cable_unpull_watchdog_reg[3] 
       (.C(CLK),
        .CE(cable_unpull_reset1),
        .D(\cable_unpull_watchdog_reg[0]_i_3_n_4 ),
        .Q(cable_unpull_watchdog_reg[3]),
        .R(cable_unpull_reset_rising_rxusrclk2_sync_i_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \cable_unpull_watchdog_reg[4] 
       (.C(CLK),
        .CE(cable_unpull_reset1),
        .D(\cable_unpull_watchdog_reg[4]_i_1_n_7 ),
        .Q(cable_unpull_watchdog_reg[4]),
        .R(cable_unpull_reset_rising_rxusrclk2_sync_i_n_0));
  CARRY4 \cable_unpull_watchdog_reg[4]_i_1 
       (.CI(\cable_unpull_watchdog_reg[0]_i_3_n_0 ),
        .CO({\cable_unpull_watchdog_reg[4]_i_1_n_0 ,\cable_unpull_watchdog_reg[4]_i_1_n_1 ,\cable_unpull_watchdog_reg[4]_i_1_n_2 ,\cable_unpull_watchdog_reg[4]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b1,1'b1,1'b1,1'b1}),
        .O({\cable_unpull_watchdog_reg[4]_i_1_n_4 ,\cable_unpull_watchdog_reg[4]_i_1_n_5 ,\cable_unpull_watchdog_reg[4]_i_1_n_6 ,\cable_unpull_watchdog_reg[4]_i_1_n_7 }),
        .S({\cable_unpull_watchdog[4]_i_2_n_0 ,\cable_unpull_watchdog[4]_i_3_n_0 ,\cable_unpull_watchdog[4]_i_4_n_0 ,\cable_unpull_watchdog[4]_i_5_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \cable_unpull_watchdog_reg[5] 
       (.C(CLK),
        .CE(cable_unpull_reset1),
        .D(\cable_unpull_watchdog_reg[4]_i_1_n_6 ),
        .Q(cable_unpull_watchdog_reg[5]),
        .R(cable_unpull_reset_rising_rxusrclk2_sync_i_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \cable_unpull_watchdog_reg[6] 
       (.C(CLK),
        .CE(cable_unpull_reset1),
        .D(\cable_unpull_watchdog_reg[4]_i_1_n_5 ),
        .Q(cable_unpull_watchdog_reg[6]),
        .R(cable_unpull_reset_rising_rxusrclk2_sync_i_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \cable_unpull_watchdog_reg[7] 
       (.C(CLK),
        .CE(cable_unpull_reset1),
        .D(\cable_unpull_watchdog_reg[4]_i_1_n_4 ),
        .Q(cable_unpull_watchdog_reg[7]),
        .R(cable_unpull_reset_rising_rxusrclk2_sync_i_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \cable_unpull_watchdog_reg[8] 
       (.C(CLK),
        .CE(cable_unpull_reset1),
        .D(\cable_unpull_watchdog_reg[8]_i_1_n_7 ),
        .Q(cable_unpull_watchdog_reg[8]),
        .R(cable_unpull_reset_rising_rxusrclk2_sync_i_n_0));
  CARRY4 \cable_unpull_watchdog_reg[8]_i_1 
       (.CI(\cable_unpull_watchdog_reg[4]_i_1_n_0 ),
        .CO({\cable_unpull_watchdog_reg[8]_i_1_n_0 ,\cable_unpull_watchdog_reg[8]_i_1_n_1 ,\cable_unpull_watchdog_reg[8]_i_1_n_2 ,\cable_unpull_watchdog_reg[8]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b1,1'b1,1'b1,1'b1}),
        .O({\cable_unpull_watchdog_reg[8]_i_1_n_4 ,\cable_unpull_watchdog_reg[8]_i_1_n_5 ,\cable_unpull_watchdog_reg[8]_i_1_n_6 ,\cable_unpull_watchdog_reg[8]_i_1_n_7 }),
        .S({\cable_unpull_watchdog[8]_i_2_n_0 ,\cable_unpull_watchdog[8]_i_3_n_0 ,\cable_unpull_watchdog[8]_i_4_n_0 ,\cable_unpull_watchdog[8]_i_5_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \cable_unpull_watchdog_reg[9] 
       (.C(CLK),
        .CE(cable_unpull_reset1),
        .D(\cable_unpull_watchdog_reg[8]_i_1_n_6 ),
        .Q(cable_unpull_watchdog_reg[9]),
        .R(cable_unpull_reset_rising_rxusrclk2_sync_i_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFE0000)) 
    gearboxslipignore_i_1
       (.I0(gearboxslipignorecount_reg[3]),
        .I1(gearboxslipignorecount_reg[2]),
        .I2(gearboxslipignorecount_reg[0]),
        .I3(gearboxslipignorecount_reg[1]),
        .I4(gearboxslipignore),
        .I5(SS),
        .O(gearboxslipignore_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    gearboxslipignore_reg
       (.C(CLK),
        .CE(1'b1),
        .D(gearboxslipignore_i_1_n_0),
        .Q(gearboxslipignore),
        .R(1'b0));
  LUT1 #(
    .INIT(2'h1)) 
    \gearboxslipignorecount[0]_i_1 
       (.I0(gearboxslipignorecount_reg[0]),
        .O(gearboxslipignorecount0));
  LUT2 #(
    .INIT(4'h9)) 
    \gearboxslipignorecount[1]_i_1 
       (.I0(gearboxslipignorecount_reg[0]),
        .I1(gearboxslipignorecount_reg[1]),
        .O(\gearboxslipignorecount[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair304" *) 
  LUT3 #(
    .INIT(8'hE1)) 
    \gearboxslipignorecount[2]_i_1 
       (.I0(gearboxslipignorecount_reg[1]),
        .I1(gearboxslipignorecount_reg[0]),
        .I2(gearboxslipignorecount_reg[2]),
        .O(\gearboxslipignorecount[2]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \gearboxslipignorecount[3]_i_1 
       (.I0(gearboxslipignorecount_reg[1]),
        .I1(gearboxslipignorecount_reg[0]),
        .I2(gearboxslipignorecount_reg[2]),
        .I3(gearboxslipignorecount_reg[3]),
        .O(\gearboxslipignorecount[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair304" *) 
  LUT4 #(
    .INIT(16'hFE01)) 
    \gearboxslipignorecount[3]_i_2 
       (.I0(gearboxslipignorecount_reg[2]),
        .I1(gearboxslipignorecount_reg[0]),
        .I2(gearboxslipignorecount_reg[1]),
        .I3(gearboxslipignorecount_reg[3]),
        .O(\gearboxslipignorecount[3]_i_2_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \gearboxslipignorecount_reg[0] 
       (.C(CLK),
        .CE(\gearboxslipignorecount[3]_i_1_n_0 ),
        .D(gearboxslipignorecount0),
        .Q(gearboxslipignorecount_reg[0]),
        .S(SS));
  FDSE #(
    .INIT(1'b1)) 
    \gearboxslipignorecount_reg[1] 
       (.C(CLK),
        .CE(\gearboxslipignorecount[3]_i_1_n_0 ),
        .D(\gearboxslipignorecount[1]_i_1_n_0 ),
        .Q(gearboxslipignorecount_reg[1]),
        .S(SS));
  FDSE #(
    .INIT(1'b1)) 
    \gearboxslipignorecount_reg[2] 
       (.C(CLK),
        .CE(\gearboxslipignorecount[3]_i_1_n_0 ),
        .D(\gearboxslipignorecount[2]_i_1_n_0 ),
        .Q(gearboxslipignorecount_reg[2]),
        .S(SS));
  FDSE #(
    .INIT(1'b1)) 
    \gearboxslipignorecount_reg[3] 
       (.C(CLK),
        .CE(\gearboxslipignorecount[3]_i_1_n_0 ),
        .D(\gearboxslipignorecount[3]_i_2_n_0 ),
        .Q(gearboxslipignorecount_reg[3]),
        .S(SS));
  LUT1 #(
    .INIT(2'h1)) 
    \rx_sample[3]_i_1 
       (.I0(gearboxslipignore),
        .O(\rx_sample[3]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \rx_sample_prev_reg[0] 
       (.C(CLK),
        .CE(\rx_sample[3]_i_1_n_0 ),
        .D(rx_sample[0]),
        .Q(rx_sample_prev[0]),
        .R(cable_pull_reset_rising_rxusrclk2));
  FDRE #(
    .INIT(1'b0)) 
    \rx_sample_prev_reg[1] 
       (.C(CLK),
        .CE(\rx_sample[3]_i_1_n_0 ),
        .D(rx_sample[1]),
        .Q(rx_sample_prev[1]),
        .R(cable_pull_reset_rising_rxusrclk2));
  FDRE #(
    .INIT(1'b0)) 
    \rx_sample_prev_reg[2] 
       (.C(CLK),
        .CE(\rx_sample[3]_i_1_n_0 ),
        .D(rx_sample[2]),
        .Q(rx_sample_prev[2]),
        .R(cable_pull_reset_rising_rxusrclk2));
  FDRE #(
    .INIT(1'b0)) 
    \rx_sample_prev_reg[3] 
       (.C(CLK),
        .CE(\rx_sample[3]_i_1_n_0 ),
        .D(rx_sample[3]),
        .Q(rx_sample_prev[3]),
        .R(cable_pull_reset_rising_rxusrclk2));
  FDRE #(
    .INIT(1'b0)) 
    \rx_sample_reg[0] 
       (.C(CLK),
        .CE(\rx_sample[3]_i_1_n_0 ),
        .D(D[0]),
        .Q(rx_sample[0]),
        .R(cable_pull_reset_rising_rxusrclk2));
  FDRE #(
    .INIT(1'b0)) 
    \rx_sample_reg[1] 
       (.C(CLK),
        .CE(\rx_sample[3]_i_1_n_0 ),
        .D(D[1]),
        .Q(rx_sample[1]),
        .R(cable_pull_reset_rising_rxusrclk2));
  FDRE #(
    .INIT(1'b0)) 
    \rx_sample_reg[2] 
       (.C(CLK),
        .CE(\rx_sample[3]_i_1_n_0 ),
        .D(D[2]),
        .Q(rx_sample[2]),
        .R(cable_pull_reset_rising_rxusrclk2));
  FDRE #(
    .INIT(1'b0)) 
    \rx_sample_reg[3] 
       (.C(CLK),
        .CE(\rx_sample[3]_i_1_n_0 ),
        .D(D[3]),
        .Q(rx_sample[3]),
        .R(cable_pull_reset_rising_rxusrclk2));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_ff_synchronizer" *) 
module ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_ff_synchronizer
   (cable_pull_coreclk_sync,
    cable_pull_rising0,
    cable_pull_falling0,
    coreclk,
    D,
    cable_pull_reg);
  output cable_pull_coreclk_sync;
  output cable_pull_rising0;
  output cable_pull_falling0;
  input coreclk;
  input [0:0]D;
  input cable_pull_reg;

  wire [0:0]D;
  wire cable_pull_coreclk_sync;
  wire cable_pull_falling0;
  wire cable_pull_reg;
  wire cable_pull_rising0;
  wire coreclk;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire [4:0]sync1_r;

  (* SOFT_HLUTNM = "soft_lutpair300" *) 
  LUT2 #(
    .INIT(4'h2)) 
    cable_pull_falling_i_1
       (.I0(cable_pull_reg),
        .I1(cable_pull_coreclk_sync),
        .O(cable_pull_falling0));
  (* SOFT_HLUTNM = "soft_lutpair300" *) 
  LUT2 #(
    .INIT(4'h2)) 
    cable_pull_rising_i_1
       (.I0(cable_pull_coreclk_sync),
        .I1(cable_pull_reg),
        .O(cable_pull_rising0));
  FDRE #(
    .INIT(1'b0)) 
    data_out_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(sync1_r[4]),
        .Q(cable_pull_coreclk_sync),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(D),
        .Q(sync1_r[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[1] 
       (.C(coreclk),
        .CE(1'b1),
        .D(sync1_r[0]),
        .Q(sync1_r[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[2] 
       (.C(coreclk),
        .CE(1'b1),
        .D(sync1_r[1]),
        .Q(sync1_r[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[3] 
       (.C(coreclk),
        .CE(1'b1),
        .D(sync1_r[2]),
        .Q(sync1_r[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[4] 
       (.C(coreclk),
        .CE(1'b1),
        .D(sync1_r[3]),
        .Q(sync1_r[4]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_ff_synchronizer" *) 
module ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_ff_synchronizer_0
   (gt0_rxresetdone_i_reg_rxusrclk2,
    CLK,
    D);
  output gt0_rxresetdone_i_reg_rxusrclk2;
  input CLK;
  input [0:0]D;

  wire CLK;
  wire [0:0]D;
  wire gt0_rxresetdone_i_reg_rxusrclk2;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire [4:0]sync1_r;

  FDRE #(
    .INIT(1'b0)) 
    data_out_reg
       (.C(CLK),
        .CE(1'b1),
        .D(sync1_r[4]),
        .Q(gt0_rxresetdone_i_reg_rxusrclk2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(D),
        .Q(sync1_r[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(sync1_r[0]),
        .Q(sync1_r[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .D(sync1_r[1]),
        .Q(sync1_r[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[3] 
       (.C(CLK),
        .CE(1'b1),
        .D(sync1_r[2]),
        .Q(sync1_r[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[4] 
       (.C(CLK),
        .CE(1'b1),
        .D(sync1_r[3]),
        .Q(sync1_r[4]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_ff_synchronizer" *) 
module ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_ff_synchronizer_1
   (data_out_reg_0,
    resetdone,
    coreclk,
    pma_pmd_reset_clear_core_intr_reg,
    D);
  output data_out_reg_0;
  output resetdone;
  input coreclk;
  input pma_pmd_reset_clear_core_intr_reg;
  input [0:0]D;

  wire [0:0]D;
  wire coreclk;
  wire data_out_reg_0;
  wire pma_pmd_reset_clear_core_intr_reg;
  wire resetdone;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire [4:0]sync1_r;

  FDRE #(
    .INIT(1'b0)) 
    data_out_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(sync1_r[4]),
        .Q(data_out_reg_0),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(D),
        .Q(sync1_r[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[1] 
       (.C(coreclk),
        .CE(1'b1),
        .D(sync1_r[0]),
        .Q(sync1_r[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[2] 
       (.C(coreclk),
        .CE(1'b1),
        .D(sync1_r[1]),
        .Q(sync1_r[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[3] 
       (.C(coreclk),
        .CE(1'b1),
        .D(sync1_r[2]),
        .Q(sync1_r[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[4] 
       (.C(coreclk),
        .CE(1'b1),
        .D(sync1_r[3]),
        .Q(sync1_r[4]),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h8)) 
    ten_gig_eth_pcs_pma_core_i_1
       (.I0(data_out_reg_0),
        .I1(pma_pmd_reset_clear_core_intr_reg),
        .O(resetdone));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_ff_synchronizer" *) 
module ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_ff_synchronizer_16
   (rx_resetdone_dclk,
    dclk,
    D);
  output rx_resetdone_dclk;
  input dclk;
  input [0:0]D;

  wire [0:0]D;
  wire dclk;
  wire rx_resetdone_dclk;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire [4:0]sync1_r;

  FDRE #(
    .INIT(1'b0)) 
    data_out_reg
       (.C(dclk),
        .CE(1'b1),
        .D(sync1_r[4]),
        .Q(rx_resetdone_dclk),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[0] 
       (.C(dclk),
        .CE(1'b1),
        .D(D),
        .Q(sync1_r[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[1] 
       (.C(dclk),
        .CE(1'b1),
        .D(sync1_r[0]),
        .Q(sync1_r[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[2] 
       (.C(dclk),
        .CE(1'b1),
        .D(sync1_r[1]),
        .Q(sync1_r[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[3] 
       (.C(dclk),
        .CE(1'b1),
        .D(sync1_r[2]),
        .Q(sync1_r[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[4] 
       (.C(dclk),
        .CE(1'b1),
        .D(sync1_r[3]),
        .Q(sync1_r[4]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_ff_synchronizer" *) 
module ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_ff_synchronizer_17
   (signal_detect_coreclk,
    coreclk,
    signal_detect);
  output signal_detect_coreclk;
  input coreclk;
  input signal_detect;

  wire coreclk;
  wire signal_detect;
  wire signal_detect_coreclk;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire [4:0]sync1_r;

  FDRE #(
    .INIT(1'b0)) 
    data_out_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(sync1_r[4]),
        .Q(signal_detect_coreclk),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(signal_detect),
        .Q(sync1_r[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[1] 
       (.C(coreclk),
        .CE(1'b1),
        .D(sync1_r[0]),
        .Q(sync1_r[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[2] 
       (.C(coreclk),
        .CE(1'b1),
        .D(sync1_r[1]),
        .Q(sync1_r[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[3] 
       (.C(coreclk),
        .CE(1'b1),
        .D(sync1_r[2]),
        .Q(sync1_r[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[4] 
       (.C(coreclk),
        .CE(1'b1),
        .D(sync1_r[3]),
        .Q(sync1_r[4]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_ff_synchronizer" *) 
module ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_ff_synchronizer_18
   (signal_detect_dclk,
    dclk,
    signal_detect);
  output signal_detect_dclk;
  input dclk;
  input signal_detect;

  wire dclk;
  wire signal_detect;
  wire signal_detect_dclk;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire [4:0]sync1_r;

  FDRE #(
    .INIT(1'b0)) 
    data_out_reg
       (.C(dclk),
        .CE(1'b1),
        .D(sync1_r[4]),
        .Q(signal_detect_dclk),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[0] 
       (.C(dclk),
        .CE(1'b1),
        .D(signal_detect),
        .Q(sync1_r[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[1] 
       (.C(dclk),
        .CE(1'b1),
        .D(sync1_r[0]),
        .Q(sync1_r[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[2] 
       (.C(dclk),
        .CE(1'b1),
        .D(sync1_r[1]),
        .Q(sync1_r[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[3] 
       (.C(dclk),
        .CE(1'b1),
        .D(sync1_r[2]),
        .Q(sync1_r[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[4] 
       (.C(dclk),
        .CE(1'b1),
        .D(sync1_r[3]),
        .Q(sync1_r[4]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_ff_synchronizer" *) 
module ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_ff_synchronizer_2
   (data_out_reg_0,
    core_in_testmode_reg,
    coreclk,
    core_in_testmode,
    core_status,
    D,
    \sync1_r_reg[0]_0 );
  output data_out_reg_0;
  output core_in_testmode_reg;
  input coreclk;
  input core_in_testmode;
  input [0:0]core_status;
  input [0:0]D;
  input [0:0]\sync1_r_reg[0]_0 ;

  wire [0:0]D;
  wire core_in_testmode;
  wire core_in_testmode_reg;
  wire [0:0]core_status;
  wire coreclk;
  wire data_out_reg_0;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire [4:0]sync1_r;
  wire [0:0]\sync1_r_reg[0]_0 ;

  FDRE #(
    .INIT(1'b0)) 
    data_out_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(sync1_r[4]),
        .Q(data_out_reg_0),
        .R(1'b0));
  LUT4 #(
    .INIT(16'hEFFF)) 
    \master_watchdog[0]_i_1 
       (.I0(core_in_testmode),
        .I1(core_status),
        .I2(data_out_reg_0),
        .I3(D),
        .O(core_in_testmode_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\sync1_r_reg[0]_0 ),
        .Q(sync1_r[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[1] 
       (.C(coreclk),
        .CE(1'b1),
        .D(sync1_r[0]),
        .Q(sync1_r[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[2] 
       (.C(coreclk),
        .CE(1'b1),
        .D(sync1_r[1]),
        .Q(sync1_r[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[3] 
       (.C(coreclk),
        .CE(1'b1),
        .D(sync1_r[2]),
        .Q(sync1_r[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[4] 
       (.C(coreclk),
        .CE(1'b1),
        .D(sync1_r[3]),
        .Q(sync1_r[4]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_ff_synchronizer" *) 
module ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_ff_synchronizer_20
   (cable_pull_reset_reg__0,
    cable_pull_reset_rising0,
    coreclk,
    cable_pull_reset_reg_reg,
    cable_pull_reset);
  output cable_pull_reset_reg__0;
  output cable_pull_reset_rising0;
  input coreclk;
  input cable_pull_reset_reg_reg;
  input cable_pull_reset;

  wire cable_pull_reset;
  wire cable_pull_reset_reg__0;
  wire cable_pull_reset_reg_reg;
  wire cable_pull_reset_rising0;
  wire coreclk;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire [4:0]sync1_r;

  LUT2 #(
    .INIT(4'h2)) 
    cable_pull_reset_rising_i_1
       (.I0(cable_pull_reset_reg__0),
        .I1(cable_pull_reset_reg_reg),
        .O(cable_pull_reset_rising0));
  FDRE #(
    .INIT(1'b0)) 
    data_out_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(sync1_r[4]),
        .Q(cable_pull_reset_reg__0),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(cable_pull_reset),
        .Q(sync1_r[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[1] 
       (.C(coreclk),
        .CE(1'b1),
        .D(sync1_r[0]),
        .Q(sync1_r[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[2] 
       (.C(coreclk),
        .CE(1'b1),
        .D(sync1_r[1]),
        .Q(sync1_r[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[3] 
       (.C(coreclk),
        .CE(1'b1),
        .D(sync1_r[2]),
        .Q(sync1_r[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[4] 
       (.C(coreclk),
        .CE(1'b1),
        .D(sync1_r[3]),
        .Q(sync1_r[4]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_ff_synchronizer" *) 
module ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_ff_synchronizer_22
   (cable_unpull_reset_reg__0,
    cable_unpull_reset_rising0,
    coreclk,
    cable_unpull_reset_reg_reg,
    \sync1_r_reg[0]_0 );
  output cable_unpull_reset_reg__0;
  output cable_unpull_reset_rising0;
  input coreclk;
  input cable_unpull_reset_reg_reg;
  input \sync1_r_reg[0]_0 ;

  wire cable_unpull_reset_reg__0;
  wire cable_unpull_reset_reg_reg;
  wire cable_unpull_reset_rising0;
  wire coreclk;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire [4:0]sync1_r;
  wire \sync1_r_reg[0]_0 ;

  LUT2 #(
    .INIT(4'h2)) 
    cable_unpull_reset_rising_i_1
       (.I0(cable_unpull_reset_reg__0),
        .I1(cable_unpull_reset_reg_reg),
        .O(cable_unpull_reset_rising0));
  FDRE #(
    .INIT(1'b0)) 
    data_out_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(sync1_r[4]),
        .Q(cable_unpull_reset_reg__0),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\sync1_r_reg[0]_0 ),
        .Q(sync1_r[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[1] 
       (.C(coreclk),
        .CE(1'b1),
        .D(sync1_r[0]),
        .Q(sync1_r[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[2] 
       (.C(coreclk),
        .CE(1'b1),
        .D(sync1_r[1]),
        .Q(sync1_r[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[3] 
       (.C(coreclk),
        .CE(1'b1),
        .D(sync1_r[2]),
        .Q(sync1_r[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[4] 
       (.C(coreclk),
        .CE(1'b1),
        .D(sync1_r[3]),
        .Q(sync1_r[4]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_ff_synchronizer" *) 
module ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_ff_synchronizer_5
   (gt0_gtrxreset_c,
    coreclk,
    cable_pull_reset_rising_reg,
    gtrxreset_coreclk,
    gt0_gtrxreset_i_reg,
    gt0_gtrxreset_i_reg_0,
    reset_counter_done,
    signal_detect);
  output gt0_gtrxreset_c;
  input coreclk;
  input cable_pull_reset_rising_reg;
  input gtrxreset_coreclk;
  input gt0_gtrxreset_i_reg;
  input gt0_gtrxreset_i_reg_0;
  input reset_counter_done;
  input signal_detect;

  wire cable_pull_reset_rising_reg;
  wire coreclk;
  wire gt0_gtrxreset_c;
  wire gt0_gtrxreset_i_reg;
  wire gt0_gtrxreset_i_reg_0;
  wire gtrxreset_coreclk;
  wire reset_counter_done;
  wire signal_detect;
  wire signal_detect_coreclk;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire [4:0]sync1_r;

  FDRE #(
    .INIT(1'b0)) 
    data_out_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(sync1_r[4]),
        .Q(signal_detect_coreclk),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFFFFFFD00000000)) 
    gt0_gtrxreset_i_i_1
       (.I0(signal_detect_coreclk),
        .I1(cable_pull_reset_rising_reg),
        .I2(gtrxreset_coreclk),
        .I3(gt0_gtrxreset_i_reg),
        .I4(gt0_gtrxreset_i_reg_0),
        .I5(reset_counter_done),
        .O(gt0_gtrxreset_c));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(signal_detect),
        .Q(sync1_r[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[1] 
       (.C(coreclk),
        .CE(1'b1),
        .D(sync1_r[0]),
        .Q(sync1_r[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[2] 
       (.C(coreclk),
        .CE(1'b1),
        .D(sync1_r[1]),
        .Q(sync1_r[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[3] 
       (.C(coreclk),
        .CE(1'b1),
        .D(sync1_r[2]),
        .Q(sync1_r[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[4] 
       (.C(coreclk),
        .CE(1'b1),
        .D(sync1_r[3]),
        .Q(sync1_r[4]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_ff_synchronizer" *) 
module ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_ff_synchronizer_6
   (signal_detect_comb0,
    CLK,
    cable_is_pulled,
    signal_detect);
  output signal_detect_comb0;
  input CLK;
  input cable_is_pulled;
  input signal_detect;

  wire CLK;
  wire cable_is_pulled;
  wire signal_detect;
  wire signal_detect_comb0;
  wire signal_detect_rxusrclk2;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire [4:0]sync1_r;

  FDRE #(
    .INIT(1'b0)) 
    data_out_reg
       (.C(CLK),
        .CE(1'b1),
        .D(sync1_r[4]),
        .Q(signal_detect_rxusrclk2),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h2)) 
    signal_detect_comb_i_1
       (.I0(signal_detect_rxusrclk2),
        .I1(cable_is_pulled),
        .O(signal_detect_comb0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(signal_detect),
        .Q(sync1_r[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(sync1_r[0]),
        .Q(sync1_r[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .D(sync1_r[1]),
        .Q(sync1_r[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[3] 
       (.C(CLK),
        .CE(1'b1),
        .D(sync1_r[2]),
        .Q(sync1_r[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[4] 
       (.C(CLK),
        .CE(1'b1),
        .D(sync1_r[3]),
        .Q(sync1_r[4]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_ff_synchronizer_rst" *) 
module ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_ff_synchronizer_rst
   (gtrxreset_coreclk,
    coreclk,
    gtrxreset);
  output gtrxreset_coreclk;
  input coreclk;
  input gtrxreset;

  wire coreclk;
  wire gtrxreset;
  wire gtrxreset_coreclk;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire [4:0]sync1_r;

  FDRE #(
    .INIT(1'b0)) 
    data_out_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(sync1_r[4]),
        .Q(gtrxreset_coreclk),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(gtrxreset),
        .Q(sync1_r[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[1] 
       (.C(coreclk),
        .CE(1'b1),
        .D(sync1_r[0]),
        .PRE(gtrxreset),
        .Q(sync1_r[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[2] 
       (.C(coreclk),
        .CE(1'b1),
        .D(sync1_r[1]),
        .PRE(gtrxreset),
        .Q(sync1_r[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[3] 
       (.C(coreclk),
        .CE(1'b1),
        .D(sync1_r[2]),
        .PRE(gtrxreset),
        .Q(sync1_r[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[4] 
       (.C(coreclk),
        .CE(1'b1),
        .D(sync1_r[3]),
        .PRE(gtrxreset),
        .Q(sync1_r[4]));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_ff_synchronizer_rst" *) 
module ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_ff_synchronizer_rst_10
   (AS,
    coreclk,
    \sync1_r_reg[4]_0 );
  output [0:0]AS;
  input coreclk;
  input [0:0]\sync1_r_reg[4]_0 ;

  wire [0:0]AS;
  wire coreclk;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire [4:0]sync1_r;
  wire [0:0]\sync1_r_reg[4]_0 ;

  FDRE #(
    .INIT(1'b0)) 
    data_out_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(sync1_r[4]),
        .Q(AS),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(\sync1_r_reg[4]_0 ),
        .Q(sync1_r[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[1] 
       (.C(coreclk),
        .CE(1'b1),
        .D(sync1_r[0]),
        .PRE(\sync1_r_reg[4]_0 ),
        .Q(sync1_r[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[2] 
       (.C(coreclk),
        .CE(1'b1),
        .D(sync1_r[1]),
        .PRE(\sync1_r_reg[4]_0 ),
        .Q(sync1_r[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[3] 
       (.C(coreclk),
        .CE(1'b1),
        .D(sync1_r[2]),
        .PRE(\sync1_r_reg[4]_0 ),
        .Q(sync1_r[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[4] 
       (.C(coreclk),
        .CE(1'b1),
        .D(sync1_r[3]),
        .PRE(\sync1_r_reg[4]_0 ),
        .Q(sync1_r[4]));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_ff_synchronizer_rst" *) 
module ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_ff_synchronizer_rst_11
   (dclk_areset,
    dclk,
    areset);
  output dclk_areset;
  input dclk;
  input areset;

  wire areset;
  wire dclk;
  wire dclk_areset;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire [4:0]sync1_r;

  FDRE #(
    .INIT(1'b0)) 
    data_out_reg
       (.C(dclk),
        .CE(1'b1),
        .D(sync1_r[4]),
        .Q(dclk_areset),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[0] 
       (.C(dclk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(areset),
        .Q(sync1_r[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[1] 
       (.C(dclk),
        .CE(1'b1),
        .D(sync1_r[0]),
        .PRE(areset),
        .Q(sync1_r[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[2] 
       (.C(dclk),
        .CE(1'b1),
        .D(sync1_r[1]),
        .PRE(areset),
        .Q(sync1_r[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[3] 
       (.C(dclk),
        .CE(1'b1),
        .D(sync1_r[2]),
        .PRE(areset),
        .Q(sync1_r[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[4] 
       (.C(dclk),
        .CE(1'b1),
        .D(sync1_r[3]),
        .PRE(areset),
        .Q(sync1_r[4]));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_ff_synchronizer_rst" *) 
module ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_ff_synchronizer_rst_12
   (dclk_reset,
    dclk,
    AS);
  output dclk_reset;
  input dclk;
  input [0:0]AS;

  wire [0:0]AS;
  wire dclk;
  wire dclk_reset;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire [4:0]sync1_r;

  FDRE #(
    .INIT(1'b0)) 
    data_out_reg
       (.C(dclk),
        .CE(1'b1),
        .D(sync1_r[4]),
        .Q(dclk_reset),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[0] 
       (.C(dclk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(AS),
        .Q(sync1_r[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[1] 
       (.C(dclk),
        .CE(1'b1),
        .D(sync1_r[0]),
        .PRE(AS),
        .Q(sync1_r[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[2] 
       (.C(dclk),
        .CE(1'b1),
        .D(sync1_r[1]),
        .PRE(AS),
        .Q(sync1_r[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[3] 
       (.C(dclk),
        .CE(1'b1),
        .D(sync1_r[2]),
        .PRE(AS),
        .Q(sync1_r[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[4] 
       (.C(dclk),
        .CE(1'b1),
        .D(sync1_r[3]),
        .PRE(AS),
        .Q(sync1_r[4]));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_ff_synchronizer_rst" *) 
module ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_ff_synchronizer_rst_13
   (gtrxreset_rxusrclk2,
    rxuserrdy_counter0,
    data_out_reg_0,
    qplllock_rxusrclk2,
    \sync1_r_reg[0]_0 );
  output gtrxreset_rxusrclk2;
  output rxuserrdy_counter0;
  input data_out_reg_0;
  input qplllock_rxusrclk2;
  input [0:0]\sync1_r_reg[0]_0 ;

  wire data_out_reg_0;
  wire gtrxreset_rxusrclk2;
  wire qplllock_rxusrclk2;
  wire rxuserrdy_counter0;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire [4:0]sync1_r;
  wire [0:0]\sync1_r_reg[0]_0 ;

  FDRE #(
    .INIT(1'b0)) 
    data_out_reg
       (.C(data_out_reg_0),
        .CE(1'b1),
        .D(sync1_r[4]),
        .Q(gtrxreset_rxusrclk2),
        .R(1'b0));
  LUT2 #(
    .INIT(4'hB)) 
    \rxuserrdy_counter[0]_i_1 
       (.I0(gtrxreset_rxusrclk2),
        .I1(qplllock_rxusrclk2),
        .O(rxuserrdy_counter0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[0] 
       (.C(data_out_reg_0),
        .CE(1'b1),
        .D(1'b0),
        .PRE(\sync1_r_reg[0]_0 ),
        .Q(sync1_r[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[1] 
       (.C(data_out_reg_0),
        .CE(1'b1),
        .D(sync1_r[0]),
        .PRE(\sync1_r_reg[0]_0 ),
        .Q(sync1_r[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[2] 
       (.C(data_out_reg_0),
        .CE(1'b1),
        .D(sync1_r[1]),
        .PRE(\sync1_r_reg[0]_0 ),
        .Q(sync1_r[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[3] 
       (.C(data_out_reg_0),
        .CE(1'b1),
        .D(sync1_r[2]),
        .PRE(\sync1_r_reg[0]_0 ),
        .Q(sync1_r[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[4] 
       (.C(data_out_reg_0),
        .CE(1'b1),
        .D(sync1_r[3]),
        .PRE(\sync1_r_reg[0]_0 ),
        .Q(sync1_r[4]));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_ff_synchronizer_rst" *) 
module ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_ff_synchronizer_rst_14
   (pma_resetout_rising_rxusrclk2,
    data_out_reg_0,
    \sync1_r_reg[0]_0 );
  output pma_resetout_rising_rxusrclk2;
  input data_out_reg_0;
  input [0:0]\sync1_r_reg[0]_0 ;

  wire data_out_reg_0;
  wire pma_resetout_rising_rxusrclk2;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire [4:0]sync1_r;
  wire [0:0]\sync1_r_reg[0]_0 ;

  FDRE #(
    .INIT(1'b0)) 
    data_out_reg
       (.C(data_out_reg_0),
        .CE(1'b1),
        .D(sync1_r[4]),
        .Q(pma_resetout_rising_rxusrclk2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[0] 
       (.C(data_out_reg_0),
        .CE(1'b1),
        .D(1'b0),
        .PRE(\sync1_r_reg[0]_0 ),
        .Q(sync1_r[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[1] 
       (.C(data_out_reg_0),
        .CE(1'b1),
        .D(sync1_r[0]),
        .PRE(\sync1_r_reg[0]_0 ),
        .Q(sync1_r[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[2] 
       (.C(data_out_reg_0),
        .CE(1'b1),
        .D(sync1_r[1]),
        .PRE(\sync1_r_reg[0]_0 ),
        .Q(sync1_r[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[3] 
       (.C(data_out_reg_0),
        .CE(1'b1),
        .D(sync1_r[2]),
        .PRE(\sync1_r_reg[0]_0 ),
        .Q(sync1_r[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[4] 
       (.C(data_out_reg_0),
        .CE(1'b1),
        .D(sync1_r[3]),
        .PRE(\sync1_r_reg[0]_0 ),
        .Q(sync1_r[4]));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_ff_synchronizer_rst" *) 
module ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_ff_synchronizer_rst_15
   (rxreset_rxusrclk2,
    data_out_reg_0,
    AS);
  output rxreset_rxusrclk2;
  input data_out_reg_0;
  input [0:0]AS;

  wire [0:0]AS;
  wire data_out_reg_0;
  wire rxreset_rxusrclk2;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire [4:0]sync1_r;

  FDRE #(
    .INIT(1'b0)) 
    data_out_reg
       (.C(data_out_reg_0),
        .CE(1'b1),
        .D(sync1_r[4]),
        .Q(rxreset_rxusrclk2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[0] 
       (.C(data_out_reg_0),
        .CE(1'b1),
        .D(1'b0),
        .PRE(AS),
        .Q(sync1_r[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[1] 
       (.C(data_out_reg_0),
        .CE(1'b1),
        .D(sync1_r[0]),
        .PRE(AS),
        .Q(sync1_r[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[2] 
       (.C(data_out_reg_0),
        .CE(1'b1),
        .D(sync1_r[1]),
        .PRE(AS),
        .Q(sync1_r[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[3] 
       (.C(data_out_reg_0),
        .CE(1'b1),
        .D(sync1_r[2]),
        .PRE(AS),
        .Q(sync1_r[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[4] 
       (.C(data_out_reg_0),
        .CE(1'b1),
        .D(sync1_r[3]),
        .PRE(AS),
        .Q(sync1_r[4]));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_ff_synchronizer_rst" *) 
module ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_ff_synchronizer_rst_19
   (cable_pull_reset_rising_rxusrclk2,
    data_out_reg_0,
    cable_pull_reset_reg,
    CLK,
    cable_pull_watchdog_event,
    \cable_pull_watchdog_reg[0] ,
    gt0_rxresetdone_i_reg_rxusrclk2,
    cable_pull_reset,
    cable_pull_watchdog_event0,
    cable_pull_reset_reg_0,
    cable_pull_reset_reg_1,
    cable_pull_reset_reg_2,
    AS);
  output cable_pull_reset_rising_rxusrclk2;
  output data_out_reg_0;
  output cable_pull_reset_reg;
  input CLK;
  input [1:0]cable_pull_watchdog_event;
  input \cable_pull_watchdog_reg[0] ;
  input gt0_rxresetdone_i_reg_rxusrclk2;
  input cable_pull_reset;
  input cable_pull_watchdog_event0;
  input cable_pull_reset_reg_0;
  input cable_pull_reset_reg_1;
  input cable_pull_reset_reg_2;
  input [0:0]AS;

  wire [0:0]AS;
  wire CLK;
  wire cable_pull_reset;
  wire cable_pull_reset_reg;
  wire cable_pull_reset_reg_0;
  wire cable_pull_reset_reg_1;
  wire cable_pull_reset_reg_2;
  wire cable_pull_reset_rising_rxusrclk2;
  wire [1:0]cable_pull_watchdog_event;
  wire cable_pull_watchdog_event0;
  wire \cable_pull_watchdog_reg[0] ;
  wire data_out_reg_0;
  wire gt0_rxresetdone_i_reg_rxusrclk2;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire [4:0]sync1_r;

  LUT6 #(
    .INIT(64'h000000002222222E)) 
    cable_pull_reset_i_1
       (.I0(cable_pull_reset),
        .I1(cable_pull_watchdog_event0),
        .I2(cable_pull_reset_reg_0),
        .I3(cable_pull_reset_reg_1),
        .I4(cable_pull_reset_reg_2),
        .I5(cable_pull_reset_rising_rxusrclk2),
        .O(cable_pull_reset_reg));
  LUT6 #(
    .INIT(64'hAAAAAAAAAAAEAAAA)) 
    \cable_pull_watchdog[0]_i_1 
       (.I0(cable_pull_reset_rising_rxusrclk2),
        .I1(cable_pull_watchdog_event[1]),
        .I2(cable_pull_watchdog_event[0]),
        .I3(\cable_pull_watchdog_reg[0] ),
        .I4(gt0_rxresetdone_i_reg_rxusrclk2),
        .I5(cable_pull_reset),
        .O(data_out_reg_0));
  FDRE #(
    .INIT(1'b0)) 
    data_out_reg
       (.C(CLK),
        .CE(1'b1),
        .D(sync1_r[4]),
        .Q(cable_pull_reset_rising_rxusrclk2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(1'b0),
        .PRE(AS),
        .Q(sync1_r[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(sync1_r[0]),
        .PRE(AS),
        .Q(sync1_r[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .D(sync1_r[1]),
        .PRE(AS),
        .Q(sync1_r[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[3] 
       (.C(CLK),
        .CE(1'b1),
        .D(sync1_r[2]),
        .PRE(AS),
        .Q(sync1_r[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[4] 
       (.C(CLK),
        .CE(1'b1),
        .D(sync1_r[3]),
        .PRE(AS),
        .Q(sync1_r[4]));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_ff_synchronizer_rst" *) 
module ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_ff_synchronizer_rst_21
   (data_out_reg_0,
    SR,
    cable_unpull_reset_reg,
    CLK,
    \cable_unpull_watchdog_reg[0] ,
    Q,
    cable_unpull_reset_reg_0,
    gt0_rxresetdone_i_reg_rxusrclk2,
    \cable_unpull_watchdog_reg[0]_0 ,
    AS);
  output data_out_reg_0;
  output [0:0]SR;
  output cable_unpull_reset_reg;
  input CLK;
  input \cable_unpull_watchdog_reg[0] ;
  input [0:0]Q;
  input cable_unpull_reset_reg_0;
  input gt0_rxresetdone_i_reg_rxusrclk2;
  input \cable_unpull_watchdog_reg[0]_0 ;
  input [0:0]AS;

  wire [0:0]AS;
  wire CLK;
  wire [0:0]Q;
  wire [0:0]SR;
  wire cable_unpull_reset_reg;
  wire cable_unpull_reset_reg_0;
  wire cable_unpull_reset_rising_rxusrclk2;
  wire \cable_unpull_watchdog_reg[0] ;
  wire \cable_unpull_watchdog_reg[0]_0 ;
  wire data_out_reg_0;
  wire gt0_rxresetdone_i_reg_rxusrclk2;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire [4:0]sync1_r;

  LUT5 #(
    .INIT(32'h0000EAAA)) 
    cable_unpull_reset_i_1
       (.I0(\cable_unpull_watchdog_reg[0]_0 ),
        .I1(gt0_rxresetdone_i_reg_rxusrclk2),
        .I2(cable_unpull_reset_reg_0),
        .I3(Q),
        .I4(cable_unpull_reset_rising_rxusrclk2),
        .O(cable_unpull_reset_reg));
  LUT6 #(
    .INIT(64'hAAAAAAAAFEAAAAAA)) 
    \cable_unpull_watchdog[0]_i_1 
       (.I0(cable_unpull_reset_rising_rxusrclk2),
        .I1(\cable_unpull_watchdog_reg[0] ),
        .I2(Q),
        .I3(cable_unpull_reset_reg_0),
        .I4(gt0_rxresetdone_i_reg_rxusrclk2),
        .I5(\cable_unpull_watchdog_reg[0]_0 ),
        .O(data_out_reg_0));
  LUT5 #(
    .INIT(32'hAAAAEAAA)) 
    \cable_unpull_watchdog_event[10]_i_1 
       (.I0(cable_unpull_reset_rising_rxusrclk2),
        .I1(\cable_unpull_watchdog_reg[0] ),
        .I2(cable_unpull_reset_reg_0),
        .I3(gt0_rxresetdone_i_reg_rxusrclk2),
        .I4(\cable_unpull_watchdog_reg[0]_0 ),
        .O(SR));
  FDRE #(
    .INIT(1'b0)) 
    data_out_reg
       (.C(CLK),
        .CE(1'b1),
        .D(sync1_r[4]),
        .Q(cable_unpull_reset_rising_rxusrclk2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(1'b0),
        .PRE(AS),
        .Q(sync1_r[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(sync1_r[0]),
        .PRE(AS),
        .Q(sync1_r[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .D(sync1_r[1]),
        .PRE(AS),
        .Q(sync1_r[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[3] 
       (.C(CLK),
        .CE(1'b1),
        .D(sync1_r[2]),
        .PRE(AS),
        .Q(sync1_r[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[4] 
       (.C(CLK),
        .CE(1'b1),
        .D(sync1_r[3]),
        .PRE(AS),
        .Q(sync1_r[4]));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_ff_synchronizer_rst" *) 
module ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_ff_synchronizer_rst_7
   (areset_rxusrclk2,
    data_out_reg_0,
    areset);
  output areset_rxusrclk2;
  input data_out_reg_0;
  input areset;

  wire areset;
  wire areset_rxusrclk2;
  wire data_out_reg_0;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire [4:0]sync1_r;

  FDRE #(
    .INIT(1'b0)) 
    data_out_reg
       (.C(data_out_reg_0),
        .CE(1'b1),
        .D(sync1_r[4]),
        .Q(areset_rxusrclk2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[0] 
       (.C(data_out_reg_0),
        .CE(1'b1),
        .D(1'b0),
        .PRE(areset),
        .Q(sync1_r[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[1] 
       (.C(data_out_reg_0),
        .CE(1'b1),
        .D(sync1_r[0]),
        .PRE(areset),
        .Q(sync1_r[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[2] 
       (.C(data_out_reg_0),
        .CE(1'b1),
        .D(sync1_r[1]),
        .PRE(areset),
        .Q(sync1_r[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[3] 
       (.C(data_out_reg_0),
        .CE(1'b1),
        .D(sync1_r[2]),
        .PRE(areset),
        .Q(sync1_r[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[4] 
       (.C(data_out_reg_0),
        .CE(1'b1),
        .D(sync1_r[3]),
        .PRE(areset),
        .Q(sync1_r[4]));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_ff_synchronizer_rst" *) 
module ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_ff_synchronizer_rst_8
   (AS,
    data_out_reg_0,
    coreclk,
    tx_resetdone,
    D,
    signal_detect_coreclk,
    areset);
  output [0:0]AS;
  output [0:0]data_out_reg_0;
  input coreclk;
  input tx_resetdone;
  input [0:0]D;
  input signal_detect_coreclk;
  input areset;

  wire [0:0]AS;
  wire [0:0]D;
  wire areset;
  wire coreclk;
  wire coreclk_areset;
  wire [0:0]data_out_reg_0;
  wire signal_detect_coreclk;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire [4:0]sync1_r;
  wire tx_resetdone;

  FDRE #(
    .INIT(1'b0)) 
    data_out_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(sync1_r[4]),
        .Q(coreclk_areset),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair305" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \sync1_r[4]_i_1 
       (.I0(coreclk_areset),
        .I1(tx_resetdone),
        .O(AS));
  (* SOFT_HLUTNM = "soft_lutpair305" *) 
  LUT3 #(
    .INIT(8'hDF)) 
    \sync1_r[4]_i_1__0 
       (.I0(D),
        .I1(coreclk_areset),
        .I2(signal_detect_coreclk),
        .O(data_out_reg_0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(areset),
        .Q(sync1_r[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[1] 
       (.C(coreclk),
        .CE(1'b1),
        .D(sync1_r[0]),
        .PRE(areset),
        .Q(sync1_r[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[2] 
       (.C(coreclk),
        .CE(1'b1),
        .D(sync1_r[1]),
        .PRE(areset),
        .Q(sync1_r[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[3] 
       (.C(coreclk),
        .CE(1'b1),
        .D(sync1_r[2]),
        .PRE(areset),
        .Q(sync1_r[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[4] 
       (.C(coreclk),
        .CE(1'b1),
        .D(sync1_r[3]),
        .PRE(areset),
        .Q(sync1_r[4]));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_ff_synchronizer_rst" *) 
module ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_ff_synchronizer_rst_9
   (AS,
    coreclk,
    \sync1_r_reg[4]_0 );
  output [0:0]AS;
  input coreclk;
  input [0:0]\sync1_r_reg[4]_0 ;

  wire [0:0]AS;
  wire coreclk;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire [4:0]sync1_r;
  wire [0:0]\sync1_r_reg[4]_0 ;

  FDRE #(
    .INIT(1'b0)) 
    data_out_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(sync1_r[4]),
        .Q(AS),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(\sync1_r_reg[4]_0 ),
        .Q(sync1_r[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[1] 
       (.C(coreclk),
        .CE(1'b1),
        .D(sync1_r[0]),
        .PRE(\sync1_r_reg[4]_0 ),
        .Q(sync1_r[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[2] 
       (.C(coreclk),
        .CE(1'b1),
        .D(sync1_r[1]),
        .PRE(\sync1_r_reg[4]_0 ),
        .Q(sync1_r[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[3] 
       (.C(coreclk),
        .CE(1'b1),
        .D(sync1_r[2]),
        .PRE(\sync1_r_reg[4]_0 ),
        .Q(sync1_r[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[4] 
       (.C(coreclk),
        .CE(1'b1),
        .D(sync1_r[3]),
        .PRE(\sync1_r_reg[4]_0 ),
        .Q(sync1_r[4]));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_ff_synchronizer_rst" *) 
module ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_ff_synchronizer_rst__parameterized0
   (txreset_txusrclk2,
    txusrclk2,
    AS);
  output txreset_txusrclk2;
  input txusrclk2;
  input [0:0]AS;

  wire [0:0]AS;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire [6:0]sync1_r;
  wire txreset_txusrclk2;
  wire txusrclk2;

  FDRE #(
    .INIT(1'b0)) 
    data_out_reg
       (.C(txusrclk2),
        .CE(1'b1),
        .D(sync1_r[6]),
        .Q(txreset_txusrclk2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[0] 
       (.C(txusrclk2),
        .CE(1'b1),
        .D(1'b0),
        .PRE(AS),
        .Q(sync1_r[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[1] 
       (.C(txusrclk2),
        .CE(1'b1),
        .D(sync1_r[0]),
        .PRE(AS),
        .Q(sync1_r[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[2] 
       (.C(txusrclk2),
        .CE(1'b1),
        .D(sync1_r[1]),
        .PRE(AS),
        .Q(sync1_r[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[3] 
       (.C(txusrclk2),
        .CE(1'b1),
        .D(sync1_r[2]),
        .PRE(AS),
        .Q(sync1_r[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[4] 
       (.C(txusrclk2),
        .CE(1'b1),
        .D(sync1_r[3]),
        .PRE(AS),
        .Q(sync1_r[4]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[5] 
       (.C(txusrclk2),
        .CE(1'b1),
        .D(sync1_r[4]),
        .PRE(AS),
        .Q(sync1_r[5]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[6] 
       (.C(txusrclk2),
        .CE(1'b1),
        .D(sync1_r[5]),
        .PRE(AS),
        .Q(sync1_r[6]));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_ff_synchronizer_rst" *) 
module ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_ff_synchronizer_rst__parameterized1
   (cable_pull_falling_reg,
    gt0_gttxreset_c,
    coreclk,
    cable_pull_falling,
    AS,
    cable_pull_rising,
    cable_unpull_reset_rising_reg,
    gttxreset,
    reset_counter_done,
    AR);
  output cable_pull_falling_reg;
  output gt0_gttxreset_c;
  input coreclk;
  input cable_pull_falling;
  input [0:0]AS;
  input cable_pull_rising;
  input cable_unpull_reset_rising_reg;
  input gttxreset;
  input reset_counter_done;
  input [0:0]AR;

  wire [0:0]AR;
  wire [0:0]AS;
  wire cable_pull_falling;
  wire cable_pull_falling_reg;
  wire cable_pull_rising;
  wire cable_unpull_reset_rising_reg;
  wire coreclk;
  wire gt0_gttxreset_c;
  wire gttxreset;
  wire qplllock_coreclk;
  wire reset_counter_done;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire [4:0]sync1_r;

  FDRE #(
    .INIT(1'b0)) 
    data_out_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(sync1_r[4]),
        .Q(qplllock_coreclk),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hFFFFFFEF)) 
    gt0_gtrxreset_i_i_2
       (.I0(cable_pull_falling),
        .I1(AS),
        .I2(qplllock_coreclk),
        .I3(cable_pull_rising),
        .I4(cable_unpull_reset_rising_reg),
        .O(cable_pull_falling_reg));
  LUT4 #(
    .INIT(16'hEF00)) 
    gt0_gttxreset_i_i_1
       (.I0(gttxreset),
        .I1(AS),
        .I2(qplllock_coreclk),
        .I3(reset_counter_done),
        .O(gt0_gttxreset_c));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \sync1_r_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .CLR(AR),
        .D(1'b1),
        .Q(sync1_r[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \sync1_r_reg[1] 
       (.C(coreclk),
        .CE(1'b1),
        .CLR(AR),
        .D(sync1_r[0]),
        .Q(sync1_r[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \sync1_r_reg[2] 
       (.C(coreclk),
        .CE(1'b1),
        .CLR(AR),
        .D(sync1_r[1]),
        .Q(sync1_r[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \sync1_r_reg[3] 
       (.C(coreclk),
        .CE(1'b1),
        .CLR(AR),
        .D(sync1_r[2]),
        .Q(sync1_r[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \sync1_r_reg[4] 
       (.C(coreclk),
        .CE(1'b1),
        .CLR(AR),
        .D(sync1_r[3]),
        .Q(sync1_r[4]));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_ff_synchronizer_rst" *) 
module ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_ff_synchronizer_rst__parameterized1_3
   (qplllock_rxusrclk2,
    AR,
    CLK,
    qplllock);
  output qplllock_rxusrclk2;
  output [0:0]AR;
  input CLK;
  input qplllock;

  wire [0:0]AR;
  wire CLK;
  wire qplllock;
  wire qplllock_rxusrclk2;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire [4:0]sync1_r;

  FDRE #(
    .INIT(1'b0)) 
    data_out_reg
       (.C(CLK),
        .CE(1'b1),
        .D(sync1_r[4]),
        .Q(qplllock_rxusrclk2),
        .R(1'b0));
  LUT1 #(
    .INIT(2'h1)) 
    \sync1_r[4]_i_1__1 
       (.I0(qplllock),
        .O(AR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \sync1_r_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .CLR(AR),
        .D(1'b1),
        .Q(sync1_r[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \sync1_r_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .CLR(AR),
        .D(sync1_r[0]),
        .Q(sync1_r[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \sync1_r_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .CLR(AR),
        .D(sync1_r[1]),
        .Q(sync1_r[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \sync1_r_reg[3] 
       (.C(CLK),
        .CE(1'b1),
        .CLR(AR),
        .D(sync1_r[2]),
        .Q(sync1_r[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \sync1_r_reg[4] 
       (.C(CLK),
        .CE(1'b1),
        .CLR(AR),
        .D(sync1_r[3]),
        .Q(sync1_r[4]));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_ff_synchronizer_rst" *) 
module ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_ff_synchronizer_rst__parameterized1_4
   (qplllock_txusrclk2,
    txusrclk2,
    AR);
  output qplllock_txusrclk2;
  input txusrclk2;
  input [0:0]AR;

  wire [0:0]AR;
  wire qplllock_txusrclk2;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire [4:0]sync1_r;
  wire txusrclk2;

  FDRE #(
    .INIT(1'b0)) 
    data_out_reg
       (.C(txusrclk2),
        .CE(1'b1),
        .D(sync1_r[4]),
        .Q(qplllock_txusrclk2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \sync1_r_reg[0] 
       (.C(txusrclk2),
        .CE(1'b1),
        .CLR(AR),
        .D(1'b1),
        .Q(sync1_r[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \sync1_r_reg[1] 
       (.C(txusrclk2),
        .CE(1'b1),
        .CLR(AR),
        .D(sync1_r[0]),
        .Q(sync1_r[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \sync1_r_reg[2] 
       (.C(txusrclk2),
        .CE(1'b1),
        .CLR(AR),
        .D(sync1_r[1]),
        .Q(sync1_r[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \sync1_r_reg[3] 
       (.C(txusrclk2),
        .CE(1'b1),
        .CLR(AR),
        .D(sync1_r[2]),
        .Q(sync1_r[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \sync1_r_reg[4] 
       (.C(txusrclk2),
        .CE(1'b1),
        .CLR(AR),
        .D(sync1_r[3]),
        .Q(sync1_r[4]));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_gtwizard_10gbaser_GT" *) 
module ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_gtwizard_10gbaser_GT
   (drp_drdy_o,
    txn,
    txp,
    D,
    rxrecclk_out,
    txoutclk,
    drp_drpdo_o,
    dclk_0,
    gt0_rxbufreset_i0,
    gt0_rxresetdone_reg_reg0,
    gt0_txresetdone_reg0,
    dclk,
    drp_den_i,
    drp_dwe_i,
    AS,
    gt0_gttxreset_i,
    rxn,
    rxp,
    qplloutclk,
    qplloutrefclk,
    gt0_rxbufreset_i,
    gt_slip,
    pcs_resetout_rising,
    clear_rx_prbs_err_count,
    gt0_rxuserrdy_i,
    CLK,
    tx_disable,
    txuserrdy,
    txusrclk,
    txusrclk2,
    drp_di_i,
    loopback_ctrl,
    rx_prbs31_en,
    gt_txc,
    tx_prbs31_en,
    gt_txd,
    drp_daddr_i,
    gt0_rxresetdone_i_reg_rxusrclk2,
    qplllock_rxusrclk2,
    qplllock_txusrclk2);
  output drp_drdy_o;
  output txn;
  output txp;
  output [3:0]D;
  output rxrecclk_out;
  output txoutclk;
  output [15:0]drp_drpdo_o;
  output [31:0]dclk_0;
  output gt0_rxbufreset_i0;
  output gt0_rxresetdone_reg_reg0;
  output gt0_txresetdone_reg0;
  input dclk;
  input drp_den_i;
  input drp_dwe_i;
  input [0:0]AS;
  input gt0_gttxreset_i;
  input rxn;
  input rxp;
  input qplloutclk;
  input qplloutrefclk;
  input gt0_rxbufreset_i;
  input gt_slip;
  input pcs_resetout_rising;
  input clear_rx_prbs_err_count;
  input gt0_rxuserrdy_i;
  input CLK;
  input tx_disable;
  input txuserrdy;
  input txusrclk;
  input txusrclk2;
  input [15:0]drp_di_i;
  input [0:0]loopback_ctrl;
  input rx_prbs31_en;
  input [7:0]gt_txc;
  input tx_prbs31_en;
  input [31:0]gt_txd;
  input [8:0]drp_daddr_i;
  input gt0_rxresetdone_i_reg_rxusrclk2;
  input qplllock_rxusrclk2;
  input qplllock_txusrclk2;

  wire [0:0]AS;
  wire CLK;
  wire [3:0]D;
  wire clear_rx_prbs_err_count;
  wire dclk;
  wire [31:0]dclk_0;
  wire [8:0]drp_daddr_i;
  wire drp_den_i;
  wire [15:0]drp_di_i;
  wire drp_drdy_o;
  wire [15:0]drp_drpdo_o;
  wire drp_dwe_i;
  wire gt0_gttxreset_i;
  wire gt0_rxbufreset_i;
  wire gt0_rxbufreset_i0;
  wire [2:2]gt0_rxbufstatus_i;
  wire gt0_rxresetdone_i;
  wire gt0_rxresetdone_i_reg_rxusrclk2;
  wire gt0_rxresetdone_reg_reg0;
  wire gt0_rxuserrdy_i;
  wire gt0_txresetdone_i;
  wire gt0_txresetdone_reg0;
  wire gt_slip;
  wire [7:0]gt_txc;
  wire [31:0]gt_txd;
  wire gtxe2_i_n_177;
  wire gtxe2_i_n_178;
  wire gtxe2_i_n_179;
  wire gtxe2_i_n_180;
  wire gtxe2_i_n_181;
  wire gtxe2_i_n_182;
  wire gtxe2_i_n_183;
  wire gtxe2_i_n_184;
  wire gtxe2_i_n_27;
  wire gtxe2_i_n_38;
  wire gtxe2_i_n_39;
  wire gtxe2_i_n_4;
  wire gtxe2_i_n_80;
  wire gtxe2_i_n_81;
  wire gtxe2_i_n_83;
  wire gtxe2_i_n_84;
  wire [0:0]loopback_ctrl;
  wire pcs_resetout_rising;
  wire qplllock_rxusrclk2;
  wire qplllock_txusrclk2;
  wire qplloutclk;
  wire qplloutrefclk;
  wire rx_prbs31_en;
  wire rxn;
  wire rxp;
  wire rxrecclk_out;
  wire tx_disable;
  wire tx_prbs31_en;
  wire txn;
  wire txoutclk;
  wire txp;
  wire txuserrdy;
  wire txusrclk;
  wire txusrclk2;
  wire NLW_gtxe2_i_CPLLFBCLKLOST_UNCONNECTED;
  wire NLW_gtxe2_i_CPLLLOCK_UNCONNECTED;
  wire NLW_gtxe2_i_CPLLREFCLKLOST_UNCONNECTED;
  wire NLW_gtxe2_i_GTREFCLKMONITOR_UNCONNECTED;
  wire NLW_gtxe2_i_PHYSTATUS_UNCONNECTED;
  wire NLW_gtxe2_i_RXBYTEISALIGNED_UNCONNECTED;
  wire NLW_gtxe2_i_RXBYTEREALIGN_UNCONNECTED;
  wire NLW_gtxe2_i_RXCDRLOCK_UNCONNECTED;
  wire NLW_gtxe2_i_RXCHANBONDSEQ_UNCONNECTED;
  wire NLW_gtxe2_i_RXCHANISALIGNED_UNCONNECTED;
  wire NLW_gtxe2_i_RXCHANREALIGN_UNCONNECTED;
  wire NLW_gtxe2_i_RXCOMINITDET_UNCONNECTED;
  wire NLW_gtxe2_i_RXCOMMADET_UNCONNECTED;
  wire NLW_gtxe2_i_RXCOMSASDET_UNCONNECTED;
  wire NLW_gtxe2_i_RXCOMWAKEDET_UNCONNECTED;
  wire NLW_gtxe2_i_RXDLYSRESETDONE_UNCONNECTED;
  wire NLW_gtxe2_i_RXELECIDLE_UNCONNECTED;
  wire NLW_gtxe2_i_RXOUTCLKFABRIC_UNCONNECTED;
  wire NLW_gtxe2_i_RXOUTCLKPCS_UNCONNECTED;
  wire NLW_gtxe2_i_RXPHALIGNDONE_UNCONNECTED;
  wire NLW_gtxe2_i_RXQPISENN_UNCONNECTED;
  wire NLW_gtxe2_i_RXQPISENP_UNCONNECTED;
  wire NLW_gtxe2_i_RXRATEDONE_UNCONNECTED;
  wire NLW_gtxe2_i_RXSTARTOFSEQ_UNCONNECTED;
  wire NLW_gtxe2_i_RXVALID_UNCONNECTED;
  wire NLW_gtxe2_i_TXCOMFINISH_UNCONNECTED;
  wire NLW_gtxe2_i_TXDLYSRESETDONE_UNCONNECTED;
  wire NLW_gtxe2_i_TXGEARBOXREADY_UNCONNECTED;
  wire NLW_gtxe2_i_TXPHALIGNDONE_UNCONNECTED;
  wire NLW_gtxe2_i_TXPHINITDONE_UNCONNECTED;
  wire NLW_gtxe2_i_TXQPISENN_UNCONNECTED;
  wire NLW_gtxe2_i_TXQPISENP_UNCONNECTED;
  wire NLW_gtxe2_i_TXRATEDONE_UNCONNECTED;
  wire [15:0]NLW_gtxe2_i_PCSRSVDOUT_UNCONNECTED;
  wire [7:0]NLW_gtxe2_i_RXCHARISCOMMA_UNCONNECTED;
  wire [7:0]NLW_gtxe2_i_RXCHARISK_UNCONNECTED;
  wire [4:0]NLW_gtxe2_i_RXCHBONDO_UNCONNECTED;
  wire [1:0]NLW_gtxe2_i_RXCLKCORCNT_UNCONNECTED;
  wire [63:32]NLW_gtxe2_i_RXDATA_UNCONNECTED;
  wire [7:0]NLW_gtxe2_i_RXDISPERR_UNCONNECTED;
  wire [2:2]NLW_gtxe2_i_RXHEADER_UNCONNECTED;
  wire [6:0]NLW_gtxe2_i_RXMONITOROUT_UNCONNECTED;
  wire [7:0]NLW_gtxe2_i_RXNOTINTABLE_UNCONNECTED;
  wire [4:0]NLW_gtxe2_i_RXPHMONITOR_UNCONNECTED;
  wire [4:0]NLW_gtxe2_i_RXPHSLIPMONITOR_UNCONNECTED;
  wire [2:0]NLW_gtxe2_i_RXSTATUS_UNCONNECTED;
  wire [9:0]NLW_gtxe2_i_TSTOUT_UNCONNECTED;

  LUT2 #(
    .INIT(4'h8)) 
    gt0_rxbufreset_i_i_1
       (.I0(gt0_rxbufstatus_i),
        .I1(gt0_rxresetdone_i_reg_rxusrclk2),
        .O(gt0_rxbufreset_i0));
  LUT2 #(
    .INIT(4'h8)) 
    gt0_rxresetdone_reg_i_1
       (.I0(gt0_rxresetdone_i),
        .I1(qplllock_rxusrclk2),
        .O(gt0_rxresetdone_reg_reg0));
  LUT2 #(
    .INIT(4'h8)) 
    gt0_txresetdone_reg_i_1
       (.I0(gt0_txresetdone_i),
        .I1(qplllock_txusrclk2),
        .O(gt0_txresetdone_reg0));
  (* BOX_TYPE = "PRIMITIVE" *) 
  GTXE2_CHANNEL #(
    .ALIGN_COMMA_DOUBLE("FALSE"),
    .ALIGN_COMMA_ENABLE(10'b0001111111),
    .ALIGN_COMMA_WORD(1),
    .ALIGN_MCOMMA_DET("FALSE"),
    .ALIGN_MCOMMA_VALUE(10'b1010000011),
    .ALIGN_PCOMMA_DET("FALSE"),
    .ALIGN_PCOMMA_VALUE(10'b0101111100),
    .CBCC_DATA_SOURCE_SEL("DECODED"),
    .CHAN_BOND_KEEP_ALIGN("FALSE"),
    .CHAN_BOND_MAX_SKEW(1),
    .CHAN_BOND_SEQ_1_1(10'b0000000000),
    .CHAN_BOND_SEQ_1_2(10'b0000000000),
    .CHAN_BOND_SEQ_1_3(10'b0000000000),
    .CHAN_BOND_SEQ_1_4(10'b0000000000),
    .CHAN_BOND_SEQ_1_ENABLE(4'b1111),
    .CHAN_BOND_SEQ_2_1(10'b0000000000),
    .CHAN_BOND_SEQ_2_2(10'b0000000000),
    .CHAN_BOND_SEQ_2_3(10'b0000000000),
    .CHAN_BOND_SEQ_2_4(10'b0000000000),
    .CHAN_BOND_SEQ_2_ENABLE(4'b1111),
    .CHAN_BOND_SEQ_2_USE("FALSE"),
    .CHAN_BOND_SEQ_LEN(1),
    .CLK_CORRECT_USE("FALSE"),
    .CLK_COR_KEEP_IDLE("FALSE"),
    .CLK_COR_MAX_LAT(19),
    .CLK_COR_MIN_LAT(15),
    .CLK_COR_PRECEDENCE("TRUE"),
    .CLK_COR_REPEAT_WAIT(0),
    .CLK_COR_SEQ_1_1(10'b0000000000),
    .CLK_COR_SEQ_1_2(10'b0000000000),
    .CLK_COR_SEQ_1_3(10'b0000000000),
    .CLK_COR_SEQ_1_4(10'b0000000000),
    .CLK_COR_SEQ_1_ENABLE(4'b1111),
    .CLK_COR_SEQ_2_1(10'b0000000000),
    .CLK_COR_SEQ_2_2(10'b0000000000),
    .CLK_COR_SEQ_2_3(10'b0000000000),
    .CLK_COR_SEQ_2_4(10'b0000000000),
    .CLK_COR_SEQ_2_ENABLE(4'b1111),
    .CLK_COR_SEQ_2_USE("FALSE"),
    .CLK_COR_SEQ_LEN(1),
    .CPLL_CFG(24'hBC07DC),
    .CPLL_FBDIV(4),
    .CPLL_FBDIV_45(5),
    .CPLL_INIT_CFG(24'h00001E),
    .CPLL_LOCK_CFG(16'h01E8),
    .CPLL_REFCLK_DIV(1),
    .DEC_MCOMMA_DETECT("FALSE"),
    .DEC_PCOMMA_DETECT("FALSE"),
    .DEC_VALID_COMMA_ONLY("FALSE"),
    .DMONITOR_CFG(24'h000A00),
    .ES_CONTROL(6'b000000),
    .ES_ERRDET_EN("FALSE"),
    .ES_EYE_SCAN_EN("TRUE"),
    .ES_HORZ_OFFSET(12'h000),
    .ES_PMA_CFG(10'b0000000000),
    .ES_PRESCALE(5'b00000),
    .ES_QUALIFIER(80'h00000000000000000000),
    .ES_QUAL_MASK(80'h00000000000000000000),
    .ES_SDATA_MASK(80'h00000000000000000000),
    .ES_VERT_OFFSET(9'b000000000),
    .FTS_DESKEW_SEQ_ENABLE(4'b1111),
    .FTS_LANE_DESKEW_CFG(4'b1111),
    .FTS_LANE_DESKEW_EN("FALSE"),
    .GEARBOX_MODE(3'b001),
    .IS_CPLLLOCKDETCLK_INVERTED(1'b0),
    .IS_DRPCLK_INVERTED(1'b0),
    .IS_GTGREFCLK_INVERTED(1'b0),
    .IS_RXUSRCLK2_INVERTED(1'b0),
    .IS_RXUSRCLK_INVERTED(1'b0),
    .IS_TXPHDLYTSTCLK_INVERTED(1'b0),
    .IS_TXUSRCLK2_INVERTED(1'b0),
    .IS_TXUSRCLK_INVERTED(1'b0),
    .OUTREFCLK_SEL_INV(2'b11),
    .PCS_PCIE_EN("FALSE"),
    .PCS_RSVD_ATTR(48'h000000000000),
    .PD_TRANS_TIME_FROM_P2(12'h03C),
    .PD_TRANS_TIME_NONE_P2(8'h19),
    .PD_TRANS_TIME_TO_P2(8'h64),
    .PMA_RSV(32'h001E7080),
    .PMA_RSV2(16'h2050),
    .PMA_RSV3(2'b00),
    .PMA_RSV4(32'h00000000),
    .RXBUFRESET_TIME(5'b00001),
    .RXBUF_ADDR_MODE("FAST"),
    .RXBUF_EIDLE_HI_CNT(4'b1000),
    .RXBUF_EIDLE_LO_CNT(4'b0000),
    .RXBUF_EN("TRUE"),
    .RXBUF_RESET_ON_CB_CHANGE("TRUE"),
    .RXBUF_RESET_ON_COMMAALIGN("FALSE"),
    .RXBUF_RESET_ON_EIDLE("FALSE"),
    .RXBUF_RESET_ON_RATE_CHANGE("TRUE"),
    .RXBUF_THRESH_OVFLW(61),
    .RXBUF_THRESH_OVRD("FALSE"),
    .RXBUF_THRESH_UNDFLW(4),
    .RXCDRFREQRESET_TIME(5'b00001),
    .RXCDRPHRESET_TIME(5'b00001),
    .RXCDR_CFG(72'h0B000023FF10400020),
    .RXCDR_FR_RESET_ON_EIDLE(1'b0),
    .RXCDR_HOLD_DURING_EIDLE(1'b0),
    .RXCDR_LOCK_CFG(6'b010101),
    .RXCDR_PH_RESET_ON_EIDLE(1'b0),
    .RXDFELPMRESET_TIME(7'b0001111),
    .RXDLY_CFG(16'h001F),
    .RXDLY_LCFG(9'h030),
    .RXDLY_TAP_CFG(16'h0000),
    .RXGEARBOX_EN("TRUE"),
    .RXISCANRESET_TIME(5'b00001),
    .RXLPM_HF_CFG(14'b00000011110000),
    .RXLPM_LF_CFG(14'b00000011110000),
    .RXOOB_CFG(7'b0000110),
    .RXOUT_DIV(1),
    .RXPCSRESET_TIME(5'b00001),
    .RXPHDLY_CFG(24'h084020),
    .RXPH_CFG(24'h000000),
    .RXPH_MONITOR_SEL(5'b00000),
    .RXPMARESET_TIME(5'b00011),
    .RXPRBS_ERR_LOOPBACK(1'b0),
    .RXSLIDE_AUTO_WAIT(7),
    .RXSLIDE_MODE("OFF"),
    .RX_BIAS_CFG(12'b000000000100),
    .RX_BUFFER_CFG(6'b000000),
    .RX_CLK25_DIV(7),
    .RX_CLKMUX_PD(1'b1),
    .RX_CM_SEL(2'b11),
    .RX_CM_TRIM(3'b010),
    .RX_DATA_WIDTH(32),
    .RX_DDI_SEL(6'b000000),
    .RX_DEBUG_CFG(12'b000000000000),
    .RX_DEFER_RESET_BUF_EN("TRUE"),
    .RX_DFE_GAIN_CFG(23'h020FEA),
    .RX_DFE_H2_CFG(12'b000000000000),
    .RX_DFE_H3_CFG(12'b000001000000),
    .RX_DFE_H4_CFG(11'b00011110000),
    .RX_DFE_H5_CFG(11'b00011100000),
    .RX_DFE_KL_CFG(13'b0000011111110),
    .RX_DFE_KL_CFG2(32'h301148AC),
    .RX_DFE_LPM_CFG(16'h0954),
    .RX_DFE_LPM_HOLD_DURING_EIDLE(1'b0),
    .RX_DFE_UT_CFG(17'b10001111000000000),
    .RX_DFE_VP_CFG(17'b00011111100000011),
    .RX_DFE_XYD_CFG(13'b0000000000000),
    .RX_DISPERR_SEQ_MATCH("TRUE"),
    .RX_INT_DATAWIDTH(1),
    .RX_OS_CFG(13'b0000010000000),
    .RX_SIG_VALID_DLY(10),
    .RX_XCLK_SEL("RXREC"),
    .SAS_MAX_COM(64),
    .SAS_MIN_COM(36),
    .SATA_BURST_SEQ_LEN(4'b1111),
    .SATA_BURST_VAL(3'b100),
    .SATA_CPLL_CFG("VCO_3000MHZ"),
    .SATA_EIDLE_VAL(3'b100),
    .SATA_MAX_BURST(8),
    .SATA_MAX_INIT(21),
    .SATA_MAX_WAKE(7),
    .SATA_MIN_BURST(4),
    .SATA_MIN_INIT(12),
    .SATA_MIN_WAKE(4),
    .SHOW_REALIGN_COMMA("TRUE"),
    .SIM_CPLLREFCLK_SEL(3'b001),
    .SIM_RECEIVER_DETECT_PASS("TRUE"),
    .SIM_RESET_SPEEDUP("TRUE"),
    .SIM_TX_EIDLE_DRIVE_LEVEL("X"),
    .SIM_VERSION("4.0"),
    .TERM_RCAL_CFG(5'b10000),
    .TERM_RCAL_OVRD(1'b0),
    .TRANS_TIME_RATE(8'h0E),
    .TST_RSV(32'h00000000),
    .TXBUF_EN("TRUE"),
    .TXBUF_RESET_ON_RATE_CHANGE("TRUE"),
    .TXDLY_CFG(16'h001F),
    .TXDLY_LCFG(9'h030),
    .TXDLY_TAP_CFG(16'h0000),
    .TXGEARBOX_EN("TRUE"),
    .TXOUT_DIV(1),
    .TXPCSRESET_TIME(5'b00001),
    .TXPHDLY_CFG(24'h084020),
    .TXPH_CFG(16'h0780),
    .TXPH_MONITOR_SEL(5'b00000),
    .TXPMARESET_TIME(5'b00001),
    .TX_CLK25_DIV(7),
    .TX_CLKMUX_PD(1'b1),
    .TX_DATA_WIDTH(32),
    .TX_DEEMPH0(5'b00000),
    .TX_DEEMPH1(5'b00000),
    .TX_DRIVE_MODE("DIRECT"),
    .TX_EIDLE_ASSERT_DELAY(3'b110),
    .TX_EIDLE_DEASSERT_DELAY(3'b100),
    .TX_INT_DATAWIDTH(1),
    .TX_LOOPBACK_DRIVE_HIZ("FALSE"),
    .TX_MAINCURSOR_SEL(1'b0),
    .TX_MARGIN_FULL_0(7'b1001110),
    .TX_MARGIN_FULL_1(7'b1001001),
    .TX_MARGIN_FULL_2(7'b1000101),
    .TX_MARGIN_FULL_3(7'b1000010),
    .TX_MARGIN_FULL_4(7'b1000000),
    .TX_MARGIN_LOW_0(7'b1000110),
    .TX_MARGIN_LOW_1(7'b1000100),
    .TX_MARGIN_LOW_2(7'b1000010),
    .TX_MARGIN_LOW_3(7'b1000000),
    .TX_MARGIN_LOW_4(7'b1000000),
    .TX_PREDRIVER_MODE(1'b0),
    .TX_QPI_STATUS_EN(1'b0),
    .TX_RXDETECT_CFG(14'h1832),
    .TX_RXDETECT_REF(3'b100),
    .TX_XCLK_SEL("TXOUT"),
    .UCODEER_CLR(1'b0)) 
    gtxe2_i
       (.CFGRESET(1'b0),
        .CLKRSVD({1'b0,1'b0,1'b0,1'b0}),
        .CPLLFBCLKLOST(NLW_gtxe2_i_CPLLFBCLKLOST_UNCONNECTED),
        .CPLLLOCK(NLW_gtxe2_i_CPLLLOCK_UNCONNECTED),
        .CPLLLOCKDETCLK(1'b0),
        .CPLLLOCKEN(1'b1),
        .CPLLPD(1'b1),
        .CPLLREFCLKLOST(NLW_gtxe2_i_CPLLREFCLKLOST_UNCONNECTED),
        .CPLLREFCLKSEL({1'b0,1'b0,1'b1}),
        .CPLLRESET(1'b0),
        .DMONITOROUT({gtxe2_i_n_177,gtxe2_i_n_178,gtxe2_i_n_179,gtxe2_i_n_180,gtxe2_i_n_181,gtxe2_i_n_182,gtxe2_i_n_183,gtxe2_i_n_184}),
        .DRPADDR(drp_daddr_i),
        .DRPCLK(dclk),
        .DRPDI(drp_di_i),
        .DRPDO(drp_drpdo_o),
        .DRPEN(drp_den_i),
        .DRPRDY(drp_drdy_o),
        .DRPWE(drp_dwe_i),
        .EYESCANDATAERROR(gtxe2_i_n_4),
        .EYESCANMODE(1'b0),
        .EYESCANRESET(1'b0),
        .EYESCANTRIGGER(1'b0),
        .GTGREFCLK(1'b0),
        .GTNORTHREFCLK0(1'b0),
        .GTNORTHREFCLK1(1'b0),
        .GTREFCLK0(1'b0),
        .GTREFCLK1(1'b0),
        .GTREFCLKMONITOR(NLW_gtxe2_i_GTREFCLKMONITOR_UNCONNECTED),
        .GTRESETSEL(1'b0),
        .GTRSVD({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .GTRXRESET(AS),
        .GTSOUTHREFCLK0(1'b0),
        .GTSOUTHREFCLK1(1'b0),
        .GTTXRESET(gt0_gttxreset_i),
        .GTXRXN(rxn),
        .GTXRXP(rxp),
        .GTXTXN(txn),
        .GTXTXP(txp),
        .LOOPBACK({1'b0,loopback_ctrl,1'b0}),
        .PCSRSVDIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PCSRSVDIN2({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PCSRSVDOUT(NLW_gtxe2_i_PCSRSVDOUT_UNCONNECTED[15:0]),
        .PHYSTATUS(NLW_gtxe2_i_PHYSTATUS_UNCONNECTED),
        .PMARSVDIN({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PMARSVDIN2({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .QPLLCLK(qplloutclk),
        .QPLLREFCLK(qplloutrefclk),
        .RESETOVRD(1'b0),
        .RX8B10BEN(1'b0),
        .RXBUFRESET(gt0_rxbufreset_i),
        .RXBUFSTATUS({gt0_rxbufstatus_i,gtxe2_i_n_83,gtxe2_i_n_84}),
        .RXBYTEISALIGNED(NLW_gtxe2_i_RXBYTEISALIGNED_UNCONNECTED),
        .RXBYTEREALIGN(NLW_gtxe2_i_RXBYTEREALIGN_UNCONNECTED),
        .RXCDRFREQRESET(1'b0),
        .RXCDRHOLD(1'b0),
        .RXCDRLOCK(NLW_gtxe2_i_RXCDRLOCK_UNCONNECTED),
        .RXCDROVRDEN(1'b0),
        .RXCDRRESET(1'b0),
        .RXCDRRESETRSV(1'b0),
        .RXCHANBONDSEQ(NLW_gtxe2_i_RXCHANBONDSEQ_UNCONNECTED),
        .RXCHANISALIGNED(NLW_gtxe2_i_RXCHANISALIGNED_UNCONNECTED),
        .RXCHANREALIGN(NLW_gtxe2_i_RXCHANREALIGN_UNCONNECTED),
        .RXCHARISCOMMA(NLW_gtxe2_i_RXCHARISCOMMA_UNCONNECTED[7:0]),
        .RXCHARISK(NLW_gtxe2_i_RXCHARISK_UNCONNECTED[7:0]),
        .RXCHBONDEN(1'b0),
        .RXCHBONDI({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .RXCHBONDLEVEL({1'b0,1'b0,1'b0}),
        .RXCHBONDMASTER(1'b0),
        .RXCHBONDO(NLW_gtxe2_i_RXCHBONDO_UNCONNECTED[4:0]),
        .RXCHBONDSLAVE(1'b0),
        .RXCLKCORCNT(NLW_gtxe2_i_RXCLKCORCNT_UNCONNECTED[1:0]),
        .RXCOMINITDET(NLW_gtxe2_i_RXCOMINITDET_UNCONNECTED),
        .RXCOMMADET(NLW_gtxe2_i_RXCOMMADET_UNCONNECTED),
        .RXCOMMADETEN(1'b0),
        .RXCOMSASDET(NLW_gtxe2_i_RXCOMSASDET_UNCONNECTED),
        .RXCOMWAKEDET(NLW_gtxe2_i_RXCOMWAKEDET_UNCONNECTED),
        .RXDATA({NLW_gtxe2_i_RXDATA_UNCONNECTED[63:32],dclk_0[0],dclk_0[1],dclk_0[2],dclk_0[3],dclk_0[4],dclk_0[5],dclk_0[6],dclk_0[7],dclk_0[8],dclk_0[9],dclk_0[10],dclk_0[11],dclk_0[12],dclk_0[13],dclk_0[14],dclk_0[15],dclk_0[16],dclk_0[17],dclk_0[18],dclk_0[19],dclk_0[20],dclk_0[21],dclk_0[22],dclk_0[23],dclk_0[24],dclk_0[25],dclk_0[26],dclk_0[27],dclk_0[28],dclk_0[29],dclk_0[30],dclk_0[31]}),
        .RXDATAVALID(D[2]),
        .RXDDIEN(1'b0),
        .RXDFEAGCHOLD(1'b0),
        .RXDFEAGCOVRDEN(1'b0),
        .RXDFECM1EN(1'b0),
        .RXDFELFHOLD(1'b0),
        .RXDFELFOVRDEN(1'b1),
        .RXDFELPMRESET(1'b0),
        .RXDFETAP2HOLD(1'b0),
        .RXDFETAP2OVRDEN(1'b0),
        .RXDFETAP3HOLD(1'b0),
        .RXDFETAP3OVRDEN(1'b0),
        .RXDFETAP4HOLD(1'b0),
        .RXDFETAP4OVRDEN(1'b0),
        .RXDFETAP5HOLD(1'b0),
        .RXDFETAP5OVRDEN(1'b0),
        .RXDFEUTHOLD(1'b0),
        .RXDFEUTOVRDEN(1'b0),
        .RXDFEVPHOLD(1'b0),
        .RXDFEVPOVRDEN(1'b0),
        .RXDFEVSEN(1'b0),
        .RXDFEXYDEN(1'b1),
        .RXDFEXYDHOLD(1'b0),
        .RXDFEXYDOVRDEN(1'b0),
        .RXDISPERR(NLW_gtxe2_i_RXDISPERR_UNCONNECTED[7:0]),
        .RXDLYBYPASS(1'b1),
        .RXDLYEN(1'b0),
        .RXDLYOVRDEN(1'b0),
        .RXDLYSRESET(1'b0),
        .RXDLYSRESETDONE(NLW_gtxe2_i_RXDLYSRESETDONE_UNCONNECTED),
        .RXELECIDLE(NLW_gtxe2_i_RXELECIDLE_UNCONNECTED),
        .RXELECIDLEMODE({1'b1,1'b1}),
        .RXGEARBOXSLIP(gt_slip),
        .RXHEADER({NLW_gtxe2_i_RXHEADER_UNCONNECTED[2],D[0],D[1]}),
        .RXHEADERVALID(D[3]),
        .RXLPMEN(1'b0),
        .RXLPMHFHOLD(1'b0),
        .RXLPMHFOVRDEN(1'b0),
        .RXLPMLFHOLD(1'b0),
        .RXLPMLFKLOVRDEN(1'b0),
        .RXMCOMMAALIGNEN(1'b0),
        .RXMONITOROUT(NLW_gtxe2_i_RXMONITOROUT_UNCONNECTED[6:0]),
        .RXMONITORSEL({1'b0,1'b0}),
        .RXNOTINTABLE(NLW_gtxe2_i_RXNOTINTABLE_UNCONNECTED[7:0]),
        .RXOOBRESET(1'b0),
        .RXOSHOLD(1'b0),
        .RXOSOVRDEN(1'b0),
        .RXOUTCLK(rxrecclk_out),
        .RXOUTCLKFABRIC(NLW_gtxe2_i_RXOUTCLKFABRIC_UNCONNECTED),
        .RXOUTCLKPCS(NLW_gtxe2_i_RXOUTCLKPCS_UNCONNECTED),
        .RXOUTCLKSEL({1'b0,1'b1,1'b0}),
        .RXPCOMMAALIGNEN(1'b0),
        .RXPCSRESET(pcs_resetout_rising),
        .RXPD({1'b0,1'b0}),
        .RXPHALIGN(1'b0),
        .RXPHALIGNDONE(NLW_gtxe2_i_RXPHALIGNDONE_UNCONNECTED),
        .RXPHALIGNEN(1'b0),
        .RXPHDLYPD(1'b0),
        .RXPHDLYRESET(1'b0),
        .RXPHMONITOR(NLW_gtxe2_i_RXPHMONITOR_UNCONNECTED[4:0]),
        .RXPHOVRDEN(1'b0),
        .RXPHSLIPMONITOR(NLW_gtxe2_i_RXPHSLIPMONITOR_UNCONNECTED[4:0]),
        .RXPMARESET(1'b0),
        .RXPOLARITY(1'b0),
        .RXPRBSCNTRESET(clear_rx_prbs_err_count),
        .RXPRBSERR(gtxe2_i_n_27),
        .RXPRBSSEL({rx_prbs31_en,1'b0,1'b0}),
        .RXQPIEN(1'b0),
        .RXQPISENN(NLW_gtxe2_i_RXQPISENN_UNCONNECTED),
        .RXQPISENP(NLW_gtxe2_i_RXQPISENP_UNCONNECTED),
        .RXRATE({1'b0,1'b0,1'b0}),
        .RXRATEDONE(NLW_gtxe2_i_RXRATEDONE_UNCONNECTED),
        .RXRESETDONE(gt0_rxresetdone_i),
        .RXSLIDE(1'b0),
        .RXSTARTOFSEQ(NLW_gtxe2_i_RXSTARTOFSEQ_UNCONNECTED),
        .RXSTATUS(NLW_gtxe2_i_RXSTATUS_UNCONNECTED[2:0]),
        .RXSYSCLKSEL({1'b1,1'b1}),
        .RXUSERRDY(gt0_rxuserrdy_i),
        .RXUSRCLK(CLK),
        .RXUSRCLK2(CLK),
        .RXVALID(NLW_gtxe2_i_RXVALID_UNCONNECTED),
        .SETERRSTATUS(1'b0),
        .TSTIN({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .TSTOUT(NLW_gtxe2_i_TSTOUT_UNCONNECTED[9:0]),
        .TX8B10BBYPASS({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TX8B10BEN(1'b0),
        .TXBUFDIFFCTRL({1'b1,1'b0,1'b0}),
        .TXBUFSTATUS({gtxe2_i_n_80,gtxe2_i_n_81}),
        .TXCHARDISPMODE({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TXCHARDISPVAL({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TXCHARISK({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TXCOMFINISH(NLW_gtxe2_i_TXCOMFINISH_UNCONNECTED),
        .TXCOMINIT(1'b0),
        .TXCOMSAS(1'b0),
        .TXCOMWAKE(1'b0),
        .TXDATA({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,gt_txd[0],gt_txd[1],gt_txd[2],gt_txd[3],gt_txd[4],gt_txd[5],gt_txd[6],gt_txd[7],gt_txd[8],gt_txd[9],gt_txd[10],gt_txd[11],gt_txd[12],gt_txd[13],gt_txd[14],gt_txd[15],gt_txd[16],gt_txd[17],gt_txd[18],gt_txd[19],gt_txd[20],gt_txd[21],gt_txd[22],gt_txd[23],gt_txd[24],gt_txd[25],gt_txd[26],gt_txd[27],gt_txd[28],gt_txd[29],gt_txd[30],gt_txd[31]}),
        .TXDEEMPH(1'b0),
        .TXDETECTRX(1'b0),
        .TXDIFFCTRL({1'b1,1'b1,1'b1,1'b0}),
        .TXDIFFPD(1'b0),
        .TXDLYBYPASS(1'b1),
        .TXDLYEN(1'b0),
        .TXDLYHOLD(1'b0),
        .TXDLYOVRDEN(1'b0),
        .TXDLYSRESET(1'b0),
        .TXDLYSRESETDONE(NLW_gtxe2_i_TXDLYSRESETDONE_UNCONNECTED),
        .TXDLYUPDOWN(1'b0),
        .TXELECIDLE(1'b0),
        .TXGEARBOXREADY(NLW_gtxe2_i_TXGEARBOXREADY_UNCONNECTED),
        .TXHEADER({1'b0,gt_txc[0],gt_txc[1]}),
        .TXINHIBIT(tx_disable),
        .TXMAINCURSOR({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TXMARGIN({1'b0,1'b0,1'b0}),
        .TXOUTCLK(txoutclk),
        .TXOUTCLKFABRIC(gtxe2_i_n_38),
        .TXOUTCLKPCS(gtxe2_i_n_39),
        .TXOUTCLKSEL({1'b0,1'b1,1'b0}),
        .TXPCSRESET(pcs_resetout_rising),
        .TXPD({1'b0,1'b0}),
        .TXPDELECIDLEMODE(1'b0),
        .TXPHALIGN(1'b0),
        .TXPHALIGNDONE(NLW_gtxe2_i_TXPHALIGNDONE_UNCONNECTED),
        .TXPHALIGNEN(1'b0),
        .TXPHDLYPD(1'b0),
        .TXPHDLYRESET(1'b0),
        .TXPHDLYTSTCLK(1'b0),
        .TXPHINIT(1'b0),
        .TXPHINITDONE(NLW_gtxe2_i_TXPHINITDONE_UNCONNECTED),
        .TXPHOVRDEN(1'b0),
        .TXPISOPD(1'b0),
        .TXPMARESET(1'b0),
        .TXPOLARITY(1'b0),
        .TXPOSTCURSOR({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TXPOSTCURSORINV(1'b0),
        .TXPRBSFORCEERR(1'b0),
        .TXPRBSSEL({tx_prbs31_en,1'b0,1'b0}),
        .TXPRECURSOR({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TXPRECURSORINV(1'b0),
        .TXQPIBIASEN(1'b0),
        .TXQPISENN(NLW_gtxe2_i_TXQPISENN_UNCONNECTED),
        .TXQPISENP(NLW_gtxe2_i_TXQPISENP_UNCONNECTED),
        .TXQPISTRONGPDOWN(1'b0),
        .TXQPIWEAKPUP(1'b0),
        .TXRATE({1'b0,1'b0,1'b0}),
        .TXRATEDONE(NLW_gtxe2_i_TXRATEDONE_UNCONNECTED),
        .TXRESETDONE(gt0_txresetdone_i),
        .TXSEQUENCE({1'b0,gt_txc[7:2]}),
        .TXSTARTSEQ(1'b0),
        .TXSWING(1'b0),
        .TXSYSCLKSEL({1'b1,1'b1}),
        .TXUSERRDY(txuserrdy),
        .TXUSRCLK(txusrclk),
        .TXUSRCLK2(txusrclk2));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_gtwizard_10gbaser_multi_GT" *) 
module ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_gtwizard_10gbaser_multi_GT
   (drp_drdy_o,
    txn,
    txp,
    D,
    rxrecclk_out,
    txoutclk,
    drp_drpdo_o,
    dclk_0,
    gt0_rxbufreset_i0,
    gt0_rxresetdone_reg_reg0,
    gt0_txresetdone_reg0,
    dclk,
    drp_den_i,
    drp_dwe_i,
    AS,
    gt0_gttxreset_i,
    rxn,
    rxp,
    qplloutclk,
    qplloutrefclk,
    gt0_rxbufreset_i,
    gt_slip,
    pcs_resetout_rising,
    clear_rx_prbs_err_count,
    gt0_rxuserrdy_i,
    CLK,
    tx_disable,
    txuserrdy,
    txusrclk,
    txusrclk2,
    drp_di_i,
    loopback_ctrl,
    rx_prbs31_en,
    gt_txc,
    tx_prbs31_en,
    gt_txd,
    drp_daddr_i,
    gt0_rxresetdone_i_reg_rxusrclk2,
    qplllock_rxusrclk2,
    qplllock_txusrclk2);
  output drp_drdy_o;
  output txn;
  output txp;
  output [3:0]D;
  output rxrecclk_out;
  output txoutclk;
  output [15:0]drp_drpdo_o;
  output [31:0]dclk_0;
  output gt0_rxbufreset_i0;
  output gt0_rxresetdone_reg_reg0;
  output gt0_txresetdone_reg0;
  input dclk;
  input drp_den_i;
  input drp_dwe_i;
  input [0:0]AS;
  input gt0_gttxreset_i;
  input rxn;
  input rxp;
  input qplloutclk;
  input qplloutrefclk;
  input gt0_rxbufreset_i;
  input gt_slip;
  input pcs_resetout_rising;
  input clear_rx_prbs_err_count;
  input gt0_rxuserrdy_i;
  input CLK;
  input tx_disable;
  input txuserrdy;
  input txusrclk;
  input txusrclk2;
  input [15:0]drp_di_i;
  input [0:0]loopback_ctrl;
  input rx_prbs31_en;
  input [7:0]gt_txc;
  input tx_prbs31_en;
  input [31:0]gt_txd;
  input [8:0]drp_daddr_i;
  input gt0_rxresetdone_i_reg_rxusrclk2;
  input qplllock_rxusrclk2;
  input qplllock_txusrclk2;

  wire [0:0]AS;
  wire CLK;
  wire [3:0]D;
  wire clear_rx_prbs_err_count;
  wire dclk;
  wire [31:0]dclk_0;
  wire [8:0]drp_daddr_i;
  wire drp_den_i;
  wire [15:0]drp_di_i;
  wire drp_drdy_o;
  wire [15:0]drp_drpdo_o;
  wire drp_dwe_i;
  wire gt0_gttxreset_i;
  wire gt0_rxbufreset_i;
  wire gt0_rxbufreset_i0;
  wire gt0_rxresetdone_i_reg_rxusrclk2;
  wire gt0_rxresetdone_reg_reg0;
  wire gt0_rxuserrdy_i;
  wire gt0_txresetdone_reg0;
  wire gt_slip;
  wire [7:0]gt_txc;
  wire [31:0]gt_txd;
  wire [0:0]loopback_ctrl;
  wire pcs_resetout_rising;
  wire qplllock_rxusrclk2;
  wire qplllock_txusrclk2;
  wire qplloutclk;
  wire qplloutrefclk;
  wire rx_prbs31_en;
  wire rxn;
  wire rxp;
  wire rxrecclk_out;
  wire tx_disable;
  wire tx_prbs31_en;
  wire txn;
  wire txoutclk;
  wire txp;
  wire txuserrdy;
  wire txusrclk;
  wire txusrclk2;

  ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_gtwizard_10gbaser_GT gt0_gtwizard_10gbaser_i
       (.AS(AS),
        .CLK(CLK),
        .D(D),
        .clear_rx_prbs_err_count(clear_rx_prbs_err_count),
        .dclk(dclk),
        .dclk_0(dclk_0),
        .drp_daddr_i(drp_daddr_i),
        .drp_den_i(drp_den_i),
        .drp_di_i(drp_di_i),
        .drp_drdy_o(drp_drdy_o),
        .drp_drpdo_o(drp_drpdo_o),
        .drp_dwe_i(drp_dwe_i),
        .gt0_gttxreset_i(gt0_gttxreset_i),
        .gt0_rxbufreset_i(gt0_rxbufreset_i),
        .gt0_rxbufreset_i0(gt0_rxbufreset_i0),
        .gt0_rxresetdone_i_reg_rxusrclk2(gt0_rxresetdone_i_reg_rxusrclk2),
        .gt0_rxresetdone_reg_reg0(gt0_rxresetdone_reg_reg0),
        .gt0_rxuserrdy_i(gt0_rxuserrdy_i),
        .gt0_txresetdone_reg0(gt0_txresetdone_reg0),
        .gt_slip(gt_slip),
        .gt_txc(gt_txc),
        .gt_txd(gt_txd),
        .loopback_ctrl(loopback_ctrl),
        .pcs_resetout_rising(pcs_resetout_rising),
        .qplllock_rxusrclk2(qplllock_rxusrclk2),
        .qplllock_txusrclk2(qplllock_txusrclk2),
        .qplloutclk(qplloutclk),
        .qplloutrefclk(qplloutrefclk),
        .rx_prbs31_en(rx_prbs31_en),
        .rxn(rxn),
        .rxp(rxp),
        .rxrecclk_out(rxrecclk_out),
        .tx_disable(tx_disable),
        .tx_prbs31_en(tx_prbs31_en),
        .txn(txn),
        .txoutclk(txoutclk),
        .txp(txp),
        .txuserrdy(txuserrdy),
        .txusrclk(txusrclk),
        .txusrclk2(txusrclk2));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_local_clock_and_reset" *) 
module ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_local_clock_and_reset
   (CLK,
    AS,
    txreset_txusrclk2,
    dclk_reset,
    rxreset_rxusrclk2,
    areset_rxusrclk2,
    pma_resetout_rising_rxusrclk2,
    gt0_rxuserrdy_i,
    rxrecclk_out,
    sim_speedup_control,
    coreclk,
    dclk,
    txusrclk2,
    qplllock_rxusrclk2,
    tx_resetdone,
    D,
    areset,
    signal_detect,
    \sync1_r_reg[0] ,
    \sync1_r_reg[0]_0 );
  output CLK;
  output [0:0]AS;
  output txreset_txusrclk2;
  output dclk_reset;
  output rxreset_rxusrclk2;
  output areset_rxusrclk2;
  output pma_resetout_rising_rxusrclk2;
  output gt0_rxuserrdy_i;
  input rxrecclk_out;
  input sim_speedup_control;
  input coreclk;
  input dclk;
  input txusrclk2;
  input qplllock_rxusrclk2;
  input tx_resetdone;
  input [0:0]D;
  input areset;
  input signal_detect;
  input [0:0]\sync1_r_reg[0] ;
  input [0:0]\sync1_r_reg[0]_0 ;

  wire [0:0]AS;
  wire CLK;
  wire [0:0]D;
  wire areset;
  wire areset_rxusrclk2;
  wire coreclk;
  wire coreclk_reset_rx_tmp;
  wire coreclk_reset_tx_tmp;
  wire data_out;
  wire dclk;
  wire dclk_areset;
  wire dclk_reset;
  wire dclk_reset_rx_tmp__0;
  wire gt0_rxuserrdy_i;
  wire gtrxreset_rxusrclk2;
  wire pma_resetout_rising_rxusrclk2;
  wire qplllock_rxusrclk2;
  wire rx_resetdone_dclk;
  wire rxrecclk_out;
  wire rxreset_rxusrclk2;
  wire rxuserrdy_counter0;
  wire rxuserrdy_counter1_carry__0_i_1_n_0;
  wire rxuserrdy_counter1_carry__0_n_0;
  wire rxuserrdy_counter1_carry__0_n_1;
  wire rxuserrdy_counter1_carry__0_n_2;
  wire rxuserrdy_counter1_carry__0_n_3;
  wire rxuserrdy_counter1_carry_n_0;
  wire rxuserrdy_counter1_carry_n_1;
  wire rxuserrdy_counter1_carry_n_2;
  wire rxuserrdy_counter1_carry_n_3;
  wire \rxuserrdy_counter[0]_i_3_n_0 ;
  wire [23:0]rxuserrdy_counter_reg;
  wire \rxuserrdy_counter_reg[0]_i_2_n_0 ;
  wire \rxuserrdy_counter_reg[0]_i_2_n_1 ;
  wire \rxuserrdy_counter_reg[0]_i_2_n_2 ;
  wire \rxuserrdy_counter_reg[0]_i_2_n_3 ;
  wire \rxuserrdy_counter_reg[0]_i_2_n_4 ;
  wire \rxuserrdy_counter_reg[0]_i_2_n_5 ;
  wire \rxuserrdy_counter_reg[0]_i_2_n_6 ;
  wire \rxuserrdy_counter_reg[0]_i_2_n_7 ;
  wire \rxuserrdy_counter_reg[12]_i_1_n_0 ;
  wire \rxuserrdy_counter_reg[12]_i_1_n_1 ;
  wire \rxuserrdy_counter_reg[12]_i_1_n_2 ;
  wire \rxuserrdy_counter_reg[12]_i_1_n_3 ;
  wire \rxuserrdy_counter_reg[12]_i_1_n_4 ;
  wire \rxuserrdy_counter_reg[12]_i_1_n_5 ;
  wire \rxuserrdy_counter_reg[12]_i_1_n_6 ;
  wire \rxuserrdy_counter_reg[12]_i_1_n_7 ;
  wire \rxuserrdy_counter_reg[16]_i_1_n_0 ;
  wire \rxuserrdy_counter_reg[16]_i_1_n_1 ;
  wire \rxuserrdy_counter_reg[16]_i_1_n_2 ;
  wire \rxuserrdy_counter_reg[16]_i_1_n_3 ;
  wire \rxuserrdy_counter_reg[16]_i_1_n_4 ;
  wire \rxuserrdy_counter_reg[16]_i_1_n_5 ;
  wire \rxuserrdy_counter_reg[16]_i_1_n_6 ;
  wire \rxuserrdy_counter_reg[16]_i_1_n_7 ;
  wire \rxuserrdy_counter_reg[20]_i_1_n_1 ;
  wire \rxuserrdy_counter_reg[20]_i_1_n_2 ;
  wire \rxuserrdy_counter_reg[20]_i_1_n_3 ;
  wire \rxuserrdy_counter_reg[20]_i_1_n_4 ;
  wire \rxuserrdy_counter_reg[20]_i_1_n_5 ;
  wire \rxuserrdy_counter_reg[20]_i_1_n_6 ;
  wire \rxuserrdy_counter_reg[20]_i_1_n_7 ;
  wire \rxuserrdy_counter_reg[4]_i_1_n_0 ;
  wire \rxuserrdy_counter_reg[4]_i_1_n_1 ;
  wire \rxuserrdy_counter_reg[4]_i_1_n_2 ;
  wire \rxuserrdy_counter_reg[4]_i_1_n_3 ;
  wire \rxuserrdy_counter_reg[4]_i_1_n_4 ;
  wire \rxuserrdy_counter_reg[4]_i_1_n_5 ;
  wire \rxuserrdy_counter_reg[4]_i_1_n_6 ;
  wire \rxuserrdy_counter_reg[4]_i_1_n_7 ;
  wire \rxuserrdy_counter_reg[8]_i_1_n_0 ;
  wire \rxuserrdy_counter_reg[8]_i_1_n_1 ;
  wire \rxuserrdy_counter_reg[8]_i_1_n_2 ;
  wire \rxuserrdy_counter_reg[8]_i_1_n_3 ;
  wire \rxuserrdy_counter_reg[8]_i_1_n_4 ;
  wire \rxuserrdy_counter_reg[8]_i_1_n_5 ;
  wire \rxuserrdy_counter_reg[8]_i_1_n_6 ;
  wire \rxuserrdy_counter_reg[8]_i_1_n_7 ;
  wire sel;
  wire signal_detect;
  wire signal_detect_coreclk;
  wire signal_detect_dclk;
  wire sim_speedup_control;
  wire sim_speedup_controller_inst_n_0;
  wire sim_speedup_controller_inst_n_1;
  wire sim_speedup_controller_inst_n_2;
  wire sim_speedup_controller_inst_n_3;
  wire sim_speedup_controller_inst_n_4;
  wire sim_speedup_controller_inst_n_5;
  wire sim_speedup_controller_inst_n_6;
  wire sim_speedup_controller_inst_n_7;
  wire [0:0]\sync1_r_reg[0] ;
  wire [0:0]\sync1_r_reg[0]_0 ;
  wire tx_resetdone;
  wire txreset_txusrclk2;
  wire txusrclk2;
  wire [3:0]NLW_rxuserrdy_counter1_carry_O_UNCONNECTED;
  wire [3:0]NLW_rxuserrdy_counter1_carry__0_O_UNCONNECTED;
  wire [3:0]NLW_rxuserrdy_counter1_carry__1_CO_UNCONNECTED;
  wire [3:1]NLW_rxuserrdy_counter1_carry__1_O_UNCONNECTED;
  wire [3:3]\NLW_rxuserrdy_counter_reg[20]_i_1_CO_UNCONNECTED ;

  ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_ff_synchronizer_rst_7 areset_rxusrclk2_sync_i
       (.areset(areset),
        .areset_rxusrclk2(areset_rxusrclk2),
        .data_out_reg_0(CLK));
  ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_ff_synchronizer_rst_8 coreclk_areset_sync_i
       (.AS(coreclk_reset_tx_tmp),
        .D(D),
        .areset(areset),
        .coreclk(coreclk),
        .data_out_reg_0(coreclk_reset_rx_tmp),
        .signal_detect_coreclk(signal_detect_coreclk),
        .tx_resetdone(tx_resetdone));
  ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_ff_synchronizer_rst_9 coreclk_reset_rx_sync_i
       (.AS(data_out),
        .coreclk(coreclk),
        .\sync1_r_reg[4]_0 (coreclk_reset_rx_tmp));
  ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_ff_synchronizer_rst_10 coreclk_reset_tx_sync_i
       (.AS(AS),
        .coreclk(coreclk),
        .\sync1_r_reg[4]_0 (coreclk_reset_tx_tmp));
  ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_ff_synchronizer_rst_11 dclk_areset_sync_i
       (.areset(areset),
        .dclk(dclk),
        .dclk_areset(dclk_areset));
  ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_ff_synchronizer_rst_12 dclk_reset_rx_sync_i
       (.AS(dclk_reset_rx_tmp__0),
        .dclk(dclk),
        .dclk_reset(dclk_reset));
  LUT3 #(
    .INIT(8'hDF)) 
    dclk_reset_rx_tmp
       (.I0(signal_detect_dclk),
        .I1(dclk_areset),
        .I2(rx_resetdone_dclk),
        .O(dclk_reset_rx_tmp__0));
  ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_ff_synchronizer_rst_13 gtrxreset_rxusrclk2_sync_i
       (.data_out_reg_0(CLK),
        .gtrxreset_rxusrclk2(gtrxreset_rxusrclk2),
        .qplllock_rxusrclk2(qplllock_rxusrclk2),
        .rxuserrdy_counter0(rxuserrdy_counter0),
        .\sync1_r_reg[0]_0 (\sync1_r_reg[0]_0 ));
  ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_ff_synchronizer_rst_14 pma_resetout_rising_rxusrclk2_sync_i
       (.data_out_reg_0(CLK),
        .pma_resetout_rising_rxusrclk2(pma_resetout_rising_rxusrclk2),
        .\sync1_r_reg[0]_0 (\sync1_r_reg[0] ));
  (* BOX_TYPE = "PRIMITIVE" *) 
  BUFH rxoutclk_bufh_i
       (.I(rxrecclk_out),
        .O(CLK));
  ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_ff_synchronizer_rst_15 rxreset_rxusrclk2_sync_i
       (.AS(data_out),
        .data_out_reg_0(CLK),
        .rxreset_rxusrclk2(rxreset_rxusrclk2));
  ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_ff_synchronizer_16 rxresetdone_dclk_sync_i
       (.D(D),
        .dclk(dclk),
        .rx_resetdone_dclk(rx_resetdone_dclk));
  CARRY4 rxuserrdy_counter1_carry
       (.CI(1'b0),
        .CO({rxuserrdy_counter1_carry_n_0,rxuserrdy_counter1_carry_n_1,rxuserrdy_counter1_carry_n_2,rxuserrdy_counter1_carry_n_3}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_rxuserrdy_counter1_carry_O_UNCONNECTED[3:0]),
        .S({sim_speedup_controller_inst_n_0,sim_speedup_controller_inst_n_1,sim_speedup_controller_inst_n_2,sim_speedup_controller_inst_n_3}));
  CARRY4 rxuserrdy_counter1_carry__0
       (.CI(rxuserrdy_counter1_carry_n_0),
        .CO({rxuserrdy_counter1_carry__0_n_0,rxuserrdy_counter1_carry__0_n_1,rxuserrdy_counter1_carry__0_n_2,rxuserrdy_counter1_carry__0_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_rxuserrdy_counter1_carry__0_O_UNCONNECTED[3:0]),
        .S({rxuserrdy_counter1_carry__0_i_1_n_0,sim_speedup_controller_inst_n_4,sim_speedup_controller_inst_n_5,sim_speedup_controller_inst_n_6}));
  LUT3 #(
    .INIT(8'h01)) 
    rxuserrdy_counter1_carry__0_i_1
       (.I0(rxuserrdy_counter_reg[23]),
        .I1(rxuserrdy_counter_reg[22]),
        .I2(rxuserrdy_counter_reg[21]),
        .O(rxuserrdy_counter1_carry__0_i_1_n_0));
  CARRY4 rxuserrdy_counter1_carry__1
       (.CI(rxuserrdy_counter1_carry__0_n_0),
        .CO(NLW_rxuserrdy_counter1_carry__1_CO_UNCONNECTED[3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({NLW_rxuserrdy_counter1_carry__1_O_UNCONNECTED[3:1],sel}),
        .S({1'b0,1'b0,1'b0,1'b1}));
  LUT1 #(
    .INIT(2'h1)) 
    \rxuserrdy_counter[0]_i_3 
       (.I0(rxuserrdy_counter_reg[0]),
        .O(\rxuserrdy_counter[0]_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \rxuserrdy_counter_reg[0] 
       (.C(CLK),
        .CE(sel),
        .D(\rxuserrdy_counter_reg[0]_i_2_n_7 ),
        .Q(rxuserrdy_counter_reg[0]),
        .R(rxuserrdy_counter0));
  CARRY4 \rxuserrdy_counter_reg[0]_i_2 
       (.CI(1'b0),
        .CO({\rxuserrdy_counter_reg[0]_i_2_n_0 ,\rxuserrdy_counter_reg[0]_i_2_n_1 ,\rxuserrdy_counter_reg[0]_i_2_n_2 ,\rxuserrdy_counter_reg[0]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b1}),
        .O({\rxuserrdy_counter_reg[0]_i_2_n_4 ,\rxuserrdy_counter_reg[0]_i_2_n_5 ,\rxuserrdy_counter_reg[0]_i_2_n_6 ,\rxuserrdy_counter_reg[0]_i_2_n_7 }),
        .S({rxuserrdy_counter_reg[3:1],\rxuserrdy_counter[0]_i_3_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \rxuserrdy_counter_reg[10] 
       (.C(CLK),
        .CE(sel),
        .D(\rxuserrdy_counter_reg[8]_i_1_n_5 ),
        .Q(rxuserrdy_counter_reg[10]),
        .R(rxuserrdy_counter0));
  FDRE #(
    .INIT(1'b0)) 
    \rxuserrdy_counter_reg[11] 
       (.C(CLK),
        .CE(sel),
        .D(\rxuserrdy_counter_reg[8]_i_1_n_4 ),
        .Q(rxuserrdy_counter_reg[11]),
        .R(rxuserrdy_counter0));
  FDRE #(
    .INIT(1'b0)) 
    \rxuserrdy_counter_reg[12] 
       (.C(CLK),
        .CE(sel),
        .D(\rxuserrdy_counter_reg[12]_i_1_n_7 ),
        .Q(rxuserrdy_counter_reg[12]),
        .R(rxuserrdy_counter0));
  CARRY4 \rxuserrdy_counter_reg[12]_i_1 
       (.CI(\rxuserrdy_counter_reg[8]_i_1_n_0 ),
        .CO({\rxuserrdy_counter_reg[12]_i_1_n_0 ,\rxuserrdy_counter_reg[12]_i_1_n_1 ,\rxuserrdy_counter_reg[12]_i_1_n_2 ,\rxuserrdy_counter_reg[12]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\rxuserrdy_counter_reg[12]_i_1_n_4 ,\rxuserrdy_counter_reg[12]_i_1_n_5 ,\rxuserrdy_counter_reg[12]_i_1_n_6 ,\rxuserrdy_counter_reg[12]_i_1_n_7 }),
        .S(rxuserrdy_counter_reg[15:12]));
  FDRE #(
    .INIT(1'b0)) 
    \rxuserrdy_counter_reg[13] 
       (.C(CLK),
        .CE(sel),
        .D(\rxuserrdy_counter_reg[12]_i_1_n_6 ),
        .Q(rxuserrdy_counter_reg[13]),
        .R(rxuserrdy_counter0));
  FDRE #(
    .INIT(1'b0)) 
    \rxuserrdy_counter_reg[14] 
       (.C(CLK),
        .CE(sel),
        .D(\rxuserrdy_counter_reg[12]_i_1_n_5 ),
        .Q(rxuserrdy_counter_reg[14]),
        .R(rxuserrdy_counter0));
  FDRE #(
    .INIT(1'b0)) 
    \rxuserrdy_counter_reg[15] 
       (.C(CLK),
        .CE(sel),
        .D(\rxuserrdy_counter_reg[12]_i_1_n_4 ),
        .Q(rxuserrdy_counter_reg[15]),
        .R(rxuserrdy_counter0));
  FDRE #(
    .INIT(1'b0)) 
    \rxuserrdy_counter_reg[16] 
       (.C(CLK),
        .CE(sel),
        .D(\rxuserrdy_counter_reg[16]_i_1_n_7 ),
        .Q(rxuserrdy_counter_reg[16]),
        .R(rxuserrdy_counter0));
  CARRY4 \rxuserrdy_counter_reg[16]_i_1 
       (.CI(\rxuserrdy_counter_reg[12]_i_1_n_0 ),
        .CO({\rxuserrdy_counter_reg[16]_i_1_n_0 ,\rxuserrdy_counter_reg[16]_i_1_n_1 ,\rxuserrdy_counter_reg[16]_i_1_n_2 ,\rxuserrdy_counter_reg[16]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\rxuserrdy_counter_reg[16]_i_1_n_4 ,\rxuserrdy_counter_reg[16]_i_1_n_5 ,\rxuserrdy_counter_reg[16]_i_1_n_6 ,\rxuserrdy_counter_reg[16]_i_1_n_7 }),
        .S(rxuserrdy_counter_reg[19:16]));
  FDRE #(
    .INIT(1'b0)) 
    \rxuserrdy_counter_reg[17] 
       (.C(CLK),
        .CE(sel),
        .D(\rxuserrdy_counter_reg[16]_i_1_n_6 ),
        .Q(rxuserrdy_counter_reg[17]),
        .R(rxuserrdy_counter0));
  FDRE #(
    .INIT(1'b0)) 
    \rxuserrdy_counter_reg[18] 
       (.C(CLK),
        .CE(sel),
        .D(\rxuserrdy_counter_reg[16]_i_1_n_5 ),
        .Q(rxuserrdy_counter_reg[18]),
        .R(rxuserrdy_counter0));
  FDRE #(
    .INIT(1'b0)) 
    \rxuserrdy_counter_reg[19] 
       (.C(CLK),
        .CE(sel),
        .D(\rxuserrdy_counter_reg[16]_i_1_n_4 ),
        .Q(rxuserrdy_counter_reg[19]),
        .R(rxuserrdy_counter0));
  FDRE #(
    .INIT(1'b0)) 
    \rxuserrdy_counter_reg[1] 
       (.C(CLK),
        .CE(sel),
        .D(\rxuserrdy_counter_reg[0]_i_2_n_6 ),
        .Q(rxuserrdy_counter_reg[1]),
        .R(rxuserrdy_counter0));
  FDRE #(
    .INIT(1'b0)) 
    \rxuserrdy_counter_reg[20] 
       (.C(CLK),
        .CE(sel),
        .D(\rxuserrdy_counter_reg[20]_i_1_n_7 ),
        .Q(rxuserrdy_counter_reg[20]),
        .R(rxuserrdy_counter0));
  CARRY4 \rxuserrdy_counter_reg[20]_i_1 
       (.CI(\rxuserrdy_counter_reg[16]_i_1_n_0 ),
        .CO({\NLW_rxuserrdy_counter_reg[20]_i_1_CO_UNCONNECTED [3],\rxuserrdy_counter_reg[20]_i_1_n_1 ,\rxuserrdy_counter_reg[20]_i_1_n_2 ,\rxuserrdy_counter_reg[20]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\rxuserrdy_counter_reg[20]_i_1_n_4 ,\rxuserrdy_counter_reg[20]_i_1_n_5 ,\rxuserrdy_counter_reg[20]_i_1_n_6 ,\rxuserrdy_counter_reg[20]_i_1_n_7 }),
        .S(rxuserrdy_counter_reg[23:20]));
  FDRE #(
    .INIT(1'b0)) 
    \rxuserrdy_counter_reg[21] 
       (.C(CLK),
        .CE(sel),
        .D(\rxuserrdy_counter_reg[20]_i_1_n_6 ),
        .Q(rxuserrdy_counter_reg[21]),
        .R(rxuserrdy_counter0));
  FDRE #(
    .INIT(1'b0)) 
    \rxuserrdy_counter_reg[22] 
       (.C(CLK),
        .CE(sel),
        .D(\rxuserrdy_counter_reg[20]_i_1_n_5 ),
        .Q(rxuserrdy_counter_reg[22]),
        .R(rxuserrdy_counter0));
  FDRE #(
    .INIT(1'b0)) 
    \rxuserrdy_counter_reg[23] 
       (.C(CLK),
        .CE(sel),
        .D(\rxuserrdy_counter_reg[20]_i_1_n_4 ),
        .Q(rxuserrdy_counter_reg[23]),
        .R(rxuserrdy_counter0));
  FDRE #(
    .INIT(1'b0)) 
    \rxuserrdy_counter_reg[2] 
       (.C(CLK),
        .CE(sel),
        .D(\rxuserrdy_counter_reg[0]_i_2_n_5 ),
        .Q(rxuserrdy_counter_reg[2]),
        .R(rxuserrdy_counter0));
  FDRE #(
    .INIT(1'b0)) 
    \rxuserrdy_counter_reg[3] 
       (.C(CLK),
        .CE(sel),
        .D(\rxuserrdy_counter_reg[0]_i_2_n_4 ),
        .Q(rxuserrdy_counter_reg[3]),
        .R(rxuserrdy_counter0));
  FDRE #(
    .INIT(1'b0)) 
    \rxuserrdy_counter_reg[4] 
       (.C(CLK),
        .CE(sel),
        .D(\rxuserrdy_counter_reg[4]_i_1_n_7 ),
        .Q(rxuserrdy_counter_reg[4]),
        .R(rxuserrdy_counter0));
  CARRY4 \rxuserrdy_counter_reg[4]_i_1 
       (.CI(\rxuserrdy_counter_reg[0]_i_2_n_0 ),
        .CO({\rxuserrdy_counter_reg[4]_i_1_n_0 ,\rxuserrdy_counter_reg[4]_i_1_n_1 ,\rxuserrdy_counter_reg[4]_i_1_n_2 ,\rxuserrdy_counter_reg[4]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\rxuserrdy_counter_reg[4]_i_1_n_4 ,\rxuserrdy_counter_reg[4]_i_1_n_5 ,\rxuserrdy_counter_reg[4]_i_1_n_6 ,\rxuserrdy_counter_reg[4]_i_1_n_7 }),
        .S(rxuserrdy_counter_reg[7:4]));
  FDRE #(
    .INIT(1'b0)) 
    \rxuserrdy_counter_reg[5] 
       (.C(CLK),
        .CE(sel),
        .D(\rxuserrdy_counter_reg[4]_i_1_n_6 ),
        .Q(rxuserrdy_counter_reg[5]),
        .R(rxuserrdy_counter0));
  FDRE #(
    .INIT(1'b0)) 
    \rxuserrdy_counter_reg[6] 
       (.C(CLK),
        .CE(sel),
        .D(\rxuserrdy_counter_reg[4]_i_1_n_5 ),
        .Q(rxuserrdy_counter_reg[6]),
        .R(rxuserrdy_counter0));
  FDRE #(
    .INIT(1'b0)) 
    \rxuserrdy_counter_reg[7] 
       (.C(CLK),
        .CE(sel),
        .D(\rxuserrdy_counter_reg[4]_i_1_n_4 ),
        .Q(rxuserrdy_counter_reg[7]),
        .R(rxuserrdy_counter0));
  FDRE #(
    .INIT(1'b0)) 
    \rxuserrdy_counter_reg[8] 
       (.C(CLK),
        .CE(sel),
        .D(\rxuserrdy_counter_reg[8]_i_1_n_7 ),
        .Q(rxuserrdy_counter_reg[8]),
        .R(rxuserrdy_counter0));
  CARRY4 \rxuserrdy_counter_reg[8]_i_1 
       (.CI(\rxuserrdy_counter_reg[4]_i_1_n_0 ),
        .CO({\rxuserrdy_counter_reg[8]_i_1_n_0 ,\rxuserrdy_counter_reg[8]_i_1_n_1 ,\rxuserrdy_counter_reg[8]_i_1_n_2 ,\rxuserrdy_counter_reg[8]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\rxuserrdy_counter_reg[8]_i_1_n_4 ,\rxuserrdy_counter_reg[8]_i_1_n_5 ,\rxuserrdy_counter_reg[8]_i_1_n_6 ,\rxuserrdy_counter_reg[8]_i_1_n_7 }),
        .S(rxuserrdy_counter_reg[11:8]));
  FDRE #(
    .INIT(1'b0)) 
    \rxuserrdy_counter_reg[9] 
       (.C(CLK),
        .CE(sel),
        .D(\rxuserrdy_counter_reg[8]_i_1_n_6 ),
        .Q(rxuserrdy_counter_reg[9]),
        .R(rxuserrdy_counter0));
  FDRE #(
    .INIT(1'b0)) 
    rxuserrdy_reg
       (.C(CLK),
        .CE(1'b1),
        .D(sim_speedup_controller_inst_n_7),
        .Q(gt0_rxuserrdy_i),
        .R(1'b0));
  ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_ff_synchronizer_17 signal_detect_coreclk_sync_i
       (.coreclk(coreclk),
        .signal_detect(signal_detect),
        .signal_detect_coreclk(signal_detect_coreclk));
  ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_ff_synchronizer_18 signal_detect_dclk_sync_i
       (.dclk(dclk),
        .signal_detect(signal_detect),
        .signal_detect_dclk(signal_detect_dclk));
  ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_sim_speedup_controller sim_speedup_controller_inst
       (.CO(rxuserrdy_counter1_carry__0_n_0),
        .S({sim_speedup_controller_inst_n_0,sim_speedup_controller_inst_n_1,sim_speedup_controller_inst_n_2,sim_speedup_controller_inst_n_3}),
        .coreclk(coreclk),
        .gt0_rxuserrdy_i(gt0_rxuserrdy_i),
        .gtrxreset_rxusrclk2(gtrxreset_rxusrclk2),
        .rxuserrdy_counter_reg(rxuserrdy_counter_reg[20:0]),
        .\rxuserrdy_counter_reg[19] ({sim_speedup_controller_inst_n_4,sim_speedup_controller_inst_n_5,sim_speedup_controller_inst_n_6}),
        .rxuserrdy_reg(sim_speedup_controller_inst_n_7),
        .sim_speedup_control(sim_speedup_control));
  ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_ff_synchronizer_rst__parameterized0 txreset_txusrclk2_sync_i
       (.AS(AS),
        .txreset_txusrclk2(txreset_txusrclk2),
        .txusrclk2(txusrclk2));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_sim_speedup_controller" *) 
module ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_sim_speedup_controller
   (S,
    \rxuserrdy_counter_reg[19] ,
    rxuserrdy_reg,
    sim_speedup_control,
    coreclk,
    rxuserrdy_counter_reg,
    gt0_rxuserrdy_i,
    CO,
    gtrxreset_rxusrclk2);
  output [3:0]S;
  output [2:0]\rxuserrdy_counter_reg[19] ;
  output rxuserrdy_reg;
  input sim_speedup_control;
  input coreclk;
  input [20:0]rxuserrdy_counter_reg;
  input gt0_rxuserrdy_i;
  input [0:0]CO;
  input gtrxreset_rxusrclk2;

  wire [0:0]CO;
  wire [3:0]S;
  wire control_reg;
  wire control_reg1;
  wire control_rising;
  wire control_rising0;
  wire coreclk;
  wire gt0_rxuserrdy_i;
  wire gtrxreset_rxusrclk2;
  wire load_sim_speedup_value;
  wire load_sim_value_control;
  wire load_sim_value_control_del;
  wire [20:0]rxuserrdy_counter_reg;
  wire [2:0]\rxuserrdy_counter_reg[19] ;
  wire rxuserrdy_reg;
  wire sim_speedup_control;

  FDRE #(
    .INIT(1'b1)) 
    control_reg1_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(control_reg),
        .Q(control_reg1),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    control_reg_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(sim_speedup_control),
        .Q(control_reg),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h2)) 
    control_rising_i_1
       (.I0(control_reg),
        .I1(control_reg1),
        .O(control_rising0));
  FDRE #(
    .INIT(1'b0)) 
    control_rising_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(control_rising0),
        .Q(control_rising),
        .R(1'b0));
  (* BOX_TYPE = "PRIMITIVE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    load_sim_speedup_value_reg
       (.CLR(1'b0),
        .D(load_sim_value_control_del),
        .G(load_sim_value_control),
        .GE(1'b1),
        .Q(load_sim_speedup_value));
  LUT4 #(
    .INIT(16'h0014)) 
    rxuserrdy_counter1_carry__0_i_2
       (.I0(rxuserrdy_counter_reg[19]),
        .I1(load_sim_speedup_value),
        .I2(rxuserrdy_counter_reg[20]),
        .I3(rxuserrdy_counter_reg[18]),
        .O(\rxuserrdy_counter_reg[19] [2]));
  LUT4 #(
    .INIT(16'h0210)) 
    rxuserrdy_counter1_carry__0_i_3
       (.I0(rxuserrdy_counter_reg[15]),
        .I1(rxuserrdy_counter_reg[17]),
        .I2(load_sim_speedup_value),
        .I3(rxuserrdy_counter_reg[16]),
        .O(\rxuserrdy_counter_reg[19] [1]));
  LUT4 #(
    .INIT(16'h0014)) 
    rxuserrdy_counter1_carry__0_i_4
       (.I0(rxuserrdy_counter_reg[14]),
        .I1(load_sim_speedup_value),
        .I2(rxuserrdy_counter_reg[13]),
        .I3(rxuserrdy_counter_reg[12]),
        .O(\rxuserrdy_counter_reg[19] [0]));
  LUT4 #(
    .INIT(16'h0900)) 
    rxuserrdy_counter1_carry_i_1
       (.I0(rxuserrdy_counter_reg[9]),
        .I1(load_sim_speedup_value),
        .I2(rxuserrdy_counter_reg[11]),
        .I3(rxuserrdy_counter_reg[10]),
        .O(S[3]));
  LUT4 #(
    .INIT(16'h0014)) 
    rxuserrdy_counter1_carry_i_2
       (.I0(rxuserrdy_counter_reg[8]),
        .I1(load_sim_speedup_value),
        .I2(rxuserrdy_counter_reg[7]),
        .I3(rxuserrdy_counter_reg[6]),
        .O(S[2]));
  LUT4 #(
    .INIT(16'h0810)) 
    rxuserrdy_counter1_carry_i_3
       (.I0(rxuserrdy_counter_reg[3]),
        .I1(load_sim_speedup_value),
        .I2(rxuserrdy_counter_reg[5]),
        .I3(rxuserrdy_counter_reg[4]),
        .O(S[1]));
  LUT4 #(
    .INIT(16'h1800)) 
    rxuserrdy_counter1_carry_i_4
       (.I0(rxuserrdy_counter_reg[0]),
        .I1(load_sim_speedup_value),
        .I2(rxuserrdy_counter_reg[2]),
        .I3(rxuserrdy_counter_reg[1]),
        .O(S[0]));
  LUT3 #(
    .INIT(8'h0E)) 
    rxuserrdy_i_1
       (.I0(gt0_rxuserrdy_i),
        .I1(CO),
        .I2(gtrxreset_rxusrclk2),
        .O(rxuserrdy_reg));
  (* BOX_TYPE = "PRIMITIVE" *) 
  LUT1 #(
    .INIT(2'h2)) 
    simple_delay_inst
       (.I0(load_sim_value_control),
        .O(load_sim_value_control_del));
  LUT2 #(
    .INIT(4'h8)) 
    simple_delay_inst_i_1
       (.I0(control_rising),
        .I1(sim_speedup_control),
        .O(load_sim_value_control));
endmodule

(* C_1588 = "0" *) (* C_DP_WIDTH = "64" *) (* C_GTIF_WIDTH = "32" *) 
(* C_GTTYPE = "0" *) (* C_HAS_AN = "1'b0" *) (* C_HAS_FEC = "1'b0" *) 
(* C_HAS_MDIO = "1'b1" *) (* C_IS_32BIT = "1'b0" *) (* C_IS_KR = "1'b0" *) 
(* C_NO_EBUFF = "1'b0" *) (* C_REFCLKRATE = "156" *) (* C_SPEED10_25 = "10" *) 
(* DowngradeIPIdentifiedWarnings = "yes" *) (* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_15" *) 
module ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15
   (reset,
    areset_coreclk,
    txreset_txusrclk2,
    rxreset_rxusrclk2,
    areset_rxusrclk2,
    dclk_reset,
    lfreset,
    pma_resetout,
    pcs_resetout,
    coreclk,
    txusrclk2,
    rxusrclk2,
    dclk,
    fr_clk,
    sim_speedup_control,
    xgmii_txd,
    xgmii_txc,
    xgmii_rxd,
    xgmii_rxc,
    mdc,
    mdio_in,
    mdio_out,
    mdio_tri,
    prtad,
    pma_pmd_type,
    configuration_vector,
    status_vector,
    core_status,
    cable_pull,
    resetdone,
    gt_txd,
    gt_txc,
    gt_rxd,
    gt_rxc,
    gt_slip,
    drp_req,
    drp_gnt,
    drp_den,
    drp_dwe,
    drp_daddr,
    drp_di,
    drp_drdy,
    drp_drpdo,
    signal_detect,
    tx_fault,
    tx_disable,
    is_eval,
    gt_progdiv_reset,
    tx_prbs31_en,
    rx_prbs31_en,
    core_in_testmode,
    clear_rx_prbs_err_count,
    loopback_ctrl,
    an_enable,
    coeff_minus_1,
    coeff_plus_1,
    coeff_zero,
    txdiffctrl,
    training_enable,
    training_addr,
    training_rnw,
    training_wrdata,
    training_ipif_cs,
    training_drp_cs,
    training_rddata,
    training_rdack,
    training_wrack,
    systemtimer_s_field,
    systemtimer_ns_field,
    correction_timer,
    rxphy_s_field,
    rxphy_ns_field,
    rxphy_correction_timer,
    txphy_async_gb_latency,
    gt_rxstartofseq,
    gt_latclk);
  input reset;
  input areset_coreclk;
  input txreset_txusrclk2;
  input rxreset_rxusrclk2;
  input areset_rxusrclk2;
  input dclk_reset;
  input lfreset;
  output pma_resetout;
  output pcs_resetout;
  input coreclk;
  input txusrclk2;
  input rxusrclk2;
  input dclk;
  input fr_clk;
  input sim_speedup_control;
  input [63:0]xgmii_txd;
  input [7:0]xgmii_txc;
  output [63:0]xgmii_rxd;
  output [7:0]xgmii_rxc;
  input mdc;
  input mdio_in;
  output mdio_out;
  output mdio_tri;
  input [4:0]prtad;
  input [2:0]pma_pmd_type;
  input [535:0]configuration_vector;
  output [447:0]status_vector;
  output [7:0]core_status;
  output cable_pull;
  input resetdone;
  output [31:0]gt_txd;
  output [7:0]gt_txc;
  input [31:0]gt_rxd;
  input [7:0]gt_rxc;
  output gt_slip;
  output drp_req;
  input drp_gnt;
  output drp_den;
  output drp_dwe;
  output [15:0]drp_daddr;
  output [15:0]drp_di;
  input drp_drdy;
  input [15:0]drp_drpdo;
  input signal_detect;
  input tx_fault;
  output tx_disable;
  output is_eval;
  output gt_progdiv_reset;
  output tx_prbs31_en;
  output rx_prbs31_en;
  output core_in_testmode;
  output clear_rx_prbs_err_count;
  output [2:0]loopback_ctrl;
  input an_enable;
  output [4:0]coeff_minus_1;
  output [4:0]coeff_plus_1;
  output [6:0]coeff_zero;
  output [4:0]txdiffctrl;
  input training_enable;
  input [20:0]training_addr;
  input training_rnw;
  input [15:0]training_wrdata;
  input training_ipif_cs;
  input training_drp_cs;
  output [15:0]training_rddata;
  output training_rdack;
  output training_wrack;
  input [47:0]systemtimer_s_field;
  input [31:0]systemtimer_ns_field;
  input [63:0]correction_timer;
  output [47:0]rxphy_s_field;
  output [35:0]rxphy_ns_field;
  output [63:0]rxphy_correction_timer;
  output [15:0]txphy_async_gb_latency;
  input gt_rxstartofseq;
  input gt_latclk;

  wire \<const0> ;
  wire areset_coreclk;
  wire cable_pull;
  wire clear_rx_prbs_err_count;
  wire core_in_testmode;
  wire [0:0]\^core_status ;
  wire coreclk;
  wire dclk;
  wire dclk_reset;
  wire [15:0]drp_daddr;
  wire drp_den;
  wire [15:0]drp_di;
  wire drp_drdy;
  wire [15:0]drp_drpdo;
  wire drp_dwe;
  wire drp_gnt;
  wire drp_req;
  wire [7:0]gt_rxc;
  wire [31:0]gt_rxd;
  wire gt_slip;
  wire [7:0]gt_txc;
  wire [31:0]gt_txd;
  wire [1:1]\^loopback_ctrl ;
  wire mdc;
  wire mdio_in;
  wire mdio_out;
  wire mdio_tri;
  wire pcs_resetout;
  wire [2:0]pma_pmd_type;
  wire pma_resetout;
  wire [4:0]prtad;
  wire reset;
  wire resetdone;
  wire rx_prbs31_en;
  wire rxreset_rxusrclk2;
  wire rxusrclk2;
  wire signal_detect;
  wire tx_disable;
  wire tx_prbs31_en;
  wire txreset_txusrclk2;
  wire txusrclk2;
  wire [7:0]xgmii_rxc;
  wire [63:0]xgmii_rxd;
  wire [7:0]xgmii_txc;
  wire [63:0]xgmii_txd;

  assign coeff_minus_1[4] = \<const0> ;
  assign coeff_minus_1[3] = \<const0> ;
  assign coeff_minus_1[2] = \<const0> ;
  assign coeff_minus_1[1] = \<const0> ;
  assign coeff_minus_1[0] = \<const0> ;
  assign coeff_plus_1[4] = \<const0> ;
  assign coeff_plus_1[3] = \<const0> ;
  assign coeff_plus_1[2] = \<const0> ;
  assign coeff_plus_1[1] = \<const0> ;
  assign coeff_plus_1[0] = \<const0> ;
  assign coeff_zero[6] = \<const0> ;
  assign coeff_zero[5] = \<const0> ;
  assign coeff_zero[4] = \<const0> ;
  assign coeff_zero[3] = \<const0> ;
  assign coeff_zero[2] = \<const0> ;
  assign coeff_zero[1] = \<const0> ;
  assign coeff_zero[0] = \<const0> ;
  assign core_status[7] = \<const0> ;
  assign core_status[6] = \<const0> ;
  assign core_status[5] = \<const0> ;
  assign core_status[4] = \<const0> ;
  assign core_status[3] = \<const0> ;
  assign core_status[2] = \<const0> ;
  assign core_status[1] = \<const0> ;
  assign core_status[0] = \^core_status [0];
  assign gt_progdiv_reset = \<const0> ;
  assign is_eval = \<const0> ;
  assign loopback_ctrl[2] = \<const0> ;
  assign loopback_ctrl[1] = \^loopback_ctrl [1];
  assign loopback_ctrl[0] = \<const0> ;
  assign rxphy_correction_timer[63] = \<const0> ;
  assign rxphy_correction_timer[62] = \<const0> ;
  assign rxphy_correction_timer[61] = \<const0> ;
  assign rxphy_correction_timer[60] = \<const0> ;
  assign rxphy_correction_timer[59] = \<const0> ;
  assign rxphy_correction_timer[58] = \<const0> ;
  assign rxphy_correction_timer[57] = \<const0> ;
  assign rxphy_correction_timer[56] = \<const0> ;
  assign rxphy_correction_timer[55] = \<const0> ;
  assign rxphy_correction_timer[54] = \<const0> ;
  assign rxphy_correction_timer[53] = \<const0> ;
  assign rxphy_correction_timer[52] = \<const0> ;
  assign rxphy_correction_timer[51] = \<const0> ;
  assign rxphy_correction_timer[50] = \<const0> ;
  assign rxphy_correction_timer[49] = \<const0> ;
  assign rxphy_correction_timer[48] = \<const0> ;
  assign rxphy_correction_timer[47] = \<const0> ;
  assign rxphy_correction_timer[46] = \<const0> ;
  assign rxphy_correction_timer[45] = \<const0> ;
  assign rxphy_correction_timer[44] = \<const0> ;
  assign rxphy_correction_timer[43] = \<const0> ;
  assign rxphy_correction_timer[42] = \<const0> ;
  assign rxphy_correction_timer[41] = \<const0> ;
  assign rxphy_correction_timer[40] = \<const0> ;
  assign rxphy_correction_timer[39] = \<const0> ;
  assign rxphy_correction_timer[38] = \<const0> ;
  assign rxphy_correction_timer[37] = \<const0> ;
  assign rxphy_correction_timer[36] = \<const0> ;
  assign rxphy_correction_timer[35] = \<const0> ;
  assign rxphy_correction_timer[34] = \<const0> ;
  assign rxphy_correction_timer[33] = \<const0> ;
  assign rxphy_correction_timer[32] = \<const0> ;
  assign rxphy_correction_timer[31] = \<const0> ;
  assign rxphy_correction_timer[30] = \<const0> ;
  assign rxphy_correction_timer[29] = \<const0> ;
  assign rxphy_correction_timer[28] = \<const0> ;
  assign rxphy_correction_timer[27] = \<const0> ;
  assign rxphy_correction_timer[26] = \<const0> ;
  assign rxphy_correction_timer[25] = \<const0> ;
  assign rxphy_correction_timer[24] = \<const0> ;
  assign rxphy_correction_timer[23] = \<const0> ;
  assign rxphy_correction_timer[22] = \<const0> ;
  assign rxphy_correction_timer[21] = \<const0> ;
  assign rxphy_correction_timer[20] = \<const0> ;
  assign rxphy_correction_timer[19] = \<const0> ;
  assign rxphy_correction_timer[18] = \<const0> ;
  assign rxphy_correction_timer[17] = \<const0> ;
  assign rxphy_correction_timer[16] = \<const0> ;
  assign rxphy_correction_timer[15] = \<const0> ;
  assign rxphy_correction_timer[14] = \<const0> ;
  assign rxphy_correction_timer[13] = \<const0> ;
  assign rxphy_correction_timer[12] = \<const0> ;
  assign rxphy_correction_timer[11] = \<const0> ;
  assign rxphy_correction_timer[10] = \<const0> ;
  assign rxphy_correction_timer[9] = \<const0> ;
  assign rxphy_correction_timer[8] = \<const0> ;
  assign rxphy_correction_timer[7] = \<const0> ;
  assign rxphy_correction_timer[6] = \<const0> ;
  assign rxphy_correction_timer[5] = \<const0> ;
  assign rxphy_correction_timer[4] = \<const0> ;
  assign rxphy_correction_timer[3] = \<const0> ;
  assign rxphy_correction_timer[2] = \<const0> ;
  assign rxphy_correction_timer[1] = \<const0> ;
  assign rxphy_correction_timer[0] = \<const0> ;
  assign rxphy_ns_field[35] = \<const0> ;
  assign rxphy_ns_field[34] = \<const0> ;
  assign rxphy_ns_field[33] = \<const0> ;
  assign rxphy_ns_field[32] = \<const0> ;
  assign rxphy_ns_field[31] = \<const0> ;
  assign rxphy_ns_field[30] = \<const0> ;
  assign rxphy_ns_field[29] = \<const0> ;
  assign rxphy_ns_field[28] = \<const0> ;
  assign rxphy_ns_field[27] = \<const0> ;
  assign rxphy_ns_field[26] = \<const0> ;
  assign rxphy_ns_field[25] = \<const0> ;
  assign rxphy_ns_field[24] = \<const0> ;
  assign rxphy_ns_field[23] = \<const0> ;
  assign rxphy_ns_field[22] = \<const0> ;
  assign rxphy_ns_field[21] = \<const0> ;
  assign rxphy_ns_field[20] = \<const0> ;
  assign rxphy_ns_field[19] = \<const0> ;
  assign rxphy_ns_field[18] = \<const0> ;
  assign rxphy_ns_field[17] = \<const0> ;
  assign rxphy_ns_field[16] = \<const0> ;
  assign rxphy_ns_field[15] = \<const0> ;
  assign rxphy_ns_field[14] = \<const0> ;
  assign rxphy_ns_field[13] = \<const0> ;
  assign rxphy_ns_field[12] = \<const0> ;
  assign rxphy_ns_field[11] = \<const0> ;
  assign rxphy_ns_field[10] = \<const0> ;
  assign rxphy_ns_field[9] = \<const0> ;
  assign rxphy_ns_field[8] = \<const0> ;
  assign rxphy_ns_field[7] = \<const0> ;
  assign rxphy_ns_field[6] = \<const0> ;
  assign rxphy_ns_field[5] = \<const0> ;
  assign rxphy_ns_field[4] = \<const0> ;
  assign rxphy_ns_field[3] = \<const0> ;
  assign rxphy_ns_field[2] = \<const0> ;
  assign rxphy_ns_field[1] = \<const0> ;
  assign rxphy_ns_field[0] = \<const0> ;
  assign rxphy_s_field[47] = \<const0> ;
  assign rxphy_s_field[46] = \<const0> ;
  assign rxphy_s_field[45] = \<const0> ;
  assign rxphy_s_field[44] = \<const0> ;
  assign rxphy_s_field[43] = \<const0> ;
  assign rxphy_s_field[42] = \<const0> ;
  assign rxphy_s_field[41] = \<const0> ;
  assign rxphy_s_field[40] = \<const0> ;
  assign rxphy_s_field[39] = \<const0> ;
  assign rxphy_s_field[38] = \<const0> ;
  assign rxphy_s_field[37] = \<const0> ;
  assign rxphy_s_field[36] = \<const0> ;
  assign rxphy_s_field[35] = \<const0> ;
  assign rxphy_s_field[34] = \<const0> ;
  assign rxphy_s_field[33] = \<const0> ;
  assign rxphy_s_field[32] = \<const0> ;
  assign rxphy_s_field[31] = \<const0> ;
  assign rxphy_s_field[30] = \<const0> ;
  assign rxphy_s_field[29] = \<const0> ;
  assign rxphy_s_field[28] = \<const0> ;
  assign rxphy_s_field[27] = \<const0> ;
  assign rxphy_s_field[26] = \<const0> ;
  assign rxphy_s_field[25] = \<const0> ;
  assign rxphy_s_field[24] = \<const0> ;
  assign rxphy_s_field[23] = \<const0> ;
  assign rxphy_s_field[22] = \<const0> ;
  assign rxphy_s_field[21] = \<const0> ;
  assign rxphy_s_field[20] = \<const0> ;
  assign rxphy_s_field[19] = \<const0> ;
  assign rxphy_s_field[18] = \<const0> ;
  assign rxphy_s_field[17] = \<const0> ;
  assign rxphy_s_field[16] = \<const0> ;
  assign rxphy_s_field[15] = \<const0> ;
  assign rxphy_s_field[14] = \<const0> ;
  assign rxphy_s_field[13] = \<const0> ;
  assign rxphy_s_field[12] = \<const0> ;
  assign rxphy_s_field[11] = \<const0> ;
  assign rxphy_s_field[10] = \<const0> ;
  assign rxphy_s_field[9] = \<const0> ;
  assign rxphy_s_field[8] = \<const0> ;
  assign rxphy_s_field[7] = \<const0> ;
  assign rxphy_s_field[6] = \<const0> ;
  assign rxphy_s_field[5] = \<const0> ;
  assign rxphy_s_field[4] = \<const0> ;
  assign rxphy_s_field[3] = \<const0> ;
  assign rxphy_s_field[2] = \<const0> ;
  assign rxphy_s_field[1] = \<const0> ;
  assign rxphy_s_field[0] = \<const0> ;
  assign status_vector[447] = \<const0> ;
  assign status_vector[446] = \<const0> ;
  assign status_vector[445] = \<const0> ;
  assign status_vector[444] = \<const0> ;
  assign status_vector[443] = \<const0> ;
  assign status_vector[442] = \<const0> ;
  assign status_vector[441] = \<const0> ;
  assign status_vector[440] = \<const0> ;
  assign status_vector[439] = \<const0> ;
  assign status_vector[438] = \<const0> ;
  assign status_vector[437] = \<const0> ;
  assign status_vector[436] = \<const0> ;
  assign status_vector[435] = \<const0> ;
  assign status_vector[434] = \<const0> ;
  assign status_vector[433] = \<const0> ;
  assign status_vector[432] = \<const0> ;
  assign status_vector[431] = \<const0> ;
  assign status_vector[430] = \<const0> ;
  assign status_vector[429] = \<const0> ;
  assign status_vector[428] = \<const0> ;
  assign status_vector[427] = \<const0> ;
  assign status_vector[426] = \<const0> ;
  assign status_vector[425] = \<const0> ;
  assign status_vector[424] = \<const0> ;
  assign status_vector[423] = \<const0> ;
  assign status_vector[422] = \<const0> ;
  assign status_vector[421] = \<const0> ;
  assign status_vector[420] = \<const0> ;
  assign status_vector[419] = \<const0> ;
  assign status_vector[418] = \<const0> ;
  assign status_vector[417] = \<const0> ;
  assign status_vector[416] = \<const0> ;
  assign status_vector[415] = \<const0> ;
  assign status_vector[414] = \<const0> ;
  assign status_vector[413] = \<const0> ;
  assign status_vector[412] = \<const0> ;
  assign status_vector[411] = \<const0> ;
  assign status_vector[410] = \<const0> ;
  assign status_vector[409] = \<const0> ;
  assign status_vector[408] = \<const0> ;
  assign status_vector[407] = \<const0> ;
  assign status_vector[406] = \<const0> ;
  assign status_vector[405] = \<const0> ;
  assign status_vector[404] = \<const0> ;
  assign status_vector[403] = \<const0> ;
  assign status_vector[402] = \<const0> ;
  assign status_vector[401] = \<const0> ;
  assign status_vector[400] = \<const0> ;
  assign status_vector[399] = \<const0> ;
  assign status_vector[398] = \<const0> ;
  assign status_vector[397] = \<const0> ;
  assign status_vector[396] = \<const0> ;
  assign status_vector[395] = \<const0> ;
  assign status_vector[394] = \<const0> ;
  assign status_vector[393] = \<const0> ;
  assign status_vector[392] = \<const0> ;
  assign status_vector[391] = \<const0> ;
  assign status_vector[390] = \<const0> ;
  assign status_vector[389] = \<const0> ;
  assign status_vector[388] = \<const0> ;
  assign status_vector[387] = \<const0> ;
  assign status_vector[386] = \<const0> ;
  assign status_vector[385] = \<const0> ;
  assign status_vector[384] = \<const0> ;
  assign status_vector[383] = \<const0> ;
  assign status_vector[382] = \<const0> ;
  assign status_vector[381] = \<const0> ;
  assign status_vector[380] = \<const0> ;
  assign status_vector[379] = \<const0> ;
  assign status_vector[378] = \<const0> ;
  assign status_vector[377] = \<const0> ;
  assign status_vector[376] = \<const0> ;
  assign status_vector[375] = \<const0> ;
  assign status_vector[374] = \<const0> ;
  assign status_vector[373] = \<const0> ;
  assign status_vector[372] = \<const0> ;
  assign status_vector[371] = \<const0> ;
  assign status_vector[370] = \<const0> ;
  assign status_vector[369] = \<const0> ;
  assign status_vector[368] = \<const0> ;
  assign status_vector[367] = \<const0> ;
  assign status_vector[366] = \<const0> ;
  assign status_vector[365] = \<const0> ;
  assign status_vector[364] = \<const0> ;
  assign status_vector[363] = \<const0> ;
  assign status_vector[362] = \<const0> ;
  assign status_vector[361] = \<const0> ;
  assign status_vector[360] = \<const0> ;
  assign status_vector[359] = \<const0> ;
  assign status_vector[358] = \<const0> ;
  assign status_vector[357] = \<const0> ;
  assign status_vector[356] = \<const0> ;
  assign status_vector[355] = \<const0> ;
  assign status_vector[354] = \<const0> ;
  assign status_vector[353] = \<const0> ;
  assign status_vector[352] = \<const0> ;
  assign status_vector[351] = \<const0> ;
  assign status_vector[350] = \<const0> ;
  assign status_vector[349] = \<const0> ;
  assign status_vector[348] = \<const0> ;
  assign status_vector[347] = \<const0> ;
  assign status_vector[346] = \<const0> ;
  assign status_vector[345] = \<const0> ;
  assign status_vector[344] = \<const0> ;
  assign status_vector[343] = \<const0> ;
  assign status_vector[342] = \<const0> ;
  assign status_vector[341] = \<const0> ;
  assign status_vector[340] = \<const0> ;
  assign status_vector[339] = \<const0> ;
  assign status_vector[338] = \<const0> ;
  assign status_vector[337] = \<const0> ;
  assign status_vector[336] = \<const0> ;
  assign status_vector[335] = \<const0> ;
  assign status_vector[334] = \<const0> ;
  assign status_vector[333] = \<const0> ;
  assign status_vector[332] = \<const0> ;
  assign status_vector[331] = \<const0> ;
  assign status_vector[330] = \<const0> ;
  assign status_vector[329] = \<const0> ;
  assign status_vector[328] = \<const0> ;
  assign status_vector[327] = \<const0> ;
  assign status_vector[326] = \<const0> ;
  assign status_vector[325] = \<const0> ;
  assign status_vector[324] = \<const0> ;
  assign status_vector[323] = \<const0> ;
  assign status_vector[322] = \<const0> ;
  assign status_vector[321] = \<const0> ;
  assign status_vector[320] = \<const0> ;
  assign status_vector[319] = \<const0> ;
  assign status_vector[318] = \<const0> ;
  assign status_vector[317] = \<const0> ;
  assign status_vector[316] = \<const0> ;
  assign status_vector[315] = \<const0> ;
  assign status_vector[314] = \<const0> ;
  assign status_vector[313] = \<const0> ;
  assign status_vector[312] = \<const0> ;
  assign status_vector[311] = \<const0> ;
  assign status_vector[310] = \<const0> ;
  assign status_vector[309] = \<const0> ;
  assign status_vector[308] = \<const0> ;
  assign status_vector[307] = \<const0> ;
  assign status_vector[306] = \<const0> ;
  assign status_vector[305] = \<const0> ;
  assign status_vector[304] = \<const0> ;
  assign status_vector[303] = \<const0> ;
  assign status_vector[302] = \<const0> ;
  assign status_vector[301] = \<const0> ;
  assign status_vector[300] = \<const0> ;
  assign status_vector[299] = \<const0> ;
  assign status_vector[298] = \<const0> ;
  assign status_vector[297] = \<const0> ;
  assign status_vector[296] = \<const0> ;
  assign status_vector[295] = \<const0> ;
  assign status_vector[294] = \<const0> ;
  assign status_vector[293] = \<const0> ;
  assign status_vector[292] = \<const0> ;
  assign status_vector[291] = \<const0> ;
  assign status_vector[290] = \<const0> ;
  assign status_vector[289] = \<const0> ;
  assign status_vector[288] = \<const0> ;
  assign status_vector[287] = \<const0> ;
  assign status_vector[286] = \<const0> ;
  assign status_vector[285] = \<const0> ;
  assign status_vector[284] = \<const0> ;
  assign status_vector[283] = \<const0> ;
  assign status_vector[282] = \<const0> ;
  assign status_vector[281] = \<const0> ;
  assign status_vector[280] = \<const0> ;
  assign status_vector[279] = \<const0> ;
  assign status_vector[278] = \<const0> ;
  assign status_vector[277] = \<const0> ;
  assign status_vector[276] = \<const0> ;
  assign status_vector[275] = \<const0> ;
  assign status_vector[274] = \<const0> ;
  assign status_vector[273] = \<const0> ;
  assign status_vector[272] = \<const0> ;
  assign status_vector[271] = \<const0> ;
  assign status_vector[270] = \<const0> ;
  assign status_vector[269] = \<const0> ;
  assign status_vector[268] = \<const0> ;
  assign status_vector[267] = \<const0> ;
  assign status_vector[266] = \<const0> ;
  assign status_vector[265] = \<const0> ;
  assign status_vector[264] = \<const0> ;
  assign status_vector[263] = \<const0> ;
  assign status_vector[262] = \<const0> ;
  assign status_vector[261] = \<const0> ;
  assign status_vector[260] = \<const0> ;
  assign status_vector[259] = \<const0> ;
  assign status_vector[258] = \<const0> ;
  assign status_vector[257] = \<const0> ;
  assign status_vector[256] = \<const0> ;
  assign status_vector[255] = \<const0> ;
  assign status_vector[254] = \<const0> ;
  assign status_vector[253] = \<const0> ;
  assign status_vector[252] = \<const0> ;
  assign status_vector[251] = \<const0> ;
  assign status_vector[250] = \<const0> ;
  assign status_vector[249] = \<const0> ;
  assign status_vector[248] = \<const0> ;
  assign status_vector[247] = \<const0> ;
  assign status_vector[246] = \<const0> ;
  assign status_vector[245] = \<const0> ;
  assign status_vector[244] = \<const0> ;
  assign status_vector[243] = \<const0> ;
  assign status_vector[242] = \<const0> ;
  assign status_vector[241] = \<const0> ;
  assign status_vector[240] = \<const0> ;
  assign status_vector[239] = \<const0> ;
  assign status_vector[238] = \<const0> ;
  assign status_vector[237] = \<const0> ;
  assign status_vector[236] = \<const0> ;
  assign status_vector[235] = \<const0> ;
  assign status_vector[234] = \<const0> ;
  assign status_vector[233] = \<const0> ;
  assign status_vector[232] = \<const0> ;
  assign status_vector[231] = \<const0> ;
  assign status_vector[230] = \<const0> ;
  assign status_vector[229] = \<const0> ;
  assign status_vector[228] = \<const0> ;
  assign status_vector[227] = \<const0> ;
  assign status_vector[226] = \<const0> ;
  assign status_vector[225] = \<const0> ;
  assign status_vector[224] = \<const0> ;
  assign status_vector[223] = \<const0> ;
  assign status_vector[222] = \<const0> ;
  assign status_vector[221] = \<const0> ;
  assign status_vector[220] = \<const0> ;
  assign status_vector[219] = \<const0> ;
  assign status_vector[218] = \<const0> ;
  assign status_vector[217] = \<const0> ;
  assign status_vector[216] = \<const0> ;
  assign status_vector[215] = \<const0> ;
  assign status_vector[214] = \<const0> ;
  assign status_vector[213] = \<const0> ;
  assign status_vector[212] = \<const0> ;
  assign status_vector[211] = \<const0> ;
  assign status_vector[210] = \<const0> ;
  assign status_vector[209] = \<const0> ;
  assign status_vector[208] = \<const0> ;
  assign status_vector[207] = \<const0> ;
  assign status_vector[206] = \<const0> ;
  assign status_vector[205] = \<const0> ;
  assign status_vector[204] = \<const0> ;
  assign status_vector[203] = \<const0> ;
  assign status_vector[202] = \<const0> ;
  assign status_vector[201] = \<const0> ;
  assign status_vector[200] = \<const0> ;
  assign status_vector[199] = \<const0> ;
  assign status_vector[198] = \<const0> ;
  assign status_vector[197] = \<const0> ;
  assign status_vector[196] = \<const0> ;
  assign status_vector[195] = \<const0> ;
  assign status_vector[194] = \<const0> ;
  assign status_vector[193] = \<const0> ;
  assign status_vector[192] = \<const0> ;
  assign status_vector[191] = \<const0> ;
  assign status_vector[190] = \<const0> ;
  assign status_vector[189] = \<const0> ;
  assign status_vector[188] = \<const0> ;
  assign status_vector[187] = \<const0> ;
  assign status_vector[186] = \<const0> ;
  assign status_vector[185] = \<const0> ;
  assign status_vector[184] = \<const0> ;
  assign status_vector[183] = \<const0> ;
  assign status_vector[182] = \<const0> ;
  assign status_vector[181] = \<const0> ;
  assign status_vector[180] = \<const0> ;
  assign status_vector[179] = \<const0> ;
  assign status_vector[178] = \<const0> ;
  assign status_vector[177] = \<const0> ;
  assign status_vector[176] = \<const0> ;
  assign status_vector[175] = \<const0> ;
  assign status_vector[174] = \<const0> ;
  assign status_vector[173] = \<const0> ;
  assign status_vector[172] = \<const0> ;
  assign status_vector[171] = \<const0> ;
  assign status_vector[170] = \<const0> ;
  assign status_vector[169] = \<const0> ;
  assign status_vector[168] = \<const0> ;
  assign status_vector[167] = \<const0> ;
  assign status_vector[166] = \<const0> ;
  assign status_vector[165] = \<const0> ;
  assign status_vector[164] = \<const0> ;
  assign status_vector[163] = \<const0> ;
  assign status_vector[162] = \<const0> ;
  assign status_vector[161] = \<const0> ;
  assign status_vector[160] = \<const0> ;
  assign status_vector[159] = \<const0> ;
  assign status_vector[158] = \<const0> ;
  assign status_vector[157] = \<const0> ;
  assign status_vector[156] = \<const0> ;
  assign status_vector[155] = \<const0> ;
  assign status_vector[154] = \<const0> ;
  assign status_vector[153] = \<const0> ;
  assign status_vector[152] = \<const0> ;
  assign status_vector[151] = \<const0> ;
  assign status_vector[150] = \<const0> ;
  assign status_vector[149] = \<const0> ;
  assign status_vector[148] = \<const0> ;
  assign status_vector[147] = \<const0> ;
  assign status_vector[146] = \<const0> ;
  assign status_vector[145] = \<const0> ;
  assign status_vector[144] = \<const0> ;
  assign status_vector[143] = \<const0> ;
  assign status_vector[142] = \<const0> ;
  assign status_vector[141] = \<const0> ;
  assign status_vector[140] = \<const0> ;
  assign status_vector[139] = \<const0> ;
  assign status_vector[138] = \<const0> ;
  assign status_vector[137] = \<const0> ;
  assign status_vector[136] = \<const0> ;
  assign status_vector[135] = \<const0> ;
  assign status_vector[134] = \<const0> ;
  assign status_vector[133] = \<const0> ;
  assign status_vector[132] = \<const0> ;
  assign status_vector[131] = \<const0> ;
  assign status_vector[130] = \<const0> ;
  assign status_vector[129] = \<const0> ;
  assign status_vector[128] = \<const0> ;
  assign status_vector[127] = \<const0> ;
  assign status_vector[126] = \<const0> ;
  assign status_vector[125] = \<const0> ;
  assign status_vector[124] = \<const0> ;
  assign status_vector[123] = \<const0> ;
  assign status_vector[122] = \<const0> ;
  assign status_vector[121] = \<const0> ;
  assign status_vector[120] = \<const0> ;
  assign status_vector[119] = \<const0> ;
  assign status_vector[118] = \<const0> ;
  assign status_vector[117] = \<const0> ;
  assign status_vector[116] = \<const0> ;
  assign status_vector[115] = \<const0> ;
  assign status_vector[114] = \<const0> ;
  assign status_vector[113] = \<const0> ;
  assign status_vector[112] = \<const0> ;
  assign status_vector[111] = \<const0> ;
  assign status_vector[110] = \<const0> ;
  assign status_vector[109] = \<const0> ;
  assign status_vector[108] = \<const0> ;
  assign status_vector[107] = \<const0> ;
  assign status_vector[106] = \<const0> ;
  assign status_vector[105] = \<const0> ;
  assign status_vector[104] = \<const0> ;
  assign status_vector[103] = \<const0> ;
  assign status_vector[102] = \<const0> ;
  assign status_vector[101] = \<const0> ;
  assign status_vector[100] = \<const0> ;
  assign status_vector[99] = \<const0> ;
  assign status_vector[98] = \<const0> ;
  assign status_vector[97] = \<const0> ;
  assign status_vector[96] = \<const0> ;
  assign status_vector[95] = \<const0> ;
  assign status_vector[94] = \<const0> ;
  assign status_vector[93] = \<const0> ;
  assign status_vector[92] = \<const0> ;
  assign status_vector[91] = \<const0> ;
  assign status_vector[90] = \<const0> ;
  assign status_vector[89] = \<const0> ;
  assign status_vector[88] = \<const0> ;
  assign status_vector[87] = \<const0> ;
  assign status_vector[86] = \<const0> ;
  assign status_vector[85] = \<const0> ;
  assign status_vector[84] = \<const0> ;
  assign status_vector[83] = \<const0> ;
  assign status_vector[82] = \<const0> ;
  assign status_vector[81] = \<const0> ;
  assign status_vector[80] = \<const0> ;
  assign status_vector[79] = \<const0> ;
  assign status_vector[78] = \<const0> ;
  assign status_vector[77] = \<const0> ;
  assign status_vector[76] = \<const0> ;
  assign status_vector[75] = \<const0> ;
  assign status_vector[74] = \<const0> ;
  assign status_vector[73] = \<const0> ;
  assign status_vector[72] = \<const0> ;
  assign status_vector[71] = \<const0> ;
  assign status_vector[70] = \<const0> ;
  assign status_vector[69] = \<const0> ;
  assign status_vector[68] = \<const0> ;
  assign status_vector[67] = \<const0> ;
  assign status_vector[66] = \<const0> ;
  assign status_vector[65] = \<const0> ;
  assign status_vector[64] = \<const0> ;
  assign status_vector[63] = \<const0> ;
  assign status_vector[62] = \<const0> ;
  assign status_vector[61] = \<const0> ;
  assign status_vector[60] = \<const0> ;
  assign status_vector[59] = \<const0> ;
  assign status_vector[58] = \<const0> ;
  assign status_vector[57] = \<const0> ;
  assign status_vector[56] = \<const0> ;
  assign status_vector[55] = \<const0> ;
  assign status_vector[54] = \<const0> ;
  assign status_vector[53] = \<const0> ;
  assign status_vector[52] = \<const0> ;
  assign status_vector[51] = \<const0> ;
  assign status_vector[50] = \<const0> ;
  assign status_vector[49] = \<const0> ;
  assign status_vector[48] = \<const0> ;
  assign status_vector[47] = \<const0> ;
  assign status_vector[46] = \<const0> ;
  assign status_vector[45] = \<const0> ;
  assign status_vector[44] = \<const0> ;
  assign status_vector[43] = \<const0> ;
  assign status_vector[42] = \<const0> ;
  assign status_vector[41] = \<const0> ;
  assign status_vector[40] = \<const0> ;
  assign status_vector[39] = \<const0> ;
  assign status_vector[38] = \<const0> ;
  assign status_vector[37] = \<const0> ;
  assign status_vector[36] = \<const0> ;
  assign status_vector[35] = \<const0> ;
  assign status_vector[34] = \<const0> ;
  assign status_vector[33] = \<const0> ;
  assign status_vector[32] = \<const0> ;
  assign status_vector[31] = \<const0> ;
  assign status_vector[30] = \<const0> ;
  assign status_vector[29] = \<const0> ;
  assign status_vector[28] = \<const0> ;
  assign status_vector[27] = \<const0> ;
  assign status_vector[26] = \<const0> ;
  assign status_vector[25] = \<const0> ;
  assign status_vector[24] = \<const0> ;
  assign status_vector[23] = \<const0> ;
  assign status_vector[22] = \<const0> ;
  assign status_vector[21] = \<const0> ;
  assign status_vector[20] = \<const0> ;
  assign status_vector[19] = \<const0> ;
  assign status_vector[18] = \<const0> ;
  assign status_vector[17] = \<const0> ;
  assign status_vector[16] = \<const0> ;
  assign status_vector[15] = \<const0> ;
  assign status_vector[14] = \<const0> ;
  assign status_vector[13] = \<const0> ;
  assign status_vector[12] = \<const0> ;
  assign status_vector[11] = \<const0> ;
  assign status_vector[10] = \<const0> ;
  assign status_vector[9] = \<const0> ;
  assign status_vector[8] = \<const0> ;
  assign status_vector[7] = \<const0> ;
  assign status_vector[6] = \<const0> ;
  assign status_vector[5] = \<const0> ;
  assign status_vector[4] = \<const0> ;
  assign status_vector[3] = \<const0> ;
  assign status_vector[2] = \<const0> ;
  assign status_vector[1] = \<const0> ;
  assign status_vector[0] = \<const0> ;
  assign training_rdack = \<const0> ;
  assign training_rddata[15] = \<const0> ;
  assign training_rddata[14] = \<const0> ;
  assign training_rddata[13] = \<const0> ;
  assign training_rddata[12] = \<const0> ;
  assign training_rddata[11] = \<const0> ;
  assign training_rddata[10] = \<const0> ;
  assign training_rddata[9] = \<const0> ;
  assign training_rddata[8] = \<const0> ;
  assign training_rddata[7] = \<const0> ;
  assign training_rddata[6] = \<const0> ;
  assign training_rddata[5] = \<const0> ;
  assign training_rddata[4] = \<const0> ;
  assign training_rddata[3] = \<const0> ;
  assign training_rddata[2] = \<const0> ;
  assign training_rddata[1] = \<const0> ;
  assign training_rddata[0] = \<const0> ;
  assign training_wrack = \<const0> ;
  assign txdiffctrl[4] = \<const0> ;
  assign txdiffctrl[3] = \<const0> ;
  assign txdiffctrl[2] = \<const0> ;
  assign txdiffctrl[1] = \<const0> ;
  assign txdiffctrl[0] = \<const0> ;
  assign txphy_async_gb_latency[15] = \<const0> ;
  assign txphy_async_gb_latency[14] = \<const0> ;
  assign txphy_async_gb_latency[13] = \<const0> ;
  assign txphy_async_gb_latency[12] = \<const0> ;
  assign txphy_async_gb_latency[11] = \<const0> ;
  assign txphy_async_gb_latency[10] = \<const0> ;
  assign txphy_async_gb_latency[9] = \<const0> ;
  assign txphy_async_gb_latency[8] = \<const0> ;
  assign txphy_async_gb_latency[7] = \<const0> ;
  assign txphy_async_gb_latency[6] = \<const0> ;
  assign txphy_async_gb_latency[5] = \<const0> ;
  assign txphy_async_gb_latency[4] = \<const0> ;
  assign txphy_async_gb_latency[3] = \<const0> ;
  assign txphy_async_gb_latency[2] = \<const0> ;
  assign txphy_async_gb_latency[1] = \<const0> ;
  assign txphy_async_gb_latency[0] = \<const0> ;
  GND GND
       (.G(\<const0> ));
  ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_wrapper ten_gig_eth_pcs_pma_inst
       (.areset_coreclk(areset_coreclk),
        .cable_pull(cable_pull),
        .clear_rx_prbs_err_count(clear_rx_prbs_err_count),
        .core_in_testmode(core_in_testmode),
        .core_status(\^core_status ),
        .coreclk(coreclk),
        .data_out_reg(pcs_resetout),
        .dclk(dclk),
        .dclk_reset(dclk_reset),
        .drp_daddr(drp_daddr),
        .drp_den(drp_den),
        .drp_di(drp_di),
        .drp_drdy(drp_drdy),
        .drp_drpdo(drp_drpdo),
        .drp_dwe(drp_dwe),
        .drp_gnt(drp_gnt),
        .drp_req(drp_req),
        .gt_rxc(gt_rxc[3:0]),
        .gt_rxd(gt_rxd),
        .gt_slip(gt_slip),
        .gt_txc(gt_txc),
        .gt_txd(gt_txd),
        .loopback_ctrl(\^loopback_ctrl ),
        .mdc(mdc),
        .mdio_in(mdio_in),
        .mdio_out(mdio_out),
        .mdio_tri(mdio_tri),
        .pma_pmd_type(pma_pmd_type),
        .pma_resetout(pma_resetout),
        .prtad(prtad),
        .reset(reset),
        .resetdone(resetdone),
        .rx_prbs31_en(rx_prbs31_en),
        .rxreset_rxusrclk2(rxreset_rxusrclk2),
        .rxusrclk2(rxusrclk2),
        .signal_detect(signal_detect),
        .tx_disable(tx_disable),
        .tx_prbs31_en(tx_prbs31_en),
        .txreset_txusrclk2(txreset_txusrclk2),
        .txusrclk2(txusrclk2),
        .xgmii_rxc(xgmii_rxc),
        .xgmii_rxd(xgmii_rxd),
        .xgmii_txc(xgmii_txc),
        .xgmii_txd(xgmii_txd));
endmodule

(* DowngradeIPIdentifiedWarnings = "yes" *) (* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_15_asynch_fifo" *) (* WIDTH = "66" *) 
module ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_asynch_fifo
   (wr_clk,
    wr_clk_en,
    wr_reset,
    wr_en,
    wr_data,
    rd_clk,
    rd_clk_en,
    rd_reset,
    rd_en,
    full,
    empty,
    rd_data,
    fifo_wr_addr,
    fifo_rd_addr,
    status);
  input wr_clk;
  input wr_clk_en;
  input wr_reset;
  input wr_en;
  input [65:0]wr_data;
  input rd_clk;
  input rd_clk_en;
  input rd_reset;
  input rd_en;
  output full;
  output empty;
  output [65:0]rd_data;
  output [4:0]fifo_wr_addr;
  output [4:0]fifo_rd_addr;
  output [4:0]status;

  wire ecomp_0;
  wire ecomp_1;
  wire ecomp_2;
  wire ecomp_3;
  wire ecomp_4;
  wire empty;
  wire empty_allow0;
  wire empty_int_i_1_n_0;
  wire emptyg;
  wire emuxcyo_0;
  wire emuxcyo_1;
  wire emuxcyo_2;
  wire emuxcyo_3;
  wire fcomp_0;
  wire fcomp_01;
  wire fcomp_1;
  wire fcomp_2;
  wire fcomp_3;
  wire fcomp_4;
  wire [4:0]fifo_rd_addr;
  wire [4:0]fifo_wr_addr;
  wire fmuxcyo_0;
  wire fmuxcyo_1;
  wire fmuxcyo_2;
  wire fmuxcyo_3;
  wire full;
  wire full_int_i_1_n_0;
  wire fullg;
  wire p_0_in23_in;
  wire p_0_in27_in;
  wire p_0_in31_in;
  wire p_0_in35_in;
  wire p_0_in42_in;
  wire p_0_in46_in;
  wire p_0_in50_in;
  wire p_0_in54_in;
  wire [4:0]p_0_in__0;
  wire [4:0]p_0_in__1;
  wire p_3_in44_in;
  wire p_3_in48_in;
  wire p_3_in52_in;
  wire p_3_in56_in;
  wire p_4_in;
  wire [3:0]p_4_out;
  wire p_7_in;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire [4:0]rag_writesync;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire [4:0]rag_writesync0;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire [4:0]rag_writesync1;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire [4:0]rag_writesync2;
  wire ram_wr_en;
  wire rd_clk;
  wire rd_clk_en;
  wire [65:0]rd_data;
  wire rd_en;
  wire \rd_gray_reg_n_0_[0] ;
  wire [4:0]rd_lastgray;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire [4:0]rd_lastgray_wrclk;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire [4:0]rd_lastgray_wrclk0;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire [4:0]rd_lastgray_wrclk1;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire [4:0]rd_lastgray_wrclk2;
  wire rd_nextgray0;
  wire rd_nextgray018_out;
  wire rd_nextgray020_out;
  wire rd_nextgray022_out;
  wire rd_reset;
  wire [4:0]rd_truegray;
  wire [4:0]status;
  wire [4:0]status0;
  wire \status[4]_i_3_n_0 ;
  wire [4:0]wr_addr_pipe;
  wire [4:0]wr_addr_pipe0;
  wire [4:0]wr_addr_pipe1;
  wire wr_clk;
  wire wr_clk_en;
  wire [65:0]wr_data;
  wire wr_en;
  wire [4:0]wr_gray;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire [4:0]wr_gray_rdclk;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire [4:0]wr_gray_rdclk0;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire [4:0]wr_gray_rdclk1;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire [4:0]wr_gray_rdclk2;
  wire wr_reset;
  wire [3:0]NLW_emuxcy0_CARRY4_O_UNCONNECTED;
  wire [3:1]NLW_emuxcy4_CARRY4_CO_UNCONNECTED;
  wire [3:1]NLW_emuxcy4_CARRY4_DI_UNCONNECTED;
  wire [3:0]NLW_emuxcy4_CARRY4_O_UNCONNECTED;
  wire [3:1]NLW_emuxcy4_CARRY4_S_UNCONNECTED;
  wire [3:0]NLW_fmuxcy0_CARRY4_O_UNCONNECTED;
  wire [3:1]NLW_fmuxcy4_CARRY4_CO_UNCONNECTED;
  wire [3:1]NLW_fmuxcy4_CARRY4_DI_UNCONNECTED;
  wire [3:0]NLW_fmuxcy4_CARRY4_O_UNCONNECTED;
  wire [3:1]NLW_fmuxcy4_CARRY4_S_UNCONNECTED;

  ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_dp_ram dp_ram_i
       (.ADDRA(fifo_rd_addr),
        .ADDRD(fifo_wr_addr),
        .E(ram_wr_en),
        .rd_clk(rd_clk),
        .rd_clk_en(rd_clk_en),
        .rd_data(rd_data),
        .\rd_data_reg[0]_0 (empty),
        .rd_en(rd_en),
        .\wr_addr_reg[4] (full),
        .wr_clk(wr_clk),
        .wr_clk_en(wr_clk_en),
        .wr_data(wr_data),
        .wr_en(wr_en));
  LUT4 #(
    .INIT(16'hA8CC)) 
    empty_int_i_1
       (.I0(emptyg),
        .I1(empty),
        .I2(rd_en),
        .I3(rd_clk_en),
        .O(empty_int_i_1_n_0));
  FDSE empty_int_reg
       (.C(rd_clk),
        .CE(1'b1),
        .D(empty_int_i_1_n_0),
        .Q(empty),
        .S(rd_reset));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* OPT_MODIFIED = "MLO" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  CARRY4 emuxcy0_CARRY4
       (.CI(1'b0),
        .CO({emuxcyo_3,emuxcyo_2,emuxcyo_1,emuxcyo_0}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_emuxcy0_CARRY4_O_UNCONNECTED[3:0]),
        .S({ecomp_3,ecomp_2,ecomp_1,ecomp_0}));
  LUT4 #(
    .INIT(16'hB847)) 
    emuxcy0_i_1
       (.I0(\rd_gray_reg_n_0_[0] ),
        .I1(empty),
        .I2(fifo_rd_addr[1]),
        .I3(wr_gray_rdclk[0]),
        .O(ecomp_0));
  LUT4 #(
    .INIT(16'hB847)) 
    emuxcy1_i_1
       (.I0(p_3_in56_in),
        .I1(empty),
        .I2(p_0_in54_in),
        .I3(wr_gray_rdclk[1]),
        .O(ecomp_1));
  LUT4 #(
    .INIT(16'hB847)) 
    emuxcy2_i_1
       (.I0(p_3_in52_in),
        .I1(empty),
        .I2(p_0_in50_in),
        .I3(wr_gray_rdclk[2]),
        .O(ecomp_2));
  LUT4 #(
    .INIT(16'hB847)) 
    emuxcy3_i_1
       (.I0(p_3_in48_in),
        .I1(empty),
        .I2(p_0_in46_in),
        .I3(wr_gray_rdclk[3]),
        .O(ecomp_3));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* OPT_MODIFIED = "MLO" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  CARRY4 emuxcy4_CARRY4
       (.CI(emuxcyo_3),
        .CO({NLW_emuxcy4_CARRY4_CO_UNCONNECTED[3:1],emptyg}),
        .CYINIT(1'b0),
        .DI({NLW_emuxcy4_CARRY4_DI_UNCONNECTED[3:1],1'b0}),
        .O(NLW_emuxcy4_CARRY4_O_UNCONNECTED[3:0]),
        .S({NLW_emuxcy4_CARRY4_S_UNCONNECTED[3:1],ecomp_4}));
  LUT4 #(
    .INIT(16'hB847)) 
    emuxcy4_i_1
       (.I0(p_3_in44_in),
        .I1(empty),
        .I2(p_0_in42_in),
        .I3(wr_gray_rdclk[4]),
        .O(ecomp_4));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* OPT_MODIFIED = "MLO" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  CARRY4 fmuxcy0_CARRY4
       (.CI(1'b0),
        .CO({fmuxcyo_3,fmuxcyo_2,fmuxcyo_1,fmuxcyo_0}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_fmuxcy0_CARRY4_O_UNCONNECTED[3:0]),
        .S({fcomp_3,fcomp_2,fcomp_1,fcomp_0}));
  LUT4 #(
    .INIT(16'hB847)) 
    fmuxcy0_i_1
       (.I0(wr_gray[0]),
        .I1(full),
        .I2(fifo_wr_addr[1]),
        .I3(rd_lastgray_wrclk[0]),
        .O(fcomp_0));
  LUT4 #(
    .INIT(16'hB847)) 
    fmuxcy1_i_1
       (.I0(wr_gray[1]),
        .I1(full),
        .I2(p_0_in35_in),
        .I3(rd_lastgray_wrclk[1]),
        .O(fcomp_1));
  LUT4 #(
    .INIT(16'hB847)) 
    fmuxcy2_i_1
       (.I0(wr_gray[2]),
        .I1(full),
        .I2(p_0_in31_in),
        .I3(rd_lastgray_wrclk[2]),
        .O(fcomp_2));
  LUT4 #(
    .INIT(16'hB847)) 
    fmuxcy3_i_1
       (.I0(wr_gray[3]),
        .I1(full),
        .I2(p_0_in27_in),
        .I3(rd_lastgray_wrclk[3]),
        .O(fcomp_3));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* OPT_MODIFIED = "MLO" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  CARRY4 fmuxcy4_CARRY4
       (.CI(fmuxcyo_3),
        .CO({NLW_fmuxcy4_CARRY4_CO_UNCONNECTED[3:1],fullg}),
        .CYINIT(1'b0),
        .DI({NLW_fmuxcy4_CARRY4_DI_UNCONNECTED[3:1],1'b0}),
        .O(NLW_fmuxcy4_CARRY4_O_UNCONNECTED[3:0]),
        .S({NLW_fmuxcy4_CARRY4_S_UNCONNECTED[3:1],fcomp_4}));
  LUT4 #(
    .INIT(16'hB847)) 
    fmuxcy4_i_1
       (.I0(wr_gray[4]),
        .I1(full),
        .I2(p_0_in23_in),
        .I3(rd_lastgray_wrclk[4]),
        .O(fcomp_4));
  LUT4 #(
    .INIT(16'hA8A0)) 
    full_int_i_1
       (.I0(fullg),
        .I1(wr_clk_en),
        .I2(full),
        .I3(wr_en),
        .O(full_int_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    full_int_reg
       (.C(wr_clk),
        .CE(1'b1),
        .D(full_int_i_1_n_0),
        .Q(full),
        .R(wr_reset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rag_writesync0_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rd_truegray[0]),
        .Q(rag_writesync0[0]),
        .R(wr_reset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rag_writesync0_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rd_truegray[1]),
        .Q(rag_writesync0[1]),
        .R(wr_reset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rag_writesync0_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rd_truegray[2]),
        .Q(rag_writesync0[2]),
        .R(wr_reset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rag_writesync0_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rd_truegray[3]),
        .Q(rag_writesync0[3]),
        .R(wr_reset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rag_writesync0_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rd_truegray[4]),
        .Q(rag_writesync0[4]),
        .R(wr_reset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rag_writesync1_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rag_writesync0[0]),
        .Q(rag_writesync1[0]),
        .R(wr_reset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rag_writesync1_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rag_writesync0[1]),
        .Q(rag_writesync1[1]),
        .R(wr_reset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rag_writesync1_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rag_writesync0[2]),
        .Q(rag_writesync1[2]),
        .R(wr_reset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rag_writesync1_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rag_writesync0[3]),
        .Q(rag_writesync1[3]),
        .R(wr_reset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rag_writesync1_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rag_writesync0[4]),
        .Q(rag_writesync1[4]),
        .R(wr_reset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rag_writesync2_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rag_writesync1[0]),
        .Q(rag_writesync2[0]),
        .R(wr_reset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rag_writesync2_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rag_writesync1[1]),
        .Q(rag_writesync2[1]),
        .R(wr_reset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rag_writesync2_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rag_writesync1[2]),
        .Q(rag_writesync2[2]),
        .R(wr_reset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rag_writesync2_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rag_writesync1[3]),
        .Q(rag_writesync2[3]),
        .R(wr_reset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rag_writesync2_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rag_writesync1[4]),
        .Q(rag_writesync2[4]),
        .R(wr_reset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rag_writesync_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rag_writesync2[0]),
        .Q(rag_writesync[0]),
        .R(wr_reset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rag_writesync_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rag_writesync2[1]),
        .Q(rag_writesync[1]),
        .R(wr_reset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rag_writesync_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rag_writesync2[2]),
        .Q(rag_writesync[2]),
        .R(wr_reset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rag_writesync_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rag_writesync2[3]),
        .Q(rag_writesync[3]),
        .R(wr_reset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rag_writesync_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rag_writesync2[4]),
        .Q(rag_writesync[4]),
        .R(wr_reset));
  LUT1 #(
    .INIT(2'h1)) 
    \rd_addr[0]_i_1 
       (.I0(fifo_rd_addr[0]),
        .O(p_0_in__1[0]));
  LUT2 #(
    .INIT(4'h6)) 
    \rd_addr[1]_i_1 
       (.I0(fifo_rd_addr[0]),
        .I1(fifo_rd_addr[1]),
        .O(rd_nextgray0));
  LUT3 #(
    .INIT(8'h78)) 
    \rd_addr[2]_i_1 
       (.I0(fifo_rd_addr[0]),
        .I1(fifo_rd_addr[1]),
        .I2(fifo_rd_addr[2]),
        .O(p_0_in__1[2]));
  (* SOFT_HLUTNM = "soft_lutpair1" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \rd_addr[3]_i_1 
       (.I0(fifo_rd_addr[1]),
        .I1(fifo_rd_addr[0]),
        .I2(fifo_rd_addr[2]),
        .I3(fifo_rd_addr[3]),
        .O(p_0_in__1[3]));
  LUT3 #(
    .INIT(8'h40)) 
    \rd_addr[4]_i_1 
       (.I0(empty),
        .I1(rd_en),
        .I2(rd_clk_en),
        .O(empty_allow0));
  (* SOFT_HLUTNM = "soft_lutpair1" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \rd_addr[4]_i_2 
       (.I0(fifo_rd_addr[2]),
        .I1(fifo_rd_addr[0]),
        .I2(fifo_rd_addr[1]),
        .I3(fifo_rd_addr[3]),
        .I4(fifo_rd_addr[4]),
        .O(p_0_in__1[4]));
  FDRE \rd_addr_reg[0] 
       (.C(rd_clk),
        .CE(empty_allow0),
        .D(p_0_in__1[0]),
        .Q(fifo_rd_addr[0]),
        .R(rd_reset));
  FDRE \rd_addr_reg[1] 
       (.C(rd_clk),
        .CE(empty_allow0),
        .D(rd_nextgray0),
        .Q(fifo_rd_addr[1]),
        .R(rd_reset));
  FDRE \rd_addr_reg[2] 
       (.C(rd_clk),
        .CE(empty_allow0),
        .D(p_0_in__1[2]),
        .Q(fifo_rd_addr[2]),
        .R(rd_reset));
  FDRE \rd_addr_reg[3] 
       (.C(rd_clk),
        .CE(empty_allow0),
        .D(p_0_in__1[3]),
        .Q(fifo_rd_addr[3]),
        .R(rd_reset));
  FDRE \rd_addr_reg[4] 
       (.C(rd_clk),
        .CE(empty_allow0),
        .D(p_0_in__1[4]),
        .Q(fifo_rd_addr[4]),
        .R(rd_reset));
  FDSE \rd_gray_reg[0] 
       (.C(rd_clk),
        .CE(empty_allow0),
        .D(fifo_rd_addr[1]),
        .Q(\rd_gray_reg_n_0_[0] ),
        .S(rd_reset));
  FDRE \rd_gray_reg[1] 
       (.C(rd_clk),
        .CE(empty_allow0),
        .D(p_0_in54_in),
        .Q(p_3_in56_in),
        .R(rd_reset));
  FDRE \rd_gray_reg[2] 
       (.C(rd_clk),
        .CE(empty_allow0),
        .D(p_0_in50_in),
        .Q(p_3_in52_in),
        .R(rd_reset));
  FDRE \rd_gray_reg[3] 
       (.C(rd_clk),
        .CE(empty_allow0),
        .D(p_0_in46_in),
        .Q(p_3_in48_in),
        .R(rd_reset));
  FDSE \rd_gray_reg[4] 
       (.C(rd_clk),
        .CE(empty_allow0),
        .D(p_0_in42_in),
        .Q(p_3_in44_in),
        .S(rd_reset));
  FDSE \rd_lastgray_reg[0] 
       (.C(rd_clk),
        .CE(empty_allow0),
        .D(\rd_gray_reg_n_0_[0] ),
        .Q(rd_lastgray[0]),
        .S(rd_reset));
  FDSE \rd_lastgray_reg[1] 
       (.C(rd_clk),
        .CE(empty_allow0),
        .D(p_3_in56_in),
        .Q(rd_lastgray[1]),
        .S(rd_reset));
  FDRE \rd_lastgray_reg[2] 
       (.C(rd_clk),
        .CE(empty_allow0),
        .D(p_3_in52_in),
        .Q(rd_lastgray[2]),
        .R(rd_reset));
  FDRE \rd_lastgray_reg[3] 
       (.C(rd_clk),
        .CE(empty_allow0),
        .D(p_3_in48_in),
        .Q(rd_lastgray[3]),
        .R(rd_reset));
  FDSE \rd_lastgray_reg[4] 
       (.C(rd_clk),
        .CE(empty_allow0),
        .D(p_3_in44_in),
        .Q(rd_lastgray[4]),
        .S(rd_reset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rd_lastgray_wrclk0_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rd_lastgray[0]),
        .Q(rd_lastgray_wrclk0[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rd_lastgray_wrclk0_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rd_lastgray[1]),
        .Q(rd_lastgray_wrclk0[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rd_lastgray_wrclk0_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rd_lastgray[2]),
        .Q(rd_lastgray_wrclk0[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rd_lastgray_wrclk0_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rd_lastgray[3]),
        .Q(rd_lastgray_wrclk0[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rd_lastgray_wrclk0_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rd_lastgray[4]),
        .Q(rd_lastgray_wrclk0[4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rd_lastgray_wrclk1_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rd_lastgray_wrclk0[0]),
        .Q(rd_lastgray_wrclk1[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rd_lastgray_wrclk1_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rd_lastgray_wrclk0[1]),
        .Q(rd_lastgray_wrclk1[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rd_lastgray_wrclk1_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rd_lastgray_wrclk0[2]),
        .Q(rd_lastgray_wrclk1[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rd_lastgray_wrclk1_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rd_lastgray_wrclk0[3]),
        .Q(rd_lastgray_wrclk1[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rd_lastgray_wrclk1_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rd_lastgray_wrclk0[4]),
        .Q(rd_lastgray_wrclk1[4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rd_lastgray_wrclk2_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rd_lastgray_wrclk1[0]),
        .Q(rd_lastgray_wrclk2[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rd_lastgray_wrclk2_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rd_lastgray_wrclk1[1]),
        .Q(rd_lastgray_wrclk2[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rd_lastgray_wrclk2_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rd_lastgray_wrclk1[2]),
        .Q(rd_lastgray_wrclk2[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rd_lastgray_wrclk2_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rd_lastgray_wrclk1[3]),
        .Q(rd_lastgray_wrclk2[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rd_lastgray_wrclk2_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rd_lastgray_wrclk1[4]),
        .Q(rd_lastgray_wrclk2[4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rd_lastgray_wrclk_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rd_lastgray_wrclk2[0]),
        .Q(rd_lastgray_wrclk[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rd_lastgray_wrclk_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rd_lastgray_wrclk2[1]),
        .Q(rd_lastgray_wrclk[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rd_lastgray_wrclk_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rd_lastgray_wrclk2[2]),
        .Q(rd_lastgray_wrclk[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rd_lastgray_wrclk_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rd_lastgray_wrclk2[3]),
        .Q(rd_lastgray_wrclk[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rd_lastgray_wrclk_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rd_lastgray_wrclk2[4]),
        .Q(rd_lastgray_wrclk[4]),
        .R(1'b0));
  FDRE \rd_nextgray_reg[1] 
       (.C(rd_clk),
        .CE(empty_allow0),
        .D(rd_nextgray018_out),
        .Q(p_0_in54_in),
        .R(rd_reset));
  FDRE \rd_nextgray_reg[2] 
       (.C(rd_clk),
        .CE(empty_allow0),
        .D(rd_nextgray020_out),
        .Q(p_0_in50_in),
        .R(rd_reset));
  FDRE \rd_nextgray_reg[3] 
       (.C(rd_clk),
        .CE(empty_allow0),
        .D(rd_nextgray022_out),
        .Q(p_0_in46_in),
        .R(rd_reset));
  FDSE \rd_nextgray_reg[4] 
       (.C(rd_clk),
        .CE(empty_allow0),
        .D(fifo_rd_addr[4]),
        .Q(p_0_in42_in),
        .S(rd_reset));
  LUT2 #(
    .INIT(4'h6)) 
    \rd_truegray[1]_i_1 
       (.I0(fifo_rd_addr[1]),
        .I1(fifo_rd_addr[2]),
        .O(rd_nextgray018_out));
  LUT2 #(
    .INIT(4'h6)) 
    \rd_truegray[2]_i_1 
       (.I0(fifo_rd_addr[2]),
        .I1(fifo_rd_addr[3]),
        .O(rd_nextgray020_out));
  LUT2 #(
    .INIT(4'h6)) 
    \rd_truegray[3]_i_1 
       (.I0(fifo_rd_addr[3]),
        .I1(fifo_rd_addr[4]),
        .O(rd_nextgray022_out));
  FDRE \rd_truegray_reg[0] 
       (.C(rd_clk),
        .CE(rd_clk_en),
        .D(rd_nextgray0),
        .Q(rd_truegray[0]),
        .R(rd_reset));
  FDRE \rd_truegray_reg[1] 
       (.C(rd_clk),
        .CE(rd_clk_en),
        .D(rd_nextgray018_out),
        .Q(rd_truegray[1]),
        .R(rd_reset));
  FDRE \rd_truegray_reg[2] 
       (.C(rd_clk),
        .CE(rd_clk_en),
        .D(rd_nextgray020_out),
        .Q(rd_truegray[2]),
        .R(rd_reset));
  FDRE \rd_truegray_reg[3] 
       (.C(rd_clk),
        .CE(rd_clk_en),
        .D(rd_nextgray022_out),
        .Q(rd_truegray[3]),
        .R(rd_reset));
  FDRE \rd_truegray_reg[4] 
       (.C(rd_clk),
        .CE(rd_clk_en),
        .D(fifo_rd_addr[4]),
        .Q(rd_truegray[4]),
        .R(rd_reset));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \status[0]_i_1 
       (.I0(wr_addr_pipe[0]),
        .I1(rag_writesync[1]),
        .I2(rag_writesync[3]),
        .I3(rag_writesync[4]),
        .I4(rag_writesync[2]),
        .I5(rag_writesync[0]),
        .O(status0[0]));
  LUT4 #(
    .INIT(16'h1DE2)) 
    \status[1]_i_1 
       (.I0(rag_writesync[0]),
        .I1(wr_addr_pipe[0]),
        .I2(p_7_in),
        .I3(wr_addr_pipe[1]),
        .O(status0[1]));
  LUT4 #(
    .INIT(16'h6996)) 
    \status[1]_i_2 
       (.I0(rag_writesync[1]),
        .I1(rag_writesync[3]),
        .I2(rag_writesync[4]),
        .I3(rag_writesync[2]),
        .O(p_7_in));
  LUT6 #(
    .INIT(64'h0547AF8BFAB85074)) 
    \status[2]_i_1 
       (.I0(wr_addr_pipe[1]),
        .I1(rag_writesync[0]),
        .I2(rag_writesync[1]),
        .I3(wr_addr_pipe[0]),
        .I4(p_4_in),
        .I5(wr_addr_pipe[2]),
        .O(status0[2]));
  LUT3 #(
    .INIT(8'h96)) 
    \status[2]_i_2 
       (.I0(rag_writesync[2]),
        .I1(rag_writesync[4]),
        .I2(rag_writesync[3]),
        .O(p_4_in));
  LUT4 #(
    .INIT(16'h9669)) 
    \status[3]_i_1 
       (.I0(\status[4]_i_3_n_0 ),
        .I1(rag_writesync[3]),
        .I2(rag_writesync[4]),
        .I3(wr_addr_pipe[3]),
        .O(status0[3]));
  LUT1 #(
    .INIT(2'h1)) 
    \status[4]_i_1 
       (.I0(full),
        .O(fcomp_01));
  LUT5 #(
    .INIT(32'h178EE871)) 
    \status[4]_i_2 
       (.I0(wr_addr_pipe[3]),
        .I1(\status[4]_i_3_n_0 ),
        .I2(rag_writesync[3]),
        .I3(rag_writesync[4]),
        .I4(wr_addr_pipe[4]),
        .O(status0[4]));
  LUT6 #(
    .INIT(64'hFFEF8FCF0F0B0203)) 
    \status[4]_i_3 
       (.I0(wr_addr_pipe[0]),
        .I1(rag_writesync[1]),
        .I2(p_4_in),
        .I3(rag_writesync[0]),
        .I4(wr_addr_pipe[1]),
        .I5(wr_addr_pipe[2]),
        .O(\status[4]_i_3_n_0 ));
  FDRE \status_reg[0] 
       (.C(wr_clk),
        .CE(fcomp_01),
        .D(status0[0]),
        .Q(status[0]),
        .R(wr_reset));
  FDRE \status_reg[1] 
       (.C(wr_clk),
        .CE(fcomp_01),
        .D(status0[1]),
        .Q(status[1]),
        .R(wr_reset));
  FDRE \status_reg[2] 
       (.C(wr_clk),
        .CE(fcomp_01),
        .D(status0[2]),
        .Q(status[2]),
        .R(wr_reset));
  FDRE \status_reg[3] 
       (.C(wr_clk),
        .CE(fcomp_01),
        .D(status0[3]),
        .Q(status[3]),
        .R(wr_reset));
  FDRE \status_reg[4] 
       (.C(wr_clk),
        .CE(fcomp_01),
        .D(status0[4]),
        .Q(status[4]),
        .R(wr_reset));
  LUT1 #(
    .INIT(2'h1)) 
    \wr_addr[0]_i_1 
       (.I0(fifo_wr_addr[0]),
        .O(p_0_in__0[0]));
  (* SOFT_HLUTNM = "soft_lutpair2" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \wr_addr[1]_i_1 
       (.I0(fifo_wr_addr[0]),
        .I1(fifo_wr_addr[1]),
        .O(p_4_out[0]));
  (* SOFT_HLUTNM = "soft_lutpair2" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \wr_addr[2]_i_1 
       (.I0(fifo_wr_addr[0]),
        .I1(fifo_wr_addr[1]),
        .I2(fifo_wr_addr[2]),
        .O(p_0_in__0[2]));
  (* SOFT_HLUTNM = "soft_lutpair0" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \wr_addr[3]_i_1 
       (.I0(fifo_wr_addr[1]),
        .I1(fifo_wr_addr[0]),
        .I2(fifo_wr_addr[2]),
        .I3(fifo_wr_addr[3]),
        .O(p_0_in__0[3]));
  (* SOFT_HLUTNM = "soft_lutpair0" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \wr_addr[4]_i_2 
       (.I0(fifo_wr_addr[2]),
        .I1(fifo_wr_addr[0]),
        .I2(fifo_wr_addr[1]),
        .I3(fifo_wr_addr[3]),
        .I4(fifo_wr_addr[4]),
        .O(p_0_in__0[4]));
  FDRE \wr_addr_pipe0_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(fifo_wr_addr[0]),
        .Q(wr_addr_pipe0[0]),
        .R(wr_reset));
  FDRE \wr_addr_pipe0_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(fifo_wr_addr[1]),
        .Q(wr_addr_pipe0[1]),
        .R(wr_reset));
  FDRE \wr_addr_pipe0_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(fifo_wr_addr[2]),
        .Q(wr_addr_pipe0[2]),
        .R(wr_reset));
  FDRE \wr_addr_pipe0_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(fifo_wr_addr[3]),
        .Q(wr_addr_pipe0[3]),
        .R(wr_reset));
  FDRE \wr_addr_pipe0_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(fifo_wr_addr[4]),
        .Q(wr_addr_pipe0[4]),
        .R(wr_reset));
  FDRE \wr_addr_pipe1_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(wr_addr_pipe0[0]),
        .Q(wr_addr_pipe1[0]),
        .R(wr_reset));
  FDRE \wr_addr_pipe1_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(wr_addr_pipe0[1]),
        .Q(wr_addr_pipe1[1]),
        .R(wr_reset));
  FDRE \wr_addr_pipe1_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(wr_addr_pipe0[2]),
        .Q(wr_addr_pipe1[2]),
        .R(wr_reset));
  FDRE \wr_addr_pipe1_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(wr_addr_pipe0[3]),
        .Q(wr_addr_pipe1[3]),
        .R(wr_reset));
  FDRE \wr_addr_pipe1_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(wr_addr_pipe0[4]),
        .Q(wr_addr_pipe1[4]),
        .R(wr_reset));
  FDRE \wr_addr_pipe_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(wr_addr_pipe1[0]),
        .Q(wr_addr_pipe[0]),
        .R(wr_reset));
  FDRE \wr_addr_pipe_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(wr_addr_pipe1[1]),
        .Q(wr_addr_pipe[1]),
        .R(wr_reset));
  FDRE \wr_addr_pipe_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(wr_addr_pipe1[2]),
        .Q(wr_addr_pipe[2]),
        .R(wr_reset));
  FDRE \wr_addr_pipe_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(wr_addr_pipe1[3]),
        .Q(wr_addr_pipe[3]),
        .R(wr_reset));
  FDRE \wr_addr_pipe_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(wr_addr_pipe1[4]),
        .Q(wr_addr_pipe[4]),
        .R(wr_reset));
  FDRE \wr_addr_reg[0] 
       (.C(wr_clk),
        .CE(ram_wr_en),
        .D(p_0_in__0[0]),
        .Q(fifo_wr_addr[0]),
        .R(wr_reset));
  FDRE \wr_addr_reg[1] 
       (.C(wr_clk),
        .CE(ram_wr_en),
        .D(p_4_out[0]),
        .Q(fifo_wr_addr[1]),
        .R(wr_reset));
  FDRE \wr_addr_reg[2] 
       (.C(wr_clk),
        .CE(ram_wr_en),
        .D(p_0_in__0[2]),
        .Q(fifo_wr_addr[2]),
        .R(wr_reset));
  FDRE \wr_addr_reg[3] 
       (.C(wr_clk),
        .CE(ram_wr_en),
        .D(p_0_in__0[3]),
        .Q(fifo_wr_addr[3]),
        .R(wr_reset));
  FDRE \wr_addr_reg[4] 
       (.C(wr_clk),
        .CE(ram_wr_en),
        .D(p_0_in__0[4]),
        .Q(fifo_wr_addr[4]),
        .R(wr_reset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \wr_gray_rdclk0_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(wr_gray[0]),
        .Q(wr_gray_rdclk0[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \wr_gray_rdclk0_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(wr_gray[1]),
        .Q(wr_gray_rdclk0[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \wr_gray_rdclk0_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(wr_gray[2]),
        .Q(wr_gray_rdclk0[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \wr_gray_rdclk0_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(wr_gray[3]),
        .Q(wr_gray_rdclk0[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \wr_gray_rdclk0_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(wr_gray[4]),
        .Q(wr_gray_rdclk0[4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \wr_gray_rdclk1_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(wr_gray_rdclk0[0]),
        .Q(wr_gray_rdclk1[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \wr_gray_rdclk1_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(wr_gray_rdclk0[1]),
        .Q(wr_gray_rdclk1[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \wr_gray_rdclk1_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(wr_gray_rdclk0[2]),
        .Q(wr_gray_rdclk1[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \wr_gray_rdclk1_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(wr_gray_rdclk0[3]),
        .Q(wr_gray_rdclk1[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \wr_gray_rdclk1_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(wr_gray_rdclk0[4]),
        .Q(wr_gray_rdclk1[4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \wr_gray_rdclk2_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(wr_gray_rdclk1[0]),
        .Q(wr_gray_rdclk2[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \wr_gray_rdclk2_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(wr_gray_rdclk1[1]),
        .Q(wr_gray_rdclk2[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \wr_gray_rdclk2_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(wr_gray_rdclk1[2]),
        .Q(wr_gray_rdclk2[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \wr_gray_rdclk2_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(wr_gray_rdclk1[3]),
        .Q(wr_gray_rdclk2[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \wr_gray_rdclk2_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(wr_gray_rdclk1[4]),
        .Q(wr_gray_rdclk2[4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \wr_gray_rdclk_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(wr_gray_rdclk2[0]),
        .Q(wr_gray_rdclk[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \wr_gray_rdclk_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(wr_gray_rdclk2[1]),
        .Q(wr_gray_rdclk[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \wr_gray_rdclk_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(wr_gray_rdclk2[2]),
        .Q(wr_gray_rdclk[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \wr_gray_rdclk_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(wr_gray_rdclk2[3]),
        .Q(wr_gray_rdclk[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \wr_gray_rdclk_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(wr_gray_rdclk2[4]),
        .Q(wr_gray_rdclk[4]),
        .R(1'b0));
  FDSE \wr_gray_reg[0] 
       (.C(wr_clk),
        .CE(ram_wr_en),
        .D(fifo_wr_addr[1]),
        .Q(wr_gray[0]),
        .S(wr_reset));
  FDRE \wr_gray_reg[1] 
       (.C(wr_clk),
        .CE(ram_wr_en),
        .D(p_0_in35_in),
        .Q(wr_gray[1]),
        .R(wr_reset));
  FDRE \wr_gray_reg[2] 
       (.C(wr_clk),
        .CE(ram_wr_en),
        .D(p_0_in31_in),
        .Q(wr_gray[2]),
        .R(wr_reset));
  FDRE \wr_gray_reg[3] 
       (.C(wr_clk),
        .CE(ram_wr_en),
        .D(p_0_in27_in),
        .Q(wr_gray[3]),
        .R(wr_reset));
  FDSE \wr_gray_reg[4] 
       (.C(wr_clk),
        .CE(ram_wr_en),
        .D(p_0_in23_in),
        .Q(wr_gray[4]),
        .S(wr_reset));
  (* SOFT_HLUTNM = "soft_lutpair3" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \wr_nextgray[1]_i_1 
       (.I0(fifo_wr_addr[1]),
        .I1(fifo_wr_addr[2]),
        .O(p_4_out[1]));
  (* SOFT_HLUTNM = "soft_lutpair3" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \wr_nextgray[2]_i_1 
       (.I0(fifo_wr_addr[2]),
        .I1(fifo_wr_addr[3]),
        .O(p_4_out[2]));
  LUT2 #(
    .INIT(4'h6)) 
    \wr_nextgray[3]_i_1 
       (.I0(fifo_wr_addr[3]),
        .I1(fifo_wr_addr[4]),
        .O(p_4_out[3]));
  FDRE \wr_nextgray_reg[1] 
       (.C(wr_clk),
        .CE(ram_wr_en),
        .D(p_4_out[1]),
        .Q(p_0_in35_in),
        .R(wr_reset));
  FDRE \wr_nextgray_reg[2] 
       (.C(wr_clk),
        .CE(ram_wr_en),
        .D(p_4_out[2]),
        .Q(p_0_in31_in),
        .R(wr_reset));
  FDRE \wr_nextgray_reg[3] 
       (.C(wr_clk),
        .CE(ram_wr_en),
        .D(p_4_out[3]),
        .Q(p_0_in27_in),
        .R(wr_reset));
  FDSE \wr_nextgray_reg[4] 
       (.C(wr_clk),
        .CE(ram_wr_en),
        .D(fifo_wr_addr[4]),
        .Q(p_0_in23_in),
        .S(wr_reset));
endmodule

(* DowngradeIPIdentifiedWarnings = "yes" *) (* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_15_asynch_fifo" *) (* WIDTH = "74" *) 
module ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_asynch_fifo__parameterized0
   (wr_clk,
    wr_clk_en,
    wr_reset,
    wr_en,
    wr_data,
    rd_clk,
    rd_clk_en,
    rd_reset,
    rd_en,
    full,
    empty,
    rd_data,
    fifo_wr_addr,
    fifo_rd_addr,
    status);
  input wr_clk;
  input wr_clk_en;
  input wr_reset;
  input wr_en;
  input [73:0]wr_data;
  input rd_clk;
  input rd_clk_en;
  input rd_reset;
  input rd_en;
  output full;
  output empty;
  output [73:0]rd_data;
  output [4:0]fifo_wr_addr;
  output [4:0]fifo_rd_addr;
  output [4:0]status;

  wire ecomp_0;
  wire ecomp_1;
  wire ecomp_2;
  wire ecomp_3;
  wire ecomp_4;
  wire empty;
  wire empty_allow0;
  wire empty_int_i_1_n_0;
  wire emptyg;
  wire emuxcyo_0;
  wire emuxcyo_1;
  wire emuxcyo_2;
  wire emuxcyo_3;
  wire fcomp_0;
  wire fcomp_01;
  wire fcomp_1;
  wire fcomp_2;
  wire fcomp_3;
  wire fcomp_4;
  wire [4:0]fifo_rd_addr;
  wire [4:0]fifo_wr_addr;
  wire fmuxcyo_0;
  wire fmuxcyo_1;
  wire fmuxcyo_2;
  wire fmuxcyo_3;
  wire full;
  wire full_int_i_1_n_0;
  wire fullg;
  wire p_0_in23_in;
  wire p_0_in27_in;
  wire p_0_in31_in;
  wire p_0_in35_in;
  wire p_0_in42_in;
  wire p_0_in46_in;
  wire p_0_in50_in;
  wire p_0_in54_in;
  wire [4:0]p_0_in__0;
  wire [4:0]p_0_in__1;
  wire p_3_in44_in;
  wire p_3_in48_in;
  wire p_3_in52_in;
  wire p_3_in56_in;
  wire p_4_in;
  wire [3:0]p_4_out;
  wire p_7_in;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire [4:0]rag_writesync;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire [4:0]rag_writesync0;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire [4:0]rag_writesync1;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire [4:0]rag_writesync2;
  wire ram_wr_en;
  wire rd_clk;
  wire rd_clk_en;
  wire [73:0]rd_data;
  wire rd_en;
  wire \rd_gray_reg_n_0_[0] ;
  wire [4:0]rd_lastgray;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire [4:0]rd_lastgray_wrclk;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire [4:0]rd_lastgray_wrclk0;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire [4:0]rd_lastgray_wrclk1;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire [4:0]rd_lastgray_wrclk2;
  wire rd_nextgray0;
  wire rd_nextgray018_out;
  wire rd_nextgray020_out;
  wire rd_nextgray022_out;
  wire rd_reset;
  wire [4:0]rd_truegray;
  wire [4:0]status;
  wire [4:0]status0;
  wire \status[4]_i_3_n_0 ;
  wire [4:0]wr_addr_pipe;
  wire [4:0]wr_addr_pipe0;
  wire [4:0]wr_addr_pipe1;
  wire wr_clk;
  wire wr_clk_en;
  wire [73:0]wr_data;
  wire wr_en;
  wire [4:0]wr_gray;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire [4:0]wr_gray_rdclk;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire [4:0]wr_gray_rdclk0;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire [4:0]wr_gray_rdclk1;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire [4:0]wr_gray_rdclk2;
  wire wr_reset;
  wire [3:0]NLW_emuxcy0_CARRY4_O_UNCONNECTED;
  wire [3:1]NLW_emuxcy4_CARRY4_CO_UNCONNECTED;
  wire [3:1]NLW_emuxcy4_CARRY4_DI_UNCONNECTED;
  wire [3:0]NLW_emuxcy4_CARRY4_O_UNCONNECTED;
  wire [3:1]NLW_emuxcy4_CARRY4_S_UNCONNECTED;
  wire [3:0]NLW_fmuxcy0_CARRY4_O_UNCONNECTED;
  wire [3:1]NLW_fmuxcy4_CARRY4_CO_UNCONNECTED;
  wire [3:1]NLW_fmuxcy4_CARRY4_DI_UNCONNECTED;
  wire [3:0]NLW_fmuxcy4_CARRY4_O_UNCONNECTED;
  wire [3:1]NLW_fmuxcy4_CARRY4_S_UNCONNECTED;

  ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_dp_ram__parameterized0 dp_ram_i
       (.ADDRA(fifo_rd_addr),
        .ADDRD(fifo_wr_addr),
        .E(ram_wr_en),
        .rd_clk(rd_clk),
        .rd_clk_en(rd_clk_en),
        .rd_data(rd_data),
        .\rd_data_reg[0]_0 (empty),
        .rd_en(rd_en),
        .\wr_addr_reg[4] (full),
        .wr_clk(wr_clk),
        .wr_clk_en(wr_clk_en),
        .wr_data(wr_data),
        .wr_en(wr_en));
  LUT4 #(
    .INIT(16'hA8CC)) 
    empty_int_i_1
       (.I0(emptyg),
        .I1(empty),
        .I2(rd_en),
        .I3(rd_clk_en),
        .O(empty_int_i_1_n_0));
  FDSE empty_int_reg
       (.C(rd_clk),
        .CE(1'b1),
        .D(empty_int_i_1_n_0),
        .Q(empty),
        .S(rd_reset));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* OPT_MODIFIED = "MLO" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  CARRY4 emuxcy0_CARRY4
       (.CI(1'b0),
        .CO({emuxcyo_3,emuxcyo_2,emuxcyo_1,emuxcyo_0}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_emuxcy0_CARRY4_O_UNCONNECTED[3:0]),
        .S({ecomp_3,ecomp_2,ecomp_1,ecomp_0}));
  LUT4 #(
    .INIT(16'hB847)) 
    emuxcy0_i_1
       (.I0(\rd_gray_reg_n_0_[0] ),
        .I1(empty),
        .I2(fifo_rd_addr[1]),
        .I3(wr_gray_rdclk[0]),
        .O(ecomp_0));
  LUT4 #(
    .INIT(16'hB847)) 
    emuxcy1_i_1
       (.I0(p_3_in56_in),
        .I1(empty),
        .I2(p_0_in54_in),
        .I3(wr_gray_rdclk[1]),
        .O(ecomp_1));
  LUT4 #(
    .INIT(16'hB847)) 
    emuxcy2_i_1
       (.I0(p_3_in52_in),
        .I1(empty),
        .I2(p_0_in50_in),
        .I3(wr_gray_rdclk[2]),
        .O(ecomp_2));
  LUT4 #(
    .INIT(16'hB847)) 
    emuxcy3_i_1
       (.I0(p_3_in48_in),
        .I1(empty),
        .I2(p_0_in46_in),
        .I3(wr_gray_rdclk[3]),
        .O(ecomp_3));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* OPT_MODIFIED = "MLO" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  CARRY4 emuxcy4_CARRY4
       (.CI(emuxcyo_3),
        .CO({NLW_emuxcy4_CARRY4_CO_UNCONNECTED[3:1],emptyg}),
        .CYINIT(1'b0),
        .DI({NLW_emuxcy4_CARRY4_DI_UNCONNECTED[3:1],1'b0}),
        .O(NLW_emuxcy4_CARRY4_O_UNCONNECTED[3:0]),
        .S({NLW_emuxcy4_CARRY4_S_UNCONNECTED[3:1],ecomp_4}));
  LUT4 #(
    .INIT(16'hB847)) 
    emuxcy4_i_1
       (.I0(p_3_in44_in),
        .I1(empty),
        .I2(p_0_in42_in),
        .I3(wr_gray_rdclk[4]),
        .O(ecomp_4));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* OPT_MODIFIED = "MLO" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  CARRY4 fmuxcy0_CARRY4
       (.CI(1'b0),
        .CO({fmuxcyo_3,fmuxcyo_2,fmuxcyo_1,fmuxcyo_0}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_fmuxcy0_CARRY4_O_UNCONNECTED[3:0]),
        .S({fcomp_3,fcomp_2,fcomp_1,fcomp_0}));
  LUT4 #(
    .INIT(16'hB847)) 
    fmuxcy0_i_1
       (.I0(wr_gray[0]),
        .I1(full),
        .I2(fifo_wr_addr[1]),
        .I3(rd_lastgray_wrclk[0]),
        .O(fcomp_0));
  LUT4 #(
    .INIT(16'hB847)) 
    fmuxcy1_i_1
       (.I0(wr_gray[1]),
        .I1(full),
        .I2(p_0_in35_in),
        .I3(rd_lastgray_wrclk[1]),
        .O(fcomp_1));
  LUT4 #(
    .INIT(16'hB847)) 
    fmuxcy2_i_1
       (.I0(wr_gray[2]),
        .I1(full),
        .I2(p_0_in31_in),
        .I3(rd_lastgray_wrclk[2]),
        .O(fcomp_2));
  LUT4 #(
    .INIT(16'hB847)) 
    fmuxcy3_i_1
       (.I0(wr_gray[3]),
        .I1(full),
        .I2(p_0_in27_in),
        .I3(rd_lastgray_wrclk[3]),
        .O(fcomp_3));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* OPT_MODIFIED = "MLO" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  CARRY4 fmuxcy4_CARRY4
       (.CI(fmuxcyo_3),
        .CO({NLW_fmuxcy4_CARRY4_CO_UNCONNECTED[3:1],fullg}),
        .CYINIT(1'b0),
        .DI({NLW_fmuxcy4_CARRY4_DI_UNCONNECTED[3:1],1'b0}),
        .O(NLW_fmuxcy4_CARRY4_O_UNCONNECTED[3:0]),
        .S({NLW_fmuxcy4_CARRY4_S_UNCONNECTED[3:1],fcomp_4}));
  LUT4 #(
    .INIT(16'hB847)) 
    fmuxcy4_i_1
       (.I0(wr_gray[4]),
        .I1(full),
        .I2(p_0_in23_in),
        .I3(rd_lastgray_wrclk[4]),
        .O(fcomp_4));
  LUT4 #(
    .INIT(16'hA8A0)) 
    full_int_i_1
       (.I0(fullg),
        .I1(wr_clk_en),
        .I2(full),
        .I3(wr_en),
        .O(full_int_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    full_int_reg
       (.C(wr_clk),
        .CE(1'b1),
        .D(full_int_i_1_n_0),
        .Q(full),
        .R(wr_reset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rag_writesync0_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rd_truegray[0]),
        .Q(rag_writesync0[0]),
        .R(wr_reset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rag_writesync0_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rd_truegray[1]),
        .Q(rag_writesync0[1]),
        .R(wr_reset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rag_writesync0_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rd_truegray[2]),
        .Q(rag_writesync0[2]),
        .R(wr_reset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rag_writesync0_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rd_truegray[3]),
        .Q(rag_writesync0[3]),
        .R(wr_reset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rag_writesync0_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rd_truegray[4]),
        .Q(rag_writesync0[4]),
        .R(wr_reset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rag_writesync1_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rag_writesync0[0]),
        .Q(rag_writesync1[0]),
        .R(wr_reset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rag_writesync1_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rag_writesync0[1]),
        .Q(rag_writesync1[1]),
        .R(wr_reset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rag_writesync1_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rag_writesync0[2]),
        .Q(rag_writesync1[2]),
        .R(wr_reset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rag_writesync1_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rag_writesync0[3]),
        .Q(rag_writesync1[3]),
        .R(wr_reset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rag_writesync1_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rag_writesync0[4]),
        .Q(rag_writesync1[4]),
        .R(wr_reset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rag_writesync2_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rag_writesync1[0]),
        .Q(rag_writesync2[0]),
        .R(wr_reset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rag_writesync2_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rag_writesync1[1]),
        .Q(rag_writesync2[1]),
        .R(wr_reset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rag_writesync2_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rag_writesync1[2]),
        .Q(rag_writesync2[2]),
        .R(wr_reset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rag_writesync2_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rag_writesync1[3]),
        .Q(rag_writesync2[3]),
        .R(wr_reset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rag_writesync2_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rag_writesync1[4]),
        .Q(rag_writesync2[4]),
        .R(wr_reset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rag_writesync_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rag_writesync2[0]),
        .Q(rag_writesync[0]),
        .R(wr_reset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rag_writesync_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rag_writesync2[1]),
        .Q(rag_writesync[1]),
        .R(wr_reset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rag_writesync_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rag_writesync2[2]),
        .Q(rag_writesync[2]),
        .R(wr_reset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rag_writesync_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rag_writesync2[3]),
        .Q(rag_writesync[3]),
        .R(wr_reset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rag_writesync_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rag_writesync2[4]),
        .Q(rag_writesync[4]),
        .R(wr_reset));
  LUT1 #(
    .INIT(2'h1)) 
    \rd_addr[0]_i_1 
       (.I0(fifo_rd_addr[0]),
        .O(p_0_in__1[0]));
  (* SOFT_HLUTNM = "soft_lutpair7" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \rd_addr[1]_i_1 
       (.I0(fifo_rd_addr[0]),
        .I1(fifo_rd_addr[1]),
        .O(rd_nextgray0));
  (* SOFT_HLUTNM = "soft_lutpair7" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \rd_addr[2]_i_1 
       (.I0(fifo_rd_addr[0]),
        .I1(fifo_rd_addr[1]),
        .I2(fifo_rd_addr[2]),
        .O(p_0_in__1[2]));
  (* SOFT_HLUTNM = "soft_lutpair5" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \rd_addr[3]_i_1 
       (.I0(fifo_rd_addr[1]),
        .I1(fifo_rd_addr[0]),
        .I2(fifo_rd_addr[2]),
        .I3(fifo_rd_addr[3]),
        .O(p_0_in__1[3]));
  LUT3 #(
    .INIT(8'h40)) 
    \rd_addr[4]_i_1 
       (.I0(empty),
        .I1(rd_en),
        .I2(rd_clk_en),
        .O(empty_allow0));
  (* SOFT_HLUTNM = "soft_lutpair5" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \rd_addr[4]_i_2 
       (.I0(fifo_rd_addr[2]),
        .I1(fifo_rd_addr[0]),
        .I2(fifo_rd_addr[1]),
        .I3(fifo_rd_addr[3]),
        .I4(fifo_rd_addr[4]),
        .O(p_0_in__1[4]));
  FDRE \rd_addr_reg[0] 
       (.C(rd_clk),
        .CE(empty_allow0),
        .D(p_0_in__1[0]),
        .Q(fifo_rd_addr[0]),
        .R(rd_reset));
  FDRE \rd_addr_reg[1] 
       (.C(rd_clk),
        .CE(empty_allow0),
        .D(rd_nextgray0),
        .Q(fifo_rd_addr[1]),
        .R(rd_reset));
  FDRE \rd_addr_reg[2] 
       (.C(rd_clk),
        .CE(empty_allow0),
        .D(p_0_in__1[2]),
        .Q(fifo_rd_addr[2]),
        .R(rd_reset));
  FDRE \rd_addr_reg[3] 
       (.C(rd_clk),
        .CE(empty_allow0),
        .D(p_0_in__1[3]),
        .Q(fifo_rd_addr[3]),
        .R(rd_reset));
  FDRE \rd_addr_reg[4] 
       (.C(rd_clk),
        .CE(empty_allow0),
        .D(p_0_in__1[4]),
        .Q(fifo_rd_addr[4]),
        .R(rd_reset));
  FDSE \rd_gray_reg[0] 
       (.C(rd_clk),
        .CE(empty_allow0),
        .D(fifo_rd_addr[1]),
        .Q(\rd_gray_reg_n_0_[0] ),
        .S(rd_reset));
  FDRE \rd_gray_reg[1] 
       (.C(rd_clk),
        .CE(empty_allow0),
        .D(p_0_in54_in),
        .Q(p_3_in56_in),
        .R(rd_reset));
  FDRE \rd_gray_reg[2] 
       (.C(rd_clk),
        .CE(empty_allow0),
        .D(p_0_in50_in),
        .Q(p_3_in52_in),
        .R(rd_reset));
  FDRE \rd_gray_reg[3] 
       (.C(rd_clk),
        .CE(empty_allow0),
        .D(p_0_in46_in),
        .Q(p_3_in48_in),
        .R(rd_reset));
  FDSE \rd_gray_reg[4] 
       (.C(rd_clk),
        .CE(empty_allow0),
        .D(p_0_in42_in),
        .Q(p_3_in44_in),
        .S(rd_reset));
  FDSE \rd_lastgray_reg[0] 
       (.C(rd_clk),
        .CE(empty_allow0),
        .D(\rd_gray_reg_n_0_[0] ),
        .Q(rd_lastgray[0]),
        .S(rd_reset));
  FDSE \rd_lastgray_reg[1] 
       (.C(rd_clk),
        .CE(empty_allow0),
        .D(p_3_in56_in),
        .Q(rd_lastgray[1]),
        .S(rd_reset));
  FDRE \rd_lastgray_reg[2] 
       (.C(rd_clk),
        .CE(empty_allow0),
        .D(p_3_in52_in),
        .Q(rd_lastgray[2]),
        .R(rd_reset));
  FDRE \rd_lastgray_reg[3] 
       (.C(rd_clk),
        .CE(empty_allow0),
        .D(p_3_in48_in),
        .Q(rd_lastgray[3]),
        .R(rd_reset));
  FDSE \rd_lastgray_reg[4] 
       (.C(rd_clk),
        .CE(empty_allow0),
        .D(p_3_in44_in),
        .Q(rd_lastgray[4]),
        .S(rd_reset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rd_lastgray_wrclk0_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rd_lastgray[0]),
        .Q(rd_lastgray_wrclk0[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rd_lastgray_wrclk0_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rd_lastgray[1]),
        .Q(rd_lastgray_wrclk0[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rd_lastgray_wrclk0_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rd_lastgray[2]),
        .Q(rd_lastgray_wrclk0[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rd_lastgray_wrclk0_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rd_lastgray[3]),
        .Q(rd_lastgray_wrclk0[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rd_lastgray_wrclk0_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rd_lastgray[4]),
        .Q(rd_lastgray_wrclk0[4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rd_lastgray_wrclk1_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rd_lastgray_wrclk0[0]),
        .Q(rd_lastgray_wrclk1[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rd_lastgray_wrclk1_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rd_lastgray_wrclk0[1]),
        .Q(rd_lastgray_wrclk1[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rd_lastgray_wrclk1_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rd_lastgray_wrclk0[2]),
        .Q(rd_lastgray_wrclk1[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rd_lastgray_wrclk1_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rd_lastgray_wrclk0[3]),
        .Q(rd_lastgray_wrclk1[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rd_lastgray_wrclk1_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rd_lastgray_wrclk0[4]),
        .Q(rd_lastgray_wrclk1[4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rd_lastgray_wrclk2_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rd_lastgray_wrclk1[0]),
        .Q(rd_lastgray_wrclk2[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rd_lastgray_wrclk2_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rd_lastgray_wrclk1[1]),
        .Q(rd_lastgray_wrclk2[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rd_lastgray_wrclk2_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rd_lastgray_wrclk1[2]),
        .Q(rd_lastgray_wrclk2[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rd_lastgray_wrclk2_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rd_lastgray_wrclk1[3]),
        .Q(rd_lastgray_wrclk2[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rd_lastgray_wrclk2_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rd_lastgray_wrclk1[4]),
        .Q(rd_lastgray_wrclk2[4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rd_lastgray_wrclk_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rd_lastgray_wrclk2[0]),
        .Q(rd_lastgray_wrclk[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rd_lastgray_wrclk_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rd_lastgray_wrclk2[1]),
        .Q(rd_lastgray_wrclk[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rd_lastgray_wrclk_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rd_lastgray_wrclk2[2]),
        .Q(rd_lastgray_wrclk[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rd_lastgray_wrclk_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rd_lastgray_wrclk2[3]),
        .Q(rd_lastgray_wrclk[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rd_lastgray_wrclk_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rd_lastgray_wrclk2[4]),
        .Q(rd_lastgray_wrclk[4]),
        .R(1'b0));
  FDRE \rd_nextgray_reg[1] 
       (.C(rd_clk),
        .CE(empty_allow0),
        .D(rd_nextgray018_out),
        .Q(p_0_in54_in),
        .R(rd_reset));
  FDRE \rd_nextgray_reg[2] 
       (.C(rd_clk),
        .CE(empty_allow0),
        .D(rd_nextgray020_out),
        .Q(p_0_in50_in),
        .R(rd_reset));
  FDRE \rd_nextgray_reg[3] 
       (.C(rd_clk),
        .CE(empty_allow0),
        .D(rd_nextgray022_out),
        .Q(p_0_in46_in),
        .R(rd_reset));
  FDSE \rd_nextgray_reg[4] 
       (.C(rd_clk),
        .CE(empty_allow0),
        .D(fifo_rd_addr[4]),
        .Q(p_0_in42_in),
        .S(rd_reset));
  (* SOFT_HLUTNM = "soft_lutpair8" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \rd_truegray[1]_i_1 
       (.I0(fifo_rd_addr[1]),
        .I1(fifo_rd_addr[2]),
        .O(rd_nextgray018_out));
  (* SOFT_HLUTNM = "soft_lutpair8" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \rd_truegray[2]_i_1 
       (.I0(fifo_rd_addr[2]),
        .I1(fifo_rd_addr[3]),
        .O(rd_nextgray020_out));
  LUT2 #(
    .INIT(4'h6)) 
    \rd_truegray[3]_i_1 
       (.I0(fifo_rd_addr[3]),
        .I1(fifo_rd_addr[4]),
        .O(rd_nextgray022_out));
  FDRE \rd_truegray_reg[0] 
       (.C(rd_clk),
        .CE(rd_clk_en),
        .D(rd_nextgray0),
        .Q(rd_truegray[0]),
        .R(rd_reset));
  FDRE \rd_truegray_reg[1] 
       (.C(rd_clk),
        .CE(rd_clk_en),
        .D(rd_nextgray018_out),
        .Q(rd_truegray[1]),
        .R(rd_reset));
  FDRE \rd_truegray_reg[2] 
       (.C(rd_clk),
        .CE(rd_clk_en),
        .D(rd_nextgray020_out),
        .Q(rd_truegray[2]),
        .R(rd_reset));
  FDRE \rd_truegray_reg[3] 
       (.C(rd_clk),
        .CE(rd_clk_en),
        .D(rd_nextgray022_out),
        .Q(rd_truegray[3]),
        .R(rd_reset));
  FDRE \rd_truegray_reg[4] 
       (.C(rd_clk),
        .CE(rd_clk_en),
        .D(fifo_rd_addr[4]),
        .Q(rd_truegray[4]),
        .R(rd_reset));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \status[0]_i_1 
       (.I0(wr_addr_pipe[0]),
        .I1(rag_writesync[1]),
        .I2(rag_writesync[3]),
        .I3(rag_writesync[4]),
        .I4(rag_writesync[2]),
        .I5(rag_writesync[0]),
        .O(status0[0]));
  LUT4 #(
    .INIT(16'h1DE2)) 
    \status[1]_i_1 
       (.I0(rag_writesync[0]),
        .I1(wr_addr_pipe[0]),
        .I2(p_7_in),
        .I3(wr_addr_pipe[1]),
        .O(status0[1]));
  LUT4 #(
    .INIT(16'h6996)) 
    \status[1]_i_2 
       (.I0(rag_writesync[1]),
        .I1(rag_writesync[3]),
        .I2(rag_writesync[4]),
        .I3(rag_writesync[2]),
        .O(p_7_in));
  LUT6 #(
    .INIT(64'h0547AF8BFAB85074)) 
    \status[2]_i_1 
       (.I0(wr_addr_pipe[1]),
        .I1(rag_writesync[0]),
        .I2(rag_writesync[1]),
        .I3(wr_addr_pipe[0]),
        .I4(p_4_in),
        .I5(wr_addr_pipe[2]),
        .O(status0[2]));
  LUT3 #(
    .INIT(8'h96)) 
    \status[2]_i_2 
       (.I0(rag_writesync[2]),
        .I1(rag_writesync[4]),
        .I2(rag_writesync[3]),
        .O(p_4_in));
  LUT4 #(
    .INIT(16'h9669)) 
    \status[3]_i_1 
       (.I0(\status[4]_i_3_n_0 ),
        .I1(rag_writesync[3]),
        .I2(rag_writesync[4]),
        .I3(wr_addr_pipe[3]),
        .O(status0[3]));
  LUT1 #(
    .INIT(2'h1)) 
    \status[4]_i_1 
       (.I0(full),
        .O(fcomp_01));
  LUT5 #(
    .INIT(32'h178EE871)) 
    \status[4]_i_2 
       (.I0(wr_addr_pipe[3]),
        .I1(\status[4]_i_3_n_0 ),
        .I2(rag_writesync[3]),
        .I3(rag_writesync[4]),
        .I4(wr_addr_pipe[4]),
        .O(status0[4]));
  LUT6 #(
    .INIT(64'hFFEF8FCF0F0B0203)) 
    \status[4]_i_3 
       (.I0(wr_addr_pipe[0]),
        .I1(rag_writesync[1]),
        .I2(p_4_in),
        .I3(rag_writesync[0]),
        .I4(wr_addr_pipe[1]),
        .I5(wr_addr_pipe[2]),
        .O(\status[4]_i_3_n_0 ));
  FDRE \status_reg[0] 
       (.C(wr_clk),
        .CE(fcomp_01),
        .D(status0[0]),
        .Q(status[0]),
        .R(wr_reset));
  FDRE \status_reg[1] 
       (.C(wr_clk),
        .CE(fcomp_01),
        .D(status0[1]),
        .Q(status[1]),
        .R(wr_reset));
  FDRE \status_reg[2] 
       (.C(wr_clk),
        .CE(fcomp_01),
        .D(status0[2]),
        .Q(status[2]),
        .R(wr_reset));
  FDRE \status_reg[3] 
       (.C(wr_clk),
        .CE(fcomp_01),
        .D(status0[3]),
        .Q(status[3]),
        .R(wr_reset));
  FDRE \status_reg[4] 
       (.C(wr_clk),
        .CE(fcomp_01),
        .D(status0[4]),
        .Q(status[4]),
        .R(wr_reset));
  LUT1 #(
    .INIT(2'h1)) 
    \wr_addr[0]_i_1 
       (.I0(fifo_wr_addr[0]),
        .O(p_0_in__0[0]));
  LUT2 #(
    .INIT(4'h6)) 
    \wr_addr[1]_i_1 
       (.I0(fifo_wr_addr[0]),
        .I1(fifo_wr_addr[1]),
        .O(p_4_out[0]));
  LUT3 #(
    .INIT(8'h78)) 
    \wr_addr[2]_i_1 
       (.I0(fifo_wr_addr[0]),
        .I1(fifo_wr_addr[1]),
        .I2(fifo_wr_addr[2]),
        .O(p_0_in__0[2]));
  (* SOFT_HLUTNM = "soft_lutpair6" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \wr_addr[3]_i_1 
       (.I0(fifo_wr_addr[1]),
        .I1(fifo_wr_addr[0]),
        .I2(fifo_wr_addr[2]),
        .I3(fifo_wr_addr[3]),
        .O(p_0_in__0[3]));
  (* SOFT_HLUTNM = "soft_lutpair6" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \wr_addr[4]_i_2 
       (.I0(fifo_wr_addr[2]),
        .I1(fifo_wr_addr[0]),
        .I2(fifo_wr_addr[1]),
        .I3(fifo_wr_addr[3]),
        .I4(fifo_wr_addr[4]),
        .O(p_0_in__0[4]));
  FDRE \wr_addr_pipe0_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(fifo_wr_addr[0]),
        .Q(wr_addr_pipe0[0]),
        .R(wr_reset));
  FDRE \wr_addr_pipe0_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(fifo_wr_addr[1]),
        .Q(wr_addr_pipe0[1]),
        .R(wr_reset));
  FDRE \wr_addr_pipe0_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(fifo_wr_addr[2]),
        .Q(wr_addr_pipe0[2]),
        .R(wr_reset));
  FDRE \wr_addr_pipe0_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(fifo_wr_addr[3]),
        .Q(wr_addr_pipe0[3]),
        .R(wr_reset));
  FDRE \wr_addr_pipe0_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(fifo_wr_addr[4]),
        .Q(wr_addr_pipe0[4]),
        .R(wr_reset));
  FDRE \wr_addr_pipe1_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(wr_addr_pipe0[0]),
        .Q(wr_addr_pipe1[0]),
        .R(wr_reset));
  FDRE \wr_addr_pipe1_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(wr_addr_pipe0[1]),
        .Q(wr_addr_pipe1[1]),
        .R(wr_reset));
  FDRE \wr_addr_pipe1_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(wr_addr_pipe0[2]),
        .Q(wr_addr_pipe1[2]),
        .R(wr_reset));
  FDRE \wr_addr_pipe1_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(wr_addr_pipe0[3]),
        .Q(wr_addr_pipe1[3]),
        .R(wr_reset));
  FDRE \wr_addr_pipe1_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(wr_addr_pipe0[4]),
        .Q(wr_addr_pipe1[4]),
        .R(wr_reset));
  FDRE \wr_addr_pipe_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(wr_addr_pipe1[0]),
        .Q(wr_addr_pipe[0]),
        .R(wr_reset));
  FDRE \wr_addr_pipe_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(wr_addr_pipe1[1]),
        .Q(wr_addr_pipe[1]),
        .R(wr_reset));
  FDRE \wr_addr_pipe_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(wr_addr_pipe1[2]),
        .Q(wr_addr_pipe[2]),
        .R(wr_reset));
  FDRE \wr_addr_pipe_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(wr_addr_pipe1[3]),
        .Q(wr_addr_pipe[3]),
        .R(wr_reset));
  FDRE \wr_addr_pipe_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(wr_addr_pipe1[4]),
        .Q(wr_addr_pipe[4]),
        .R(wr_reset));
  FDRE \wr_addr_reg[0] 
       (.C(wr_clk),
        .CE(ram_wr_en),
        .D(p_0_in__0[0]),
        .Q(fifo_wr_addr[0]),
        .R(wr_reset));
  FDRE \wr_addr_reg[1] 
       (.C(wr_clk),
        .CE(ram_wr_en),
        .D(p_4_out[0]),
        .Q(fifo_wr_addr[1]),
        .R(wr_reset));
  FDRE \wr_addr_reg[2] 
       (.C(wr_clk),
        .CE(ram_wr_en),
        .D(p_0_in__0[2]),
        .Q(fifo_wr_addr[2]),
        .R(wr_reset));
  FDRE \wr_addr_reg[3] 
       (.C(wr_clk),
        .CE(ram_wr_en),
        .D(p_0_in__0[3]),
        .Q(fifo_wr_addr[3]),
        .R(wr_reset));
  FDRE \wr_addr_reg[4] 
       (.C(wr_clk),
        .CE(ram_wr_en),
        .D(p_0_in__0[4]),
        .Q(fifo_wr_addr[4]),
        .R(wr_reset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \wr_gray_rdclk0_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(wr_gray[0]),
        .Q(wr_gray_rdclk0[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \wr_gray_rdclk0_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(wr_gray[1]),
        .Q(wr_gray_rdclk0[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \wr_gray_rdclk0_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(wr_gray[2]),
        .Q(wr_gray_rdclk0[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \wr_gray_rdclk0_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(wr_gray[3]),
        .Q(wr_gray_rdclk0[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \wr_gray_rdclk0_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(wr_gray[4]),
        .Q(wr_gray_rdclk0[4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \wr_gray_rdclk1_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(wr_gray_rdclk0[0]),
        .Q(wr_gray_rdclk1[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \wr_gray_rdclk1_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(wr_gray_rdclk0[1]),
        .Q(wr_gray_rdclk1[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \wr_gray_rdclk1_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(wr_gray_rdclk0[2]),
        .Q(wr_gray_rdclk1[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \wr_gray_rdclk1_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(wr_gray_rdclk0[3]),
        .Q(wr_gray_rdclk1[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \wr_gray_rdclk1_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(wr_gray_rdclk0[4]),
        .Q(wr_gray_rdclk1[4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \wr_gray_rdclk2_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(wr_gray_rdclk1[0]),
        .Q(wr_gray_rdclk2[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \wr_gray_rdclk2_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(wr_gray_rdclk1[1]),
        .Q(wr_gray_rdclk2[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \wr_gray_rdclk2_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(wr_gray_rdclk1[2]),
        .Q(wr_gray_rdclk2[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \wr_gray_rdclk2_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(wr_gray_rdclk1[3]),
        .Q(wr_gray_rdclk2[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \wr_gray_rdclk2_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(wr_gray_rdclk1[4]),
        .Q(wr_gray_rdclk2[4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \wr_gray_rdclk_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(wr_gray_rdclk2[0]),
        .Q(wr_gray_rdclk[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \wr_gray_rdclk_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(wr_gray_rdclk2[1]),
        .Q(wr_gray_rdclk[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \wr_gray_rdclk_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(wr_gray_rdclk2[2]),
        .Q(wr_gray_rdclk[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \wr_gray_rdclk_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(wr_gray_rdclk2[3]),
        .Q(wr_gray_rdclk[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \wr_gray_rdclk_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(wr_gray_rdclk2[4]),
        .Q(wr_gray_rdclk[4]),
        .R(1'b0));
  FDSE \wr_gray_reg[0] 
       (.C(wr_clk),
        .CE(ram_wr_en),
        .D(fifo_wr_addr[1]),
        .Q(wr_gray[0]),
        .S(wr_reset));
  FDRE \wr_gray_reg[1] 
       (.C(wr_clk),
        .CE(ram_wr_en),
        .D(p_0_in35_in),
        .Q(wr_gray[1]),
        .R(wr_reset));
  FDRE \wr_gray_reg[2] 
       (.C(wr_clk),
        .CE(ram_wr_en),
        .D(p_0_in31_in),
        .Q(wr_gray[2]),
        .R(wr_reset));
  FDRE \wr_gray_reg[3] 
       (.C(wr_clk),
        .CE(ram_wr_en),
        .D(p_0_in27_in),
        .Q(wr_gray[3]),
        .R(wr_reset));
  FDSE \wr_gray_reg[4] 
       (.C(wr_clk),
        .CE(ram_wr_en),
        .D(p_0_in23_in),
        .Q(wr_gray[4]),
        .S(wr_reset));
  LUT2 #(
    .INIT(4'h6)) 
    \wr_nextgray[1]_i_1 
       (.I0(fifo_wr_addr[1]),
        .I1(fifo_wr_addr[2]),
        .O(p_4_out[1]));
  LUT2 #(
    .INIT(4'h6)) 
    \wr_nextgray[2]_i_1 
       (.I0(fifo_wr_addr[2]),
        .I1(fifo_wr_addr[3]),
        .O(p_4_out[2]));
  LUT2 #(
    .INIT(4'h6)) 
    \wr_nextgray[3]_i_1 
       (.I0(fifo_wr_addr[3]),
        .I1(fifo_wr_addr[4]),
        .O(p_4_out[3]));
  FDRE \wr_nextgray_reg[1] 
       (.C(wr_clk),
        .CE(ram_wr_en),
        .D(p_4_out[1]),
        .Q(p_0_in35_in),
        .R(wr_reset));
  FDRE \wr_nextgray_reg[2] 
       (.C(wr_clk),
        .CE(ram_wr_en),
        .D(p_4_out[2]),
        .Q(p_0_in31_in),
        .R(wr_reset));
  FDRE \wr_nextgray_reg[3] 
       (.C(wr_clk),
        .CE(ram_wr_en),
        .D(p_4_out[3]),
        .Q(p_0_in27_in),
        .R(wr_reset));
  FDSE \wr_nextgray_reg[4] 
       (.C(wr_clk),
        .CE(ram_wr_en),
        .D(fifo_wr_addr[4]),
        .Q(p_0_in23_in),
        .S(wr_reset));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_15_baser_gen" *) 
module ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_baser_gen
   (drp_den,
    drp_di,
    drp_daddr,
    SR,
    loopback_ctrl,
    cable_pull,
    core_status,
    mdio_out,
    mdio_tri,
    pma_resetout,
    drp_req,
    drp_dwe,
    rx_prbs31_en,
    tx_disable,
    tx_prbs31_en,
    gt_txd,
    gt_txc,
    gt_slip,
    core_in_testmode,
    clear_rx_prbs_err_count,
    xgmii_rxd,
    xgmii_rxc,
    reset,
    coreclk,
    txusrclk2,
    txreset_txusrclk2,
    rxreset_rxusrclk2,
    rxusrclk2,
    signal_detect,
    areset_coreclk,
    drp_gnt,
    drp_drdy,
    dclk_reset,
    dclk,
    drp_drpdo,
    mdc,
    mdio_in,
    prtad,
    pma_pmd_type,
    resetdone,
    xgmii_txd,
    xgmii_txc,
    D,
    gt_rxc);
  output drp_den;
  output [15:0]drp_di;
  output [15:0]drp_daddr;
  output [0:0]SR;
  output [0:0]loopback_ctrl;
  output cable_pull;
  output [0:0]core_status;
  output mdio_out;
  output mdio_tri;
  output pma_resetout;
  output drp_req;
  output drp_dwe;
  output rx_prbs31_en;
  output tx_disable;
  output tx_prbs31_en;
  output [31:0]gt_txd;
  output [7:0]gt_txc;
  output gt_slip;
  output core_in_testmode;
  output clear_rx_prbs_err_count;
  output [63:0]xgmii_rxd;
  output [7:0]xgmii_rxc;
  input reset;
  input coreclk;
  input txusrclk2;
  input txreset_txusrclk2;
  input rxreset_rxusrclk2;
  input rxusrclk2;
  input signal_detect;
  input areset_coreclk;
  input drp_gnt;
  input drp_drdy;
  input dclk_reset;
  input dclk;
  input [15:0]drp_drpdo;
  input mdc;
  input mdio_in;
  input [4:0]prtad;
  input [2:0]pma_pmd_type;
  input resetdone;
  input [63:0]xgmii_txd;
  input [7:0]xgmii_txc;
  input [33:0]D;
  input [1:0]gt_rxc;

  wire [33:0]D;
  wire [0:0]SR;
  wire areset_coreclk;
  wire b_lock;
  wire cable_pull;
  wire clear_rx_prbs_err_count;
  wire core_in_testmode;
  wire [0:0]core_status;
  wire coreclk;
  wire dclk;
  wire dclk_reset;
  wire [15:0]drp_daddr;
  wire drp_den;
  wire [15:0]drp_di;
  wire drp_drdy;
  wire [15:0]drp_drpdo;
  wire drp_dwe;
  wire drp_gnt;
  wire drp_req;
  wire [1:0]gt_rxc;
  wire gt_slip;
  wire gt_slip0;
  wire gt_slip_reg__0;
  wire [7:0]gt_txc;
  wire [31:0]gt_txd;
  wire hiber;
  wire [0:0]loopback_ctrl;
  wire mcp1_gt_slip_int_reg;
  wire mdc;
  wire mdio_in;
  wire mdio_out;
  wire mdio_tri;
  wire pcs_rx_link_up_core_int;
  wire [2:0]pma_pmd_type;
  wire pma_resetout;
  wire [4:0]prtad;
  wire reset;
  wire resetdone;
  wire rx_prbs31_en;
  wire rxreset_rxusrclk2;
  wire rxusrclk2;
  wire signal_detect;
  wire tx_disable;
  wire tx_prbs31_en;
  wire txreset_txusrclk2;
  wire txusrclk2;
  wire [7:0]xgmii_rxc;
  wire [63:0]xgmii_rxd;
  wire [7:0]xgmii_txc;
  wire [63:0]xgmii_txd;

  ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_baser_top \BASER.ten_gig_eth_pcs_pma_inst 
       (.D(D),
        .areset_coreclk(areset_coreclk),
        .b_lock(b_lock),
        .cable_pull(cable_pull),
        .clear_rx_prbs_err_count(clear_rx_prbs_err_count),
        .core_in_testmode(core_in_testmode),
        .core_status(core_status),
        .coreclk(coreclk),
        .data_out_reg(SR),
        .dclk(dclk),
        .dclk_reset(dclk_reset),
        .drp_daddr(drp_daddr),
        .drp_den(drp_den),
        .drp_di(drp_di),
        .drp_drdy(drp_drdy),
        .drp_drpdo(drp_drpdo),
        .drp_dwe(drp_dwe),
        .drp_gnt(drp_gnt),
        .drp_req(drp_req),
        .gt_rxc(gt_rxc),
        .gt_slip(gt_slip),
        .gt_slip0(gt_slip0),
        .gt_slip_reg__0(gt_slip_reg__0),
        .gt_txc(gt_txc),
        .gt_txd(gt_txd),
        .hiber(hiber),
        .loopback_ctrl(loopback_ctrl),
        .mcp1_gt_slip_int_reg(mcp1_gt_slip_int_reg),
        .mdc(mdc),
        .mdio_in(mdio_in),
        .mdio_out(mdio_out),
        .mdio_tri(mdio_tri),
        .out(rx_prbs31_en),
        .pcs_rx_link_up_core_int(pcs_rx_link_up_core_int),
        .pma_pmd_type(pma_pmd_type),
        .pma_resetout(pma_resetout),
        .prtad(prtad),
        .reset(reset),
        .resetdone(resetdone),
        .rxreset_rxusrclk2(rxreset_rxusrclk2),
        .rxusrclk2(rxusrclk2),
        .signal_detect(signal_detect),
        .tx_disable(tx_disable),
        .tx_prbs31_en(tx_prbs31_en),
        .txreset_txusrclk2(txreset_txusrclk2),
        .txusrclk2(txusrclk2),
        .xgmii_rxc(xgmii_rxc),
        .xgmii_rxd(xgmii_rxd),
        .xgmii_txc(xgmii_txc),
        .xgmii_txd(xgmii_txd));
  LUT2 #(
    .INIT(4'h2)) 
    gt_slip_i_1
       (.I0(mcp1_gt_slip_int_reg),
        .I1(gt_slip_reg__0),
        .O(gt_slip0));
  LUT2 #(
    .INIT(4'h2)) 
    pcs_rx_link_up_core_reg_i_1
       (.I0(b_lock),
        .I1(hiber),
        .O(pcs_rx_link_up_core_int));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_15_baser_top" *) 
module ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_baser_top
   (b_lock,
    hiber,
    out,
    tx_disable,
    core_status,
    tx_prbs31_en,
    mcp1_gt_slip_int_reg,
    gt_slip_reg__0,
    gt_slip,
    core_in_testmode,
    clear_rx_prbs_err_count,
    data_out_reg,
    drp_den,
    drp_di,
    drp_daddr,
    loopback_ctrl,
    gt_txd,
    gt_txc,
    xgmii_rxd,
    xgmii_rxc,
    cable_pull,
    mdio_out,
    mdio_tri,
    pma_resetout,
    drp_req,
    drp_dwe,
    signal_detect,
    rxusrclk2,
    txusrclk2,
    coreclk,
    gt_slip0,
    resetdone,
    pcs_rx_link_up_core_int,
    gt_rxc,
    reset,
    xgmii_txd,
    xgmii_txc,
    D,
    rxreset_rxusrclk2,
    txreset_txusrclk2,
    areset_coreclk,
    drp_gnt,
    drp_drdy,
    dclk_reset,
    dclk,
    drp_drpdo,
    mdc,
    mdio_in,
    prtad,
    pma_pmd_type);
  output b_lock;
  output hiber;
  output [0:0]out;
  output tx_disable;
  output [0:0]core_status;
  output tx_prbs31_en;
  output mcp1_gt_slip_int_reg;
  output gt_slip_reg__0;
  output gt_slip;
  output core_in_testmode;
  output clear_rx_prbs_err_count;
  output data_out_reg;
  output drp_den;
  output [15:0]drp_di;
  output [15:0]drp_daddr;
  output [0:0]loopback_ctrl;
  output [31:0]gt_txd;
  output [7:0]gt_txc;
  output [63:0]xgmii_rxd;
  output [7:0]xgmii_rxc;
  output cable_pull;
  output mdio_out;
  output mdio_tri;
  output pma_resetout;
  output drp_req;
  output drp_dwe;
  input signal_detect;
  input rxusrclk2;
  input txusrclk2;
  input coreclk;
  input gt_slip0;
  input resetdone;
  input pcs_rx_link_up_core_int;
  input [1:0]gt_rxc;
  input reset;
  input [63:0]xgmii_txd;
  input [7:0]xgmii_txc;
  input [33:0]D;
  input rxreset_rxusrclk2;
  input txreset_txusrclk2;
  input areset_coreclk;
  input drp_gnt;
  input drp_drdy;
  input dclk_reset;
  input dclk;
  input [15:0]drp_drpdo;
  input mdc;
  input mdio_in;
  input [4:0]prtad;
  input [2:0]pma_pmd_type;

  wire [33:0]D;
  (* MAX_FANOUT = "50" *) (* RTL_MAX_FANOUT = "found" *) (* equivalent_register_removal = "no" *) wire \G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_10 ;
  (* MAX_FANOUT = "50" *) (* RTL_MAX_FANOUT = "found" *) (* equivalent_register_removal = "no" *) wire \G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_11 ;
  (* MAX_FANOUT = "50" *) (* RTL_MAX_FANOUT = "found" *) (* equivalent_register_removal = "no" *) wire \G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_12 ;
  wire \G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_13 ;
  (* MAX_FANOUT = "50" *) (* RTL_MAX_FANOUT = "found" *) (* equivalent_register_removal = "no" *) wire \G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_2 ;
  (* MAX_FANOUT = "50" *) (* RTL_MAX_FANOUT = "found" *) (* equivalent_register_removal = "no" *) wire \G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_3 ;
  (* MAX_FANOUT = "50" *) (* RTL_MAX_FANOUT = "found" *) (* equivalent_register_removal = "no" *) wire \G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_4 ;
  (* MAX_FANOUT = "50" *) (* RTL_MAX_FANOUT = "found" *) (* equivalent_register_removal = "no" *) wire \G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_5 ;
  (* MAX_FANOUT = "50" *) (* RTL_MAX_FANOUT = "found" *) (* equivalent_register_removal = "no" *) wire \G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_6 ;
  (* MAX_FANOUT = "50" *) (* RTL_MAX_FANOUT = "found" *) (* equivalent_register_removal = "no" *) wire \G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_7 ;
  (* MAX_FANOUT = "50" *) (* RTL_MAX_FANOUT = "found" *) (* equivalent_register_removal = "no" *) wire \G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_8 ;
  (* MAX_FANOUT = "50" *) (* RTL_MAX_FANOUT = "found" *) (* equivalent_register_removal = "no" *) wire \G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_9 ;
  wire areset_coreclk;
  wire b_lock;
  wire ber_count_inc;
  wire cable_pull;
  wire clear_rx_prbs_err_count;
  wire clear_rx_prbs_err_count0;
  wire clear_test_pattern_err_count;
  wire clear_test_pattern_err_count_reg;
  wire clear_test_pattern_error_count;
  wire core_in_testmode;
  wire core_in_testmode_wire;
  wire [0:0]core_status;
  wire coreclk;
  wire coreclk_rxusrclk2_resyncs_i_n_3;
  wire coreclk_rxusrclk2_resyncs_i_n_4;
  wire data_out_reg;
  wire dclk;
  wire dclk_reset;
  wire [15:0]drp_daddr;
  wire drp_den;
  wire [15:0]drp_di;
  wire drp_drdy;
  wire [15:0]drp_drpdo;
  wire drp_dwe;
  wire drp_gnt;
  wire drp_req;
  (* RTL_KEEP = "true" *) wire eq_rxusrclk2_en156;
  wire err_block_count_inc;
  wire [1:0]gt_rxc;
  wire gt_slip;
  wire gt_slip0;
  wire gt_slip_int;
  wire gt_slip_reg__0;
  wire [7:0]gt_txc;
  wire [1:0]gt_txc_mux;
  wire [31:0]gt_txd;
  wire [31:0]gt_txd_mux;
  wire hiber;
  wire \ieee_registers_i/common_reg_block/reg_1_0_15__0 ;
  wire [0:0]loopback_ctrl;
  wire management_inst_n_177;
  wire management_inst_n_178;
  wire mcp1_gt_slip_int_reg;
  wire [65:0]mcp1_rx_66_raw;
  wire mdc;
  wire mdio_in;
  wire mdio_out;
  wire mdio_tri;
  wire [0:0]out;
  wire pcs_ber_count_control_core_int;
  wire pcs_error_block_count_control_core_int;
  wire pcs_hi_ber_core_int;
  wire pcs_loopback_core_int;
  wire pcs_reset_clear_core_intr;
  wire pcs_reset_core_reg;
  wire pcs_rx_link_up_core_int;
  wire pcs_rx_link_up_core_reg;
  wire pcs_rx_link_up_core_sync_int;
  wire pcs_rxreset_int;
  wire pcs_test_pattern_error_count_control_core_int;
  wire pcs_top_i_n_1;
  wire pcs_top_i_n_15;
  wire pma_pmd_status_tx_fault_core_int;
  wire [2:0]pma_pmd_type;
  wire pma_resetout;
  wire prbs31_rx_enable_core_int;
  (* DONT_TOUCH *) (* equivalent_register_removal = "no" *) wire prbs31_rx_enable_core_rega;
  (* DONT_TOUCH *) (* equivalent_register_removal = "no" *) wire prbs31_rx_enable_core_regb;
  wire prbs31_tx_enable_core_int;
  wire prbs31_tx_enable_core_reg;
  wire [4:0]prtad;
  wire [115:0]pseudo_rand_seeds_int;
  wire q;
  wire reset;
  wire resetdone;
  wire [65:0]rx_66_raw_int;
  wire \rx_elastic_buffer_i/idle_delete_i/idle_detect_i0/comp_0 ;
  wire \rx_elastic_buffer_i/idle_delete_i/idle_detect_i0/comp_1 ;
  wire \rx_elastic_buffer_i/idle_delete_i/idle_detect_i0/comp_8 ;
  wire \rx_elastic_buffer_i/idle_delete_i/idle_detect_i1/comp_0 ;
  wire \rx_elastic_buffer_i/idle_delete_i/idle_detect_i1/comp_1 ;
  wire \rx_elastic_buffer_i/idle_delete_i/idle_detect_i1/comp_8 ;
  wire \rx_elastic_buffer_i/idle_delete_i/seq_detect_i0/comp_0 ;
  wire \rx_elastic_buffer_i/idle_delete_i/seq_detect_i0/comp_1 ;
  wire \rx_elastic_buffer_i/idle_delete_i/seq_detect_i0/comp_2 ;
  wire \rx_elastic_buffer_i/idle_delete_i/seq_detect_i1/comp_0 ;
  wire \rx_elastic_buffer_i/idle_delete_i/seq_detect_i1/comp_1 ;
  wire \rx_elastic_buffer_i/idle_delete_i/seq_detect_i1/comp_2 ;
  wire [33:0]rx_gt;
  wire [2:2]\rx_pcs_i/rx_decoder_i/DecodeWord ;
  wire [2:2]\rx_pcs_i/rx_decoder_i/DecodeWord0 ;
  wire [2:2]\rx_pcs_i/rx_decoder_i/DecodeWord1 ;
  wire [2:2]\rx_pcs_i/rx_decoder_i/DecodeWord2 ;
  wire [2:2]\rx_pcs_i/rx_decoder_i/DecodeWord3 ;
  wire [2:2]\rx_pcs_i/rx_decoder_i/DecodeWord4 ;
  wire [2:2]\rx_pcs_i/rx_decoder_i/DecodeWord5 ;
  wire \rx_pcs_i/rx_decoder_i/mcp1_dec_c0 ;
  wire \rx_pcs_i/rx_decoder_i/mcp1_dec_c1 ;
  wire \rx_pcs_i/rx_decoder_i/mcp1_dec_c2 ;
  wire \rx_pcs_i/rx_decoder_i/mcp1_dec_c3 ;
  wire \rx_pcs_i/rx_decoder_i/mcp1_dec_c4 ;
  wire \rx_pcs_i/rx_decoder_i/mcp1_dec_c5 ;
  wire \rx_pcs_i/rx_decoder_i/mcp1_dec_c6 ;
  wire \rx_pcs_i/rx_decoder_i/mcp1_dec_c7 ;
  wire rx_test_mode_int;
  wire rx_test_mode_int_reg;
  wire rx_test_patt_sel_int;
  wire rx_test_pattern_enable_core_int;
  wire [7:0]rx_xgmii_ctrl_int;
  wire [63:0]rx_xgmii_data_int;
  wire rxdatavalid;
  wire rxheadervalid;
  wire rxreset_rxusrclk2;
  wire rxusrclk2;
  (* MAX_FANOUT = "50" *) (* RTL_MAX_FANOUT = "found" *) (* equivalent_register_removal = "no" *) wire rxusrclk2_en156;
  wire signal_detect;
  wire signal_detect_sync;
  wire synch_5_n_1;
  wire test_data_patt_sel_int;
  wire test_patt_sel_int;
  wire [15:0]timer_125us_cycles_core_int;
  wire [65:0]tx_66_scr_int;
  wire tx_disable;
  wire tx_disable_int;
  wire \tx_pcs_i/pcs_scramble_i/new_tx_test_seed ;
  wire [0:0]\tx_pcs_i/pcs_scramble_i/tx_test_patt_seed_sel ;
  wire [0:0]\tx_pcs_i/tx_66_enc_fsm ;
  wire tx_prbs31_en;
  wire tx_test_pattern_enable_core_int;
  wire txreset_txusrclk2;
  wire [5:0]txsequence;
  wire txusrclk2;
  wire [7:0]xgmii_rxc;
  wire [63:0]xgmii_rxd;
  wire [7:0]xgmii_txc;
  (* DONT_TOUCH *) (* equivalent_register_removal = "no" *) wire [7:0]xgmii_txc_reg;
  (* DONT_TOUCH *) (* equivalent_register_removal = "no" *) wire [7:0]xgmii_txc_reg2;
  wire [63:0]xgmii_txd;
  (* DONT_TOUCH *) (* equivalent_register_removal = "no" *) wire [63:0]xgmii_txd_reg;
  (* DONT_TOUCH *) (* equivalent_register_removal = "no" *) wire [63:0]xgmii_txd_reg2;

  ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_rxratecounter \G_7SERIES_RXRATECOUNTER.rxratecounter_i 
       (.D(rx_66_raw_int),
        .DecodeWord(\rx_pcs_i/rx_decoder_i/DecodeWord ),
        .DecodeWord0(\rx_pcs_i/rx_decoder_i/DecodeWord0 ),
        .DecodeWord1(\rx_pcs_i/rx_decoder_i/DecodeWord1 ),
        .DecodeWord2(\rx_pcs_i/rx_decoder_i/DecodeWord2 ),
        .DecodeWord3(\rx_pcs_i/rx_decoder_i/DecodeWord3 ),
        .DecodeWord4(\rx_pcs_i/rx_decoder_i/DecodeWord4 ),
        .DecodeWord5(\rx_pcs_i/rx_decoder_i/DecodeWord5 ),
        .E(rxusrclk2_en156),
        .Q(rx_gt),
        .SR(\rx_pcs_i/rx_decoder_i/mcp1_dec_c0 ),
        .SS(\rx_pcs_i/rx_decoder_i/mcp1_dec_c6 ),
        .\mcp1_dec_c7_reg[7] (pcs_top_i_n_15),
        .\mcp1_r_type_next_reg_reg[2] (pcs_top_i_n_1),
        .out(eq_rxusrclk2_en156),
        .rxdatavalid(rxdatavalid),
        .rxheadervalid(rxheadervalid),
        .rxusrclk2(rxusrclk2),
        .rxusrclk2_en156_reg_rep__0_0(\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_5 ),
        .rxusrclk2_en156_reg_rep__2_0({\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_2 ,\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_3 ,\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_4 }),
        .rxusrclk2_en156_reg_rep__5_0({\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_6 ,\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_7 ,\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_8 }),
        .rxusrclk2_en156_reg_rep__6_0({\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_9 ,\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_10 }),
        .rxusrclk2_en156_reg_rep__8_0(\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_11 ),
        .rxusrclk2_en156_reg_rep__9_0(\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_12 ),
        .rxusrclk2_en156_reg_rep__9_1(\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_13 ),
        .rxusrclk2_en156_reg_rep__9_2(\rx_pcs_i/rx_decoder_i/mcp1_dec_c1 ),
        .rxusrclk2_en156_reg_rep__9_3(\rx_pcs_i/rx_decoder_i/mcp1_dec_c2 ),
        .rxusrclk2_en156_reg_rep__9_4(\rx_pcs_i/rx_decoder_i/mcp1_dec_c3 ),
        .rxusrclk2_en156_reg_rep__9_5(\rx_pcs_i/rx_decoder_i/mcp1_dec_c4 ),
        .rxusrclk2_en156_reg_rep__9_6(\rx_pcs_i/rx_decoder_i/mcp1_dec_c5 ),
        .rxusrclk2_en156_reg_rep__9_7(\rx_pcs_i/rx_decoder_i/mcp1_dec_c7 ));
  ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_txratefifo \G_7SERIES_TXFIFO.txratefifo_i 
       (.D(gt_txd_mux),
        .Q(txsequence),
        .coreclk(coreclk),
        .fifo_full(pma_pmd_status_tx_fault_core_int),
        .q(q),
        .reset(reset),
        .tx_66_fifo(tx_66_scr_int),
        .txreset_txusrclk2(txreset_txusrclk2),
        .\txsequence_int_reg[6]_0 (gt_txc_mux),
        .txusrclk2(txusrclk2));
  FDRE #(
    .INIT(1'b0)) 
    clear_rx_prbs_err_count_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(clear_rx_prbs_err_count0),
        .Q(clear_rx_prbs_err_count),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    clear_test_pattern_err_count_reg_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(clear_test_pattern_err_count),
        .Q(clear_test_pattern_err_count_reg),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    core_in_testmode_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(core_in_testmode_wire),
        .Q(core_in_testmode),
        .R(1'b0));
  ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_synchronizer coreclk_rxusrclk2_resets_resyncs_i
       (.in0(pcs_reset_core_reg),
        .pcs_rxreset_int(pcs_rxreset_int),
        .rxusrclk2(rxusrclk2));
  ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_g_resyncs_en coreclk_rxusrclk2_resyncs2_i
       (.E(rxusrclk2_en156),
        .d(clear_test_pattern_err_count_reg),
        .q(clear_test_pattern_error_count),
        .rxusrclk2(rxusrclk2));
  ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_coherent_resyncs_en__parameterized0 coreclk_rxusrclk2_resyncs_i
       (.E(rxusrclk2_en156),
        .clear_rx_prbs_err_count0(clear_rx_prbs_err_count0),
        .\d5_reg[0]_0 ({\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_3 ,\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_4 }),
        .data_pattern_select_core(test_data_patt_sel_int),
        .in0(b_lock),
        .out(prbs31_rx_enable_core_rega),
        .\outreg_reg[2]_0 (coreclk_rxusrclk2_resyncs_i_n_4),
        .\outreg_reg[3]_0 ({out,rx_test_mode_int,rx_test_patt_sel_int,coreclk_rxusrclk2_resyncs_i_n_3}),
        .pcs_rxreset_int(pcs_rxreset_int),
        .q(clear_test_pattern_error_count),
        .rx_test_pattern_enable_core(rx_test_pattern_enable_core_int),
        .rxreset_rxusrclk2(rxreset_rxusrclk2),
        .rxusrclk2(rxusrclk2),
        .test_pattern_select_core(test_patt_sel_int));
  ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_g_resyncs__parameterized0 coreclk_txusrclk2_resyncs_i
       (.in0(prbs31_tx_enable_core_reg),
        .pcs_loopback_core_int(pcs_loopback_core_int),
        .q(q),
        .tx_prbs31_en(tx_prbs31_en),
        .txusrclk2(txusrclk2));
  ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_elastic_buffer_wrapper \ebuff_gen.rx_elastic_buffer_i 
       (.Q(rx_xgmii_data_int),
        .comp_0(\rx_elastic_buffer_i/idle_delete_i/idle_detect_i0/comp_0 ),
        .comp_0_0(\rx_elastic_buffer_i/idle_delete_i/idle_detect_i1/comp_0 ),
        .comp_0_3(\rx_elastic_buffer_i/idle_delete_i/seq_detect_i0/comp_0 ),
        .comp_0_5(\rx_elastic_buffer_i/idle_delete_i/seq_detect_i1/comp_0 ),
        .comp_1(\rx_elastic_buffer_i/idle_delete_i/idle_detect_i0/comp_1 ),
        .comp_1_1(\rx_elastic_buffer_i/idle_delete_i/idle_detect_i1/comp_1 ),
        .comp_1_4(\rx_elastic_buffer_i/idle_delete_i/seq_detect_i0/comp_1 ),
        .comp_1_6(\rx_elastic_buffer_i/idle_delete_i/seq_detect_i1/comp_1 ),
        .comp_2(\rx_elastic_buffer_i/idle_delete_i/seq_detect_i0/comp_2 ),
        .comp_2_7(\rx_elastic_buffer_i/idle_delete_i/seq_detect_i1/comp_2 ),
        .comp_8(\rx_elastic_buffer_i/idle_delete_i/idle_detect_i0/comp_8 ),
        .comp_8_2(\rx_elastic_buffer_i/idle_delete_i/idle_detect_i1/comp_8 ),
        .coreclk(coreclk),
        .\mcp1_ctrl_pipe_reg[7] (rx_xgmii_ctrl_int),
        .out(eq_rxusrclk2_en156),
        .pcs_loopback_core_int(pcs_loopback_core_int),
        .reset(reset),
        .rxreset_rxusrclk2(rxreset_rxusrclk2),
        .rxusrclk2(rxusrclk2),
        .xgmii_rxc(xgmii_rxc),
        .\xgmii_rxc[7] (xgmii_txc_reg2),
        .xgmii_rxd(xgmii_rxd),
        .\xgmii_rxd[63] (xgmii_txd_reg2));
  FDRE #(
    .INIT(1'b0)) 
    gt_slip_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(gt_slip0),
        .Q(gt_slip),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    gt_slip_reg_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(mcp1_gt_slip_int_reg),
        .Q(gt_slip_reg__0),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gt_txc_reg[0] 
       (.C(txusrclk2),
        .CE(1'b1),
        .D(gt_txc_mux[0]),
        .Q(gt_txc[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gt_txc_reg[1] 
       (.C(txusrclk2),
        .CE(1'b1),
        .D(gt_txc_mux[1]),
        .Q(gt_txc[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gt_txc_reg[2] 
       (.C(txusrclk2),
        .CE(1'b1),
        .D(txsequence[0]),
        .Q(gt_txc[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gt_txc_reg[3] 
       (.C(txusrclk2),
        .CE(1'b1),
        .D(txsequence[1]),
        .Q(gt_txc[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gt_txc_reg[4] 
       (.C(txusrclk2),
        .CE(1'b1),
        .D(txsequence[2]),
        .Q(gt_txc[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gt_txc_reg[5] 
       (.C(txusrclk2),
        .CE(1'b1),
        .D(txsequence[3]),
        .Q(gt_txc[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gt_txc_reg[6] 
       (.C(txusrclk2),
        .CE(1'b1),
        .D(txsequence[4]),
        .Q(gt_txc[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gt_txc_reg[7] 
       (.C(txusrclk2),
        .CE(1'b1),
        .D(txsequence[5]),
        .Q(gt_txc[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gt_txd_reg[0] 
       (.C(txusrclk2),
        .CE(1'b1),
        .D(gt_txd_mux[0]),
        .Q(gt_txd[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gt_txd_reg[10] 
       (.C(txusrclk2),
        .CE(1'b1),
        .D(gt_txd_mux[10]),
        .Q(gt_txd[10]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gt_txd_reg[11] 
       (.C(txusrclk2),
        .CE(1'b1),
        .D(gt_txd_mux[11]),
        .Q(gt_txd[11]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gt_txd_reg[12] 
       (.C(txusrclk2),
        .CE(1'b1),
        .D(gt_txd_mux[12]),
        .Q(gt_txd[12]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gt_txd_reg[13] 
       (.C(txusrclk2),
        .CE(1'b1),
        .D(gt_txd_mux[13]),
        .Q(gt_txd[13]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gt_txd_reg[14] 
       (.C(txusrclk2),
        .CE(1'b1),
        .D(gt_txd_mux[14]),
        .Q(gt_txd[14]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gt_txd_reg[15] 
       (.C(txusrclk2),
        .CE(1'b1),
        .D(gt_txd_mux[15]),
        .Q(gt_txd[15]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gt_txd_reg[16] 
       (.C(txusrclk2),
        .CE(1'b1),
        .D(gt_txd_mux[16]),
        .Q(gt_txd[16]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gt_txd_reg[17] 
       (.C(txusrclk2),
        .CE(1'b1),
        .D(gt_txd_mux[17]),
        .Q(gt_txd[17]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gt_txd_reg[18] 
       (.C(txusrclk2),
        .CE(1'b1),
        .D(gt_txd_mux[18]),
        .Q(gt_txd[18]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gt_txd_reg[19] 
       (.C(txusrclk2),
        .CE(1'b1),
        .D(gt_txd_mux[19]),
        .Q(gt_txd[19]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gt_txd_reg[1] 
       (.C(txusrclk2),
        .CE(1'b1),
        .D(gt_txd_mux[1]),
        .Q(gt_txd[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gt_txd_reg[20] 
       (.C(txusrclk2),
        .CE(1'b1),
        .D(gt_txd_mux[20]),
        .Q(gt_txd[20]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gt_txd_reg[21] 
       (.C(txusrclk2),
        .CE(1'b1),
        .D(gt_txd_mux[21]),
        .Q(gt_txd[21]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gt_txd_reg[22] 
       (.C(txusrclk2),
        .CE(1'b1),
        .D(gt_txd_mux[22]),
        .Q(gt_txd[22]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gt_txd_reg[23] 
       (.C(txusrclk2),
        .CE(1'b1),
        .D(gt_txd_mux[23]),
        .Q(gt_txd[23]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gt_txd_reg[24] 
       (.C(txusrclk2),
        .CE(1'b1),
        .D(gt_txd_mux[24]),
        .Q(gt_txd[24]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gt_txd_reg[25] 
       (.C(txusrclk2),
        .CE(1'b1),
        .D(gt_txd_mux[25]),
        .Q(gt_txd[25]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gt_txd_reg[26] 
       (.C(txusrclk2),
        .CE(1'b1),
        .D(gt_txd_mux[26]),
        .Q(gt_txd[26]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gt_txd_reg[27] 
       (.C(txusrclk2),
        .CE(1'b1),
        .D(gt_txd_mux[27]),
        .Q(gt_txd[27]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gt_txd_reg[28] 
       (.C(txusrclk2),
        .CE(1'b1),
        .D(gt_txd_mux[28]),
        .Q(gt_txd[28]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gt_txd_reg[29] 
       (.C(txusrclk2),
        .CE(1'b1),
        .D(gt_txd_mux[29]),
        .Q(gt_txd[29]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gt_txd_reg[2] 
       (.C(txusrclk2),
        .CE(1'b1),
        .D(gt_txd_mux[2]),
        .Q(gt_txd[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gt_txd_reg[30] 
       (.C(txusrclk2),
        .CE(1'b1),
        .D(gt_txd_mux[30]),
        .Q(gt_txd[30]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gt_txd_reg[31] 
       (.C(txusrclk2),
        .CE(1'b1),
        .D(gt_txd_mux[31]),
        .Q(gt_txd[31]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gt_txd_reg[3] 
       (.C(txusrclk2),
        .CE(1'b1),
        .D(gt_txd_mux[3]),
        .Q(gt_txd[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gt_txd_reg[4] 
       (.C(txusrclk2),
        .CE(1'b1),
        .D(gt_txd_mux[4]),
        .Q(gt_txd[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gt_txd_reg[5] 
       (.C(txusrclk2),
        .CE(1'b1),
        .D(gt_txd_mux[5]),
        .Q(gt_txd[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gt_txd_reg[6] 
       (.C(txusrclk2),
        .CE(1'b1),
        .D(gt_txd_mux[6]),
        .Q(gt_txd[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gt_txd_reg[7] 
       (.C(txusrclk2),
        .CE(1'b1),
        .D(gt_txd_mux[7]),
        .Q(gt_txd[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gt_txd_reg[8] 
       (.C(txusrclk2),
        .CE(1'b1),
        .D(gt_txd_mux[8]),
        .Q(gt_txd[8]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gt_txd_reg[9] 
       (.C(txusrclk2),
        .CE(1'b1),
        .D(gt_txd_mux[9]),
        .Q(gt_txd[9]),
        .R(1'b0));
  ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_management_top management_inst
       (.Q(timer_125us_cycles_core_int),
        .SR(data_out_reg),
        .areset_coreclk(areset_coreclk),
        .asynch_fifo_i_i_68(\tx_pcs_i/pcs_scramble_i/tx_test_patt_seed_sel ),
        .clear_test_pattern_err_count(clear_test_pattern_err_count),
        .core_in_testmode_wire(core_in_testmode_wire),
        .core_status(core_status),
        .coreclk(coreclk),
        .counter_out(pcs_error_block_count_control_core_int),
        .dclk(dclk),
        .dclk_reset(dclk_reset),
        .drp_daddr(drp_daddr),
        .drp_den(drp_den),
        .drp_di(drp_di),
        .drp_drdy(drp_drdy),
        .drp_drpdo(drp_drpdo),
        .drp_dwe(drp_dwe),
        .drp_gnt(drp_gnt),
        .drp_req(drp_req),
        .fifo_full(pma_pmd_status_tx_fault_core_int),
        .in0(tx_disable_int),
        .loopback_ctrl(loopback_ctrl),
        .mdc(mdc),
        .mdio_in(mdio_in),
        .mdio_out(mdio_out),
        .mdio_tri(mdio_tri),
        .new_tx_test_seed(\tx_pcs_i/pcs_scramble_i/new_tx_test_seed ),
        .out(prbs31_rx_enable_core_regb),
        .\pcs_ber_count_reg[0] (pcs_ber_count_control_core_int),
        .pcs_hi_ber_core_int(pcs_hi_ber_core_int),
        .pcs_loopback_core_int(pcs_loopback_core_int),
        .pcs_reset_clear_core_intr(pcs_reset_clear_core_intr),
        .pcs_rx_link_up_core_sync_int(pcs_rx_link_up_core_sync_int),
        .\pcs_test_pattern_error_count_reg[0] (pcs_test_pattern_error_count_control_core_int),
        .pma_pmd_type(pma_pmd_type),
        .pma_resetout(pma_resetout),
        .prbs31_rx_enable_core_int(prbs31_rx_enable_core_int),
        .prbs31_tx_enable_core_int(prbs31_tx_enable_core_int),
        .prtad(prtad),
        .pseudo_rand_seeds_int(pseudo_rand_seeds_int),
        .\q_reg[0] (synch_5_n_1),
        .\q_reg[1] (management_inst_n_178),
        .\q_reg[3] ({tx_test_pattern_enable_core_int,rx_test_pattern_enable_core_int,test_patt_sel_int,test_data_patt_sel_int}),
        .\q_reg[3]_0 (management_inst_n_177),
        .\rd_data_reg[1] (\tx_pcs_i/tx_66_enc_fsm ),
        .reg_1_0_15__0(\ieee_registers_i/common_reg_block/reg_1_0_15__0 ),
        .reset(reset),
        .resetdone(resetdone),
        .signal_detect_sync(signal_detect_sync),
        .tx_66_fifo(tx_66_scr_int[0]));
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    mcp1_gt_slip_int_reg_reg
       (.C(rxusrclk2),
        .CE(\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_5 ),
        .D(gt_slip_int),
        .Q(mcp1_gt_slip_int_reg),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[0] 
       (.C(rxusrclk2),
        .CE(\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_10 ),
        .D(rx_66_raw_int[0]),
        .Q(mcp1_rx_66_raw[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[10] 
       (.C(rxusrclk2),
        .CE(\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_10 ),
        .D(rx_66_raw_int[10]),
        .Q(mcp1_rx_66_raw[10]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[11] 
       (.C(rxusrclk2),
        .CE(\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_10 ),
        .D(rx_66_raw_int[11]),
        .Q(mcp1_rx_66_raw[11]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[12] 
       (.C(rxusrclk2),
        .CE(\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_10 ),
        .D(rx_66_raw_int[12]),
        .Q(mcp1_rx_66_raw[12]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[13] 
       (.C(rxusrclk2),
        .CE(\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_10 ),
        .D(rx_66_raw_int[13]),
        .Q(mcp1_rx_66_raw[13]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[14] 
       (.C(rxusrclk2),
        .CE(\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_10 ),
        .D(rx_66_raw_int[14]),
        .Q(mcp1_rx_66_raw[14]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[15] 
       (.C(rxusrclk2),
        .CE(\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_10 ),
        .D(rx_66_raw_int[15]),
        .Q(mcp1_rx_66_raw[15]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[16] 
       (.C(rxusrclk2),
        .CE(\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_10 ),
        .D(rx_66_raw_int[16]),
        .Q(mcp1_rx_66_raw[16]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[17] 
       (.C(rxusrclk2),
        .CE(\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_10 ),
        .D(rx_66_raw_int[17]),
        .Q(mcp1_rx_66_raw[17]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[18] 
       (.C(rxusrclk2),
        .CE(\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_10 ),
        .D(rx_66_raw_int[18]),
        .Q(mcp1_rx_66_raw[18]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[19] 
       (.C(rxusrclk2),
        .CE(\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_10 ),
        .D(rx_66_raw_int[19]),
        .Q(mcp1_rx_66_raw[19]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[1] 
       (.C(rxusrclk2),
        .CE(\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_10 ),
        .D(rx_66_raw_int[1]),
        .Q(mcp1_rx_66_raw[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[20] 
       (.C(rxusrclk2),
        .CE(\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_10 ),
        .D(rx_66_raw_int[20]),
        .Q(mcp1_rx_66_raw[20]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[21] 
       (.C(rxusrclk2),
        .CE(\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_11 ),
        .D(rx_66_raw_int[21]),
        .Q(mcp1_rx_66_raw[21]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[22] 
       (.C(rxusrclk2),
        .CE(\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_11 ),
        .D(rx_66_raw_int[22]),
        .Q(mcp1_rx_66_raw[22]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[23] 
       (.C(rxusrclk2),
        .CE(\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_11 ),
        .D(rx_66_raw_int[23]),
        .Q(mcp1_rx_66_raw[23]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[24] 
       (.C(rxusrclk2),
        .CE(\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_11 ),
        .D(rx_66_raw_int[24]),
        .Q(mcp1_rx_66_raw[24]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[25] 
       (.C(rxusrclk2),
        .CE(\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_11 ),
        .D(rx_66_raw_int[25]),
        .Q(mcp1_rx_66_raw[25]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[26] 
       (.C(rxusrclk2),
        .CE(\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_11 ),
        .D(rx_66_raw_int[26]),
        .Q(mcp1_rx_66_raw[26]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[27] 
       (.C(rxusrclk2),
        .CE(\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_11 ),
        .D(rx_66_raw_int[27]),
        .Q(mcp1_rx_66_raw[27]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[28] 
       (.C(rxusrclk2),
        .CE(\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_11 ),
        .D(rx_66_raw_int[28]),
        .Q(mcp1_rx_66_raw[28]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[29] 
       (.C(rxusrclk2),
        .CE(\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_11 ),
        .D(rx_66_raw_int[29]),
        .Q(mcp1_rx_66_raw[29]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[2] 
       (.C(rxusrclk2),
        .CE(\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_10 ),
        .D(rx_66_raw_int[2]),
        .Q(mcp1_rx_66_raw[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[30] 
       (.C(rxusrclk2),
        .CE(\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_11 ),
        .D(rx_66_raw_int[30]),
        .Q(mcp1_rx_66_raw[30]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[31] 
       (.C(rxusrclk2),
        .CE(\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_11 ),
        .D(rx_66_raw_int[31]),
        .Q(mcp1_rx_66_raw[31]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[32] 
       (.C(rxusrclk2),
        .CE(\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_11 ),
        .D(rx_66_raw_int[32]),
        .Q(mcp1_rx_66_raw[32]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[33] 
       (.C(rxusrclk2),
        .CE(\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_11 ),
        .D(rx_66_raw_int[33]),
        .Q(mcp1_rx_66_raw[33]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[34] 
       (.C(rxusrclk2),
        .CE(\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_11 ),
        .D(rx_66_raw_int[34]),
        .Q(mcp1_rx_66_raw[34]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[35] 
       (.C(rxusrclk2),
        .CE(\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_11 ),
        .D(rx_66_raw_int[35]),
        .Q(mcp1_rx_66_raw[35]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[36] 
       (.C(rxusrclk2),
        .CE(\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_11 ),
        .D(rx_66_raw_int[36]),
        .Q(mcp1_rx_66_raw[36]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[37] 
       (.C(rxusrclk2),
        .CE(\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_11 ),
        .D(rx_66_raw_int[37]),
        .Q(mcp1_rx_66_raw[37]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[38] 
       (.C(rxusrclk2),
        .CE(\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_11 ),
        .D(rx_66_raw_int[38]),
        .Q(mcp1_rx_66_raw[38]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[39] 
       (.C(rxusrclk2),
        .CE(\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_11 ),
        .D(rx_66_raw_int[39]),
        .Q(mcp1_rx_66_raw[39]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[3] 
       (.C(rxusrclk2),
        .CE(\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_10 ),
        .D(rx_66_raw_int[3]),
        .Q(mcp1_rx_66_raw[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[40] 
       (.C(rxusrclk2),
        .CE(\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_11 ),
        .D(rx_66_raw_int[40]),
        .Q(mcp1_rx_66_raw[40]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[41] 
       (.C(rxusrclk2),
        .CE(\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_11 ),
        .D(rx_66_raw_int[41]),
        .Q(mcp1_rx_66_raw[41]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[42] 
       (.C(rxusrclk2),
        .CE(\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_11 ),
        .D(rx_66_raw_int[42]),
        .Q(mcp1_rx_66_raw[42]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[43] 
       (.C(rxusrclk2),
        .CE(\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_11 ),
        .D(rx_66_raw_int[43]),
        .Q(mcp1_rx_66_raw[43]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[44] 
       (.C(rxusrclk2),
        .CE(\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_11 ),
        .D(rx_66_raw_int[44]),
        .Q(mcp1_rx_66_raw[44]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[45] 
       (.C(rxusrclk2),
        .CE(\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_11 ),
        .D(rx_66_raw_int[45]),
        .Q(mcp1_rx_66_raw[45]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[46] 
       (.C(rxusrclk2),
        .CE(\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_11 ),
        .D(rx_66_raw_int[46]),
        .Q(mcp1_rx_66_raw[46]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[47] 
       (.C(rxusrclk2),
        .CE(\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_11 ),
        .D(rx_66_raw_int[47]),
        .Q(mcp1_rx_66_raw[47]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[48] 
       (.C(rxusrclk2),
        .CE(\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_11 ),
        .D(rx_66_raw_int[48]),
        .Q(mcp1_rx_66_raw[48]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[49] 
       (.C(rxusrclk2),
        .CE(\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_11 ),
        .D(rx_66_raw_int[49]),
        .Q(mcp1_rx_66_raw[49]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[4] 
       (.C(rxusrclk2),
        .CE(\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_10 ),
        .D(rx_66_raw_int[4]),
        .Q(mcp1_rx_66_raw[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[50] 
       (.C(rxusrclk2),
        .CE(\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_11 ),
        .D(rx_66_raw_int[50]),
        .Q(mcp1_rx_66_raw[50]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[51] 
       (.C(rxusrclk2),
        .CE(\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_11 ),
        .D(rx_66_raw_int[51]),
        .Q(mcp1_rx_66_raw[51]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[52] 
       (.C(rxusrclk2),
        .CE(\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_11 ),
        .D(rx_66_raw_int[52]),
        .Q(mcp1_rx_66_raw[52]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[53] 
       (.C(rxusrclk2),
        .CE(\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_11 ),
        .D(rx_66_raw_int[53]),
        .Q(mcp1_rx_66_raw[53]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[54] 
       (.C(rxusrclk2),
        .CE(\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_11 ),
        .D(rx_66_raw_int[54]),
        .Q(mcp1_rx_66_raw[54]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[55] 
       (.C(rxusrclk2),
        .CE(\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_11 ),
        .D(rx_66_raw_int[55]),
        .Q(mcp1_rx_66_raw[55]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[56] 
       (.C(rxusrclk2),
        .CE(\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_11 ),
        .D(rx_66_raw_int[56]),
        .Q(mcp1_rx_66_raw[56]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[57] 
       (.C(rxusrclk2),
        .CE(\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_11 ),
        .D(rx_66_raw_int[57]),
        .Q(mcp1_rx_66_raw[57]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[58] 
       (.C(rxusrclk2),
        .CE(\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_11 ),
        .D(rx_66_raw_int[58]),
        .Q(mcp1_rx_66_raw[58]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[59] 
       (.C(rxusrclk2),
        .CE(\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_11 ),
        .D(rx_66_raw_int[59]),
        .Q(mcp1_rx_66_raw[59]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[5] 
       (.C(rxusrclk2),
        .CE(\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_10 ),
        .D(rx_66_raw_int[5]),
        .Q(mcp1_rx_66_raw[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[60] 
       (.C(rxusrclk2),
        .CE(\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_11 ),
        .D(rx_66_raw_int[60]),
        .Q(mcp1_rx_66_raw[60]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[61] 
       (.C(rxusrclk2),
        .CE(\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_11 ),
        .D(rx_66_raw_int[61]),
        .Q(mcp1_rx_66_raw[61]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[62] 
       (.C(rxusrclk2),
        .CE(\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_11 ),
        .D(rx_66_raw_int[62]),
        .Q(mcp1_rx_66_raw[62]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[63] 
       (.C(rxusrclk2),
        .CE(\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_11 ),
        .D(rx_66_raw_int[63]),
        .Q(mcp1_rx_66_raw[63]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[64] 
       (.C(rxusrclk2),
        .CE(\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_11 ),
        .D(rx_66_raw_int[64]),
        .Q(mcp1_rx_66_raw[64]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[65] 
       (.C(rxusrclk2),
        .CE(\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_11 ),
        .D(rx_66_raw_int[65]),
        .Q(mcp1_rx_66_raw[65]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[6] 
       (.C(rxusrclk2),
        .CE(\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_10 ),
        .D(rx_66_raw_int[6]),
        .Q(mcp1_rx_66_raw[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[7] 
       (.C(rxusrclk2),
        .CE(\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_10 ),
        .D(rx_66_raw_int[7]),
        .Q(mcp1_rx_66_raw[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[8] 
       (.C(rxusrclk2),
        .CE(\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_10 ),
        .D(rx_66_raw_int[8]),
        .Q(mcp1_rx_66_raw[8]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[9] 
       (.C(rxusrclk2),
        .CE(\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_10 ),
        .D(rx_66_raw_int[9]),
        .Q(mcp1_rx_66_raw[9]),
        .R(1'b0));
  ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_rxusrclk2_coreclk_counter_resync norm_err_block_counter_i
       (.coreclk(coreclk),
        .counter_out(pcs_error_block_count_control_core_int),
        .err_block_count_inc(err_block_count_inc),
        .mcp1_counter_3_reg_0(\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_12 ),
        .rx_test_mode_int_reg(rx_test_mode_int_reg),
        .rxreset_rxusrclk2(rxreset_rxusrclk2),
        .rxusrclk2(rxusrclk2));
  ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_rxusrclk2_coreclk_counter_resync_23 pcs_ber_counter_i
       (.ber_count_inc(ber_count_inc),
        .coreclk(coreclk),
        .counter_out(pcs_ber_count_control_core_int),
        .mcp1_counter_3_reg_0(\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_12 ),
        .rxreset_rxusrclk2(rxreset_rxusrclk2),
        .rxusrclk2(rxusrclk2));
  FDRE #(
    .INIT(1'b0)) 
    pcs_reset_core_reg_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(data_out_reg),
        .Q(pcs_reset_core_reg),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    pcs_rx_link_up_core_reg_reg
       (.C(rxusrclk2),
        .CE(\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_5 ),
        .D(pcs_rx_link_up_core_int),
        .Q(pcs_rx_link_up_core_reg),
        .R(1'b0));
  ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_pcs_top pcs_top_i
       (.D(xgmii_txc_reg),
        .E(rxusrclk2_en156),
        .\FSM_sequential_mcp1_state_reg[0] ({rx_test_mode_int,rx_test_patt_sel_int,coreclk_rxusrclk2_resyncs_i_n_3}),
        .Q(timer_125us_cycles_core_int),
        .SR(\rx_pcs_i/rx_decoder_i/mcp1_dec_c0 ),
        .SS(\rx_pcs_i/rx_decoder_i/mcp1_dec_c6 ),
        .ber_count_inc(ber_count_inc),
        .cable_pull(cable_pull),
        .comp_0(\rx_elastic_buffer_i/idle_delete_i/idle_detect_i0/comp_0 ),
        .comp_0_1(\rx_elastic_buffer_i/idle_delete_i/seq_detect_i0/comp_0 ),
        .comp_0_6(\rx_elastic_buffer_i/idle_delete_i/idle_detect_i1/comp_0 ),
        .comp_0_7(\rx_elastic_buffer_i/idle_delete_i/seq_detect_i1/comp_0 ),
        .comp_1(\rx_elastic_buffer_i/idle_delete_i/idle_detect_i0/comp_1 ),
        .comp_1_0(\rx_elastic_buffer_i/idle_delete_i/seq_detect_i0/comp_1 ),
        .comp_1_4(\rx_elastic_buffer_i/idle_delete_i/idle_detect_i1/comp_1 ),
        .comp_1_5(\rx_elastic_buffer_i/idle_delete_i/seq_detect_i1/comp_1 ),
        .comp_2(\rx_elastic_buffer_i/idle_delete_i/seq_detect_i0/comp_2 ),
        .comp_2_3(\rx_elastic_buffer_i/idle_delete_i/seq_detect_i1/comp_2 ),
        .comp_8(\rx_elastic_buffer_i/idle_delete_i/idle_detect_i0/comp_8 ),
        .comp_8_2(\rx_elastic_buffer_i/idle_delete_i/idle_detect_i1/comp_8 ),
        .coreclk(coreclk),
        .err_block_count_inc(err_block_count_inc),
        .gt_slip_int(gt_slip_int),
        .in0(b_lock),
        .\mcp1_dec_c0_reg[7] (\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_5 ),
        .\mcp1_dec_c1_reg[7] (\rx_pcs_i/rx_decoder_i/mcp1_dec_c1 ),
        .\mcp1_dec_c2_reg[6] (\rx_pcs_i/rx_decoder_i/mcp1_dec_c2 ),
        .\mcp1_dec_c3_reg[5] (\rx_pcs_i/rx_decoder_i/mcp1_dec_c3 ),
        .\mcp1_dec_c4_reg[7] (\rx_pcs_i/rx_decoder_i/mcp1_dec_c4 ),
        .\mcp1_dec_c5_reg[5] (\rx_pcs_i/rx_decoder_i/mcp1_dec_c5 ),
        .\mcp1_dec_c7_reg[7] (\rx_pcs_i/rx_decoder_i/mcp1_dec_c7 ),
        .\mcp1_descr_reg_reg[0] (mcp1_rx_66_raw),
        .mcp1_err_block_count_inc_out_reg(\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_12 ),
        .mcp1_err_block_count_inc_out_reg_0(coreclk_rxusrclk2_resyncs_i_n_4),
        .mcp1_hiber_reg(hiber),
        .\mcp1_r_type_next_reg_reg[2] (\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_13 ),
        .\mcp1_rx_66_enc_reg_reg[22] ({\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_9 ,\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_10 }),
        .\mcp1_rx_66_enc_reg_reg[65] ({\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_6 ,\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_7 ,\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_8 }),
        .\mcp1_rx_ebuff_ctrl_reg[7] (rx_xgmii_ctrl_int),
        .\mcp1_rx_ebuff_data_reg[0] ({\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_2 ,\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_3 ,\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_4 }),
        .\mcp1_rx_ebuff_data_reg[63] (rx_xgmii_data_int),
        .new_tx_test_seed(\tx_pcs_i/pcs_scramble_i/new_tx_test_seed ),
        .new_tx_test_seed_reg({tx_test_pattern_enable_core_int,test_patt_sel_int}),
        .out(pcs_top_i_n_1),
        .pcs_rxreset_int(pcs_rxreset_int),
        .pseudo_rand_seeds_int(pseudo_rand_seeds_int),
        .\rd_data_reg[7] (management_inst_n_178),
        .reset(reset),
        .reset_local_reg_0(data_out_reg),
        .\rx_66_enc_reg_reg[11] (\rx_pcs_i/rx_decoder_i/DecodeWord ),
        .\rx_66_enc_reg_reg[17] (\rx_pcs_i/rx_decoder_i/DecodeWord0 ),
        .\rx_66_enc_reg_reg[29] (\rx_pcs_i/rx_decoder_i/DecodeWord1 ),
        .\rx_66_enc_reg_reg[31] (\rx_pcs_i/rx_decoder_i/DecodeWord2 ),
        .\rx_66_enc_reg_reg[39] (\rx_pcs_i/rx_decoder_i/DecodeWord3 ),
        .\rx_66_enc_reg_reg[47] (\rx_pcs_i/rx_decoder_i/DecodeWord4 ),
        .\rx_66_enc_reg_reg[53] (\rx_pcs_i/rx_decoder_i/DecodeWord5 ),
        .\rx_66_enc_reg_reg[61] (pcs_top_i_n_15),
        .rxreset_rxusrclk2(rxreset_rxusrclk2),
        .rxusrclk2(rxusrclk2),
        .\scr_reg_reg[56] (management_inst_n_177),
        .signal_detect(signal_detect),
        .tx_66_enc_out(\tx_pcs_i/tx_66_enc_fsm ),
        .tx_66_fifo(tx_66_scr_int[65:1]),
        .\tx_test_patt_seed_sel_reg[0] (\tx_pcs_i/pcs_scramble_i/tx_test_patt_seed_sel ),
        .\tx_xgmii_data_reg2_reg[63] (xgmii_txd_reg));
  FDRE #(
    .INIT(1'b0)) 
    pma_pmd_reset_clear_core_intr_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(resetdone),
        .Q(pcs_reset_clear_core_intr),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    prbs31_rx_enable_core_rega_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(prbs31_rx_enable_core_int),
        .Q(prbs31_rx_enable_core_rega),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    prbs31_rx_enable_core_regb_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(prbs31_rx_enable_core_int),
        .Q(prbs31_rx_enable_core_regb),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    prbs31_tx_enable_core_reg_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(prbs31_tx_enable_core_int),
        .Q(prbs31_tx_enable_core_reg),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_gt_reg[0] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(D[0]),
        .Q(rx_gt[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_gt_reg[10] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(D[10]),
        .Q(rx_gt[10]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_gt_reg[11] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(D[11]),
        .Q(rx_gt[11]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_gt_reg[12] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(D[12]),
        .Q(rx_gt[12]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_gt_reg[13] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(D[13]),
        .Q(rx_gt[13]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_gt_reg[14] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(D[14]),
        .Q(rx_gt[14]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_gt_reg[15] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(D[15]),
        .Q(rx_gt[15]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_gt_reg[16] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(D[16]),
        .Q(rx_gt[16]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_gt_reg[17] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(D[17]),
        .Q(rx_gt[17]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_gt_reg[18] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(D[18]),
        .Q(rx_gt[18]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_gt_reg[19] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(D[19]),
        .Q(rx_gt[19]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_gt_reg[1] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(D[1]),
        .Q(rx_gt[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_gt_reg[20] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(D[20]),
        .Q(rx_gt[20]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_gt_reg[21] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(D[21]),
        .Q(rx_gt[21]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_gt_reg[22] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(D[22]),
        .Q(rx_gt[22]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_gt_reg[23] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(D[23]),
        .Q(rx_gt[23]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_gt_reg[24] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(D[24]),
        .Q(rx_gt[24]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_gt_reg[25] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(D[25]),
        .Q(rx_gt[25]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_gt_reg[26] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(D[26]),
        .Q(rx_gt[26]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_gt_reg[27] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(D[27]),
        .Q(rx_gt[27]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_gt_reg[28] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(D[28]),
        .Q(rx_gt[28]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_gt_reg[29] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(D[29]),
        .Q(rx_gt[29]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_gt_reg[2] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(D[2]),
        .Q(rx_gt[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_gt_reg[30] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(D[30]),
        .Q(rx_gt[30]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_gt_reg[31] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(D[31]),
        .Q(rx_gt[31]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_gt_reg[32] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(D[32]),
        .Q(rx_gt[32]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_gt_reg[33] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(D[33]),
        .Q(rx_gt[33]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_gt_reg[3] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(D[3]),
        .Q(rx_gt[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_gt_reg[4] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(D[4]),
        .Q(rx_gt[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_gt_reg[5] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(D[5]),
        .Q(rx_gt[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_gt_reg[6] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(D[6]),
        .Q(rx_gt[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_gt_reg[7] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(D[7]),
        .Q(rx_gt[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_gt_reg[8] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(D[8]),
        .Q(rx_gt[8]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_gt_reg[9] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(D[9]),
        .Q(rx_gt[9]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    rx_test_mode_int_reg_reg
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156),
        .D(rx_test_mode_int),
        .Q(rx_test_mode_int_reg),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    rxdatavalid_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(gt_rxc[0]),
        .Q(rxdatavalid),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    rxheadervalid_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(gt_rxc[1]),
        .Q(rxheadervalid),
        .R(1'b0));
  ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_g_resyncs rxusrclk2_coreclk_resyncs_i
       (.b_lock(b_lock),
        .core_status(core_status),
        .coreclk(coreclk),
        .hiber(hiber),
        .in0(pcs_rx_link_up_core_reg),
        .pcs_hi_ber_core_int(pcs_hi_ber_core_int),
        .pcs_rx_link_up_core_sync_int(pcs_rx_link_up_core_sync_int));
  ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_synchronizer_24 synch_4
       (.in0(tx_disable_int),
        .tx_disable(tx_disable),
        .txusrclk2(txusrclk2));
  ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_synchronizer_25 synch_5
       (.coreclk(coreclk),
        .q_reg_0(synch_5_n_1),
        .reg_1_0_15__0(\ieee_registers_i/common_reg_block/reg_1_0_15__0 ),
        .reset(reset),
        .signal_detect(signal_detect),
        .signal_detect_sync(signal_detect_sync));
  ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_rxusrclk2_coreclk_counter_resync_26 test_err_block_counter_i
       (.coreclk(coreclk),
        .counter_out(pcs_test_pattern_error_count_control_core_int),
        .err_block_count_inc(err_block_count_inc),
        .mcp1_counter_3_reg_0(\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_12 ),
        .mcp1_counter_3_reg_1(out),
        .rx_test_mode_int_reg(rx_test_mode_int_reg),
        .rxreset_rxusrclk2(rxreset_rxusrclk2),
        .rxusrclk2(rxusrclk2));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txc_reg2_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txc[0]),
        .Q(xgmii_txc_reg2[0]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txc_reg2_reg[1] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txc[1]),
        .Q(xgmii_txc_reg2[1]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txc_reg2_reg[2] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txc[2]),
        .Q(xgmii_txc_reg2[2]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txc_reg2_reg[3] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txc[3]),
        .Q(xgmii_txc_reg2[3]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txc_reg2_reg[4] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txc[4]),
        .Q(xgmii_txc_reg2[4]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txc_reg2_reg[5] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txc[5]),
        .Q(xgmii_txc_reg2[5]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txc_reg2_reg[6] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txc[6]),
        .Q(xgmii_txc_reg2[6]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txc_reg2_reg[7] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txc[7]),
        .Q(xgmii_txc_reg2[7]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txc_reg_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txc[0]),
        .Q(xgmii_txc_reg[0]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txc_reg_reg[1] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txc[1]),
        .Q(xgmii_txc_reg[1]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txc_reg_reg[2] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txc[2]),
        .Q(xgmii_txc_reg[2]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txc_reg_reg[3] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txc[3]),
        .Q(xgmii_txc_reg[3]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txc_reg_reg[4] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txc[4]),
        .Q(xgmii_txc_reg[4]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txc_reg_reg[5] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txc[5]),
        .Q(xgmii_txc_reg[5]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txc_reg_reg[6] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txc[6]),
        .Q(xgmii_txc_reg[6]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txc_reg_reg[7] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txc[7]),
        .Q(xgmii_txc_reg[7]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[0]),
        .Q(xgmii_txd_reg2[0]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[10] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[10]),
        .Q(xgmii_txd_reg2[10]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[11] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[11]),
        .Q(xgmii_txd_reg2[11]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[12] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[12]),
        .Q(xgmii_txd_reg2[12]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[13] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[13]),
        .Q(xgmii_txd_reg2[13]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[14] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[14]),
        .Q(xgmii_txd_reg2[14]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[15] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[15]),
        .Q(xgmii_txd_reg2[15]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[16] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[16]),
        .Q(xgmii_txd_reg2[16]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[17] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[17]),
        .Q(xgmii_txd_reg2[17]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[18] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[18]),
        .Q(xgmii_txd_reg2[18]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[19] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[19]),
        .Q(xgmii_txd_reg2[19]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[1] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[1]),
        .Q(xgmii_txd_reg2[1]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[20] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[20]),
        .Q(xgmii_txd_reg2[20]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[21] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[21]),
        .Q(xgmii_txd_reg2[21]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[22] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[22]),
        .Q(xgmii_txd_reg2[22]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[23] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[23]),
        .Q(xgmii_txd_reg2[23]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[24] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[24]),
        .Q(xgmii_txd_reg2[24]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[25] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[25]),
        .Q(xgmii_txd_reg2[25]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[26] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[26]),
        .Q(xgmii_txd_reg2[26]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[27] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[27]),
        .Q(xgmii_txd_reg2[27]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[28] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[28]),
        .Q(xgmii_txd_reg2[28]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[29] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[29]),
        .Q(xgmii_txd_reg2[29]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[2] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[2]),
        .Q(xgmii_txd_reg2[2]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[30] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[30]),
        .Q(xgmii_txd_reg2[30]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[31] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[31]),
        .Q(xgmii_txd_reg2[31]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[32] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[32]),
        .Q(xgmii_txd_reg2[32]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[33] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[33]),
        .Q(xgmii_txd_reg2[33]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[34] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[34]),
        .Q(xgmii_txd_reg2[34]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[35] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[35]),
        .Q(xgmii_txd_reg2[35]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[36] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[36]),
        .Q(xgmii_txd_reg2[36]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[37] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[37]),
        .Q(xgmii_txd_reg2[37]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[38] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[38]),
        .Q(xgmii_txd_reg2[38]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[39] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[39]),
        .Q(xgmii_txd_reg2[39]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[3] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[3]),
        .Q(xgmii_txd_reg2[3]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[40] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[40]),
        .Q(xgmii_txd_reg2[40]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[41] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[41]),
        .Q(xgmii_txd_reg2[41]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[42] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[42]),
        .Q(xgmii_txd_reg2[42]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[43] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[43]),
        .Q(xgmii_txd_reg2[43]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[44] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[44]),
        .Q(xgmii_txd_reg2[44]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[45] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[45]),
        .Q(xgmii_txd_reg2[45]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[46] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[46]),
        .Q(xgmii_txd_reg2[46]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[47] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[47]),
        .Q(xgmii_txd_reg2[47]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[48] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[48]),
        .Q(xgmii_txd_reg2[48]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[49] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[49]),
        .Q(xgmii_txd_reg2[49]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[4] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[4]),
        .Q(xgmii_txd_reg2[4]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[50] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[50]),
        .Q(xgmii_txd_reg2[50]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[51] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[51]),
        .Q(xgmii_txd_reg2[51]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[52] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[52]),
        .Q(xgmii_txd_reg2[52]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[53] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[53]),
        .Q(xgmii_txd_reg2[53]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[54] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[54]),
        .Q(xgmii_txd_reg2[54]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[55] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[55]),
        .Q(xgmii_txd_reg2[55]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[56] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[56]),
        .Q(xgmii_txd_reg2[56]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[57] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[57]),
        .Q(xgmii_txd_reg2[57]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[58] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[58]),
        .Q(xgmii_txd_reg2[58]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[59] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[59]),
        .Q(xgmii_txd_reg2[59]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[5] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[5]),
        .Q(xgmii_txd_reg2[5]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[60] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[60]),
        .Q(xgmii_txd_reg2[60]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[61] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[61]),
        .Q(xgmii_txd_reg2[61]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[62] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[62]),
        .Q(xgmii_txd_reg2[62]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[63] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[63]),
        .Q(xgmii_txd_reg2[63]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[6] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[6]),
        .Q(xgmii_txd_reg2[6]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[7] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[7]),
        .Q(xgmii_txd_reg2[7]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[8] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[8]),
        .Q(xgmii_txd_reg2[8]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[9] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[9]),
        .Q(xgmii_txd_reg2[9]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[0]),
        .Q(xgmii_txd_reg[0]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[10] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[10]),
        .Q(xgmii_txd_reg[10]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[11] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[11]),
        .Q(xgmii_txd_reg[11]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[12] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[12]),
        .Q(xgmii_txd_reg[12]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[13] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[13]),
        .Q(xgmii_txd_reg[13]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[14] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[14]),
        .Q(xgmii_txd_reg[14]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[15] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[15]),
        .Q(xgmii_txd_reg[15]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[16] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[16]),
        .Q(xgmii_txd_reg[16]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[17] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[17]),
        .Q(xgmii_txd_reg[17]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[18] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[18]),
        .Q(xgmii_txd_reg[18]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[19] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[19]),
        .Q(xgmii_txd_reg[19]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[1] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[1]),
        .Q(xgmii_txd_reg[1]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[20] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[20]),
        .Q(xgmii_txd_reg[20]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[21] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[21]),
        .Q(xgmii_txd_reg[21]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[22] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[22]),
        .Q(xgmii_txd_reg[22]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[23] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[23]),
        .Q(xgmii_txd_reg[23]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[24] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[24]),
        .Q(xgmii_txd_reg[24]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[25] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[25]),
        .Q(xgmii_txd_reg[25]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[26] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[26]),
        .Q(xgmii_txd_reg[26]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[27] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[27]),
        .Q(xgmii_txd_reg[27]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[28] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[28]),
        .Q(xgmii_txd_reg[28]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[29] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[29]),
        .Q(xgmii_txd_reg[29]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[2] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[2]),
        .Q(xgmii_txd_reg[2]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[30] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[30]),
        .Q(xgmii_txd_reg[30]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[31] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[31]),
        .Q(xgmii_txd_reg[31]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[32] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[32]),
        .Q(xgmii_txd_reg[32]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[33] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[33]),
        .Q(xgmii_txd_reg[33]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[34] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[34]),
        .Q(xgmii_txd_reg[34]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[35] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[35]),
        .Q(xgmii_txd_reg[35]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[36] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[36]),
        .Q(xgmii_txd_reg[36]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[37] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[37]),
        .Q(xgmii_txd_reg[37]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[38] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[38]),
        .Q(xgmii_txd_reg[38]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[39] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[39]),
        .Q(xgmii_txd_reg[39]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[3] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[3]),
        .Q(xgmii_txd_reg[3]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[40] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[40]),
        .Q(xgmii_txd_reg[40]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[41] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[41]),
        .Q(xgmii_txd_reg[41]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[42] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[42]),
        .Q(xgmii_txd_reg[42]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[43] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[43]),
        .Q(xgmii_txd_reg[43]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[44] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[44]),
        .Q(xgmii_txd_reg[44]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[45] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[45]),
        .Q(xgmii_txd_reg[45]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[46] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[46]),
        .Q(xgmii_txd_reg[46]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[47] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[47]),
        .Q(xgmii_txd_reg[47]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[48] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[48]),
        .Q(xgmii_txd_reg[48]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[49] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[49]),
        .Q(xgmii_txd_reg[49]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[4] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[4]),
        .Q(xgmii_txd_reg[4]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[50] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[50]),
        .Q(xgmii_txd_reg[50]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[51] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[51]),
        .Q(xgmii_txd_reg[51]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[52] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[52]),
        .Q(xgmii_txd_reg[52]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[53] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[53]),
        .Q(xgmii_txd_reg[53]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[54] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[54]),
        .Q(xgmii_txd_reg[54]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[55] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[55]),
        .Q(xgmii_txd_reg[55]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[56] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[56]),
        .Q(xgmii_txd_reg[56]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[57] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[57]),
        .Q(xgmii_txd_reg[57]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[58] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[58]),
        .Q(xgmii_txd_reg[58]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[59] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[59]),
        .Q(xgmii_txd_reg[59]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[5] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[5]),
        .Q(xgmii_txd_reg[5]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[60] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[60]),
        .Q(xgmii_txd_reg[60]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[61] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[61]),
        .Q(xgmii_txd_reg[61]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[62] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[62]),
        .Q(xgmii_txd_reg[62]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[63] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[63]),
        .Q(xgmii_txd_reg[63]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[6] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[6]),
        .Q(xgmii_txd_reg[6]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[7] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[7]),
        .Q(xgmii_txd_reg[7]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[8] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[8]),
        .Q(xgmii_txd_reg[8]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[9] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[9]),
        .Q(xgmii_txd_reg[9]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_15_coherent_resyncs_en" *) 
module ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_coherent_resyncs_en
   (out,
    rxusrclk2,
    Q,
    E,
    \d5_reg[15]_0 ,
    \comp_res_reg[0]_0 );
  output [15:0]out;
  input rxusrclk2;
  input [15:0]Q;
  input [0:0]E;
  input [0:0]\d5_reg[15]_0 ;
  input [0:0]\comp_res_reg[0]_0 ;

  wire [0:0]E;
  wire [15:0]Q;
  wire [1:0]comp_res;
  wire [0:0]\comp_res_reg[0]_0 ;
  (* RTL_KEEP = "true" *) wire [15:0]d4;
  (* RTL_KEEP = "true" *) wire [15:0]d5;
  wire [0:0]\d5_reg[15]_0 ;
  (* RTL_KEEP = "true" *) wire [15:0]outreg;
  wire [15:0]outreg_in;
  wire rxusrclk2;
  wire stable;
  wire stable_carry__0_i_1_n_0;
  wire stable_carry__0_i_2_n_0;
  wire stable_carry__0_n_3;
  wire stable_carry_i_1_n_0;
  wire stable_carry_i_2_n_0;
  wire stable_carry_i_3_n_0;
  wire stable_carry_i_4_n_0;
  wire stable_carry_n_0;
  wire stable_carry_n_1;
  wire stable_carry_n_2;
  wire stable_carry_n_3;
  wire [3:0]NLW_stable_carry_O_UNCONNECTED;
  wire [3:2]NLW_stable_carry__0_CO_UNCONNECTED;
  wire [3:0]NLW_stable_carry__0_O_UNCONNECTED;

  assign out[15:0] = outreg;
  FDRE #(
    .INIT(1'b0)) 
    \comp_res_reg[0] 
       (.C(rxusrclk2),
        .CE(\comp_res_reg[0]_0 ),
        .D(stable),
        .Q(comp_res[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \comp_res_reg[1] 
       (.C(rxusrclk2),
        .CE(\comp_res_reg[0]_0 ),
        .D(comp_res[0]),
        .Q(comp_res[1]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \d5_reg[0] 
       (.C(rxusrclk2),
        .CE(\d5_reg[15]_0 ),
        .D(d4[0]),
        .Q(d5[0]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \d5_reg[10] 
       (.C(rxusrclk2),
        .CE(\d5_reg[15]_0 ),
        .D(d4[10]),
        .Q(d5[10]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \d5_reg[11] 
       (.C(rxusrclk2),
        .CE(\d5_reg[15]_0 ),
        .D(d4[11]),
        .Q(d5[11]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \d5_reg[12] 
       (.C(rxusrclk2),
        .CE(\d5_reg[15]_0 ),
        .D(d4[12]),
        .Q(d5[12]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \d5_reg[13] 
       (.C(rxusrclk2),
        .CE(\d5_reg[15]_0 ),
        .D(d4[13]),
        .Q(d5[13]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \d5_reg[14] 
       (.C(rxusrclk2),
        .CE(\d5_reg[15]_0 ),
        .D(d4[14]),
        .Q(d5[14]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \d5_reg[15] 
       (.C(rxusrclk2),
        .CE(\d5_reg[15]_0 ),
        .D(d4[15]),
        .Q(d5[15]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \d5_reg[1] 
       (.C(rxusrclk2),
        .CE(\d5_reg[15]_0 ),
        .D(d4[1]),
        .Q(d5[1]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \d5_reg[2] 
       (.C(rxusrclk2),
        .CE(\d5_reg[15]_0 ),
        .D(d4[2]),
        .Q(d5[2]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \d5_reg[3] 
       (.C(rxusrclk2),
        .CE(\d5_reg[15]_0 ),
        .D(d4[3]),
        .Q(d5[3]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \d5_reg[4] 
       (.C(rxusrclk2),
        .CE(\d5_reg[15]_0 ),
        .D(d4[4]),
        .Q(d5[4]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \d5_reg[5] 
       (.C(rxusrclk2),
        .CE(\d5_reg[15]_0 ),
        .D(d4[5]),
        .Q(d5[5]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \d5_reg[6] 
       (.C(rxusrclk2),
        .CE(\d5_reg[15]_0 ),
        .D(d4[6]),
        .Q(d5[6]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \d5_reg[7] 
       (.C(rxusrclk2),
        .CE(\d5_reg[15]_0 ),
        .D(d4[7]),
        .Q(d5[7]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \d5_reg[8] 
       (.C(rxusrclk2),
        .CE(\d5_reg[15]_0 ),
        .D(d4[8]),
        .Q(d5[8]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \d5_reg[9] 
       (.C(rxusrclk2),
        .CE(\d5_reg[15]_0 ),
        .D(d4[9]),
        .Q(d5[9]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'hBF80)) 
    \outreg[0]_i_1 
       (.I0(d5[0]),
        .I1(comp_res[1]),
        .I2(comp_res[0]),
        .I3(outreg[0]),
        .O(outreg_in[0]));
  LUT4 #(
    .INIT(16'hBF80)) 
    \outreg[10]_i_1 
       (.I0(d5[10]),
        .I1(comp_res[1]),
        .I2(comp_res[0]),
        .I3(outreg[10]),
        .O(outreg_in[10]));
  LUT4 #(
    .INIT(16'hBF80)) 
    \outreg[11]_i_1 
       (.I0(d5[11]),
        .I1(comp_res[1]),
        .I2(comp_res[0]),
        .I3(outreg[11]),
        .O(outreg_in[11]));
  LUT4 #(
    .INIT(16'hBF80)) 
    \outreg[12]_i_1 
       (.I0(d5[12]),
        .I1(comp_res[1]),
        .I2(comp_res[0]),
        .I3(outreg[12]),
        .O(outreg_in[12]));
  LUT4 #(
    .INIT(16'hBF80)) 
    \outreg[13]_i_1 
       (.I0(d5[13]),
        .I1(comp_res[1]),
        .I2(comp_res[0]),
        .I3(outreg[13]),
        .O(outreg_in[13]));
  LUT4 #(
    .INIT(16'hBF80)) 
    \outreg[14]_i_1 
       (.I0(d5[14]),
        .I1(comp_res[1]),
        .I2(comp_res[0]),
        .I3(outreg[14]),
        .O(outreg_in[14]));
  LUT4 #(
    .INIT(16'hBF80)) 
    \outreg[15]_i_1 
       (.I0(d5[15]),
        .I1(comp_res[1]),
        .I2(comp_res[0]),
        .I3(outreg[15]),
        .O(outreg_in[15]));
  LUT4 #(
    .INIT(16'hBF80)) 
    \outreg[1]_i_1 
       (.I0(d5[1]),
        .I1(comp_res[1]),
        .I2(comp_res[0]),
        .I3(outreg[1]),
        .O(outreg_in[1]));
  LUT4 #(
    .INIT(16'hBF80)) 
    \outreg[2]_i_1 
       (.I0(d5[2]),
        .I1(comp_res[1]),
        .I2(comp_res[0]),
        .I3(outreg[2]),
        .O(outreg_in[2]));
  LUT4 #(
    .INIT(16'hBF80)) 
    \outreg[3]_i_1 
       (.I0(d5[3]),
        .I1(comp_res[1]),
        .I2(comp_res[0]),
        .I3(outreg[3]),
        .O(outreg_in[3]));
  LUT4 #(
    .INIT(16'hBF80)) 
    \outreg[4]_i_1 
       (.I0(d5[4]),
        .I1(comp_res[1]),
        .I2(comp_res[0]),
        .I3(outreg[4]),
        .O(outreg_in[4]));
  LUT4 #(
    .INIT(16'hBF80)) 
    \outreg[5]_i_1 
       (.I0(d5[5]),
        .I1(comp_res[1]),
        .I2(comp_res[0]),
        .I3(outreg[5]),
        .O(outreg_in[5]));
  LUT4 #(
    .INIT(16'hBF80)) 
    \outreg[6]_i_1 
       (.I0(d5[6]),
        .I1(comp_res[1]),
        .I2(comp_res[0]),
        .I3(outreg[6]),
        .O(outreg_in[6]));
  LUT4 #(
    .INIT(16'hBF80)) 
    \outreg[7]_i_1 
       (.I0(d5[7]),
        .I1(comp_res[1]),
        .I2(comp_res[0]),
        .I3(outreg[7]),
        .O(outreg_in[7]));
  LUT4 #(
    .INIT(16'hBF80)) 
    \outreg[8]_i_1 
       (.I0(d5[8]),
        .I1(comp_res[1]),
        .I2(comp_res[0]),
        .I3(outreg[8]),
        .O(outreg_in[8]));
  LUT4 #(
    .INIT(16'hBF80)) 
    \outreg[9]_i_1 
       (.I0(d5[9]),
        .I1(comp_res[1]),
        .I2(comp_res[0]),
        .I3(outreg[9]),
        .O(outreg_in[9]));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \outreg_reg[0] 
       (.C(rxusrclk2),
        .CE(\d5_reg[15]_0 ),
        .D(outreg_in[0]),
        .Q(outreg[0]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \outreg_reg[10] 
       (.C(rxusrclk2),
        .CE(\d5_reg[15]_0 ),
        .D(outreg_in[10]),
        .Q(outreg[10]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \outreg_reg[11] 
       (.C(rxusrclk2),
        .CE(\d5_reg[15]_0 ),
        .D(outreg_in[11]),
        .Q(outreg[11]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \outreg_reg[12] 
       (.C(rxusrclk2),
        .CE(\d5_reg[15]_0 ),
        .D(outreg_in[12]),
        .Q(outreg[12]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \outreg_reg[13] 
       (.C(rxusrclk2),
        .CE(\d5_reg[15]_0 ),
        .D(outreg_in[13]),
        .Q(outreg[13]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \outreg_reg[14] 
       (.C(rxusrclk2),
        .CE(\d5_reg[15]_0 ),
        .D(outreg_in[14]),
        .Q(outreg[14]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \outreg_reg[15] 
       (.C(rxusrclk2),
        .CE(\d5_reg[15]_0 ),
        .D(outreg_in[15]),
        .Q(outreg[15]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \outreg_reg[1] 
       (.C(rxusrclk2),
        .CE(\d5_reg[15]_0 ),
        .D(outreg_in[1]),
        .Q(outreg[1]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \outreg_reg[2] 
       (.C(rxusrclk2),
        .CE(\d5_reg[15]_0 ),
        .D(outreg_in[2]),
        .Q(outreg[2]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \outreg_reg[3] 
       (.C(rxusrclk2),
        .CE(\d5_reg[15]_0 ),
        .D(outreg_in[3]),
        .Q(outreg[3]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \outreg_reg[4] 
       (.C(rxusrclk2),
        .CE(\d5_reg[15]_0 ),
        .D(outreg_in[4]),
        .Q(outreg[4]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \outreg_reg[5] 
       (.C(rxusrclk2),
        .CE(\d5_reg[15]_0 ),
        .D(outreg_in[5]),
        .Q(outreg[5]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \outreg_reg[6] 
       (.C(rxusrclk2),
        .CE(\d5_reg[15]_0 ),
        .D(outreg_in[6]),
        .Q(outreg[6]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \outreg_reg[7] 
       (.C(rxusrclk2),
        .CE(\d5_reg[15]_0 ),
        .D(outreg_in[7]),
        .Q(outreg[7]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \outreg_reg[8] 
       (.C(rxusrclk2),
        .CE(\d5_reg[15]_0 ),
        .D(outreg_in[8]),
        .Q(outreg[8]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \outreg_reg[9] 
       (.C(rxusrclk2),
        .CE(\d5_reg[15]_0 ),
        .D(outreg_in[9]),
        .Q(outreg[9]),
        .R(1'b0));
  ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_synchronizer_enable__1 \resynch[0].synchc_inst 
       (.clk(rxusrclk2),
        .d(Q[0]),
        .en(E),
        .q(d4[0]));
  ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_synchronizer_enable__11 \resynch[10].synchc_inst 
       (.clk(rxusrclk2),
        .d(Q[10]),
        .en(E),
        .q(d4[10]));
  ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_synchronizer_enable__12 \resynch[11].synchc_inst 
       (.clk(rxusrclk2),
        .d(Q[11]),
        .en(E),
        .q(d4[11]));
  ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_synchronizer_enable__13 \resynch[12].synchc_inst 
       (.clk(rxusrclk2),
        .d(Q[12]),
        .en(E),
        .q(d4[12]));
  ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_synchronizer_enable__14 \resynch[13].synchc_inst 
       (.clk(rxusrclk2),
        .d(Q[13]),
        .en(E),
        .q(d4[13]));
  ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_synchronizer_enable__15 \resynch[14].synchc_inst 
       (.clk(rxusrclk2),
        .d(Q[14]),
        .en(E),
        .q(d4[14]));
  ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_synchronizer_enable__16 \resynch[15].synchc_inst 
       (.clk(rxusrclk2),
        .d(Q[15]),
        .en(E),
        .q(d4[15]));
  ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_synchronizer_enable__2 \resynch[1].synchc_inst 
       (.clk(rxusrclk2),
        .d(Q[1]),
        .en(E),
        .q(d4[1]));
  ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_synchronizer_enable__3 \resynch[2].synchc_inst 
       (.clk(rxusrclk2),
        .d(Q[2]),
        .en(E),
        .q(d4[2]));
  ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_synchronizer_enable__4 \resynch[3].synchc_inst 
       (.clk(rxusrclk2),
        .d(Q[3]),
        .en(E),
        .q(d4[3]));
  ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_synchronizer_enable__5 \resynch[4].synchc_inst 
       (.clk(rxusrclk2),
        .d(Q[4]),
        .en(E),
        .q(d4[4]));
  ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_synchronizer_enable__6 \resynch[5].synchc_inst 
       (.clk(rxusrclk2),
        .d(Q[5]),
        .en(E),
        .q(d4[5]));
  ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_synchronizer_enable__7 \resynch[6].synchc_inst 
       (.clk(rxusrclk2),
        .d(Q[6]),
        .en(E),
        .q(d4[6]));
  ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_synchronizer_enable__8 \resynch[7].synchc_inst 
       (.clk(rxusrclk2),
        .d(Q[7]),
        .en(E),
        .q(d4[7]));
  ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_synchronizer_enable__9 \resynch[8].synchc_inst 
       (.clk(rxusrclk2),
        .d(Q[8]),
        .en(E),
        .q(d4[8]));
  ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_synchronizer_enable__10 \resynch[9].synchc_inst 
       (.clk(rxusrclk2),
        .d(Q[9]),
        .en(E),
        .q(d4[9]));
  CARRY4 stable_carry
       (.CI(1'b0),
        .CO({stable_carry_n_0,stable_carry_n_1,stable_carry_n_2,stable_carry_n_3}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_stable_carry_O_UNCONNECTED[3:0]),
        .S({stable_carry_i_1_n_0,stable_carry_i_2_n_0,stable_carry_i_3_n_0,stable_carry_i_4_n_0}));
  CARRY4 stable_carry__0
       (.CI(stable_carry_n_0),
        .CO({NLW_stable_carry__0_CO_UNCONNECTED[3:2],stable,stable_carry__0_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_stable_carry__0_O_UNCONNECTED[3:0]),
        .S({1'b0,1'b0,stable_carry__0_i_1_n_0,stable_carry__0_i_2_n_0}));
  LUT2 #(
    .INIT(4'h9)) 
    stable_carry__0_i_1
       (.I0(d5[15]),
        .I1(d4[15]),
        .O(stable_carry__0_i_1_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    stable_carry__0_i_2
       (.I0(d4[12]),
        .I1(d5[12]),
        .I2(d4[13]),
        .I3(d5[13]),
        .I4(d5[14]),
        .I5(d4[14]),
        .O(stable_carry__0_i_2_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    stable_carry_i_1
       (.I0(d4[9]),
        .I1(d5[9]),
        .I2(d4[10]),
        .I3(d5[10]),
        .I4(d5[11]),
        .I5(d4[11]),
        .O(stable_carry_i_1_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    stable_carry_i_2
       (.I0(d4[6]),
        .I1(d5[6]),
        .I2(d4[7]),
        .I3(d5[7]),
        .I4(d5[8]),
        .I5(d4[8]),
        .O(stable_carry_i_2_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    stable_carry_i_3
       (.I0(d4[3]),
        .I1(d5[3]),
        .I2(d4[4]),
        .I3(d5[4]),
        .I4(d5[5]),
        .I5(d4[5]),
        .O(stable_carry_i_3_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    stable_carry_i_4
       (.I0(d4[1]),
        .I1(d5[1]),
        .I2(d4[0]),
        .I3(d5[0]),
        .I4(d5[2]),
        .I5(d4[2]),
        .O(stable_carry_i_4_n_0));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_15_coherent_resyncs_en" *) 
module ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_coherent_resyncs_en__parameterized0
   (\outreg_reg[3]_0 ,
    \outreg_reg[2]_0 ,
    clear_rx_prbs_err_count0,
    rxusrclk2,
    data_pattern_select_core,
    E,
    test_pattern_select_core,
    rx_test_pattern_enable_core,
    out,
    in0,
    \d5_reg[0]_0 ,
    pcs_rxreset_int,
    rxreset_rxusrclk2,
    q);
  output [3:0]\outreg_reg[3]_0 ;
  output \outreg_reg[2]_0 ;
  output clear_rx_prbs_err_count0;
  input rxusrclk2;
  input data_pattern_select_core;
  input [0:0]E;
  input test_pattern_select_core;
  input rx_test_pattern_enable_core;
  input out;
  input in0;
  input [1:0]\d5_reg[0]_0 ;
  input pcs_rxreset_int;
  input rxreset_rxusrclk2;
  input q;

  wire [0:0]E;
  wire clear_rx_prbs_err_count0;
  wire [1:0]comp_res;
  wire \comp_res[0]_i_2_n_0 ;
  (* RTL_KEEP = "true" *) wire [3:0]d4;
  (* RTL_KEEP = "true" *) wire [3:0]d5;
  wire [1:0]\d5_reg[0]_0 ;
  wire data_pattern_select_core;
  wire in0;
  wire out;
  (* RTL_KEEP = "true" *) wire [3:0]outreg;
  wire [3:0]outreg_in;
  wire \outreg_reg[2]_0 ;
  wire pcs_rxreset_int;
  wire q;
  wire rx_test_pattern_enable_core;
  wire rxreset_rxusrclk2;
  wire rxusrclk2;
  wire stable;
  wire test_pattern_select_core;

  assign \outreg_reg[3]_0 [3:0] = outreg;
  LUT5 #(
    .INIT(32'h01000000)) 
    clear_rx_prbs_err_count_i_1
       (.I0(pcs_rxreset_int),
        .I1(rxreset_rxusrclk2),
        .I2(outreg[2]),
        .I3(q),
        .I4(outreg[3]),
        .O(clear_rx_prbs_err_count0));
  LUT3 #(
    .INIT(8'h90)) 
    \comp_res[0]_i_1 
       (.I0(d4[3]),
        .I1(d5[3]),
        .I2(\comp_res[0]_i_2_n_0 ),
        .O(stable));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \comp_res[0]_i_2 
       (.I0(d4[0]),
        .I1(d5[0]),
        .I2(d5[2]),
        .I3(d4[2]),
        .I4(d5[1]),
        .I5(d4[1]),
        .O(\comp_res[0]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \comp_res_reg[0] 
       (.C(rxusrclk2),
        .CE(\d5_reg[0]_0 [0]),
        .D(stable),
        .Q(comp_res[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \comp_res_reg[1] 
       (.C(rxusrclk2),
        .CE(\d5_reg[0]_0 [0]),
        .D(comp_res[0]),
        .Q(comp_res[1]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \d5_reg[0] 
       (.C(rxusrclk2),
        .CE(\d5_reg[0]_0 [1]),
        .D(d4[0]),
        .Q(d5[0]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \d5_reg[1] 
       (.C(rxusrclk2),
        .CE(\d5_reg[0]_0 [1]),
        .D(d4[1]),
        .Q(d5[1]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \d5_reg[2] 
       (.C(rxusrclk2),
        .CE(\d5_reg[0]_0 [1]),
        .D(d4[2]),
        .Q(d5[2]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \d5_reg[3] 
       (.C(rxusrclk2),
        .CE(\d5_reg[0]_0 [1]),
        .D(d4[3]),
        .Q(d5[3]),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h8)) 
    mcp1_err_block_count_inc_out_i_3
       (.I0(outreg[2]),
        .I1(in0),
        .O(\outreg_reg[2]_0 ));
  LUT4 #(
    .INIT(16'hACCC)) 
    \outreg[0]_i_1__0 
       (.I0(d5[0]),
        .I1(outreg[0]),
        .I2(comp_res[0]),
        .I3(comp_res[1]),
        .O(outreg_in[0]));
  LUT4 #(
    .INIT(16'hACCC)) 
    \outreg[1]_i_1__0 
       (.I0(d5[1]),
        .I1(outreg[1]),
        .I2(comp_res[0]),
        .I3(comp_res[1]),
        .O(outreg_in[1]));
  LUT4 #(
    .INIT(16'hACCC)) 
    \outreg[2]_i_1__0 
       (.I0(d5[2]),
        .I1(outreg[2]),
        .I2(comp_res[0]),
        .I3(comp_res[1]),
        .O(outreg_in[2]));
  LUT4 #(
    .INIT(16'hACCC)) 
    \outreg[3]_i_1__0 
       (.I0(d5[3]),
        .I1(outreg[3]),
        .I2(comp_res[0]),
        .I3(comp_res[1]),
        .O(outreg_in[3]));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \outreg_reg[0] 
       (.C(rxusrclk2),
        .CE(\d5_reg[0]_0 [0]),
        .D(outreg_in[0]),
        .Q(outreg[0]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \outreg_reg[1] 
       (.C(rxusrclk2),
        .CE(\d5_reg[0]_0 [0]),
        .D(outreg_in[1]),
        .Q(outreg[1]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \outreg_reg[2] 
       (.C(rxusrclk2),
        .CE(\d5_reg[0]_0 [0]),
        .D(outreg_in[2]),
        .Q(outreg[2]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \outreg_reg[3] 
       (.C(rxusrclk2),
        .CE(\d5_reg[0]_0 [0]),
        .D(outreg_in[3]),
        .Q(outreg[3]),
        .R(1'b0));
  ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_synchronizer_enable__17 \resynch[0].synchc_inst 
       (.clk(rxusrclk2),
        .d(data_pattern_select_core),
        .en(E),
        .q(d4[0]));
  ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_synchronizer_enable__18 \resynch[1].synchc_inst 
       (.clk(rxusrclk2),
        .d(test_pattern_select_core),
        .en(E),
        .q(d4[1]));
  ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_synchronizer_enable__19 \resynch[2].synchc_inst 
       (.clk(rxusrclk2),
        .d(rx_test_pattern_enable_core),
        .en(E),
        .q(d4[2]));
  ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_synchronizer_enable__20 \resynch[3].synchc_inst 
       (.clk(rxusrclk2),
        .d(out),
        .en(E),
        .q(d4[3]));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_15_common_ieee_registers" *) 
module ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_common_ieee_registers
   (SR,
    regs_rdack,
    regs_wrack,
    \q_reg[0] ,
    loopback_ctrl,
    \q_reg[0]_0 ,
    in0,
    \q_reg[15] ,
    \addr_reg_reg[9] ,
    pseudo_rand_seeds_int,
    core_in_testmode_wire,
    \q_reg[5] ,
    \q_reg[3] ,
    \q_reg[1] ,
    tx_66_fifo,
    data_out_reg,
    clear_test_pattern_err_count,
    pma_resetout,
    D,
    prbs31_rx_enable_core_int,
    prbs31_tx_enable_core_int,
    \rddata_out_reg[15]_0 ,
    core_status,
    coreclk,
    pcs_hi_ber_core_int,
    pcs_rx_link_up_core_sync_int,
    rdack0,
    wrack0,
    reset,
    \q_reg[0]_1 ,
    Q,
    re_prev_reg,
    re_prev_reg_0,
    fifo_full,
    signal_detect_sync,
    re_prev_reg_1,
    re_prev_reg_2,
    \q_reg[15]_0 ,
    out,
    new_tx_test_seed,
    asynch_fifo_i_i_68,
    \rd_data_reg[1] ,
    pcs_reset_clear_core_intr,
    resetdone,
    \q_reg[0]_2 ,
    re_prev_reg_3,
    \q_reg[0]_3 ,
    pma_pmd_type,
    re_prev_reg_4,
    re_prev_reg_5,
    \prbs_err_count_reg[15] ,
    pcs_test_pattern_error_count,
    \q_reg[7] ,
    \q_reg[5]_0 ,
    \q_reg[15]_1 ,
    \q_reg[15]_2 );
  output [0:0]SR;
  output regs_rdack;
  output regs_wrack;
  output \q_reg[0] ;
  output [0:0]loopback_ctrl;
  output \q_reg[0]_0 ;
  output in0;
  output [15:0]\q_reg[15] ;
  output \addr_reg_reg[9] ;
  output [115:0]pseudo_rand_seeds_int;
  output core_in_testmode_wire;
  output [4:0]\q_reg[5] ;
  output \q_reg[3] ;
  output \q_reg[1] ;
  output [0:0]tx_66_fifo;
  output [0:0]data_out_reg;
  output clear_test_pattern_err_count;
  output pma_resetout;
  output [15:0]D;
  output prbs31_rx_enable_core_int;
  output prbs31_tx_enable_core_int;
  output [15:0]\rddata_out_reg[15]_0 ;
  input [0:0]core_status;
  input coreclk;
  input pcs_hi_ber_core_int;
  input pcs_rx_link_up_core_sync_int;
  input rdack0;
  input wrack0;
  input reset;
  input \q_reg[0]_1 ;
  input [20:0]Q;
  input re_prev_reg;
  input re_prev_reg_0;
  input fifo_full;
  input signal_detect_sync;
  input re_prev_reg_1;
  input re_prev_reg_2;
  input [15:0]\q_reg[15]_0 ;
  input out;
  input new_tx_test_seed;
  input [0:0]asynch_fifo_i_i_68;
  input [0:0]\rd_data_reg[1] ;
  input pcs_reset_clear_core_intr;
  input resetdone;
  input \q_reg[0]_2 ;
  input re_prev_reg_3;
  input \q_reg[0]_3 ;
  input [2:0]pma_pmd_type;
  input re_prev_reg_4;
  input re_prev_reg_5;
  input [15:0]\prbs_err_count_reg[15] ;
  input [15:0]pcs_test_pattern_error_count;
  input [7:0]\q_reg[7] ;
  input [5:0]\q_reg[5]_0 ;
  input [15:0]\q_reg[15]_1 ;
  input [15:0]\q_reg[15]_2 ;

  wire [15:0]D;
  wire [20:0]Q;
  wire [0:0]SR;
  wire \addr_reg_reg[9] ;
  wire [0:0]asynch_fifo_i_i_68;
  wire clear_test_pattern_err_count;
  wire core_in_testmode_wire;
  wire [0:0]core_status;
  wire coreclk;
  wire [0:0]data_out_reg;
  wire fifo_full;
  wire in0;
  wire [0:0]loopback_ctrl;
  wire new_tx_test_seed;
  wire out;
  wire pcs_hi_ber_core_int;
  wire pcs_reset_clear_core_intr;
  wire pcs_rx_link_up_core_sync_int;
  wire [15:0]pcs_test_pattern_error_count;
  wire [2:0]pma_pmd_type;
  wire pma_resetout;
  wire prbs31_rx_enable_core_int;
  wire prbs31_tx_enable_core_int;
  wire [15:0]\prbs_err_count_reg[15] ;
  wire [115:0]pseudo_rand_seeds_int;
  wire \q_reg[0] ;
  wire \q_reg[0]_0 ;
  wire \q_reg[0]_1 ;
  wire \q_reg[0]_2 ;
  wire \q_reg[0]_3 ;
  wire [15:0]\q_reg[15] ;
  wire [15:0]\q_reg[15]_0 ;
  wire [15:0]\q_reg[15]_1 ;
  wire [15:0]\q_reg[15]_2 ;
  wire \q_reg[1] ;
  wire \q_reg[3] ;
  wire [4:0]\q_reg[5] ;
  wire [5:0]\q_reg[5]_0 ;
  wire [7:0]\q_reg[7] ;
  wire [0:0]\rd_data_reg[1] ;
  wire rdack0;
  wire [15:0]rddata;
  wire \rddata_out[10]_i_10_n_0 ;
  wire \rddata_out[10]_i_11_n_0 ;
  wire \rddata_out[10]_i_13_n_0 ;
  wire \rddata_out[10]_i_14_n_0 ;
  wire \rddata_out[10]_i_15_n_0 ;
  wire \rddata_out[10]_i_16_n_0 ;
  wire \rddata_out[10]_i_4_n_0 ;
  wire \rddata_out[10]_i_6_n_0 ;
  wire \rddata_out[10]_i_8_n_0 ;
  wire \rddata_out[10]_i_9_n_0 ;
  wire \rddata_out[11]_i_10_n_0 ;
  wire \rddata_out[11]_i_11_n_0 ;
  wire \rddata_out[11]_i_8_n_0 ;
  wire \rddata_out[11]_i_9_n_0 ;
  wire \rddata_out[12]_i_10_n_0 ;
  wire \rddata_out[12]_i_11_n_0 ;
  wire \rddata_out[12]_i_13_n_0 ;
  wire \rddata_out[12]_i_14_n_0 ;
  wire \rddata_out[12]_i_15_n_0 ;
  wire \rddata_out[12]_i_8_n_0 ;
  wire \rddata_out[12]_i_9_n_0 ;
  wire \rddata_out[13]_i_10_n_0 ;
  wire \rddata_out[13]_i_11_n_0 ;
  wire \rddata_out[13]_i_4_n_0 ;
  wire \rddata_out[13]_i_8_n_0 ;
  wire \rddata_out[14]_i_13_n_0 ;
  wire \rddata_out[14]_i_14_n_0 ;
  wire \rddata_out[14]_i_5_n_0 ;
  wire \rddata_out[14]_i_7_n_0 ;
  wire \rddata_out[14]_i_9_n_0 ;
  wire \rddata_out[15]_i_10_n_0 ;
  wire \rddata_out[15]_i_13_n_0 ;
  wire \rddata_out[15]_i_15_n_0 ;
  wire \rddata_out[15]_i_16_n_0 ;
  wire \rddata_out[15]_i_17_n_0 ;
  wire \rddata_out[15]_i_18_n_0 ;
  wire \rddata_out[15]_i_19_n_0 ;
  wire \rddata_out[15]_i_7_n_0 ;
  wire \rddata_out[15]_i_8_n_0 ;
  wire \rddata_out[15]_i_9_n_0 ;
  wire \rddata_out[1]_i_11_n_0 ;
  wire \rddata_out[1]_i_13_n_0 ;
  wire \rddata_out[1]_i_9_n_0 ;
  wire \rddata_out[2]_i_6_n_0 ;
  wire \rddata_out[3]_i_10_n_0 ;
  wire \rddata_out[3]_i_12_n_0 ;
  wire \rddata_out[3]_i_4_n_0 ;
  wire \rddata_out[4]_i_4_n_0 ;
  wire \rddata_out[4]_i_8_n_0 ;
  wire \rddata_out[5]_i_8_n_0 ;
  wire \rddata_out[5]_i_9_n_0 ;
  wire \rddata_out[6]_i_5_n_0 ;
  wire \rddata_out[6]_i_9_n_0 ;
  wire \rddata_out[7]_i_6_n_0 ;
  wire \rddata_out[9]_i_2_n_0 ;
  wire \rddata_out[9]_i_6_n_0 ;
  wire [15:0]\rddata_out_reg[15]_0 ;
  wire re_prev;
  wire re_prev_0;
  wire re_prev_reg;
  wire re_prev_reg_0;
  wire re_prev_reg_1;
  wire re_prev_reg_2;
  wire re_prev_reg_3;
  wire re_prev_reg_4;
  wire re_prev_reg_5;
  wire reg_1_0_0_n_1;
  wire reg_1_0_11_n_0;
  wire reg_1_0_11_n_2;
  wire reg_1_0_11_n_3;
  wire reg_1_0_15_n_1;
  wire reg_1_0_15_n_14;
  wire reg_1_0_15_n_15;
  wire reg_1_0_15_n_17;
  wire reg_1_0_15_n_18;
  wire reg_1_0_15_n_2;
  wire reg_1_0_15_n_3;
  wire reg_1_0_15_n_4;
  wire reg_1_0_15_n_5;
  wire reg_1_0_15_n_6;
  wire reg_1_0_15_n_7;
  wire reg_1_0_15_we;
  wire reg_1_10_0_n_0;
  wire reg_1_1_2_n_0;
  wire reg_1_1_2_n_1;
  wire reg_1_8_11__0;
  wire reg_1_9_0_n_1;
  wire reg_1_9_0_n_2;
  wire reg_1_9_0_n_3;
  wire reg_1_9_0_n_4;
  wire reg_1_9_0_n_5;
  wire reg_3_0_11_n_0;
  wire reg_3_0_14_n_1;
  wire reg_3_0_14_n_4;
  wire reg_3_0_14_n_5;
  wire reg_3_0_15__0;
  wire reg_3_0_15_n_11;
  wire reg_3_0_15_n_3;
  wire reg_3_0_15_n_4;
  wire reg_3_0_15_n_5;
  wire reg_3_0_15_n_7;
  wire reg_3_0_15_n_9;
  wire reg_3_0_15_we;
  wire reg_3_1_2_n_0;
  wire reg_3_32_0__0;
  wire reg_3_32_0_n_1;
  wire reg_3_32_12__0;
  wire reg_3_32_12_n_1;
  wire reg_3_32_1_n_0;
  wire reg_3_32_1_n_1;
  wire [15:14]reg_3_33;
  wire reg_3_33_13_8_n_0;
  wire reg_3_33_13_8_n_1;
  wire reg_3_33_13_8_n_2;
  wire reg_3_33_13_8_n_3;
  wire reg_3_33_13_8_n_4;
  wire reg_3_33_13_8_n_5;
  wire reg_3_33_15_n_3;
  wire reg_3_33_7_0_n_0;
  wire reg_3_33_7_0_n_1;
  wire reg_3_33_7_0_n_2;
  wire reg_3_33_7_0_n_3;
  wire reg_3_33_7_0_n_4;
  wire reg_3_33_7_0_n_5;
  wire reg_3_33_7_0_n_6;
  wire reg_3_33_7_0_n_7;
  wire reg_3_33_re;
  wire reg_3_34_all_n_1;
  wire reg_3_34_all_n_2;
  wire reg_3_34_all_n_20;
  wire reg_3_34_all_n_21;
  wire reg_3_34_all_n_3;
  wire reg_3_35_all_n_0;
  wire reg_3_35_all_n_1;
  wire reg_3_35_all_n_2;
  wire reg_3_35_all_n_23;
  wire reg_3_35_all_n_24;
  wire reg_3_35_all_n_25;
  wire reg_3_35_all_n_26;
  wire reg_3_35_all_n_3;
  wire reg_3_35_all_n_4;
  wire reg_3_35_all_n_5;
  wire reg_3_35_all_n_6;
  wire reg_3_36_all_n_0;
  wire reg_3_36_all_n_17;
  wire reg_3_36_all_n_18;
  wire reg_3_37_9_0_n_0;
  wire reg_3_37_9_0_n_1;
  wire reg_3_37_9_0_n_2;
  wire reg_3_37_9_0_n_3;
  wire reg_3_38_all_n_1;
  wire reg_3_38_all_n_19;
  wire reg_3_38_all_n_2;
  wire reg_3_38_all_n_20;
  wire reg_3_38_all_n_21;
  wire reg_3_38_all_n_22;
  wire reg_3_38_we;
  wire reg_3_39_all_n_0;
  wire reg_3_39_all_n_1;
  wire reg_3_39_all_n_19;
  wire reg_3_39_all_n_2;
  wire reg_3_39_all_n_20;
  wire reg_3_39_all_n_21;
  wire reg_3_39_all_n_22;
  wire reg_3_39_all_n_23;
  wire reg_3_39_all_n_24;
  wire reg_3_39_all_n_25;
  wire reg_3_39_all_n_26;
  wire reg_3_40_all_n_0;
  wire reg_3_40_all_n_17;
  wire reg_3_40_all_n_18;
  wire reg_3_40_all_n_19;
  wire reg_3_40_all_n_20;
  wire reg_3_40_we;
  wire reg_3_41_9_0_n_0;
  wire reg_3_41_9_0_n_1;
  wire reg_3_41_9_0_n_13;
  wire reg_3_42_5_0_n_10;
  wire reg_3_42_5_0_n_2;
  wire reg_3_42_we;
  wire reg_3_43_all_n_1;
  wire reg_3_43_all_n_10;
  wire reg_3_43_all_n_11;
  wire reg_3_43_all_n_12;
  wire reg_3_43_all_n_13;
  wire reg_3_43_all_n_14;
  wire reg_3_43_all_n_15;
  wire reg_3_43_all_n_16;
  wire reg_3_43_all_n_17;
  wire reg_3_43_all_n_18;
  wire reg_3_43_all_n_19;
  wire reg_3_43_all_n_2;
  wire reg_3_43_all_n_20;
  wire reg_3_43_all_n_3;
  wire reg_3_43_all_n_7;
  wire reg_3_43_all_n_8;
  wire reg_3_43_all_n_9;
  wire reg_3_65535_all_n_0;
  wire reg_3_65535_all_n_17;
  wire reg_3_65535_all_n_18;
  wire reg_3_65535_all_n_19;
  wire reg_3_65535_all_n_20;
  wire reg_3_65535_all_n_21;
  wire [10:10]reg_3_8;
  wire reg_3_8_10_n_1;
  wire reg_3_8_10_n_3;
  wire reg_3_8_11_n_0;
  wire reg_3_8_re;
  wire regs_rdack;
  wire regs_wrack;
  wire reset;
  wire resetdone;
  wire signal_detect_sync;
  wire [0:0]tx_66_fifo;
  wire wrack0;

  FDRE #(
    .INIT(1'b0)) 
    rdack_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(rdack0),
        .Q(regs_rdack),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hFFFFFF7E)) 
    \rddata_out[10]_i_10 
       (.I0(Q[13]),
        .I1(Q[14]),
        .I2(Q[15]),
        .I3(\rddata_out[15]_i_16_n_0 ),
        .I4(\rddata_out[10]_i_15_n_0 ),
        .O(\rddata_out[10]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    \rddata_out[10]_i_11 
       (.I0(\rddata_out[4]_i_8_n_0 ),
        .I1(Q[11]),
        .I2(Q[10]),
        .I3(Q[9]),
        .I4(Q[8]),
        .I5(\rddata_out[10]_i_16_n_0 ),
        .O(\rddata_out[10]_i_11_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair88" *) 
  LUT5 #(
    .INIT(32'hFFFFFFAE)) 
    \rddata_out[10]_i_13 
       (.I0(\rddata_out[14]_i_13_n_0 ),
        .I1(Q[1]),
        .I2(Q[5]),
        .I3(Q[4]),
        .I4(Q[6]),
        .O(\rddata_out[10]_i_13_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair92" *) 
  LUT4 #(
    .INIT(16'hFFFE)) 
    \rddata_out[10]_i_14 
       (.I0(Q[10]),
        .I1(Q[8]),
        .I2(Q[9]),
        .I3(Q[7]),
        .O(\rddata_out[10]_i_14_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair89" *) 
  LUT5 #(
    .INIT(32'h7FFFFFFE)) 
    \rddata_out[10]_i_15 
       (.I0(Q[6]),
        .I1(Q[4]),
        .I2(Q[9]),
        .I3(Q[8]),
        .I4(Q[7]),
        .O(\rddata_out[10]_i_15_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair85" *) 
  LUT4 #(
    .INIT(16'hFFFE)) 
    \rddata_out[10]_i_16 
       (.I0(Q[15]),
        .I1(Q[14]),
        .I2(Q[13]),
        .I3(Q[12]),
        .O(\rddata_out[10]_i_16_n_0 ));
  LUT6 #(
    .INIT(64'hFFF70000FFF7FFF7)) 
    \rddata_out[10]_i_4 
       (.I0(Q[5]),
        .I1(Q[3]),
        .I2(\rddata_out[10]_i_9_n_0 ),
        .I3(\rddata_out[10]_i_10_n_0 ),
        .I4(\rddata_out[10]_i_6_n_0 ),
        .I5(\rddata_out[3]_i_4_n_0 ),
        .O(\rddata_out[10]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair90" *) 
  LUT5 #(
    .INIT(32'hAAA9FFFF)) 
    \rddata_out[10]_i_6 
       (.I0(Q[3]),
        .I1(Q[2]),
        .I2(Q[1]),
        .I3(Q[0]),
        .I4(\rddata_out[10]_i_11_n_0 ),
        .O(\rddata_out[10]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hFEEEFFFFFFFEFEEF)) 
    \rddata_out[10]_i_8 
       (.I0(\rddata_out[10]_i_13_n_0 ),
        .I1(\rddata_out[10]_i_14_n_0 ),
        .I2(Q[3]),
        .I3(Q[2]),
        .I4(Q[0]),
        .I5(Q[5]),
        .O(\rddata_out[10]_i_8_n_0 ));
  LUT5 #(
    .INIT(32'h7FFFFFFE)) 
    \rddata_out[10]_i_9 
       (.I0(Q[13]),
        .I1(Q[12]),
        .I2(Q[11]),
        .I3(Q[10]),
        .I4(Q[9]),
        .O(\rddata_out[10]_i_9_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair92" *) 
  LUT4 #(
    .INIT(16'hFFFE)) 
    \rddata_out[11]_i_10 
       (.I0(Q[11]),
        .I1(Q[10]),
        .I2(Q[9]),
        .I3(Q[8]),
        .O(\rddata_out[11]_i_10_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair87" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \rddata_out[11]_i_11 
       (.I0(Q[2]),
        .I1(Q[1]),
        .O(\rddata_out[11]_i_11_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair85" *) 
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \rddata_out[11]_i_8 
       (.I0(Q[12]),
        .I1(Q[13]),
        .I2(Q[14]),
        .I3(Q[15]),
        .I4(\rddata_out[11]_i_10_n_0 ),
        .O(\rddata_out[11]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \rddata_out[11]_i_9 
       (.I0(Q[6]),
        .I1(Q[7]),
        .I2(Q[5]),
        .I3(Q[4]),
        .I4(Q[0]),
        .I5(\rddata_out[11]_i_11_n_0 ),
        .O(\rddata_out[11]_i_9_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair95" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \rddata_out[12]_i_10 
       (.I0(\rddata_out[14]_i_9_n_0 ),
        .I1(\rddata_out[10]_i_8_n_0 ),
        .O(\rddata_out[12]_i_10_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair96" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \rddata_out[12]_i_11 
       (.I0(\rddata_out[14]_i_9_n_0 ),
        .I1(\rddata_out[12]_i_13_n_0 ),
        .O(\rddata_out[12]_i_11_n_0 ));
  LUT6 #(
    .INIT(64'h000000000000F10E)) 
    \rddata_out[12]_i_13 
       (.I0(Q[3]),
        .I1(Q[2]),
        .I2(Q[5]),
        .I3(Q[0]),
        .I4(\rddata_out[12]_i_14_n_0 ),
        .I5(\rddata_out[14]_i_13_n_0 ),
        .O(\rddata_out[12]_i_13_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFBA)) 
    \rddata_out[12]_i_14 
       (.I0(\rddata_out[10]_i_14_n_0 ),
        .I1(Q[5]),
        .I2(Q[1]),
        .I3(\rddata_out[12]_i_15_n_0 ),
        .I4(Q[4]),
        .I5(Q[6]),
        .O(\rddata_out[12]_i_14_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair97" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \rddata_out[12]_i_15 
       (.I0(Q[2]),
        .I1(Q[3]),
        .O(\rddata_out[12]_i_15_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \rddata_out[12]_i_8 
       (.I0(\rddata_out[15]_i_15_n_0 ),
        .I1(\rddata_out[15]_i_7_n_0 ),
        .O(\rddata_out[12]_i_8_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair96" *) 
  LUT2 #(
    .INIT(4'hD)) 
    \rddata_out[12]_i_9 
       (.I0(\rddata_out[14]_i_9_n_0 ),
        .I1(\rddata_out[12]_i_13_n_0 ),
        .O(\rddata_out[12]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'h7EFFFFFFFFFFFF7E)) 
    \rddata_out[13]_i_10 
       (.I0(Q[15]),
        .I1(Q[14]),
        .I2(Q[13]),
        .I3(Q[9]),
        .I4(Q[8]),
        .I5(Q[7]),
        .O(\rddata_out[13]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFFFFFFFFEE)) 
    \rddata_out[13]_i_11 
       (.I0(Q[5]),
        .I1(Q[4]),
        .I2(Q[3]),
        .I3(Q[2]),
        .I4(Q[1]),
        .I5(Q[0]),
        .O(\rddata_out[13]_i_11_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF7FFFFFFE)) 
    \rddata_out[13]_i_4 
       (.I0(Q[9]),
        .I1(Q[10]),
        .I2(Q[11]),
        .I3(Q[12]),
        .I4(Q[13]),
        .I5(\rddata_out[13]_i_10_n_0 ),
        .O(\rddata_out[13]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair95" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \rddata_out[13]_i_8 
       (.I0(\rddata_out[14]_i_9_n_0 ),
        .I1(\rddata_out[10]_i_8_n_0 ),
        .O(\rddata_out[13]_i_8_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \rddata_out[14]_i_13 
       (.I0(Q[15]),
        .I1(Q[14]),
        .I2(Q[12]),
        .I3(Q[13]),
        .I4(Q[11]),
        .O(\rddata_out[14]_i_13_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFC7C2C6)) 
    \rddata_out[14]_i_14 
       (.I0(Q[5]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[2]),
        .I4(Q[3]),
        .I5(\rddata_out[10]_i_14_n_0 ),
        .O(\rddata_out[14]_i_14_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair97" *) 
  LUT2 #(
    .INIT(4'h7)) 
    \rddata_out[14]_i_5 
       (.I0(Q[2]),
        .I1(Q[1]),
        .O(\rddata_out[14]_i_5_n_0 ));
  LUT4 #(
    .INIT(16'h7FFF)) 
    \rddata_out[14]_i_7 
       (.I0(Q[7]),
        .I1(Q[6]),
        .I2(Q[5]),
        .I3(Q[4]),
        .O(\rddata_out[14]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFEFEE)) 
    \rddata_out[14]_i_9 
       (.I0(Q[6]),
        .I1(Q[4]),
        .I2(Q[5]),
        .I3(Q[1]),
        .I4(\rddata_out[14]_i_13_n_0 ),
        .I5(\rddata_out[14]_i_14_n_0 ),
        .O(\rddata_out[14]_i_9_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair93" *) 
  LUT2 #(
    .INIT(4'hD)) 
    \rddata_out[15]_i_10 
       (.I0(\rddata_out[14]_i_9_n_0 ),
        .I1(\rddata_out[10]_i_8_n_0 ),
        .O(\rddata_out[15]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'hFFFE0000FFFEFFFE)) 
    \rddata_out[15]_i_13 
       (.I0(\rddata_out[15]_i_16_n_0 ),
        .I1(\rddata_out[13]_i_10_n_0 ),
        .I2(\rddata_out[9]_i_6_n_0 ),
        .I3(\rddata_out[10]_i_9_n_0 ),
        .I4(\rddata_out[4]_i_4_n_0 ),
        .I5(\rddata_out[15]_i_17_n_0 ),
        .O(\rddata_out[15]_i_13_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000002)) 
    \rddata_out[15]_i_15 
       (.I0(\rddata_out[15]_i_18_n_0 ),
        .I1(Q[6]),
        .I2(Q[5]),
        .I3(Q[4]),
        .I4(Q[7]),
        .I5(\rddata_out[15]_i_19_n_0 ),
        .O(\rddata_out[15]_i_15_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair91" *) 
  LUT4 #(
    .INIT(16'h6EEF)) 
    \rddata_out[15]_i_16 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[1]),
        .I3(Q[0]),
        .O(\rddata_out[15]_i_16_n_0 ));
  LUT6 #(
    .INIT(64'h0100000001110110)) 
    \rddata_out[15]_i_17 
       (.I0(\rddata_out[3]_i_10_n_0 ),
        .I1(\rddata_out[11]_i_8_n_0 ),
        .I2(Q[3]),
        .I3(Q[2]),
        .I4(Q[5]),
        .I5(Q[1]),
        .O(\rddata_out[15]_i_17_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    \rddata_out[15]_i_18 
       (.I0(Q[14]),
        .I1(Q[15]),
        .I2(Q[13]),
        .I3(Q[10]),
        .I4(Q[11]),
        .I5(Q[12]),
        .O(\rddata_out[15]_i_18_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \rddata_out[15]_i_19 
       (.I0(Q[8]),
        .I1(Q[9]),
        .O(\rddata_out[15]_i_19_n_0 ));
  LUT6 #(
    .INIT(64'h0000000200000000)) 
    \rddata_out[15]_i_7 
       (.I0(re_prev_reg_4),
        .I1(re_prev_reg_0),
        .I2(Q[18]),
        .I3(Q[20]),
        .I4(Q[19]),
        .I5(Q[16]),
        .O(\rddata_out[15]_i_7_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair91" *) 
  LUT4 #(
    .INIT(16'h0002)) 
    \rddata_out[15]_i_8 
       (.I0(\rddata_out[15]_i_15_n_0 ),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[2]),
        .O(\rddata_out[15]_i_8_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair94" *) 
  LUT3 #(
    .INIT(8'hBA)) 
    \rddata_out[15]_i_9 
       (.I0(\rddata_out[9]_i_2_n_0 ),
        .I1(\rddata_out[4]_i_4_n_0 ),
        .I2(\rddata_out[3]_i_4_n_0 ),
        .O(\rddata_out[15]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF7FFFFFFE)) 
    \rddata_out[1]_i_11 
       (.I0(Q[7]),
        .I1(Q[8]),
        .I2(Q[6]),
        .I3(Q[10]),
        .I4(Q[9]),
        .I5(\rddata_out[1]_i_13_n_0 ),
        .O(\rddata_out[1]_i_11_n_0 ));
  LUT5 #(
    .INIT(32'h7FFFFFFE)) 
    \rddata_out[1]_i_13 
       (.I0(Q[13]),
        .I1(Q[14]),
        .I2(Q[11]),
        .I3(Q[10]),
        .I4(Q[12]),
        .O(\rddata_out[1]_i_13_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair87" *) 
  LUT5 #(
    .INIT(32'h3FFFFF4C)) 
    \rddata_out[1]_i_9 
       (.I0(pma_pmd_type[1]),
        .I1(Q[1]),
        .I2(Q[2]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\rddata_out[1]_i_9_n_0 ));
  LUT2 #(
    .INIT(4'hB)) 
    \rddata_out[2]_i_6 
       (.I0(Q[3]),
        .I1(Q[0]),
        .O(\rddata_out[2]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hEEEFEFEEEEEEEFEE)) 
    \rddata_out[3]_i_10 
       (.I0(\rddata_out[3]_i_12_n_0 ),
        .I1(Q[7]),
        .I2(Q[1]),
        .I3(Q[0]),
        .I4(Q[2]),
        .I5(Q[5]),
        .O(\rddata_out[3]_i_10_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair89" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \rddata_out[3]_i_12 
       (.I0(Q[4]),
        .I1(Q[6]),
        .O(\rddata_out[3]_i_12_n_0 ));
  LUT6 #(
    .INIT(64'h00000000000005D4)) 
    \rddata_out[3]_i_4 
       (.I0(Q[1]),
        .I1(Q[5]),
        .I2(Q[2]),
        .I3(Q[3]),
        .I4(\rddata_out[11]_i_8_n_0 ),
        .I5(\rddata_out[3]_i_10_n_0 ),
        .O(\rddata_out[3]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFEAAAB)) 
    \rddata_out[4]_i_4 
       (.I0(\rddata_out[11]_i_8_n_0 ),
        .I1(Q[2]),
        .I2(Q[1]),
        .I3(Q[0]),
        .I4(Q[3]),
        .I5(\rddata_out[4]_i_8_n_0 ),
        .O(\rddata_out[4]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair86" *) 
  LUT4 #(
    .INIT(16'hFEFF)) 
    \rddata_out[4]_i_8 
       (.I0(Q[4]),
        .I1(Q[6]),
        .I2(Q[7]),
        .I3(Q[5]),
        .O(\rddata_out[4]_i_8_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair88" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \rddata_out[5]_i_8 
       (.I0(Q[4]),
        .I1(Q[1]),
        .O(\rddata_out[5]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \rddata_out[5]_i_9 
       (.I0(pma_pmd_type[2]),
        .I1(pma_pmd_type[1]),
        .O(\rddata_out[5]_i_9_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair94" *) 
  LUT3 #(
    .INIT(8'h01)) 
    \rddata_out[6]_i_5 
       (.I0(\rddata_out[3]_i_4_n_0 ),
        .I1(\rddata_out[9]_i_2_n_0 ),
        .I2(\rddata_out[14]_i_9_n_0 ),
        .O(\rddata_out[6]_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair90" *) 
  LUT3 #(
    .INIT(8'h01)) 
    \rddata_out[6]_i_9 
       (.I0(Q[2]),
        .I1(Q[1]),
        .I2(Q[0]),
        .O(\rddata_out[6]_i_9_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair93" *) 
  LUT3 #(
    .INIT(8'h04)) 
    \rddata_out[7]_i_6 
       (.I0(\rddata_out[10]_i_8_n_0 ),
        .I1(\rddata_out[14]_i_9_n_0 ),
        .I2(\rddata_out[3]_i_4_n_0 ),
        .O(\rddata_out[7]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h0000000041010100)) 
    \rddata_out[9]_i_2 
       (.I0(\rddata_out[9]_i_6_n_0 ),
        .I1(Q[4]),
        .I2(Q[2]),
        .I3(Q[1]),
        .I4(Q[0]),
        .I5(\rddata_out[13]_i_4_n_0 ),
        .O(\rddata_out[9]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair86" *) 
  LUT5 #(
    .INIT(32'h7FFFFFF7)) 
    \rddata_out[9]_i_6 
       (.I0(Q[5]),
        .I1(Q[3]),
        .I2(Q[7]),
        .I3(Q[6]),
        .I4(Q[4]),
        .O(\rddata_out[9]_i_6_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \rddata_out_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(rddata[0]),
        .Q(\rddata_out_reg[15]_0 [0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rddata_out_reg[10] 
       (.C(coreclk),
        .CE(1'b1),
        .D(rddata[10]),
        .Q(\rddata_out_reg[15]_0 [10]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rddata_out_reg[11] 
       (.C(coreclk),
        .CE(1'b1),
        .D(rddata[11]),
        .Q(\rddata_out_reg[15]_0 [11]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rddata_out_reg[12] 
       (.C(coreclk),
        .CE(1'b1),
        .D(rddata[12]),
        .Q(\rddata_out_reg[15]_0 [12]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rddata_out_reg[13] 
       (.C(coreclk),
        .CE(1'b1),
        .D(rddata[13]),
        .Q(\rddata_out_reg[15]_0 [13]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rddata_out_reg[14] 
       (.C(coreclk),
        .CE(1'b1),
        .D(rddata[14]),
        .Q(\rddata_out_reg[15]_0 [14]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rddata_out_reg[15] 
       (.C(coreclk),
        .CE(1'b1),
        .D(rddata[15]),
        .Q(\rddata_out_reg[15]_0 [15]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rddata_out_reg[1] 
       (.C(coreclk),
        .CE(1'b1),
        .D(rddata[1]),
        .Q(\rddata_out_reg[15]_0 [1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rddata_out_reg[2] 
       (.C(coreclk),
        .CE(1'b1),
        .D(rddata[2]),
        .Q(\rddata_out_reg[15]_0 [2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rddata_out_reg[3] 
       (.C(coreclk),
        .CE(1'b1),
        .D(rddata[3]),
        .Q(\rddata_out_reg[15]_0 [3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rddata_out_reg[4] 
       (.C(coreclk),
        .CE(1'b1),
        .D(reg_3_0_15_n_3),
        .Q(\rddata_out_reg[15]_0 [4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rddata_out_reg[5] 
       (.C(coreclk),
        .CE(1'b1),
        .D(rddata[5]),
        .Q(\rddata_out_reg[15]_0 [5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rddata_out_reg[6] 
       (.C(coreclk),
        .CE(1'b1),
        .D(rddata[6]),
        .Q(\rddata_out_reg[15]_0 [6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rddata_out_reg[7] 
       (.C(coreclk),
        .CE(1'b1),
        .D(rddata[7]),
        .Q(\rddata_out_reg[15]_0 [7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rddata_out_reg[8] 
       (.C(coreclk),
        .CE(1'b1),
        .D(rddata[8]),
        .Q(\rddata_out_reg[15]_0 [8]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rddata_out_reg[9] 
       (.C(coreclk),
        .CE(1'b1),
        .D(rddata[9]),
        .Q(\rddata_out_reg[15]_0 [9]),
        .R(1'b0));
  ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_g_register reg_1_0_0
       (.Q(Q[3:0]),
        .\addr_reg_reg[0] (reg_1_0_0_n_1),
        .coreclk(coreclk),
        .loopback_ctrl(loopback_ctrl),
        .\q_reg[0]_0 (reg_1_0_15_n_2),
        .\rddata_out[0]_i_2 (reg_1_10_0_n_0),
        .reset(reset));
  ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_g_register_39 reg_1_0_11
       (.Q({Q[20:16],Q[4:0]}),
        .\addr_reg_reg[3] (reg_1_0_11_n_2),
        .coreclk(coreclk),
        .\q[0]_i_2__1_0 (\addr_reg_reg[9] ),
        .\q_reg[0]_0 (reg_1_0_11_n_0),
        .\q_reg[0]_1 (reg_1_0_11_n_3),
        .\q_reg[0]_2 (reg_1_0_15_n_3),
        .\q_reg[0]_3 (re_prev_reg_0),
        .\rddata_out_reg[11] (\rddata_out[11]_i_8_n_0 ),
        .\rddata_out_reg[11]_0 (\rddata_out[11]_i_9_n_0 ),
        .\rddata_out_reg[11]_1 (reg_1_0_15_n_15),
        .re_prev_reg(reg_1_9_0_n_3),
        .reg_1_0_15_we(reg_1_0_15_we),
        .reg_1_8_11__0(reg_1_8_11__0));
  ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_g_register__parameterized0 reg_1_0_15
       (.D({rddata[14],rddata[12],rddata[9:8],rddata[2],rddata[0]}),
        .Q({Q[17],Q[15:14],Q[7:0]}),
        .\addr_reg_reg[0] (reg_1_0_15_n_14),
        .\addr_reg_reg[17] (reg_1_0_15_n_1),
        .\addr_reg_reg[18] (reg_1_0_15_n_5),
        .\addr_reg_reg[18]_0 (reg_1_0_15_n_6),
        .\addr_reg_reg[3] (reg_1_0_15_n_7),
        .coreclk(coreclk),
        .in0(in0),
        .loopback_ctrl(loopback_ctrl),
        .pcs_reset_clear_core_intr(pcs_reset_clear_core_intr),
        .pma_pmd_type(pma_pmd_type),
        .pma_resetout(pma_resetout),
        .\q_reg[0]_0 (\q_reg[0]_0 ),
        .\q_reg[0]_1 (reg_1_0_15_n_2),
        .\q_reg[0]_10 (\addr_reg_reg[9] ),
        .\q_reg[0]_11 (reg_1_9_0_n_4),
        .\q_reg[0]_12 (reg_1_9_0_n_1),
        .\q_reg[0]_13 (reg_1_9_0_n_2),
        .\q_reg[0]_2 (reg_1_0_15_n_3),
        .\q_reg[0]_3 (reg_1_0_15_n_4),
        .\q_reg[0]_4 (reg_1_0_15_n_15),
        .\q_reg[0]_5 (reg_1_0_15_n_17),
        .\q_reg[0]_6 (reg_1_0_15_n_18),
        .\q_reg[0]_7 ({\q_reg[15]_0 [15],\q_reg[15]_0 [11],\q_reg[15]_0 [0]}),
        .\q_reg[0]_8 (reg_1_0_11_n_0),
        .\q_reg[0]_9 (re_prev_reg_0),
        .\rddata_out_reg[0] (reg_3_41_9_0_n_0),
        .\rddata_out_reg[0]_0 (\rddata_out[9]_i_2_n_0 ),
        .\rddata_out_reg[0]_1 (reg_3_37_9_0_n_2),
        .\rddata_out_reg[0]_2 (\rddata_out[3]_i_4_n_0 ),
        .\rddata_out_reg[0]_3 (reg_3_36_all_n_18),
        .\rddata_out_reg[0]_4 (reg_1_9_0_n_5),
        .\rddata_out_reg[0]_5 (reg_1_0_0_n_1),
        .\rddata_out_reg[12] (reg_3_65535_all_n_0),
        .\rddata_out_reg[12]_0 (reg_3_39_all_n_23),
        .\rddata_out_reg[12]_1 (reg_3_36_all_n_17),
        .\rddata_out_reg[12]_2 (reg_3_34_all_n_21),
        .\rddata_out_reg[12]_3 (reg_3_32_12_n_1),
        .\rddata_out_reg[13] (\rddata_out[13]_i_11_n_0 ),
        .\rddata_out_reg[14] (\rddata_out[15]_i_7_n_0 ),
        .\rddata_out_reg[14]_0 (reg_3_43_all_n_8),
        .\rddata_out_reg[14]_1 (reg_3_35_all_n_4),
        .\rddata_out_reg[14]_2 (reg_3_65535_all_n_17),
        .\rddata_out_reg[14]_3 (\rddata_out[14]_i_5_n_0 ),
        .\rddata_out_reg[14]_4 (\rddata_out[14]_i_7_n_0 ),
        .\rddata_out_reg[15] (\rddata_out[15]_i_8_n_0 ),
        .\rddata_out_reg[1] (\rddata_out[1]_i_9_n_0 ),
        .\rddata_out_reg[1]_0 (\rddata_out[1]_i_11_n_0 ),
        .\rddata_out_reg[2] (reg_3_42_5_0_n_10),
        .\rddata_out_reg[2]_0 (reg_3_1_2_n_0),
        .\rddata_out_reg[2]_1 (\rddata_out[4]_i_4_n_0 ),
        .\rddata_out_reg[2]_2 (reg_3_0_15_n_4),
        .\rddata_out_reg[2]_3 (reg_3_33_7_0_n_0),
        .\rddata_out_reg[2]_4 (reg_1_1_2_n_0),
        .\rddata_out_reg[2]_5 (\rddata_out[2]_i_6_n_0 ),
        .\rddata_out_reg[5] (reg_1_9_0_n_3),
        .\rddata_out_reg[5]_0 (\rddata_out[5]_i_8_n_0 ),
        .\rddata_out_reg[5]_1 (\rddata_out[5]_i_9_n_0 ),
        .\rddata_out_reg[5]_2 (reg_3_0_14_n_4),
        .\rddata_out_reg[6] (\rddata_out[6]_i_9_n_0 ),
        .\rddata_out_reg[7] (\rddata_out[12]_i_8_n_0 ),
        .\rddata_out_reg[8] (reg_3_65535_all_n_20),
        .\rddata_out_reg[8]_0 (reg_3_34_all_n_2),
        .\rddata_out_reg[8]_1 (reg_3_39_all_n_21),
        .\rddata_out_reg[9] (reg_3_41_9_0_n_1),
        .\rddata_out_reg[9]_0 (reg_3_34_all_n_3),
        .\rddata_out_reg[9]_1 (reg_3_39_all_n_22),
        .reg_1_0_15_we(reg_1_0_15_we),
        .reg_3_0_15__0(reg_3_0_15__0),
        .reset(reset),
        .resetdone(resetdone));
  ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_g_register__parameterized10 reg_1_10_0
       (.coreclk(coreclk),
        .\q_reg[0]_0 (reg_1_10_0_n_0),
        .\q_reg[0]_1 (\q_reg[0]_1 ));
  ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_g_register__parameterized1 reg_1_1_2
       (.Q({Q[19:16],Q[1:0]}),
        .\addr_reg_reg[17] (reg_1_1_2_n_1),
        .coreclk(coreclk),
        .\q_reg[0]_0 (reg_1_1_2_n_0),
        .\q_reg[0]_1 (\q_reg[0]_0 ),
        .re_prev_reg_0(re_prev_reg_1),
        .re_prev_reg_1(re_prev_reg_2),
        .re_prev_reg_2(re_prev_reg_4),
        .re_prev_reg_3(reg_3_0_14_n_5),
        .re_prev_reg_4(\addr_reg_reg[9] ),
        .reset(reset),
        .signal_detect_sync(signal_detect_sync));
  ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_g_register__parameterized2 reg_1_8_11
       (.D(rddata[7]),
        .Q({Q[20],Q[4:0]}),
        .coreclk(coreclk),
        .fifo_full(fifo_full),
        .pma_pmd_type(pma_pmd_type),
        .\q_reg[0]_0 (\q_reg[0]_0 ),
        .\rddata_out_reg[7] (reg_1_0_15_n_1),
        .\rddata_out_reg[7]_0 (reg_3_8_10_n_1),
        .\rddata_out_reg[7]_1 (reg_3_39_all_n_1),
        .re_prev_reg_0(reg_1_1_2_n_1),
        .re_prev_reg_1(reg_1_9_0_n_3),
        .re_prev_reg_2(re_prev_reg),
        .re_prev_reg_3(re_prev_reg_0),
        .reg_1_8_11__0(reg_1_8_11__0),
        .reset(reset));
  ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_g_register_40 reg_1_9_0
       (.Q({Q[20:16],Q[8:0]}),
        .\addr_reg_reg[17] (reg_1_9_0_n_4),
        .\addr_reg_reg[19] (reg_1_9_0_n_1),
        .\addr_reg_reg[4] (reg_1_9_0_n_2),
        .\addr_reg_reg[8] (reg_1_9_0_n_3),
        .coreclk(coreclk),
        .in0(in0),
        .pma_pmd_type(pma_pmd_type[0]),
        .\q_reg[0]_0 (reg_1_9_0_n_5),
        .\q_reg[0]_1 (reg_1_0_15_n_4));
  ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_g_register_41 reg_3_0_11
       (.coreclk(coreclk),
        .\q_reg[0]_0 (reg_3_0_11_n_0),
        .\q_reg[0]_1 (SR),
        .\q_reg[0]_2 (reg_3_0_15_n_5));
  ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_g_register_42 reg_3_0_14
       (.Q({Q[20:9],Q[4:0]}),
        .\addr_reg_reg[0] (reg_3_0_14_n_4),
        .\addr_reg_reg[16] (reg_3_0_14_n_1),
        .\addr_reg_reg[20] (reg_3_0_14_n_5),
        .\addr_reg_reg[9] (\addr_reg_reg[9] ),
        .coreclk(coreclk),
        .\q_reg[0]_0 (\q_reg[0] ),
        .\q_reg[0]_1 (reg_3_0_15_n_7),
        .\q_reg[0]_2 (re_prev_reg_0),
        .re_prev_reg(reg_1_9_0_n_3),
        .reg_3_0_15_we(reg_3_0_15_we),
        .reset(reset));
  ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_g_register__parameterized0_43 reg_3_0_15
       (.D({rddata[15],rddata[10],reg_3_0_15_n_3}),
        .E(reg_3_40_we),
        .Q({Q[20:16],Q[5:0]}),
        .SR(reg_3_0_15_n_9),
        .\addr_reg_reg[17] (reg_3_0_15_n_4),
        .\addr_reg_reg[2] (reg_3_38_we),
        .\addr_reg_reg[5] (reg_3_42_we),
        .clear_test_pattern_err_count(clear_test_pattern_err_count),
        .coreclk(coreclk),
        .data_out_reg(SR),
        .data_out_reg_0(data_out_reg),
        .pcs_reset_clear_core_intr(pcs_reset_clear_core_intr),
        .\pcs_test_pattern_error_count_reg[0] (reg_3_43_all_n_1),
        .\q_reg[0]_0 (re_prev_reg_1),
        .\q_reg[0]_1 (re_prev_reg_2),
        .\q_reg[0]_2 ({\q_reg[15]_0 [15:14],\q_reg[15]_0 [11]}),
        .\q_reg[0]_3 (reg_3_0_11_n_0),
        .\q_reg[0]_4 (\q_reg[0] ),
        .\q_reg[0]_5 (re_prev_reg_0),
        .\q_reg[15] (re_prev_reg_3),
        .\q_reg[15]_0 (reg_3_43_all_n_11),
        .\q_reg[15]_1 (reg_3_35_all_n_1),
        .\q_reg[15]_2 (reg_3_35_all_n_2),
        .\q_reg[5] (\q_reg[0]_3 ),
        .\q_reg[5]_0 (reg_3_43_all_n_2),
        .\rddata_out_reg[10] (reg_3_39_all_n_25),
        .\rddata_out_reg[10]_0 (\rddata_out[10]_i_4_n_0 ),
        .\rddata_out_reg[10]_1 (reg_3_35_all_n_24),
        .\rddata_out_reg[10]_2 (\rddata_out[10]_i_6_n_0 ),
        .\rddata_out_reg[10]_3 (reg_3_8_10_n_3),
        .\rddata_out_reg[15] (\rddata_out[15]_i_15_n_0 ),
        .\rddata_out_reg[15]_0 (\rddata_out[15]_i_7_n_0 ),
        .\rddata_out_reg[15]_1 (reg_1_0_15_n_17),
        .\rddata_out_reg[15]_2 (reg_3_35_all_n_5),
        .\rddata_out_reg[15]_3 (reg_3_39_all_n_2),
        .\rddata_out_reg[15]_4 (\rddata_out[15]_i_9_n_0 ),
        .\rddata_out_reg[15]_5 (\rddata_out[15]_i_10_n_0 ),
        .\rddata_out_reg[15]_6 (\rddata_out[3]_i_4_n_0 ),
        .\rddata_out_reg[15]_7 (reg_3_65535_all_n_21),
        .\rddata_out_reg[4] (reg_3_39_all_n_19),
        .\rddata_out_reg[4]_0 (reg_3_36_all_n_0),
        .\rddata_out_reg[4]_1 (\rddata_out[4]_i_4_n_0 ),
        .\rddata_out_reg[4]_2 (reg_3_43_all_n_9),
        .\rddata_out_reg[4]_3 (\rddata_out[9]_i_2_n_0 ),
        .re_prev(re_prev),
        .re_prev_0(re_prev_0),
        .re_prev_reg(reg_3_0_15_n_11),
        .reg_3_0_15__0(reg_3_0_15__0),
        .reg_3_0_15_we(reg_3_0_15_we),
        .reg_3_33_re(reg_3_33_re),
        .reset(reset),
        .resetdone(resetdone),
        .\state_reg[2] (reg_3_0_15_n_5),
        .\state_reg[2]_0 (reg_3_0_15_n_7));
  ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_g_register__parameterized1_44 reg_3_1_2
       (.Q(Q[2:1]),
        .coreclk(coreclk),
        .\q_reg[0]_0 (reg_3_1_2_n_0),
        .\q_reg[0]_1 (SR),
        .\rddata_out_reg[2] (\rddata_out[10]_i_8_n_0 ),
        .\rddata_out_reg[2]_0 (\rddata_out[12]_i_13_n_0 ),
        .\rddata_out_reg[2]_1 (\rddata_out[14]_i_9_n_0 ),
        .\rddata_out_reg[2]_2 (\rddata_out[3]_i_4_n_0 ),
        .\rddata_out_reg[2]_3 (\rddata_out[15]_i_9_n_0 ),
        .re_prev_reg_0(\addr_reg_reg[9] ),
        .re_prev_reg_1(reg_1_0_11_n_2),
        .re_prev_reg_2(reg_3_0_14_n_1),
        .re_prev_reg_3(re_prev_reg_5),
        .reg_3_32_12__0(reg_3_32_12__0));
  ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_g_register__parameterized10_45 reg_3_32_0
       (.core_status(core_status),
        .coreclk(coreclk),
        .\q_reg[0]_0 (reg_3_32_0_n_1),
        .\q_reg[0]_1 (SR),
        .\rddata_out[0]_i_4 (\rddata_out[14]_i_9_n_0 ),
        .\rddata_out[0]_i_4_0 (\rddata_out[4]_i_4_n_0 ),
        .\rddata_out[0]_i_4_1 (\rddata_out[10]_i_8_n_0 ),
        .reg_3_32_0__0(reg_3_32_0__0));
  ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_g_register__parameterized10_46 reg_3_32_1
       (.coreclk(coreclk),
        .pcs_hi_ber_core_int(pcs_hi_ber_core_int),
        .\q_reg[0]_0 (reg_3_32_1_n_0),
        .\q_reg[0]_1 (reg_3_32_1_n_1),
        .\q_reg[0]_2 (SR),
        .\rddata_out_reg[1] (\rddata_out[14]_i_9_n_0 ),
        .\rddata_out_reg[1]_0 (\rddata_out[3]_i_4_n_0 ),
        .\rddata_out_reg[1]_1 (\rddata_out[10]_i_8_n_0 ),
        .\rddata_out_reg[1]_2 (\rddata_out[15]_i_9_n_0 ),
        .re_prev(re_prev),
        .reg_3_33(reg_3_33[14]),
        .reg_3_33_re(reg_3_33_re));
  ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_g_register__parameterized10_47 reg_3_32_12
       (.coreclk(coreclk),
        .pcs_rx_link_up_core_sync_int(pcs_rx_link_up_core_sync_int),
        .\q_reg[0]_0 (reg_3_32_12_n_1),
        .\q_reg[0]_1 (SR),
        .\rddata_out_reg[12] (\rddata_out[9]_i_2_n_0 ),
        .\rddata_out_reg[12]_0 (\rddata_out[4]_i_4_n_0 ),
        .\rddata_out_reg[12]_1 (\rddata_out[12]_i_13_n_0 ),
        .\rddata_out_reg[12]_2 (\rddata_out[14]_i_9_n_0 ),
        .\rddata_out_reg[12]_3 (\rddata_out[3]_i_4_n_0 ),
        .reg_3_32_12__0(reg_3_32_12__0));
  ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_g_register__parameterized3 reg_3_33_13_8
       (.Q({reg_3_33_13_8_n_0,reg_3_33_13_8_n_1,reg_3_33_13_8_n_2,reg_3_33_13_8_n_3,reg_3_33_13_8_n_4,reg_3_33_13_8_n_5}),
        .SR(reg_3_0_15_n_9),
        .coreclk(coreclk),
        .\q_reg[5]_0 (\q_reg[5]_0 ));
  ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_g_register__parameterized2_48 reg_3_33_14
       (.coreclk(coreclk),
        .\q_reg[0]_0 (reg_3_32_1_n_0),
        .reg_3_33(reg_3_33[14]));
  ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_g_register__parameterized1_49 reg_3_33_15
       (.Q({Q[19],Q[17:16],Q[8:5],Q[2:0]}),
        .\addr_reg_reg[2] (reg_3_33_15_n_3),
        .coreclk(coreclk),
        .\q_reg[0]_0 (SR),
        .re_prev(re_prev),
        .re_prev_reg_0(re_prev_reg_0),
        .re_prev_reg_1(\addr_reg_reg[9] ),
        .re_prev_reg_2(re_prev_reg),
        .re_prev_reg_3(reg_3_39_all_n_0),
        .reg_3_32_0__0(reg_3_32_0__0),
        .reg_3_33(reg_3_33[15]),
        .reg_3_33_re(reg_3_33_re));
  ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_g_register__parameterized4 reg_3_33_7_0
       (.Q({reg_3_33_7_0_n_1,reg_3_33_7_0_n_2,reg_3_33_7_0_n_3,reg_3_33_7_0_n_4,reg_3_33_7_0_n_5,reg_3_33_7_0_n_6,reg_3_33_7_0_n_7}),
        .SR(reg_3_0_15_n_9),
        .coreclk(coreclk),
        .pseudo_rand_seeds_int({pseudo_rand_seeds_int[92],pseudo_rand_seeds_int[34],pseudo_rand_seeds_int[18],pseudo_rand_seeds_int[2]}),
        .\q_reg[2]_0 (reg_3_33_7_0_n_0),
        .\q_reg[7]_0 (\q_reg[7] ),
        .\rddata_out[2]_i_5_0 (\rddata_out[10]_i_8_n_0 ),
        .\rddata_out[2]_i_5_1 (\rddata_out[14]_i_9_n_0 ),
        .\rddata_out[2]_i_5_2 (\rddata_out[12]_i_13_n_0 ),
        .\rddata_out_reg[2] (reg_3_38_all_n_21),
        .\rddata_out_reg[2]_0 (\rddata_out[3]_i_4_n_0 ),
        .\rddata_out_reg[2]_1 (\rddata_out[12]_i_9_n_0 ));
  ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_g_register__parameterized5 reg_3_34_all
       (.D(rddata[1]),
        .Q({Q[5],Q[1]}),
        .coreclk(coreclk),
        .pseudo_rand_seeds_int({pseudo_rand_seeds_int[91],pseudo_rand_seeds_int[45],pseudo_rand_seeds_int[41:40],pseudo_rand_seeds_int[37],pseudo_rand_seeds_int[33],pseudo_rand_seeds_int[29:28],pseudo_rand_seeds_int[25:24],pseudo_rand_seeds_int[21],pseudo_rand_seeds_int[17]}),
        .\q_reg[0]_0 (reg_3_33_15_n_3),
        .\q_reg[0]_1 (\q_reg[0]_2 ),
        .\q_reg[0]_2 (reg_3_0_14_n_1),
        .\q_reg[0]_3 (reg_3_0_14_n_4),
        .\q_reg[12]_0 (reg_3_34_all_n_21),
        .\q_reg[13]_0 (reg_3_34_all_n_20),
        .\q_reg[15]_0 (pseudo_rand_seeds_int[15:0]),
        .\q_reg[15]_1 (SR),
        .\q_reg[15]_2 (\q_reg[15]_1 ),
        .\q_reg[1]_0 (reg_3_34_all_n_3),
        .\q_reg[5]_0 (reg_3_34_all_n_1),
        .\q_reg[8]_0 (reg_3_34_all_n_2),
        .\rddata_out[1]_i_2_0 (\rddata_out[14]_i_9_n_0 ),
        .\rddata_out[1]_i_2_1 (\rddata_out[12]_i_13_n_0 ),
        .\rddata_out[1]_i_2_2 (\rddata_out[10]_i_8_n_0 ),
        .\rddata_out_reg[12] ({reg_3_33_13_8_n_1,reg_3_33_13_8_n_4,reg_3_33_13_8_n_5}),
        .\rddata_out_reg[12]_0 (\rddata_out[12]_i_11_n_0 ),
        .\rddata_out_reg[1] (\rddata_out[4]_i_4_n_0 ),
        .\rddata_out_reg[1]_0 (reg_3_0_15_n_4),
        .\rddata_out_reg[1]_1 (reg_3_65535_all_n_18),
        .\rddata_out_reg[1]_2 (reg_3_32_1_n_1),
        .\rddata_out_reg[1]_3 (reg_1_0_15_n_5),
        .\rddata_out_reg[1]_4 (reg_3_39_all_n_26),
        .\rddata_out_reg[1]_5 (\rddata_out[12]_i_9_n_0 ),
        .\rddata_out_reg[5] (\rddata_out[3]_i_4_n_0 ),
        .\rddata_out_reg[5]_0 (\rddata_out[13]_i_8_n_0 ),
        .\rddata_out_reg[5]_1 ({reg_3_33_7_0_n_3,reg_3_33_7_0_n_6}),
        .\rddata_out_reg[8] (\rddata_out[15]_i_10_n_0 ));
  ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_g_register__parameterized5_50 reg_3_35_all
       (.Q({Q[20],Q[18:16],Q[8:0]}),
        .\addr_reg_reg[17] (reg_3_35_all_n_2),
        .\addr_reg_reg[18] (reg_3_35_all_n_1),
        .\addr_reg_reg[3] (reg_3_35_all_n_0),
        .coreclk(coreclk),
        .pseudo_rand_seeds_int({pseudo_rand_seeds_int[47:46],pseudo_rand_seeds_int[43:42],pseudo_rand_seeds_int[39:38],pseudo_rand_seeds_int[35],pseudo_rand_seeds_int[15:14],pseudo_rand_seeds_int[11:10],pseudo_rand_seeds_int[7:6],pseudo_rand_seeds_int[3]}),
        .\q_reg[0]_0 (\q_reg[0]_3 ),
        .\q_reg[0]_1 (\q_reg[0]_2 ),
        .\q_reg[0]_2 (SR),
        .\q_reg[10]_0 (reg_3_35_all_n_24),
        .\q_reg[11]_0 (reg_3_35_all_n_25),
        .\q_reg[14]_0 (reg_3_35_all_n_4),
        .\q_reg[15]_0 (reg_3_35_all_n_5),
        .\q_reg[15]_1 (pseudo_rand_seeds_int[31:16]),
        .\q_reg[15]_2 (\q_reg[15]_0 ),
        .\q_reg[3]_0 (reg_3_35_all_n_6),
        .\q_reg[4]_0 (reg_3_35_all_n_26),
        .\q_reg[6]_0 (reg_3_35_all_n_3),
        .\q_reg[7]_0 (reg_3_35_all_n_23),
        .\rddata_out[11]_i_2 ({reg_3_33_13_8_n_2,reg_3_33_13_8_n_3}),
        .\rddata_out[4]_i_3 (\rddata_out[10]_i_8_n_0 ),
        .\rddata_out[7]_i_5 ({reg_3_33_7_0_n_1,reg_3_33_7_0_n_2,reg_3_33_7_0_n_4,reg_3_33_7_0_n_5}),
        .\rddata_out_reg[10] (\rddata_out[14]_i_9_n_0 ),
        .\rddata_out_reg[10]_0 (\rddata_out[12]_i_13_n_0 ),
        .\rddata_out_reg[14] (\rddata_out[15]_i_13_n_0 ),
        .\rddata_out_reg[14]_0 (reg_3_40_all_n_19),
        .\rddata_out_reg[14]_1 (\rddata_out[15]_i_9_n_0 ),
        .\rddata_out_reg[14]_2 (reg_3_38_all_n_22),
        .\rddata_out_reg[14]_3 (\rddata_out[4]_i_4_n_0 ),
        .\rddata_out_reg[3] (\rddata_out[12]_i_9_n_0 ),
        .\rddata_out_reg[3]_0 (\rddata_out[13]_i_8_n_0 ),
        .\rddata_out_reg[6] (\rddata_out[10]_i_4_n_0 ),
        .\rddata_out_reg[6]_0 (reg_3_39_all_n_24),
        .reg_3_33(reg_3_33));
  ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_g_register__parameterized5_51 reg_3_36_all
       (.Q({Q[8:5],Q[2:1]}),
        .coreclk(coreclk),
        .pseudo_rand_seeds_int(pseudo_rand_seeds_int[47:32]),
        .\q_reg[0]_0 (reg_3_36_all_n_18),
        .\q_reg[0]_1 (re_prev_reg_3),
        .\q_reg[0]_2 (reg_3_0_14_n_1),
        .\q_reg[0]_3 (\q_reg[0]_2 ),
        .\q_reg[0]_4 (reg_3_39_all_n_0),
        .\q_reg[12]_0 (reg_3_36_all_n_17),
        .\q_reg[15]_0 (SR),
        .\q_reg[15]_1 (\q_reg[15]_0 ),
        .\q_reg[4]_0 (reg_3_36_all_n_0),
        .\rddata_out[0]_i_5_0 (\rddata_out[14]_i_9_n_0 ),
        .\rddata_out[0]_i_5_1 (\rddata_out[12]_i_13_n_0 ),
        .\rddata_out_reg[0] ({pseudo_rand_seeds_int[16],pseudo_rand_seeds_int[4],pseudo_rand_seeds_int[0]}),
        .\rddata_out_reg[0]_0 (\rddata_out[4]_i_4_n_0 ),
        .\rddata_out_reg[0]_1 (\rddata_out[15]_i_10_n_0 ),
        .\rddata_out_reg[0]_2 (\rddata_out[13]_i_8_n_0 ),
        .\rddata_out_reg[0]_3 (reg_3_33_7_0_n_7),
        .\rddata_out_reg[4] (\rddata_out[12]_i_9_n_0 ),
        .\rddata_out_reg[4]_0 (\rddata_out[3]_i_4_n_0 ),
        .\rddata_out_reg[4]_1 (reg_3_35_all_n_26),
        .\rddata_out_reg[4]_2 (\rddata_out[12]_i_11_n_0 ));
  ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_g_register__parameterized6 reg_3_37_9_0
       (.Q({Q[20],Q[18:16],Q[5:4],Q[2:0]}),
        .\addr_reg_reg[16] (reg_3_37_9_0_n_0),
        .\addr_reg_reg[4] (reg_3_37_9_0_n_1),
        .coreclk(coreclk),
        .pseudo_rand_seeds_int({pseudo_rand_seeds_int[93],pseudo_rand_seeds_int[90],pseudo_rand_seeds_int[74],pseudo_rand_seeds_int[58]}),
        .\q_reg[0]_0 (reg_3_37_9_0_n_2),
        .\q_reg[0]_1 (\q_reg[0]_2 ),
        .\q_reg[0]_2 (reg_3_35_all_n_0),
        .\q_reg[0]_3 (\q_reg[0]_3 ),
        .\q_reg[0]_4 (SR),
        .\q_reg[3]_0 (reg_3_37_9_0_n_3),
        .\q_reg[9]_0 (pseudo_rand_seeds_int[57:48]),
        .\q_reg[9]_1 (\q_reg[15]_0 [9:0]),
        .\rddata_out[0]_i_4_0 (\rddata_out[10]_i_8_n_0 ),
        .\rddata_out[0]_i_4_1 (\rddata_out[14]_i_9_n_0 ),
        .\rddata_out[0]_i_4_2 (\rddata_out[12]_i_13_n_0 ),
        .\rddata_out_reg[0] (\rddata_out[4]_i_4_n_0 ),
        .\rddata_out_reg[0]_0 (\rddata_out[3]_i_4_n_0 ),
        .\rddata_out_reg[0]_1 (\rddata_out[12]_i_9_n_0 ),
        .\rddata_out_reg[0]_2 (reg_3_32_0_n_1));
  ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_g_register__parameterized5_52 reg_3_38_all
       (.D(rddata[11]),
        .E(reg_3_38_we),
        .Q(Q[17]),
        .coreclk(coreclk),
        .pseudo_rand_seeds_int({pseudo_rand_seeds_int[103],pseudo_rand_seeds_int[101],pseudo_rand_seeds_int[95:94],pseudo_rand_seeds_int[87],pseudo_rand_seeds_int[85],pseudo_rand_seeds_int[77:76],pseudo_rand_seeds_int[53:52],pseudo_rand_seeds_int[50]}),
        .\q_reg[14]_0 (reg_3_38_all_n_22),
        .\q_reg[15]_0 (pseudo_rand_seeds_int[73:58]),
        .\q_reg[15]_1 (SR),
        .\q_reg[15]_2 (\q_reg[15]_0 ),
        .\q_reg[2]_0 (reg_3_38_all_n_21),
        .\q_reg[3]_0 (reg_3_38_all_n_1),
        .\q_reg[4]_0 (reg_3_38_all_n_19),
        .\q_reg[5]_0 (reg_3_38_all_n_2),
        .\q_reg[5]_1 (reg_3_38_all_n_20),
        .\rddata_out[14]_i_4 (\rddata_out[14]_i_9_n_0 ),
        .\rddata_out[14]_i_4_0 (\rddata_out[12]_i_13_n_0 ),
        .\rddata_out[2]_i_5 (\rddata_out[10]_i_8_n_0 ),
        .\rddata_out_reg[11] (\rddata_out[15]_i_7_n_0 ),
        .\rddata_out_reg[11]_0 (reg_3_43_all_n_7),
        .\rddata_out_reg[11]_1 (reg_1_0_11_n_3),
        .\rddata_out_reg[11]_2 (\rddata_out[4]_i_4_n_0 ),
        .\rddata_out_reg[11]_3 (\rddata_out[10]_i_4_n_0 ),
        .\rddata_out_reg[11]_4 (reg_3_35_all_n_25),
        .\rddata_out_reg[13] (reg_3_33_13_8_n_0),
        .\rddata_out_reg[13]_0 (\rddata_out[13]_i_8_n_0 ),
        .\rddata_out_reg[13]_1 (reg_3_34_all_n_20),
        .\rddata_out_reg[3] (\rddata_out[15]_i_10_n_0 ),
        .\rddata_out_reg[3]_0 (\rddata_out[3]_i_4_n_0 ),
        .\rddata_out_reg[3]_1 (reg_3_37_9_0_n_3),
        .reg_3_0_15__0(reg_3_0_15__0));
  ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_g_register__parameterized5_53 reg_3_39_all
       (.Q({Q[20],Q[18],Q[4:1]}),
        .\addr_reg_reg[18] (reg_3_39_all_n_0),
        .\addr_reg_reg[2] (reg_3_39_all_n_1),
        .coreclk(coreclk),
        .pseudo_rand_seeds_int(pseudo_rand_seeds_int[89:74]),
        .\q_reg[0]_0 (reg_3_43_all_n_3),
        .\q_reg[0]_1 (\q_reg[0]_2 ),
        .\q_reg[0]_2 (reg_3_37_9_0_n_0),
        .\q_reg[0]_3 (SR),
        .\q_reg[10]_0 (reg_3_39_all_n_25),
        .\q_reg[12]_0 (reg_3_39_all_n_23),
        .\q_reg[15]_0 (reg_3_39_all_n_2),
        .\q_reg[15]_1 (\q_reg[15]_0 ),
        .\q_reg[1]_0 (reg_3_39_all_n_26),
        .\q_reg[4]_0 (reg_3_39_all_n_19),
        .\q_reg[5]_0 (reg_3_39_all_n_20),
        .\q_reg[6]_0 (reg_3_39_all_n_24),
        .\q_reg[8]_0 (reg_3_39_all_n_21),
        .\q_reg[9]_0 (reg_3_39_all_n_22),
        .\rddata_out_reg[10] ({pseudo_rand_seeds_int[100],pseudo_rand_seeds_int[97:96],pseudo_rand_seeds_int[70],pseudo_rand_seeds_int[68],pseudo_rand_seeds_int[65:64],pseudo_rand_seeds_int[59],pseudo_rand_seeds_int[55:54],pseudo_rand_seeds_int[49]}),
        .\rddata_out_reg[10]_0 (\rddata_out[14]_i_9_n_0 ),
        .\rddata_out_reg[10]_1 (\rddata_out[12]_i_13_n_0 ),
        .\rddata_out_reg[10]_2 (\rddata_out[10]_i_8_n_0 ),
        .\rddata_out_reg[12] (\rddata_out[12]_i_11_n_0 ),
        .\rddata_out_reg[12]_0 (reg_3_40_all_n_0),
        .\rddata_out_reg[15] (\rddata_out[15]_i_10_n_0 ),
        .\rddata_out_reg[15]_0 (\rddata_out[15]_i_9_n_0 ),
        .\rddata_out_reg[15]_1 (reg_3_40_all_n_20),
        .\rddata_out_reg[4] (\rddata_out[3]_i_4_n_0 ),
        .\rddata_out_reg[4]_0 (reg_3_38_all_n_19),
        .\rddata_out_reg[5] (reg_3_38_all_n_20),
        .\rddata_out_reg[7] (\rddata_out[4]_i_4_n_0 ),
        .\rddata_out_reg[7]_0 (\rddata_out[10]_i_4_n_0 ),
        .\rddata_out_reg[7]_1 (reg_3_35_all_n_23),
        .\rddata_out_reg[8] (reg_3_40_all_n_17),
        .\rddata_out_reg[9] (reg_3_40_all_n_18));
  ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_g_register__parameterized5_54 reg_3_40_all
       (.E(reg_3_40_we),
        .coreclk(coreclk),
        .pseudo_rand_seeds_int(pseudo_rand_seeds_int[105:90]),
        .\q_reg[12]_0 (reg_3_40_all_n_0),
        .\q_reg[14]_0 (reg_3_40_all_n_19),
        .\q_reg[15]_0 (reg_3_40_all_n_20),
        .\q_reg[15]_1 (SR),
        .\q_reg[15]_2 (\q_reg[15]_0 ),
        .\q_reg[8]_0 (reg_3_40_all_n_17),
        .\q_reg[9]_0 (reg_3_40_all_n_18),
        .\rddata_out[12]_i_4 (\rddata_out[3]_i_4_n_0 ),
        .\rddata_out[14]_i_4 ({pseudo_rand_seeds_int[88],pseudo_rand_seeds_int[73],pseudo_rand_seeds_int[67:66],pseudo_rand_seeds_int[57:56]}),
        .\rddata_out[15]_i_5 (\rddata_out[14]_i_9_n_0 ),
        .\rddata_out[15]_i_5_0 (\rddata_out[12]_i_13_n_0 ),
        .\rddata_out[9]_i_5 (\rddata_out[10]_i_8_n_0 ));
  ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_g_register__parameterized6_55 reg_3_41_9_0
       (.D(rddata[6]),
        .Q({Q[8:5],Q[3:2]}),
        .coreclk(coreclk),
        .pseudo_rand_seeds_int(pseudo_rand_seeds_int[115:106]),
        .\q_reg[0]_0 (reg_3_41_9_0_n_0),
        .\q_reg[0]_1 (\q_reg[0]_2 ),
        .\q_reg[0]_2 (reg_3_37_9_0_n_0),
        .\q_reg[0]_3 (reg_3_37_9_0_n_1),
        .\q_reg[0]_4 (SR),
        .\q_reg[7]_0 (reg_3_41_9_0_n_13),
        .\q_reg[9]_0 (reg_3_41_9_0_n_1),
        .\q_reg[9]_1 (\q_reg[15]_0 [9:0]),
        .\rddata_out[0]_i_3_0 (\rddata_out[10]_i_8_n_0 ),
        .\rddata_out[0]_i_3_1 (\q_reg[5] [0]),
        .\rddata_out_reg[0] (\rddata_out[9]_i_2_n_0 ),
        .\rddata_out_reg[0]_0 (\rddata_out[12]_i_9_n_0 ),
        .\rddata_out_reg[6] (reg_3_0_15_n_4),
        .\rddata_out_reg[6]_0 (\rddata_out[6]_i_5_n_0 ),
        .\rddata_out_reg[6]_1 (reg_3_43_all_n_10),
        .\rddata_out_reg[6]_2 (\rddata_out[15]_i_9_n_0 ),
        .\rddata_out_reg[6]_3 (\rddata_out[10]_i_6_n_0 ),
        .\rddata_out_reg[6]_4 (reg_3_35_all_n_3),
        .\rddata_out_reg[6]_5 (reg_1_0_15_n_7),
        .\rddata_out_reg[9] ({\q_reg[15] [9],\q_reg[15] [7],\q_reg[15] [0]}),
        .\rddata_out_reg[9]_0 (\rddata_out[14]_i_9_n_0 ),
        .\rddata_out_reg[9]_1 (\rddata_out[13]_i_8_n_0 ),
        .\rddata_out_reg[9]_2 ({reg_3_43_all_n_15,reg_3_43_all_n_17,reg_3_43_all_n_20}),
        .\rddata_out_reg[9]_3 (\rddata_out[12]_i_13_n_0 ));
  ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_g_register__parameterized7 reg_3_42_5_0
       (.D(D),
        .E(reg_3_42_we),
        .Q({\q_reg[5] [4],reg_3_42_5_0_n_2,\q_reg[5] [3:0]}),
        .asynch_fifo_i_i_68(asynch_fifo_i_i_68),
        .core_in_testmode_reg(\q_reg[0] ),
        .core_in_testmode_wire(core_in_testmode_wire),
        .coreclk(coreclk),
        .new_tx_test_seed(new_tx_test_seed),
        .out(out),
        .pcs_test_pattern_error_count(pcs_test_pattern_error_count),
        .prbs31_rx_enable_core_int(prbs31_rx_enable_core_int),
        .prbs31_tx_enable_core_int(prbs31_tx_enable_core_int),
        .\prbs_err_count_reg[15] (\prbs_err_count_reg[15] ),
        .pseudo_rand_seeds_int(pseudo_rand_seeds_int[108]),
        .\q_reg[1]_0 (\q_reg[1] ),
        .\q_reg[2]_0 (reg_3_42_5_0_n_10),
        .\q_reg[3]_0 (\q_reg[3] ),
        .\q_reg[5]_0 (SR),
        .\q_reg[5]_1 (\q_reg[15]_0 [5:0]),
        .\rd_data_reg[1] (\rd_data_reg[1] ),
        .\rddata_out[2]_i_3_0 (\rddata_out[14]_i_9_n_0 ),
        .\rddata_out[2]_i_3_1 (\rddata_out[12]_i_13_n_0 ),
        .\rddata_out[2]_i_3_2 (\q_reg[15] [2]),
        .\rddata_out_reg[2] (\rddata_out[15]_i_10_n_0 ),
        .\rddata_out_reg[2]_0 (reg_3_43_all_n_18),
        .\rddata_out_reg[2]_1 (\rddata_out[15]_i_9_n_0 ),
        .\rddata_out_reg[2]_2 (\rddata_out[13]_i_8_n_0 ),
        .tx_66_fifo(tx_66_fifo));
  ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_g_register__parameterized8 reg_3_43_all
       (.D({rddata[13],rddata[5],rddata[3]}),
        .Q(Q),
        .SR(reg_3_0_15_n_11),
        .\addr_reg_reg[0] (reg_3_43_all_n_1),
        .\addr_reg_reg[17] (reg_3_43_all_n_2),
        .\addr_reg_reg[6] (reg_3_43_all_n_11),
        .\addr_reg_reg[7] (reg_3_43_all_n_3),
        .coreclk(coreclk),
        .\pcs_test_pattern_error_count_reg[0] (re_prev_reg),
        .\pcs_test_pattern_error_count_reg[0]_0 (re_prev_reg_0),
        .pseudo_rand_seeds_int(pseudo_rand_seeds_int[111:109]),
        .\q_reg[0]_0 (reg_3_43_all_n_7),
        .\q_reg[0]_1 (reg_3_43_all_n_8),
        .\q_reg[15]_0 ({reg_3_43_all_n_12,reg_3_43_all_n_13,reg_3_43_all_n_14,reg_3_43_all_n_15,reg_3_43_all_n_16,reg_3_43_all_n_17,reg_3_43_all_n_18,reg_3_43_all_n_19,reg_3_43_all_n_20}),
        .\q_reg[15]_1 (\q_reg[15]_2 ),
        .\q_reg[4]_0 (reg_3_43_all_n_9),
        .\q_reg[6]_0 (reg_3_43_all_n_10),
        .\rddata_out[14]_i_3_0 ({\q_reg[15] [14:13],\q_reg[15] [11],\q_reg[15] [6:3]}),
        .\rddata_out[3]_i_2_0 (\rddata_out[10]_i_8_n_0 ),
        .\rddata_out_reg[11] (reg_3_0_11_n_0),
        .\rddata_out_reg[13] (\rddata_out[14]_i_9_n_0 ),
        .\rddata_out_reg[13]_0 (\rddata_out[4]_i_4_n_0 ),
        .\rddata_out_reg[13]_1 (reg_3_38_all_n_2),
        .\rddata_out_reg[13]_2 (\rddata_out[13]_i_4_n_0 ),
        .\rddata_out_reg[13]_3 (reg_1_0_15_n_18),
        .\rddata_out_reg[13]_4 (\rddata_out[15]_i_7_n_0 ),
        .\rddata_out_reg[14] (\q_reg[0] ),
        .\rddata_out_reg[3] (\rddata_out[3]_i_4_n_0 ),
        .\rddata_out_reg[3]_0 (\rddata_out[12]_i_9_n_0 ),
        .\rddata_out_reg[3]_1 (reg_3_38_all_n_1),
        .\rddata_out_reg[3]_2 (reg_3_35_all_n_6),
        .\rddata_out_reg[3]_3 (reg_1_0_15_n_14),
        .\rddata_out_reg[4] (\rddata_out[12]_i_13_n_0 ),
        .\rddata_out_reg[5] (\rddata_out[9]_i_2_n_0 ),
        .\rddata_out_reg[5]_0 (reg_3_0_15_n_4),
        .\rddata_out_reg[5]_1 (reg_3_34_all_n_1),
        .\rddata_out_reg[5]_2 (reg_3_39_all_n_20),
        .\rddata_out_reg[5]_3 (reg_1_0_15_n_6),
        .\rddata_out_reg[5]_4 ({\q_reg[5] [4],reg_3_42_5_0_n_2,\q_reg[5] [3]}),
        .re_prev(re_prev_0),
        .re_prev_reg_0(reg_3_35_all_n_1),
        .re_prev_reg_1(re_prev_reg_2),
        .re_prev_reg_2(re_prev_reg_1),
        .re_prev_reg_3(\q_reg[0]_3 ));
  ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_g_register__parameterized9 reg_3_65535_all
       (.Q({Q[20],Q[18],Q[15:0]}),
        .\addr_reg_reg[14] (reg_3_65535_all_n_17),
        .coreclk(coreclk),
        .pseudo_rand_seeds_int({pseudo_rand_seeds_int[114],pseudo_rand_seeds_int[107]}),
        .\q_reg[0]_0 (\q_reg[0]_2 ),
        .\q_reg[0]_1 (reg_3_0_14_n_1),
        .\q_reg[10]_0 (reg_3_65535_all_n_19),
        .\q_reg[12]_0 (reg_3_65535_all_n_0),
        .\q_reg[15]_0 (\q_reg[15] ),
        .\q_reg[15]_1 (reg_3_65535_all_n_21),
        .\q_reg[15]_2 (\q_reg[15]_0 ),
        .\q_reg[1]_0 (reg_3_65535_all_n_18),
        .\q_reg[2]_0 (SR),
        .\q_reg[8]_0 (reg_3_65535_all_n_20),
        .\rddata_out[15]_i_3 ({reg_3_43_all_n_12,reg_3_43_all_n_13,reg_3_43_all_n_14,reg_3_43_all_n_16,reg_3_43_all_n_19}),
        .\rddata_out[15]_i_3_0 (\rddata_out[14]_i_9_n_0 ),
        .\rddata_out[15]_i_3_1 (\rddata_out[12]_i_13_n_0 ),
        .\rddata_out_reg[12] (\rddata_out[12]_i_9_n_0 ),
        .\rddata_out_reg[12]_0 (\rddata_out[9]_i_2_n_0 ),
        .\rddata_out_reg[12]_1 (\rddata_out[12]_i_10_n_0 ),
        .\rddata_out_reg[12]_2 (reg_3_0_15_n_4),
        .\rddata_out_reg[1] (\rddata_out[15]_i_9_n_0 ),
        .\rddata_out_reg[1]_0 (\rddata_out[12]_i_11_n_0 ),
        .\rddata_out_reg[1]_1 (\q_reg[5] [1]),
        .\rddata_out_reg[1]_2 (\rddata_out[13]_i_8_n_0 ),
        .\rddata_out_reg[8] (\rddata_out[15]_i_10_n_0 ));
  ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_g_register__parameterized2_56 reg_3_8_10
       (.Q(Q[3:2]),
        .coreclk(coreclk),
        .\q_reg[0]_0 (reg_3_8_10_n_1),
        .\q_reg[0]_1 (reg_3_8_10_n_3),
        .\q_reg[0]_2 (reg_3_8_11_n_0),
        .\rddata_out_reg[10] (\rddata_out[15]_i_10_n_0 ),
        .\rddata_out_reg[10]_0 (\rddata_out[3]_i_4_n_0 ),
        .\rddata_out_reg[10]_1 (reg_3_65535_all_n_19),
        .\rddata_out_reg[7] (\rddata_out[7]_i_6_n_0 ),
        .\rddata_out_reg[7]_0 (\rddata_out[15]_i_9_n_0 ),
        .\rddata_out_reg[7]_1 (\rddata_out[4]_i_4_n_0 ),
        .\rddata_out_reg[7]_2 (reg_3_41_9_0_n_13),
        .\rddata_out_reg[7]_3 (reg_3_0_15_n_4),
        .re_prev_reg(re_prev_reg_3),
        .re_prev_reg_0(re_prev_reg_0),
        .re_prev_reg_1(reg_3_0_14_n_1),
        .re_prev_reg_2(reg_1_9_0_n_2),
        .reg_3_8(reg_3_8),
        .reg_3_8_re(reg_3_8_re));
  ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_g_register__parameterized2_57 reg_3_8_11
       (.coreclk(coreclk),
        .pcs_rx_link_up_core_sync_int(pcs_rx_link_up_core_sync_int),
        .\q_reg[0] (SR),
        .re_prev_reg_0(reg_3_8_11_n_0),
        .reg_3_8(reg_3_8),
        .reg_3_8_re(reg_3_8_re));
  FDRE #(
    .INIT(1'b0)) 
    wrack_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(wrack0),
        .Q(regs_wrack),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_15_dp_ram" *) 
module ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_dp_ram
   (E,
    rd_data,
    wr_en,
    \wr_addr_reg[4] ,
    wr_clk_en,
    rd_en,
    \rd_data_reg[0]_0 ,
    rd_clk_en,
    wr_clk,
    wr_data,
    ADDRA,
    ADDRD,
    rd_clk);
  output [0:0]E;
  output [65:0]rd_data;
  input wr_en;
  input \wr_addr_reg[4] ;
  input wr_clk_en;
  input rd_en;
  input \rd_data_reg[0]_0 ;
  input rd_clk_en;
  input wr_clk;
  input [65:0]wr_data;
  input [4:0]ADDRA;
  input [4:0]ADDRD;
  input rd_clk;

  wire [4:0]ADDRA;
  wire [4:0]ADDRD;
  wire [0:0]E;
  wire ram_rd_en;
  wire rd_clk;
  wire rd_clk_en;
  wire [65:0]rd_data;
  wire \rd_data_reg[0]_0 ;
  wire [65:0]rd_data_unreg;
  wire rd_en;
  wire \wr_addr_reg[4] ;
  wire wr_clk;
  wire wr_clk_en;
  wire [65:0]wr_data;
  wire wr_en;
  wire [1:0]NLW_ten_gig_disti_ram_reg_0_31_0_5_DOD_UNCONNECTED;
  wire [1:0]NLW_ten_gig_disti_ram_reg_0_31_12_17_DOD_UNCONNECTED;
  wire [1:0]NLW_ten_gig_disti_ram_reg_0_31_18_23_DOD_UNCONNECTED;
  wire [1:0]NLW_ten_gig_disti_ram_reg_0_31_24_29_DOD_UNCONNECTED;
  wire [1:0]NLW_ten_gig_disti_ram_reg_0_31_30_35_DOD_UNCONNECTED;
  wire [1:0]NLW_ten_gig_disti_ram_reg_0_31_36_41_DOD_UNCONNECTED;
  wire [1:0]NLW_ten_gig_disti_ram_reg_0_31_42_47_DOD_UNCONNECTED;
  wire [1:0]NLW_ten_gig_disti_ram_reg_0_31_48_53_DOD_UNCONNECTED;
  wire [1:0]NLW_ten_gig_disti_ram_reg_0_31_54_59_DOD_UNCONNECTED;
  wire [1:0]NLW_ten_gig_disti_ram_reg_0_31_60_65_DOD_UNCONNECTED;
  wire [1:0]NLW_ten_gig_disti_ram_reg_0_31_6_11_DOD_UNCONNECTED;

  LUT3 #(
    .INIT(8'h20)) 
    \rd_data[65]_i_1 
       (.I0(rd_en),
        .I1(\rd_data_reg[0]_0 ),
        .I2(rd_clk_en),
        .O(ram_rd_en));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[0] 
       (.C(rd_clk),
        .CE(ram_rd_en),
        .D(rd_data_unreg[0]),
        .Q(rd_data[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[10] 
       (.C(rd_clk),
        .CE(ram_rd_en),
        .D(rd_data_unreg[10]),
        .Q(rd_data[10]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[11] 
       (.C(rd_clk),
        .CE(ram_rd_en),
        .D(rd_data_unreg[11]),
        .Q(rd_data[11]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[12] 
       (.C(rd_clk),
        .CE(ram_rd_en),
        .D(rd_data_unreg[12]),
        .Q(rd_data[12]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[13] 
       (.C(rd_clk),
        .CE(ram_rd_en),
        .D(rd_data_unreg[13]),
        .Q(rd_data[13]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[14] 
       (.C(rd_clk),
        .CE(ram_rd_en),
        .D(rd_data_unreg[14]),
        .Q(rd_data[14]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[15] 
       (.C(rd_clk),
        .CE(ram_rd_en),
        .D(rd_data_unreg[15]),
        .Q(rd_data[15]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[16] 
       (.C(rd_clk),
        .CE(ram_rd_en),
        .D(rd_data_unreg[16]),
        .Q(rd_data[16]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[17] 
       (.C(rd_clk),
        .CE(ram_rd_en),
        .D(rd_data_unreg[17]),
        .Q(rd_data[17]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[18] 
       (.C(rd_clk),
        .CE(ram_rd_en),
        .D(rd_data_unreg[18]),
        .Q(rd_data[18]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[19] 
       (.C(rd_clk),
        .CE(ram_rd_en),
        .D(rd_data_unreg[19]),
        .Q(rd_data[19]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[1] 
       (.C(rd_clk),
        .CE(ram_rd_en),
        .D(rd_data_unreg[1]),
        .Q(rd_data[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[20] 
       (.C(rd_clk),
        .CE(ram_rd_en),
        .D(rd_data_unreg[20]),
        .Q(rd_data[20]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[21] 
       (.C(rd_clk),
        .CE(ram_rd_en),
        .D(rd_data_unreg[21]),
        .Q(rd_data[21]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[22] 
       (.C(rd_clk),
        .CE(ram_rd_en),
        .D(rd_data_unreg[22]),
        .Q(rd_data[22]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[23] 
       (.C(rd_clk),
        .CE(ram_rd_en),
        .D(rd_data_unreg[23]),
        .Q(rd_data[23]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[24] 
       (.C(rd_clk),
        .CE(ram_rd_en),
        .D(rd_data_unreg[24]),
        .Q(rd_data[24]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[25] 
       (.C(rd_clk),
        .CE(ram_rd_en),
        .D(rd_data_unreg[25]),
        .Q(rd_data[25]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[26] 
       (.C(rd_clk),
        .CE(ram_rd_en),
        .D(rd_data_unreg[26]),
        .Q(rd_data[26]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[27] 
       (.C(rd_clk),
        .CE(ram_rd_en),
        .D(rd_data_unreg[27]),
        .Q(rd_data[27]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[28] 
       (.C(rd_clk),
        .CE(ram_rd_en),
        .D(rd_data_unreg[28]),
        .Q(rd_data[28]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[29] 
       (.C(rd_clk),
        .CE(ram_rd_en),
        .D(rd_data_unreg[29]),
        .Q(rd_data[29]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[2] 
       (.C(rd_clk),
        .CE(ram_rd_en),
        .D(rd_data_unreg[2]),
        .Q(rd_data[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[30] 
       (.C(rd_clk),
        .CE(ram_rd_en),
        .D(rd_data_unreg[30]),
        .Q(rd_data[30]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[31] 
       (.C(rd_clk),
        .CE(ram_rd_en),
        .D(rd_data_unreg[31]),
        .Q(rd_data[31]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[32] 
       (.C(rd_clk),
        .CE(ram_rd_en),
        .D(rd_data_unreg[32]),
        .Q(rd_data[32]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[33] 
       (.C(rd_clk),
        .CE(ram_rd_en),
        .D(rd_data_unreg[33]),
        .Q(rd_data[33]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[34] 
       (.C(rd_clk),
        .CE(ram_rd_en),
        .D(rd_data_unreg[34]),
        .Q(rd_data[34]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[35] 
       (.C(rd_clk),
        .CE(ram_rd_en),
        .D(rd_data_unreg[35]),
        .Q(rd_data[35]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[36] 
       (.C(rd_clk),
        .CE(ram_rd_en),
        .D(rd_data_unreg[36]),
        .Q(rd_data[36]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[37] 
       (.C(rd_clk),
        .CE(ram_rd_en),
        .D(rd_data_unreg[37]),
        .Q(rd_data[37]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[38] 
       (.C(rd_clk),
        .CE(ram_rd_en),
        .D(rd_data_unreg[38]),
        .Q(rd_data[38]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[39] 
       (.C(rd_clk),
        .CE(ram_rd_en),
        .D(rd_data_unreg[39]),
        .Q(rd_data[39]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[3] 
       (.C(rd_clk),
        .CE(ram_rd_en),
        .D(rd_data_unreg[3]),
        .Q(rd_data[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[40] 
       (.C(rd_clk),
        .CE(ram_rd_en),
        .D(rd_data_unreg[40]),
        .Q(rd_data[40]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[41] 
       (.C(rd_clk),
        .CE(ram_rd_en),
        .D(rd_data_unreg[41]),
        .Q(rd_data[41]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[42] 
       (.C(rd_clk),
        .CE(ram_rd_en),
        .D(rd_data_unreg[42]),
        .Q(rd_data[42]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[43] 
       (.C(rd_clk),
        .CE(ram_rd_en),
        .D(rd_data_unreg[43]),
        .Q(rd_data[43]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[44] 
       (.C(rd_clk),
        .CE(ram_rd_en),
        .D(rd_data_unreg[44]),
        .Q(rd_data[44]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[45] 
       (.C(rd_clk),
        .CE(ram_rd_en),
        .D(rd_data_unreg[45]),
        .Q(rd_data[45]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[46] 
       (.C(rd_clk),
        .CE(ram_rd_en),
        .D(rd_data_unreg[46]),
        .Q(rd_data[46]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[47] 
       (.C(rd_clk),
        .CE(ram_rd_en),
        .D(rd_data_unreg[47]),
        .Q(rd_data[47]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[48] 
       (.C(rd_clk),
        .CE(ram_rd_en),
        .D(rd_data_unreg[48]),
        .Q(rd_data[48]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[49] 
       (.C(rd_clk),
        .CE(ram_rd_en),
        .D(rd_data_unreg[49]),
        .Q(rd_data[49]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[4] 
       (.C(rd_clk),
        .CE(ram_rd_en),
        .D(rd_data_unreg[4]),
        .Q(rd_data[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[50] 
       (.C(rd_clk),
        .CE(ram_rd_en),
        .D(rd_data_unreg[50]),
        .Q(rd_data[50]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[51] 
       (.C(rd_clk),
        .CE(ram_rd_en),
        .D(rd_data_unreg[51]),
        .Q(rd_data[51]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[52] 
       (.C(rd_clk),
        .CE(ram_rd_en),
        .D(rd_data_unreg[52]),
        .Q(rd_data[52]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[53] 
       (.C(rd_clk),
        .CE(ram_rd_en),
        .D(rd_data_unreg[53]),
        .Q(rd_data[53]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[54] 
       (.C(rd_clk),
        .CE(ram_rd_en),
        .D(rd_data_unreg[54]),
        .Q(rd_data[54]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[55] 
       (.C(rd_clk),
        .CE(ram_rd_en),
        .D(rd_data_unreg[55]),
        .Q(rd_data[55]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[56] 
       (.C(rd_clk),
        .CE(ram_rd_en),
        .D(rd_data_unreg[56]),
        .Q(rd_data[56]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[57] 
       (.C(rd_clk),
        .CE(ram_rd_en),
        .D(rd_data_unreg[57]),
        .Q(rd_data[57]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[58] 
       (.C(rd_clk),
        .CE(ram_rd_en),
        .D(rd_data_unreg[58]),
        .Q(rd_data[58]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[59] 
       (.C(rd_clk),
        .CE(ram_rd_en),
        .D(rd_data_unreg[59]),
        .Q(rd_data[59]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[5] 
       (.C(rd_clk),
        .CE(ram_rd_en),
        .D(rd_data_unreg[5]),
        .Q(rd_data[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[60] 
       (.C(rd_clk),
        .CE(ram_rd_en),
        .D(rd_data_unreg[60]),
        .Q(rd_data[60]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[61] 
       (.C(rd_clk),
        .CE(ram_rd_en),
        .D(rd_data_unreg[61]),
        .Q(rd_data[61]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[62] 
       (.C(rd_clk),
        .CE(ram_rd_en),
        .D(rd_data_unreg[62]),
        .Q(rd_data[62]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[63] 
       (.C(rd_clk),
        .CE(ram_rd_en),
        .D(rd_data_unreg[63]),
        .Q(rd_data[63]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[64] 
       (.C(rd_clk),
        .CE(ram_rd_en),
        .D(rd_data_unreg[64]),
        .Q(rd_data[64]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[65] 
       (.C(rd_clk),
        .CE(ram_rd_en),
        .D(rd_data_unreg[65]),
        .Q(rd_data[65]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[6] 
       (.C(rd_clk),
        .CE(ram_rd_en),
        .D(rd_data_unreg[6]),
        .Q(rd_data[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[7] 
       (.C(rd_clk),
        .CE(ram_rd_en),
        .D(rd_data_unreg[7]),
        .Q(rd_data[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[8] 
       (.C(rd_clk),
        .CE(ram_rd_en),
        .D(rd_data_unreg[8]),
        .Q(rd_data[8]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[9] 
       (.C(rd_clk),
        .CE(ram_rd_en),
        .D(rd_data_unreg[9]),
        .Q(rd_data[9]),
        .R(1'b0));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "2112" *) 
  (* RTL_RAM_NAME = "dp_ram_i/ten_gig_disti_ram" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "31" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "0" *) 
  (* ram_slice_end = "5" *) 
  RAM32M ten_gig_disti_ram_reg_0_31_0_5
       (.ADDRA(ADDRA),
        .ADDRB(ADDRA),
        .ADDRC(ADDRA),
        .ADDRD(ADDRD),
        .DIA(wr_data[1:0]),
        .DIB(wr_data[3:2]),
        .DIC(wr_data[5:4]),
        .DID({1'b0,1'b0}),
        .DOA(rd_data_unreg[1:0]),
        .DOB(rd_data_unreg[3:2]),
        .DOC(rd_data_unreg[5:4]),
        .DOD(NLW_ten_gig_disti_ram_reg_0_31_0_5_DOD_UNCONNECTED[1:0]),
        .WCLK(wr_clk),
        .WE(E));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "2112" *) 
  (* RTL_RAM_NAME = "dp_ram_i/ten_gig_disti_ram" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "31" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "12" *) 
  (* ram_slice_end = "17" *) 
  RAM32M ten_gig_disti_ram_reg_0_31_12_17
       (.ADDRA(ADDRA),
        .ADDRB(ADDRA),
        .ADDRC(ADDRA),
        .ADDRD(ADDRD),
        .DIA(wr_data[13:12]),
        .DIB(wr_data[15:14]),
        .DIC(wr_data[17:16]),
        .DID({1'b0,1'b0}),
        .DOA(rd_data_unreg[13:12]),
        .DOB(rd_data_unreg[15:14]),
        .DOC(rd_data_unreg[17:16]),
        .DOD(NLW_ten_gig_disti_ram_reg_0_31_12_17_DOD_UNCONNECTED[1:0]),
        .WCLK(wr_clk),
        .WE(E));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "2112" *) 
  (* RTL_RAM_NAME = "dp_ram_i/ten_gig_disti_ram" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "31" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "18" *) 
  (* ram_slice_end = "23" *) 
  RAM32M ten_gig_disti_ram_reg_0_31_18_23
       (.ADDRA(ADDRA),
        .ADDRB(ADDRA),
        .ADDRC(ADDRA),
        .ADDRD(ADDRD),
        .DIA(wr_data[19:18]),
        .DIB(wr_data[21:20]),
        .DIC(wr_data[23:22]),
        .DID({1'b0,1'b0}),
        .DOA(rd_data_unreg[19:18]),
        .DOB(rd_data_unreg[21:20]),
        .DOC(rd_data_unreg[23:22]),
        .DOD(NLW_ten_gig_disti_ram_reg_0_31_18_23_DOD_UNCONNECTED[1:0]),
        .WCLK(wr_clk),
        .WE(E));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "2112" *) 
  (* RTL_RAM_NAME = "dp_ram_i/ten_gig_disti_ram" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "31" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "24" *) 
  (* ram_slice_end = "29" *) 
  RAM32M ten_gig_disti_ram_reg_0_31_24_29
       (.ADDRA(ADDRA),
        .ADDRB(ADDRA),
        .ADDRC(ADDRA),
        .ADDRD(ADDRD),
        .DIA(wr_data[25:24]),
        .DIB(wr_data[27:26]),
        .DIC(wr_data[29:28]),
        .DID({1'b0,1'b0}),
        .DOA(rd_data_unreg[25:24]),
        .DOB(rd_data_unreg[27:26]),
        .DOC(rd_data_unreg[29:28]),
        .DOD(NLW_ten_gig_disti_ram_reg_0_31_24_29_DOD_UNCONNECTED[1:0]),
        .WCLK(wr_clk),
        .WE(E));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "2112" *) 
  (* RTL_RAM_NAME = "dp_ram_i/ten_gig_disti_ram" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "31" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "30" *) 
  (* ram_slice_end = "35" *) 
  RAM32M ten_gig_disti_ram_reg_0_31_30_35
       (.ADDRA(ADDRA),
        .ADDRB(ADDRA),
        .ADDRC(ADDRA),
        .ADDRD(ADDRD),
        .DIA(wr_data[31:30]),
        .DIB(wr_data[33:32]),
        .DIC(wr_data[35:34]),
        .DID({1'b0,1'b0}),
        .DOA(rd_data_unreg[31:30]),
        .DOB(rd_data_unreg[33:32]),
        .DOC(rd_data_unreg[35:34]),
        .DOD(NLW_ten_gig_disti_ram_reg_0_31_30_35_DOD_UNCONNECTED[1:0]),
        .WCLK(wr_clk),
        .WE(E));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "2112" *) 
  (* RTL_RAM_NAME = "dp_ram_i/ten_gig_disti_ram" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "31" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "36" *) 
  (* ram_slice_end = "41" *) 
  RAM32M ten_gig_disti_ram_reg_0_31_36_41
       (.ADDRA(ADDRA),
        .ADDRB(ADDRA),
        .ADDRC(ADDRA),
        .ADDRD(ADDRD),
        .DIA(wr_data[37:36]),
        .DIB(wr_data[39:38]),
        .DIC(wr_data[41:40]),
        .DID({1'b0,1'b0}),
        .DOA(rd_data_unreg[37:36]),
        .DOB(rd_data_unreg[39:38]),
        .DOC(rd_data_unreg[41:40]),
        .DOD(NLW_ten_gig_disti_ram_reg_0_31_36_41_DOD_UNCONNECTED[1:0]),
        .WCLK(wr_clk),
        .WE(E));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "2112" *) 
  (* RTL_RAM_NAME = "dp_ram_i/ten_gig_disti_ram" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "31" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "42" *) 
  (* ram_slice_end = "47" *) 
  RAM32M ten_gig_disti_ram_reg_0_31_42_47
       (.ADDRA(ADDRA),
        .ADDRB(ADDRA),
        .ADDRC(ADDRA),
        .ADDRD(ADDRD),
        .DIA(wr_data[43:42]),
        .DIB(wr_data[45:44]),
        .DIC(wr_data[47:46]),
        .DID({1'b0,1'b0}),
        .DOA(rd_data_unreg[43:42]),
        .DOB(rd_data_unreg[45:44]),
        .DOC(rd_data_unreg[47:46]),
        .DOD(NLW_ten_gig_disti_ram_reg_0_31_42_47_DOD_UNCONNECTED[1:0]),
        .WCLK(wr_clk),
        .WE(E));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "2112" *) 
  (* RTL_RAM_NAME = "dp_ram_i/ten_gig_disti_ram" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "31" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "48" *) 
  (* ram_slice_end = "53" *) 
  RAM32M ten_gig_disti_ram_reg_0_31_48_53
       (.ADDRA(ADDRA),
        .ADDRB(ADDRA),
        .ADDRC(ADDRA),
        .ADDRD(ADDRD),
        .DIA(wr_data[49:48]),
        .DIB(wr_data[51:50]),
        .DIC(wr_data[53:52]),
        .DID({1'b0,1'b0}),
        .DOA(rd_data_unreg[49:48]),
        .DOB(rd_data_unreg[51:50]),
        .DOC(rd_data_unreg[53:52]),
        .DOD(NLW_ten_gig_disti_ram_reg_0_31_48_53_DOD_UNCONNECTED[1:0]),
        .WCLK(wr_clk),
        .WE(E));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "2112" *) 
  (* RTL_RAM_NAME = "dp_ram_i/ten_gig_disti_ram" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "31" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "54" *) 
  (* ram_slice_end = "59" *) 
  RAM32M ten_gig_disti_ram_reg_0_31_54_59
       (.ADDRA(ADDRA),
        .ADDRB(ADDRA),
        .ADDRC(ADDRA),
        .ADDRD(ADDRD),
        .DIA(wr_data[55:54]),
        .DIB(wr_data[57:56]),
        .DIC(wr_data[59:58]),
        .DID({1'b0,1'b0}),
        .DOA(rd_data_unreg[55:54]),
        .DOB(rd_data_unreg[57:56]),
        .DOC(rd_data_unreg[59:58]),
        .DOD(NLW_ten_gig_disti_ram_reg_0_31_54_59_DOD_UNCONNECTED[1:0]),
        .WCLK(wr_clk),
        .WE(E));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "2112" *) 
  (* RTL_RAM_NAME = "dp_ram_i/ten_gig_disti_ram" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "31" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "60" *) 
  (* ram_slice_end = "65" *) 
  RAM32M ten_gig_disti_ram_reg_0_31_60_65
       (.ADDRA(ADDRA),
        .ADDRB(ADDRA),
        .ADDRC(ADDRA),
        .ADDRD(ADDRD),
        .DIA(wr_data[61:60]),
        .DIB(wr_data[63:62]),
        .DIC(wr_data[65:64]),
        .DID({1'b0,1'b0}),
        .DOA(rd_data_unreg[61:60]),
        .DOB(rd_data_unreg[63:62]),
        .DOC(rd_data_unreg[65:64]),
        .DOD(NLW_ten_gig_disti_ram_reg_0_31_60_65_DOD_UNCONNECTED[1:0]),
        .WCLK(wr_clk),
        .WE(E));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "2112" *) 
  (* RTL_RAM_NAME = "dp_ram_i/ten_gig_disti_ram" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "31" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "6" *) 
  (* ram_slice_end = "11" *) 
  RAM32M ten_gig_disti_ram_reg_0_31_6_11
       (.ADDRA(ADDRA),
        .ADDRB(ADDRA),
        .ADDRC(ADDRA),
        .ADDRD(ADDRD),
        .DIA(wr_data[7:6]),
        .DIB(wr_data[9:8]),
        .DIC(wr_data[11:10]),
        .DID({1'b0,1'b0}),
        .DOA(rd_data_unreg[7:6]),
        .DOB(rd_data_unreg[9:8]),
        .DOC(rd_data_unreg[11:10]),
        .DOD(NLW_ten_gig_disti_ram_reg_0_31_6_11_DOD_UNCONNECTED[1:0]),
        .WCLK(wr_clk),
        .WE(E));
  LUT3 #(
    .INIT(8'h20)) 
    \wr_addr[4]_i_1 
       (.I0(wr_en),
        .I1(\wr_addr_reg[4] ),
        .I2(wr_clk_en),
        .O(E));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_15_dp_ram" *) 
module ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_dp_ram__parameterized0
   (E,
    rd_data,
    wr_en,
    \wr_addr_reg[4] ,
    wr_clk_en,
    rd_en,
    \rd_data_reg[0]_0 ,
    rd_clk_en,
    wr_clk,
    wr_data,
    ADDRA,
    ADDRD,
    rd_clk);
  output [0:0]E;
  output [73:0]rd_data;
  input wr_en;
  input \wr_addr_reg[4] ;
  input wr_clk_en;
  input rd_en;
  input \rd_data_reg[0]_0 ;
  input rd_clk_en;
  input wr_clk;
  input [73:0]wr_data;
  input [4:0]ADDRA;
  input [4:0]ADDRD;
  input rd_clk;

  wire [4:0]ADDRA;
  wire [4:0]ADDRD;
  wire [0:0]E;
  wire ram_rd_en;
  wire rd_clk;
  wire rd_clk_en;
  wire [73:0]rd_data;
  wire \rd_data_reg[0]_0 ;
  wire [73:0]rd_data_unreg;
  wire rd_en;
  wire \wr_addr_reg[4] ;
  wire wr_clk;
  wire wr_clk_en;
  wire [73:0]wr_data;
  wire wr_en;
  wire [1:0]NLW_ten_gig_disti_ram_reg_0_31_0_5_DOD_UNCONNECTED;
  wire [1:0]NLW_ten_gig_disti_ram_reg_0_31_12_17_DOD_UNCONNECTED;
  wire [1:0]NLW_ten_gig_disti_ram_reg_0_31_18_23_DOD_UNCONNECTED;
  wire [1:0]NLW_ten_gig_disti_ram_reg_0_31_24_29_DOD_UNCONNECTED;
  wire [1:0]NLW_ten_gig_disti_ram_reg_0_31_30_35_DOD_UNCONNECTED;
  wire [1:0]NLW_ten_gig_disti_ram_reg_0_31_36_41_DOD_UNCONNECTED;
  wire [1:0]NLW_ten_gig_disti_ram_reg_0_31_42_47_DOD_UNCONNECTED;
  wire [1:0]NLW_ten_gig_disti_ram_reg_0_31_48_53_DOD_UNCONNECTED;
  wire [1:0]NLW_ten_gig_disti_ram_reg_0_31_54_59_DOD_UNCONNECTED;
  wire [1:0]NLW_ten_gig_disti_ram_reg_0_31_60_65_DOD_UNCONNECTED;
  wire [1:0]NLW_ten_gig_disti_ram_reg_0_31_66_71_DOD_UNCONNECTED;
  wire [1:0]NLW_ten_gig_disti_ram_reg_0_31_6_11_DOD_UNCONNECTED;
  wire [1:0]NLW_ten_gig_disti_ram_reg_0_31_72_73_DOB_UNCONNECTED;
  wire [1:0]NLW_ten_gig_disti_ram_reg_0_31_72_73_DOC_UNCONNECTED;
  wire [1:0]NLW_ten_gig_disti_ram_reg_0_31_72_73_DOD_UNCONNECTED;

  LUT3 #(
    .INIT(8'h20)) 
    \rd_data[73]_i_1 
       (.I0(rd_en),
        .I1(\rd_data_reg[0]_0 ),
        .I2(rd_clk_en),
        .O(ram_rd_en));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[0] 
       (.C(rd_clk),
        .CE(ram_rd_en),
        .D(rd_data_unreg[0]),
        .Q(rd_data[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[10] 
       (.C(rd_clk),
        .CE(ram_rd_en),
        .D(rd_data_unreg[10]),
        .Q(rd_data[10]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[11] 
       (.C(rd_clk),
        .CE(ram_rd_en),
        .D(rd_data_unreg[11]),
        .Q(rd_data[11]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[12] 
       (.C(rd_clk),
        .CE(ram_rd_en),
        .D(rd_data_unreg[12]),
        .Q(rd_data[12]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[13] 
       (.C(rd_clk),
        .CE(ram_rd_en),
        .D(rd_data_unreg[13]),
        .Q(rd_data[13]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[14] 
       (.C(rd_clk),
        .CE(ram_rd_en),
        .D(rd_data_unreg[14]),
        .Q(rd_data[14]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[15] 
       (.C(rd_clk),
        .CE(ram_rd_en),
        .D(rd_data_unreg[15]),
        .Q(rd_data[15]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[16] 
       (.C(rd_clk),
        .CE(ram_rd_en),
        .D(rd_data_unreg[16]),
        .Q(rd_data[16]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[17] 
       (.C(rd_clk),
        .CE(ram_rd_en),
        .D(rd_data_unreg[17]),
        .Q(rd_data[17]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[18] 
       (.C(rd_clk),
        .CE(ram_rd_en),
        .D(rd_data_unreg[18]),
        .Q(rd_data[18]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[19] 
       (.C(rd_clk),
        .CE(ram_rd_en),
        .D(rd_data_unreg[19]),
        .Q(rd_data[19]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[1] 
       (.C(rd_clk),
        .CE(ram_rd_en),
        .D(rd_data_unreg[1]),
        .Q(rd_data[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[20] 
       (.C(rd_clk),
        .CE(ram_rd_en),
        .D(rd_data_unreg[20]),
        .Q(rd_data[20]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[21] 
       (.C(rd_clk),
        .CE(ram_rd_en),
        .D(rd_data_unreg[21]),
        .Q(rd_data[21]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[22] 
       (.C(rd_clk),
        .CE(ram_rd_en),
        .D(rd_data_unreg[22]),
        .Q(rd_data[22]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[23] 
       (.C(rd_clk),
        .CE(ram_rd_en),
        .D(rd_data_unreg[23]),
        .Q(rd_data[23]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[24] 
       (.C(rd_clk),
        .CE(ram_rd_en),
        .D(rd_data_unreg[24]),
        .Q(rd_data[24]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[25] 
       (.C(rd_clk),
        .CE(ram_rd_en),
        .D(rd_data_unreg[25]),
        .Q(rd_data[25]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[26] 
       (.C(rd_clk),
        .CE(ram_rd_en),
        .D(rd_data_unreg[26]),
        .Q(rd_data[26]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[27] 
       (.C(rd_clk),
        .CE(ram_rd_en),
        .D(rd_data_unreg[27]),
        .Q(rd_data[27]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[28] 
       (.C(rd_clk),
        .CE(ram_rd_en),
        .D(rd_data_unreg[28]),
        .Q(rd_data[28]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[29] 
       (.C(rd_clk),
        .CE(ram_rd_en),
        .D(rd_data_unreg[29]),
        .Q(rd_data[29]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[2] 
       (.C(rd_clk),
        .CE(ram_rd_en),
        .D(rd_data_unreg[2]),
        .Q(rd_data[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[30] 
       (.C(rd_clk),
        .CE(ram_rd_en),
        .D(rd_data_unreg[30]),
        .Q(rd_data[30]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[31] 
       (.C(rd_clk),
        .CE(ram_rd_en),
        .D(rd_data_unreg[31]),
        .Q(rd_data[31]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[32] 
       (.C(rd_clk),
        .CE(ram_rd_en),
        .D(rd_data_unreg[32]),
        .Q(rd_data[32]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[33] 
       (.C(rd_clk),
        .CE(ram_rd_en),
        .D(rd_data_unreg[33]),
        .Q(rd_data[33]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[34] 
       (.C(rd_clk),
        .CE(ram_rd_en),
        .D(rd_data_unreg[34]),
        .Q(rd_data[34]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[35] 
       (.C(rd_clk),
        .CE(ram_rd_en),
        .D(rd_data_unreg[35]),
        .Q(rd_data[35]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[36] 
       (.C(rd_clk),
        .CE(ram_rd_en),
        .D(rd_data_unreg[36]),
        .Q(rd_data[36]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[37] 
       (.C(rd_clk),
        .CE(ram_rd_en),
        .D(rd_data_unreg[37]),
        .Q(rd_data[37]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[38] 
       (.C(rd_clk),
        .CE(ram_rd_en),
        .D(rd_data_unreg[38]),
        .Q(rd_data[38]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[39] 
       (.C(rd_clk),
        .CE(ram_rd_en),
        .D(rd_data_unreg[39]),
        .Q(rd_data[39]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[3] 
       (.C(rd_clk),
        .CE(ram_rd_en),
        .D(rd_data_unreg[3]),
        .Q(rd_data[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[40] 
       (.C(rd_clk),
        .CE(ram_rd_en),
        .D(rd_data_unreg[40]),
        .Q(rd_data[40]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[41] 
       (.C(rd_clk),
        .CE(ram_rd_en),
        .D(rd_data_unreg[41]),
        .Q(rd_data[41]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[42] 
       (.C(rd_clk),
        .CE(ram_rd_en),
        .D(rd_data_unreg[42]),
        .Q(rd_data[42]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[43] 
       (.C(rd_clk),
        .CE(ram_rd_en),
        .D(rd_data_unreg[43]),
        .Q(rd_data[43]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[44] 
       (.C(rd_clk),
        .CE(ram_rd_en),
        .D(rd_data_unreg[44]),
        .Q(rd_data[44]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[45] 
       (.C(rd_clk),
        .CE(ram_rd_en),
        .D(rd_data_unreg[45]),
        .Q(rd_data[45]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[46] 
       (.C(rd_clk),
        .CE(ram_rd_en),
        .D(rd_data_unreg[46]),
        .Q(rd_data[46]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[47] 
       (.C(rd_clk),
        .CE(ram_rd_en),
        .D(rd_data_unreg[47]),
        .Q(rd_data[47]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[48] 
       (.C(rd_clk),
        .CE(ram_rd_en),
        .D(rd_data_unreg[48]),
        .Q(rd_data[48]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[49] 
       (.C(rd_clk),
        .CE(ram_rd_en),
        .D(rd_data_unreg[49]),
        .Q(rd_data[49]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[4] 
       (.C(rd_clk),
        .CE(ram_rd_en),
        .D(rd_data_unreg[4]),
        .Q(rd_data[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[50] 
       (.C(rd_clk),
        .CE(ram_rd_en),
        .D(rd_data_unreg[50]),
        .Q(rd_data[50]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[51] 
       (.C(rd_clk),
        .CE(ram_rd_en),
        .D(rd_data_unreg[51]),
        .Q(rd_data[51]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[52] 
       (.C(rd_clk),
        .CE(ram_rd_en),
        .D(rd_data_unreg[52]),
        .Q(rd_data[52]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[53] 
       (.C(rd_clk),
        .CE(ram_rd_en),
        .D(rd_data_unreg[53]),
        .Q(rd_data[53]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[54] 
       (.C(rd_clk),
        .CE(ram_rd_en),
        .D(rd_data_unreg[54]),
        .Q(rd_data[54]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[55] 
       (.C(rd_clk),
        .CE(ram_rd_en),
        .D(rd_data_unreg[55]),
        .Q(rd_data[55]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[56] 
       (.C(rd_clk),
        .CE(ram_rd_en),
        .D(rd_data_unreg[56]),
        .Q(rd_data[56]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[57] 
       (.C(rd_clk),
        .CE(ram_rd_en),
        .D(rd_data_unreg[57]),
        .Q(rd_data[57]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[58] 
       (.C(rd_clk),
        .CE(ram_rd_en),
        .D(rd_data_unreg[58]),
        .Q(rd_data[58]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[59] 
       (.C(rd_clk),
        .CE(ram_rd_en),
        .D(rd_data_unreg[59]),
        .Q(rd_data[59]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[5] 
       (.C(rd_clk),
        .CE(ram_rd_en),
        .D(rd_data_unreg[5]),
        .Q(rd_data[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[60] 
       (.C(rd_clk),
        .CE(ram_rd_en),
        .D(rd_data_unreg[60]),
        .Q(rd_data[60]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[61] 
       (.C(rd_clk),
        .CE(ram_rd_en),
        .D(rd_data_unreg[61]),
        .Q(rd_data[61]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[62] 
       (.C(rd_clk),
        .CE(ram_rd_en),
        .D(rd_data_unreg[62]),
        .Q(rd_data[62]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[63] 
       (.C(rd_clk),
        .CE(ram_rd_en),
        .D(rd_data_unreg[63]),
        .Q(rd_data[63]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[64] 
       (.C(rd_clk),
        .CE(ram_rd_en),
        .D(rd_data_unreg[64]),
        .Q(rd_data[64]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[65] 
       (.C(rd_clk),
        .CE(ram_rd_en),
        .D(rd_data_unreg[65]),
        .Q(rd_data[65]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[66] 
       (.C(rd_clk),
        .CE(ram_rd_en),
        .D(rd_data_unreg[66]),
        .Q(rd_data[66]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[67] 
       (.C(rd_clk),
        .CE(ram_rd_en),
        .D(rd_data_unreg[67]),
        .Q(rd_data[67]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[68] 
       (.C(rd_clk),
        .CE(ram_rd_en),
        .D(rd_data_unreg[68]),
        .Q(rd_data[68]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[69] 
       (.C(rd_clk),
        .CE(ram_rd_en),
        .D(rd_data_unreg[69]),
        .Q(rd_data[69]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[6] 
       (.C(rd_clk),
        .CE(ram_rd_en),
        .D(rd_data_unreg[6]),
        .Q(rd_data[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[70] 
       (.C(rd_clk),
        .CE(ram_rd_en),
        .D(rd_data_unreg[70]),
        .Q(rd_data[70]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[71] 
       (.C(rd_clk),
        .CE(ram_rd_en),
        .D(rd_data_unreg[71]),
        .Q(rd_data[71]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[72] 
       (.C(rd_clk),
        .CE(ram_rd_en),
        .D(rd_data_unreg[72]),
        .Q(rd_data[72]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[73] 
       (.C(rd_clk),
        .CE(ram_rd_en),
        .D(rd_data_unreg[73]),
        .Q(rd_data[73]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[7] 
       (.C(rd_clk),
        .CE(ram_rd_en),
        .D(rd_data_unreg[7]),
        .Q(rd_data[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[8] 
       (.C(rd_clk),
        .CE(ram_rd_en),
        .D(rd_data_unreg[8]),
        .Q(rd_data[8]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[9] 
       (.C(rd_clk),
        .CE(ram_rd_en),
        .D(rd_data_unreg[9]),
        .Q(rd_data[9]),
        .R(1'b0));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "2368" *) 
  (* RTL_RAM_NAME = "dp_ram_i/ten_gig_disti_ram" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "31" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "0" *) 
  (* ram_slice_end = "5" *) 
  RAM32M ten_gig_disti_ram_reg_0_31_0_5
       (.ADDRA(ADDRA),
        .ADDRB(ADDRA),
        .ADDRC(ADDRA),
        .ADDRD(ADDRD),
        .DIA(wr_data[1:0]),
        .DIB(wr_data[3:2]),
        .DIC(wr_data[5:4]),
        .DID({1'b0,1'b0}),
        .DOA(rd_data_unreg[1:0]),
        .DOB(rd_data_unreg[3:2]),
        .DOC(rd_data_unreg[5:4]),
        .DOD(NLW_ten_gig_disti_ram_reg_0_31_0_5_DOD_UNCONNECTED[1:0]),
        .WCLK(wr_clk),
        .WE(E));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "2368" *) 
  (* RTL_RAM_NAME = "dp_ram_i/ten_gig_disti_ram" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "31" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "12" *) 
  (* ram_slice_end = "17" *) 
  RAM32M ten_gig_disti_ram_reg_0_31_12_17
       (.ADDRA(ADDRA),
        .ADDRB(ADDRA),
        .ADDRC(ADDRA),
        .ADDRD(ADDRD),
        .DIA(wr_data[13:12]),
        .DIB(wr_data[15:14]),
        .DIC(wr_data[17:16]),
        .DID({1'b0,1'b0}),
        .DOA(rd_data_unreg[13:12]),
        .DOB(rd_data_unreg[15:14]),
        .DOC(rd_data_unreg[17:16]),
        .DOD(NLW_ten_gig_disti_ram_reg_0_31_12_17_DOD_UNCONNECTED[1:0]),
        .WCLK(wr_clk),
        .WE(E));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "2368" *) 
  (* RTL_RAM_NAME = "dp_ram_i/ten_gig_disti_ram" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "31" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "18" *) 
  (* ram_slice_end = "23" *) 
  RAM32M ten_gig_disti_ram_reg_0_31_18_23
       (.ADDRA(ADDRA),
        .ADDRB(ADDRA),
        .ADDRC(ADDRA),
        .ADDRD(ADDRD),
        .DIA(wr_data[19:18]),
        .DIB(wr_data[21:20]),
        .DIC(wr_data[23:22]),
        .DID({1'b0,1'b0}),
        .DOA(rd_data_unreg[19:18]),
        .DOB(rd_data_unreg[21:20]),
        .DOC(rd_data_unreg[23:22]),
        .DOD(NLW_ten_gig_disti_ram_reg_0_31_18_23_DOD_UNCONNECTED[1:0]),
        .WCLK(wr_clk),
        .WE(E));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "2368" *) 
  (* RTL_RAM_NAME = "dp_ram_i/ten_gig_disti_ram" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "31" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "24" *) 
  (* ram_slice_end = "29" *) 
  RAM32M ten_gig_disti_ram_reg_0_31_24_29
       (.ADDRA(ADDRA),
        .ADDRB(ADDRA),
        .ADDRC(ADDRA),
        .ADDRD(ADDRD),
        .DIA(wr_data[25:24]),
        .DIB(wr_data[27:26]),
        .DIC(wr_data[29:28]),
        .DID({1'b0,1'b0}),
        .DOA(rd_data_unreg[25:24]),
        .DOB(rd_data_unreg[27:26]),
        .DOC(rd_data_unreg[29:28]),
        .DOD(NLW_ten_gig_disti_ram_reg_0_31_24_29_DOD_UNCONNECTED[1:0]),
        .WCLK(wr_clk),
        .WE(E));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "2368" *) 
  (* RTL_RAM_NAME = "dp_ram_i/ten_gig_disti_ram" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "31" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "30" *) 
  (* ram_slice_end = "35" *) 
  RAM32M ten_gig_disti_ram_reg_0_31_30_35
       (.ADDRA(ADDRA),
        .ADDRB(ADDRA),
        .ADDRC(ADDRA),
        .ADDRD(ADDRD),
        .DIA(wr_data[31:30]),
        .DIB(wr_data[33:32]),
        .DIC(wr_data[35:34]),
        .DID({1'b0,1'b0}),
        .DOA(rd_data_unreg[31:30]),
        .DOB(rd_data_unreg[33:32]),
        .DOC(rd_data_unreg[35:34]),
        .DOD(NLW_ten_gig_disti_ram_reg_0_31_30_35_DOD_UNCONNECTED[1:0]),
        .WCLK(wr_clk),
        .WE(E));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "2368" *) 
  (* RTL_RAM_NAME = "dp_ram_i/ten_gig_disti_ram" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "31" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "36" *) 
  (* ram_slice_end = "41" *) 
  RAM32M ten_gig_disti_ram_reg_0_31_36_41
       (.ADDRA(ADDRA),
        .ADDRB(ADDRA),
        .ADDRC(ADDRA),
        .ADDRD(ADDRD),
        .DIA(wr_data[37:36]),
        .DIB(wr_data[39:38]),
        .DIC(wr_data[41:40]),
        .DID({1'b0,1'b0}),
        .DOA(rd_data_unreg[37:36]),
        .DOB(rd_data_unreg[39:38]),
        .DOC(rd_data_unreg[41:40]),
        .DOD(NLW_ten_gig_disti_ram_reg_0_31_36_41_DOD_UNCONNECTED[1:0]),
        .WCLK(wr_clk),
        .WE(E));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "2368" *) 
  (* RTL_RAM_NAME = "dp_ram_i/ten_gig_disti_ram" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "31" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "42" *) 
  (* ram_slice_end = "47" *) 
  RAM32M ten_gig_disti_ram_reg_0_31_42_47
       (.ADDRA(ADDRA),
        .ADDRB(ADDRA),
        .ADDRC(ADDRA),
        .ADDRD(ADDRD),
        .DIA(wr_data[43:42]),
        .DIB(wr_data[45:44]),
        .DIC(wr_data[47:46]),
        .DID({1'b0,1'b0}),
        .DOA(rd_data_unreg[43:42]),
        .DOB(rd_data_unreg[45:44]),
        .DOC(rd_data_unreg[47:46]),
        .DOD(NLW_ten_gig_disti_ram_reg_0_31_42_47_DOD_UNCONNECTED[1:0]),
        .WCLK(wr_clk),
        .WE(E));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "2368" *) 
  (* RTL_RAM_NAME = "dp_ram_i/ten_gig_disti_ram" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "31" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "48" *) 
  (* ram_slice_end = "53" *) 
  RAM32M ten_gig_disti_ram_reg_0_31_48_53
       (.ADDRA(ADDRA),
        .ADDRB(ADDRA),
        .ADDRC(ADDRA),
        .ADDRD(ADDRD),
        .DIA(wr_data[49:48]),
        .DIB(wr_data[51:50]),
        .DIC(wr_data[53:52]),
        .DID({1'b0,1'b0}),
        .DOA(rd_data_unreg[49:48]),
        .DOB(rd_data_unreg[51:50]),
        .DOC(rd_data_unreg[53:52]),
        .DOD(NLW_ten_gig_disti_ram_reg_0_31_48_53_DOD_UNCONNECTED[1:0]),
        .WCLK(wr_clk),
        .WE(E));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "2368" *) 
  (* RTL_RAM_NAME = "dp_ram_i/ten_gig_disti_ram" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "31" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "54" *) 
  (* ram_slice_end = "59" *) 
  RAM32M ten_gig_disti_ram_reg_0_31_54_59
       (.ADDRA(ADDRA),
        .ADDRB(ADDRA),
        .ADDRC(ADDRA),
        .ADDRD(ADDRD),
        .DIA(wr_data[55:54]),
        .DIB(wr_data[57:56]),
        .DIC(wr_data[59:58]),
        .DID({1'b0,1'b0}),
        .DOA(rd_data_unreg[55:54]),
        .DOB(rd_data_unreg[57:56]),
        .DOC(rd_data_unreg[59:58]),
        .DOD(NLW_ten_gig_disti_ram_reg_0_31_54_59_DOD_UNCONNECTED[1:0]),
        .WCLK(wr_clk),
        .WE(E));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "2368" *) 
  (* RTL_RAM_NAME = "dp_ram_i/ten_gig_disti_ram" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "31" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "60" *) 
  (* ram_slice_end = "65" *) 
  RAM32M ten_gig_disti_ram_reg_0_31_60_65
       (.ADDRA(ADDRA),
        .ADDRB(ADDRA),
        .ADDRC(ADDRA),
        .ADDRD(ADDRD),
        .DIA(wr_data[61:60]),
        .DIB(wr_data[63:62]),
        .DIC(wr_data[65:64]),
        .DID({1'b0,1'b0}),
        .DOA(rd_data_unreg[61:60]),
        .DOB(rd_data_unreg[63:62]),
        .DOC(rd_data_unreg[65:64]),
        .DOD(NLW_ten_gig_disti_ram_reg_0_31_60_65_DOD_UNCONNECTED[1:0]),
        .WCLK(wr_clk),
        .WE(E));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "2368" *) 
  (* RTL_RAM_NAME = "dp_ram_i/ten_gig_disti_ram" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "31" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "66" *) 
  (* ram_slice_end = "71" *) 
  RAM32M ten_gig_disti_ram_reg_0_31_66_71
       (.ADDRA(ADDRA),
        .ADDRB(ADDRA),
        .ADDRC(ADDRA),
        .ADDRD(ADDRD),
        .DIA(wr_data[67:66]),
        .DIB(wr_data[69:68]),
        .DIC(wr_data[71:70]),
        .DID({1'b0,1'b0}),
        .DOA(rd_data_unreg[67:66]),
        .DOB(rd_data_unreg[69:68]),
        .DOC(rd_data_unreg[71:70]),
        .DOD(NLW_ten_gig_disti_ram_reg_0_31_66_71_DOD_UNCONNECTED[1:0]),
        .WCLK(wr_clk),
        .WE(E));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "2368" *) 
  (* RTL_RAM_NAME = "dp_ram_i/ten_gig_disti_ram" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "31" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "6" *) 
  (* ram_slice_end = "11" *) 
  RAM32M ten_gig_disti_ram_reg_0_31_6_11
       (.ADDRA(ADDRA),
        .ADDRB(ADDRA),
        .ADDRC(ADDRA),
        .ADDRD(ADDRD),
        .DIA(wr_data[7:6]),
        .DIB(wr_data[9:8]),
        .DIC(wr_data[11:10]),
        .DID({1'b0,1'b0}),
        .DOA(rd_data_unreg[7:6]),
        .DOB(rd_data_unreg[9:8]),
        .DOC(rd_data_unreg[11:10]),
        .DOD(NLW_ten_gig_disti_ram_reg_0_31_6_11_DOD_UNCONNECTED[1:0]),
        .WCLK(wr_clk),
        .WE(E));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "2368" *) 
  (* RTL_RAM_NAME = "dp_ram_i/ten_gig_disti_ram" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "31" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "72" *) 
  (* ram_slice_end = "73" *) 
  RAM32M ten_gig_disti_ram_reg_0_31_72_73
       (.ADDRA(ADDRA),
        .ADDRB(ADDRA),
        .ADDRC(ADDRA),
        .ADDRD(ADDRD),
        .DIA(wr_data[73:72]),
        .DIB({1'b0,1'b0}),
        .DIC({1'b0,1'b0}),
        .DID({1'b0,1'b0}),
        .DOA(rd_data_unreg[73:72]),
        .DOB(NLW_ten_gig_disti_ram_reg_0_31_72_73_DOB_UNCONNECTED[1:0]),
        .DOC(NLW_ten_gig_disti_ram_reg_0_31_72_73_DOC_UNCONNECTED[1:0]),
        .DOD(NLW_ten_gig_disti_ram_reg_0_31_72_73_DOD_UNCONNECTED[1:0]),
        .WCLK(wr_clk),
        .WE(E));
  LUT3 #(
    .INIT(8'h20)) 
    \wr_addr[4]_i_1 
       (.I0(wr_en),
        .I1(\wr_addr_reg[4] ),
        .I2(wr_clk_en),
        .O(E));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_15_drp_ipif" *) 
module ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_drp_ipif
   (in0,
    control_reg,
    drp_ack,
    drp_den,
    drp_di,
    drp_daddr,
    Q,
    drp_req,
    drp_dwe,
    dclk,
    mgmt_drp_cs,
    coreclk,
    drp_drdy,
    toggle_reg_reg,
    dclk_reset,
    drp_gnt,
    drp_drpdo,
    D);
  output in0;
  output control_reg;
  output drp_ack;
  output drp_den;
  output [15:0]drp_di;
  output [15:0]drp_daddr;
  output [15:0]Q;
  output drp_req;
  output drp_dwe;
  input dclk;
  input mgmt_drp_cs;
  input coreclk;
  input drp_drdy;
  input toggle_reg_reg;
  input dclk_reset;
  input drp_gnt;
  input [15:0]drp_drpdo;
  input [32:0]D;

  wire [32:0]D;
  wire \FSM_sequential_state[1]_i_1__0_n_0 ;
  wire [15:0]Q;
  wire control_reg;
  wire coreclk;
  wire dclk;
  wire dclk_reset;
  wire drp_ack;
  wire [15:0]drp_daddr;
  wire drp_den;
  wire [15:0]drp_di;
  wire drp_drdy;
  wire [15:0]drp_drpdo;
  wire drp_dwe;
  wire drp_gnt;
  wire drp_req;
  wire in0;
  wire [15:0]ipif_addr_dclk;
  wire ipif_addr_dclk0;
  wire ipif_cs_dclk_reg;
  wire [15:0]ipif_rddata_dclk;
  wire ipif_rddata_dclk0;
  wire ipif_rnw_dclk;
  wire [15:0]ipif_wrdata_dclk;
  wire mgmt_drp_cs;
  wire p_1_in;
  wire [1:0]state;
  wire synch_1_n_10;
  wire synch_1_n_11;
  wire synch_1_n_12;
  wire synch_1_n_13;
  wire synch_1_n_14;
  wire synch_1_n_15;
  wire synch_1_n_16;
  wire synch_1_n_17;
  wire synch_1_n_18;
  wire synch_1_n_19;
  wire synch_1_n_2;
  wire synch_1_n_20;
  wire synch_1_n_21;
  wire synch_1_n_22;
  wire synch_1_n_23;
  wire synch_1_n_24;
  wire synch_1_n_25;
  wire synch_1_n_26;
  wire synch_1_n_27;
  wire synch_1_n_28;
  wire synch_1_n_29;
  wire synch_1_n_3;
  wire synch_1_n_30;
  wire synch_1_n_31;
  wire synch_1_n_32;
  wire synch_1_n_33;
  wire synch_1_n_34;
  wire synch_1_n_35;
  wire synch_1_n_36;
  wire synch_1_n_37;
  wire synch_1_n_6;
  wire synch_1_n_7;
  wire synch_1_n_8;
  wire synch_1_n_9;
  wire toggle_reg_reg;

  (* SOFT_HLUTNM = "soft_lutpair55" *) 
  LUT5 #(
    .INIT(32'h000038F8)) 
    \FSM_sequential_state[1]_i_1__0 
       (.I0(drp_gnt),
        .I1(state[0]),
        .I2(state[1]),
        .I3(drp_drdy),
        .I4(dclk_reset),
        .O(\FSM_sequential_state[1]_i_1__0_n_0 ));
  (* FSM_ENCODED_STATES = "REQ:01,GNT:10,GNT1:11,IDLE:00" *) 
  FDRE \FSM_sequential_state_reg[0] 
       (.C(dclk),
        .CE(1'b1),
        .D(synch_1_n_3),
        .Q(state[0]),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "REQ:01,GNT:10,GNT1:11,IDLE:00" *) 
  FDRE \FSM_sequential_state_reg[1] 
       (.C(dclk),
        .CE(1'b1),
        .D(\FSM_sequential_state[1]_i_1__0_n_0 ),
        .Q(state[1]),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair65" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \drp_daddr[0]_INST_0 
       (.I0(state[1]),
        .I1(ipif_addr_dclk[0]),
        .O(drp_daddr[0]));
  (* SOFT_HLUTNM = "soft_lutpair70" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \drp_daddr[10]_INST_0 
       (.I0(state[1]),
        .I1(ipif_addr_dclk[10]),
        .O(drp_daddr[10]));
  (* SOFT_HLUTNM = "soft_lutpair70" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \drp_daddr[11]_INST_0 
       (.I0(state[1]),
        .I1(ipif_addr_dclk[11]),
        .O(drp_daddr[11]));
  (* SOFT_HLUTNM = "soft_lutpair71" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \drp_daddr[12]_INST_0 
       (.I0(state[1]),
        .I1(ipif_addr_dclk[12]),
        .O(drp_daddr[12]));
  (* SOFT_HLUTNM = "soft_lutpair71" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \drp_daddr[13]_INST_0 
       (.I0(state[1]),
        .I1(ipif_addr_dclk[13]),
        .O(drp_daddr[13]));
  (* SOFT_HLUTNM = "soft_lutpair72" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \drp_daddr[14]_INST_0 
       (.I0(state[1]),
        .I1(ipif_addr_dclk[14]),
        .O(drp_daddr[14]));
  (* SOFT_HLUTNM = "soft_lutpair72" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \drp_daddr[15]_INST_0 
       (.I0(state[1]),
        .I1(ipif_addr_dclk[15]),
        .O(drp_daddr[15]));
  (* SOFT_HLUTNM = "soft_lutpair65" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \drp_daddr[1]_INST_0 
       (.I0(state[1]),
        .I1(ipif_addr_dclk[1]),
        .O(drp_daddr[1]));
  (* SOFT_HLUTNM = "soft_lutpair66" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \drp_daddr[2]_INST_0 
       (.I0(state[1]),
        .I1(ipif_addr_dclk[2]),
        .O(drp_daddr[2]));
  (* SOFT_HLUTNM = "soft_lutpair66" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \drp_daddr[3]_INST_0 
       (.I0(state[1]),
        .I1(ipif_addr_dclk[3]),
        .O(drp_daddr[3]));
  (* SOFT_HLUTNM = "soft_lutpair67" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \drp_daddr[4]_INST_0 
       (.I0(state[1]),
        .I1(ipif_addr_dclk[4]),
        .O(drp_daddr[4]));
  (* SOFT_HLUTNM = "soft_lutpair67" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \drp_daddr[5]_INST_0 
       (.I0(state[1]),
        .I1(ipif_addr_dclk[5]),
        .O(drp_daddr[5]));
  (* SOFT_HLUTNM = "soft_lutpair68" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \drp_daddr[6]_INST_0 
       (.I0(state[1]),
        .I1(ipif_addr_dclk[6]),
        .O(drp_daddr[6]));
  (* SOFT_HLUTNM = "soft_lutpair68" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \drp_daddr[7]_INST_0 
       (.I0(state[1]),
        .I1(ipif_addr_dclk[7]),
        .O(drp_daddr[7]));
  (* SOFT_HLUTNM = "soft_lutpair69" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \drp_daddr[8]_INST_0 
       (.I0(state[1]),
        .I1(ipif_addr_dclk[8]),
        .O(drp_daddr[8]));
  (* SOFT_HLUTNM = "soft_lutpair69" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \drp_daddr[9]_INST_0 
       (.I0(state[1]),
        .I1(ipif_addr_dclk[9]),
        .O(drp_daddr[9]));
  (* SOFT_HLUTNM = "soft_lutpair55" *) 
  LUT2 #(
    .INIT(4'h2)) 
    drp_den_INST_0
       (.I0(state[1]),
        .I1(state[0]),
        .O(drp_den));
  (* SOFT_HLUTNM = "soft_lutpair57" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \drp_di[0]_INST_0 
       (.I0(state[1]),
        .I1(ipif_wrdata_dclk[0]),
        .O(drp_di[0]));
  (* SOFT_HLUTNM = "soft_lutpair62" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \drp_di[10]_INST_0 
       (.I0(state[1]),
        .I1(ipif_wrdata_dclk[10]),
        .O(drp_di[10]));
  (* SOFT_HLUTNM = "soft_lutpair62" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \drp_di[11]_INST_0 
       (.I0(state[1]),
        .I1(ipif_wrdata_dclk[11]),
        .O(drp_di[11]));
  (* SOFT_HLUTNM = "soft_lutpair63" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \drp_di[12]_INST_0 
       (.I0(state[1]),
        .I1(ipif_wrdata_dclk[12]),
        .O(drp_di[12]));
  (* SOFT_HLUTNM = "soft_lutpair63" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \drp_di[13]_INST_0 
       (.I0(state[1]),
        .I1(ipif_wrdata_dclk[13]),
        .O(drp_di[13]));
  (* SOFT_HLUTNM = "soft_lutpair64" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \drp_di[14]_INST_0 
       (.I0(state[1]),
        .I1(ipif_wrdata_dclk[14]),
        .O(drp_di[14]));
  (* SOFT_HLUTNM = "soft_lutpair64" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \drp_di[15]_INST_0 
       (.I0(state[1]),
        .I1(ipif_wrdata_dclk[15]),
        .O(drp_di[15]));
  (* SOFT_HLUTNM = "soft_lutpair57" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \drp_di[1]_INST_0 
       (.I0(state[1]),
        .I1(ipif_wrdata_dclk[1]),
        .O(drp_di[1]));
  (* SOFT_HLUTNM = "soft_lutpair58" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \drp_di[2]_INST_0 
       (.I0(state[1]),
        .I1(ipif_wrdata_dclk[2]),
        .O(drp_di[2]));
  (* SOFT_HLUTNM = "soft_lutpair58" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \drp_di[3]_INST_0 
       (.I0(state[1]),
        .I1(ipif_wrdata_dclk[3]),
        .O(drp_di[3]));
  (* SOFT_HLUTNM = "soft_lutpair59" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \drp_di[4]_INST_0 
       (.I0(state[1]),
        .I1(ipif_wrdata_dclk[4]),
        .O(drp_di[4]));
  (* SOFT_HLUTNM = "soft_lutpair59" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \drp_di[5]_INST_0 
       (.I0(state[1]),
        .I1(ipif_wrdata_dclk[5]),
        .O(drp_di[5]));
  (* SOFT_HLUTNM = "soft_lutpair60" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \drp_di[6]_INST_0 
       (.I0(state[1]),
        .I1(ipif_wrdata_dclk[6]),
        .O(drp_di[6]));
  (* SOFT_HLUTNM = "soft_lutpair60" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \drp_di[7]_INST_0 
       (.I0(state[1]),
        .I1(ipif_wrdata_dclk[7]),
        .O(drp_di[7]));
  (* SOFT_HLUTNM = "soft_lutpair61" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \drp_di[8]_INST_0 
       (.I0(state[1]),
        .I1(ipif_wrdata_dclk[8]),
        .O(drp_di[8]));
  (* SOFT_HLUTNM = "soft_lutpair61" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \drp_di[9]_INST_0 
       (.I0(state[1]),
        .I1(ipif_wrdata_dclk[9]),
        .O(drp_di[9]));
  (* SOFT_HLUTNM = "soft_lutpair56" *) 
  LUT3 #(
    .INIT(8'h04)) 
    drp_dwe_INST_0
       (.I0(state[0]),
        .I1(state[1]),
        .I2(ipif_rnw_dclk),
        .O(drp_dwe));
  (* SOFT_HLUTNM = "soft_lutpair56" *) 
  LUT2 #(
    .INIT(4'hE)) 
    drp_req_INST_0
       (.I0(state[0]),
        .I1(state[1]),
        .O(drp_req));
  FDRE #(
    .INIT(1'b0)) 
    \ipif_addr_dclk_reg[0] 
       (.C(dclk),
        .CE(ipif_addr_dclk0),
        .D(synch_1_n_21),
        .Q(ipif_addr_dclk[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ipif_addr_dclk_reg[10] 
       (.C(dclk),
        .CE(ipif_addr_dclk0),
        .D(synch_1_n_11),
        .Q(ipif_addr_dclk[10]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ipif_addr_dclk_reg[11] 
       (.C(dclk),
        .CE(ipif_addr_dclk0),
        .D(synch_1_n_10),
        .Q(ipif_addr_dclk[11]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ipif_addr_dclk_reg[12] 
       (.C(dclk),
        .CE(ipif_addr_dclk0),
        .D(synch_1_n_9),
        .Q(ipif_addr_dclk[12]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ipif_addr_dclk_reg[13] 
       (.C(dclk),
        .CE(ipif_addr_dclk0),
        .D(synch_1_n_8),
        .Q(ipif_addr_dclk[13]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ipif_addr_dclk_reg[14] 
       (.C(dclk),
        .CE(ipif_addr_dclk0),
        .D(synch_1_n_7),
        .Q(ipif_addr_dclk[14]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ipif_addr_dclk_reg[15] 
       (.C(dclk),
        .CE(ipif_addr_dclk0),
        .D(synch_1_n_6),
        .Q(ipif_addr_dclk[15]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ipif_addr_dclk_reg[1] 
       (.C(dclk),
        .CE(ipif_addr_dclk0),
        .D(synch_1_n_20),
        .Q(ipif_addr_dclk[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ipif_addr_dclk_reg[2] 
       (.C(dclk),
        .CE(ipif_addr_dclk0),
        .D(synch_1_n_19),
        .Q(ipif_addr_dclk[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ipif_addr_dclk_reg[3] 
       (.C(dclk),
        .CE(ipif_addr_dclk0),
        .D(synch_1_n_18),
        .Q(ipif_addr_dclk[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ipif_addr_dclk_reg[4] 
       (.C(dclk),
        .CE(ipif_addr_dclk0),
        .D(synch_1_n_17),
        .Q(ipif_addr_dclk[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ipif_addr_dclk_reg[5] 
       (.C(dclk),
        .CE(ipif_addr_dclk0),
        .D(synch_1_n_16),
        .Q(ipif_addr_dclk[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ipif_addr_dclk_reg[6] 
       (.C(dclk),
        .CE(ipif_addr_dclk0),
        .D(synch_1_n_15),
        .Q(ipif_addr_dclk[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ipif_addr_dclk_reg[7] 
       (.C(dclk),
        .CE(ipif_addr_dclk0),
        .D(synch_1_n_14),
        .Q(ipif_addr_dclk[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ipif_addr_dclk_reg[8] 
       (.C(dclk),
        .CE(ipif_addr_dclk0),
        .D(synch_1_n_13),
        .Q(ipif_addr_dclk[8]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ipif_addr_dclk_reg[9] 
       (.C(dclk),
        .CE(ipif_addr_dclk0),
        .D(synch_1_n_12),
        .Q(ipif_addr_dclk[9]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    ipif_cs_dclk_reg_reg
       (.C(dclk),
        .CE(1'b1),
        .D(synch_1_n_2),
        .Q(ipif_cs_dclk_reg),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h8)) 
    \ipif_rddata_dclk[15]_i_1 
       (.I0(drp_drdy),
        .I1(ipif_rnw_dclk),
        .O(ipif_rddata_dclk0));
  FDRE #(
    .INIT(1'b0)) 
    \ipif_rddata_dclk_reg[0] 
       (.C(dclk),
        .CE(ipif_rddata_dclk0),
        .D(drp_drpdo[0]),
        .Q(ipif_rddata_dclk[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ipif_rddata_dclk_reg[10] 
       (.C(dclk),
        .CE(ipif_rddata_dclk0),
        .D(drp_drpdo[10]),
        .Q(ipif_rddata_dclk[10]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ipif_rddata_dclk_reg[11] 
       (.C(dclk),
        .CE(ipif_rddata_dclk0),
        .D(drp_drpdo[11]),
        .Q(ipif_rddata_dclk[11]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ipif_rddata_dclk_reg[12] 
       (.C(dclk),
        .CE(ipif_rddata_dclk0),
        .D(drp_drpdo[12]),
        .Q(ipif_rddata_dclk[12]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ipif_rddata_dclk_reg[13] 
       (.C(dclk),
        .CE(ipif_rddata_dclk0),
        .D(drp_drpdo[13]),
        .Q(ipif_rddata_dclk[13]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ipif_rddata_dclk_reg[14] 
       (.C(dclk),
        .CE(ipif_rddata_dclk0),
        .D(drp_drpdo[14]),
        .Q(ipif_rddata_dclk[14]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ipif_rddata_dclk_reg[15] 
       (.C(dclk),
        .CE(ipif_rddata_dclk0),
        .D(drp_drpdo[15]),
        .Q(ipif_rddata_dclk[15]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ipif_rddata_dclk_reg[1] 
       (.C(dclk),
        .CE(ipif_rddata_dclk0),
        .D(drp_drpdo[1]),
        .Q(ipif_rddata_dclk[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ipif_rddata_dclk_reg[2] 
       (.C(dclk),
        .CE(ipif_rddata_dclk0),
        .D(drp_drpdo[2]),
        .Q(ipif_rddata_dclk[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ipif_rddata_dclk_reg[3] 
       (.C(dclk),
        .CE(ipif_rddata_dclk0),
        .D(drp_drpdo[3]),
        .Q(ipif_rddata_dclk[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ipif_rddata_dclk_reg[4] 
       (.C(dclk),
        .CE(ipif_rddata_dclk0),
        .D(drp_drpdo[4]),
        .Q(ipif_rddata_dclk[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ipif_rddata_dclk_reg[5] 
       (.C(dclk),
        .CE(ipif_rddata_dclk0),
        .D(drp_drpdo[5]),
        .Q(ipif_rddata_dclk[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ipif_rddata_dclk_reg[6] 
       (.C(dclk),
        .CE(ipif_rddata_dclk0),
        .D(drp_drpdo[6]),
        .Q(ipif_rddata_dclk[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ipif_rddata_dclk_reg[7] 
       (.C(dclk),
        .CE(ipif_rddata_dclk0),
        .D(drp_drpdo[7]),
        .Q(ipif_rddata_dclk[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ipif_rddata_dclk_reg[8] 
       (.C(dclk),
        .CE(ipif_rddata_dclk0),
        .D(drp_drpdo[8]),
        .Q(ipif_rddata_dclk[8]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ipif_rddata_dclk_reg[9] 
       (.C(dclk),
        .CE(ipif_rddata_dclk0),
        .D(drp_drpdo[9]),
        .Q(ipif_rddata_dclk[9]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    ipif_rnw_dclk_reg
       (.C(dclk),
        .CE(ipif_addr_dclk0),
        .D(p_1_in),
        .Q(ipif_rnw_dclk),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ipif_wrdata_dclk_reg[0] 
       (.C(dclk),
        .CE(ipif_addr_dclk0),
        .D(synch_1_n_37),
        .Q(ipif_wrdata_dclk[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ipif_wrdata_dclk_reg[10] 
       (.C(dclk),
        .CE(ipif_addr_dclk0),
        .D(synch_1_n_27),
        .Q(ipif_wrdata_dclk[10]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ipif_wrdata_dclk_reg[11] 
       (.C(dclk),
        .CE(ipif_addr_dclk0),
        .D(synch_1_n_26),
        .Q(ipif_wrdata_dclk[11]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ipif_wrdata_dclk_reg[12] 
       (.C(dclk),
        .CE(ipif_addr_dclk0),
        .D(synch_1_n_25),
        .Q(ipif_wrdata_dclk[12]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ipif_wrdata_dclk_reg[13] 
       (.C(dclk),
        .CE(ipif_addr_dclk0),
        .D(synch_1_n_24),
        .Q(ipif_wrdata_dclk[13]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ipif_wrdata_dclk_reg[14] 
       (.C(dclk),
        .CE(ipif_addr_dclk0),
        .D(synch_1_n_23),
        .Q(ipif_wrdata_dclk[14]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ipif_wrdata_dclk_reg[15] 
       (.C(dclk),
        .CE(ipif_addr_dclk0),
        .D(synch_1_n_22),
        .Q(ipif_wrdata_dclk[15]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ipif_wrdata_dclk_reg[1] 
       (.C(dclk),
        .CE(ipif_addr_dclk0),
        .D(synch_1_n_36),
        .Q(ipif_wrdata_dclk[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ipif_wrdata_dclk_reg[2] 
       (.C(dclk),
        .CE(ipif_addr_dclk0),
        .D(synch_1_n_35),
        .Q(ipif_wrdata_dclk[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ipif_wrdata_dclk_reg[3] 
       (.C(dclk),
        .CE(ipif_addr_dclk0),
        .D(synch_1_n_34),
        .Q(ipif_wrdata_dclk[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ipif_wrdata_dclk_reg[4] 
       (.C(dclk),
        .CE(ipif_addr_dclk0),
        .D(synch_1_n_33),
        .Q(ipif_wrdata_dclk[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ipif_wrdata_dclk_reg[5] 
       (.C(dclk),
        .CE(ipif_addr_dclk0),
        .D(synch_1_n_32),
        .Q(ipif_wrdata_dclk[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ipif_wrdata_dclk_reg[6] 
       (.C(dclk),
        .CE(ipif_addr_dclk0),
        .D(synch_1_n_31),
        .Q(ipif_wrdata_dclk[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ipif_wrdata_dclk_reg[7] 
       (.C(dclk),
        .CE(ipif_addr_dclk0),
        .D(synch_1_n_30),
        .Q(ipif_wrdata_dclk[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ipif_wrdata_dclk_reg[8] 
       (.C(dclk),
        .CE(ipif_addr_dclk0),
        .D(synch_1_n_29),
        .Q(ipif_wrdata_dclk[8]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ipif_wrdata_dclk_reg[9] 
       (.C(dclk),
        .CE(ipif_addr_dclk0),
        .D(synch_1_n_28),
        .Q(ipif_wrdata_dclk[9]),
        .R(1'b0));
  ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_toggle_synchronizer synch_1
       (.D(D),
        .E(ipif_addr_dclk0),
        .Q({p_1_in,synch_1_n_6,synch_1_n_7,synch_1_n_8,synch_1_n_9,synch_1_n_10,synch_1_n_11,synch_1_n_12,synch_1_n_13,synch_1_n_14,synch_1_n_15,synch_1_n_16,synch_1_n_17,synch_1_n_18,synch_1_n_19,synch_1_n_20,synch_1_n_21,synch_1_n_22,synch_1_n_23,synch_1_n_24,synch_1_n_25,synch_1_n_26,synch_1_n_27,synch_1_n_28,synch_1_n_29,synch_1_n_30,synch_1_n_31,synch_1_n_32,synch_1_n_33,synch_1_n_34,synch_1_n_35,synch_1_n_36,synch_1_n_37}),
        .control_out_reg_0(synch_1_n_2),
        .control_reg(control_reg),
        .coreclk(coreclk),
        .dclk(dclk),
        .dclk_reset(dclk_reset),
        .drp_drdy(drp_drdy),
        .drp_gnt(drp_gnt),
        .drp_gnt_0(synch_1_n_3),
        .in0(in0),
        .ipif_cs_dclk_reg(ipif_cs_dclk_reg),
        .mgmt_drp_cs(mgmt_drp_cs),
        .state(state),
        .toggle_reg_reg_0(toggle_reg_reg));
  ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_toggle_synchronizer__parameterized0 synch_2
       (.Q(ipif_rddata_dclk),
        .coreclk(coreclk),
        .dclk(dclk),
        .drp_ack(drp_ack),
        .drp_drdy(drp_drdy),
        .\q_reg[15]_0 (Q));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_15_elastic_buffer" *) 
module ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_elastic_buffer
   (xgmii_rxd,
    xgmii_rxc,
    comp_0,
    comp_1,
    comp_8,
    Q,
    comp_0_0,
    comp_1_1,
    comp_8_2,
    comp_0_3,
    comp_1_4,
    comp_2,
    comp_0_5,
    comp_1_6,
    comp_2_7,
    rxusrclk2,
    out,
    rxreset_rxusrclk2,
    coreclk,
    reset,
    \mcp1_ctrl_pipe_reg[7] ,
    \xgmii_rxd[63] ,
    pcs_loopback_core_int,
    \xgmii_rxc[7] );
  output [63:0]xgmii_rxd;
  output [7:0]xgmii_rxc;
  input comp_0;
  input comp_1;
  input comp_8;
  input [63:0]Q;
  input comp_0_0;
  input comp_1_1;
  input comp_8_2;
  input comp_0_3;
  input comp_1_4;
  input comp_2;
  input comp_0_5;
  input comp_1_6;
  input comp_2_7;
  input rxusrclk2;
  input out;
  input rxreset_rxusrclk2;
  input coreclk;
  input reset;
  input [7:0]\mcp1_ctrl_pipe_reg[7] ;
  input [63:0]\xgmii_rxd[63] ;
  input pcs_loopback_core_int;
  input [7:0]\xgmii_rxc[7] ;

  wire [63:0]Q;
  wire asynch_fifo_i_i_3_n_0;
  wire asynch_fifo_i_n_76;
  wire asynch_fifo_i_n_77;
  wire asynch_fifo_i_n_78;
  wire asynch_fifo_i_n_79;
  wire asynch_fifo_i_n_80;
  wire asynch_fifo_i_n_81;
  wire asynch_fifo_i_n_82;
  wire asynch_fifo_i_n_83;
  wire asynch_fifo_i_n_84;
  wire asynch_fifo_i_n_85;
  wire can_insert;
  wire can_insert_rd;
  wire can_insert_wra;
  wire can_insert_wra2;
  wire can_insert_wra_comb;
  wire can_insert_wra_comb_i_1_n_0;
  wire comp_0;
  wire comp_0_0;
  wire comp_0_3;
  wire comp_0_5;
  wire comp_1;
  wire comp_1_1;
  wire comp_1_4;
  wire comp_1_6;
  wire comp_2;
  wire comp_2_7;
  wire comp_8;
  wire comp_8_2;
  wire coreclk;
  wire empty;
  wire [73:0]fifo_rd_data;
  wire [4:4]fifo_status;
  wire [73:0]fifo_wr_data;
  wire idle_delete_i_n_0;
  wire idle_insert_i_n_0;
  wire [7:0]\mcp1_ctrl_pipe_reg[7] ;
  wire out;
  wire pcs_loopback_core_int;
  wire q;
  wire reset;
  wire rxreset_rxusrclk2;
  wire rxusrclk2;
  wire [7:0]xgmii_rxc;
  wire [7:0]\xgmii_rxc[7] ;
  wire [63:0]xgmii_rxd;
  wire [63:0]\xgmii_rxd[63] ;
  wire NLW_asynch_fifo_i_full_UNCONNECTED;
  wire [3:0]NLW_asynch_fifo_i_status_UNCONNECTED;

  (* DowngradeIPIdentifiedWarnings = "yes" *) 
  (* WIDTH = "74" *) 
  ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_asynch_fifo__parameterized0 asynch_fifo_i
       (.empty(empty),
        .fifo_rd_addr({asynch_fifo_i_n_81,asynch_fifo_i_n_82,asynch_fifo_i_n_83,asynch_fifo_i_n_84,asynch_fifo_i_n_85}),
        .fifo_wr_addr({asynch_fifo_i_n_76,asynch_fifo_i_n_77,asynch_fifo_i_n_78,asynch_fifo_i_n_79,asynch_fifo_i_n_80}),
        .full(NLW_asynch_fifo_i_full_UNCONNECTED),
        .rd_clk(coreclk),
        .rd_clk_en(1'b1),
        .rd_data(fifo_rd_data),
        .rd_en(idle_insert_i_n_0),
        .rd_reset(reset),
        .status({fifo_status,NLW_asynch_fifo_i_status_UNCONNECTED[3:0]}),
        .wr_clk(rxusrclk2),
        .wr_clk_en(out),
        .wr_data(fifo_wr_data),
        .wr_en(idle_delete_i_n_0),
        .wr_reset(rxreset_rxusrclk2));
  LUT3 #(
    .INIT(8'h40)) 
    asynch_fifo_i_i_3
       (.I0(fifo_rd_data[72]),
        .I1(can_insert_rd),
        .I2(fifo_rd_data[73]),
        .O(asynch_fifo_i_i_3_n_0));
  FDRE can_insert_rd_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(q),
        .Q(can_insert_rd),
        .R(reset));
  ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_synchronizer_60 can_insert_synch
       (.coreclk(coreclk),
        .in0(can_insert_wra_comb),
        .q(q));
  FDRE can_insert_wra2_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(can_insert_wra),
        .Q(can_insert_wra2),
        .R(rxreset_rxusrclk2));
  LUT2 #(
    .INIT(4'hE)) 
    can_insert_wra_comb_i_1
       (.I0(can_insert_wra),
        .I1(can_insert_wra2),
        .O(can_insert_wra_comb_i_1_n_0));
  FDRE can_insert_wra_comb_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(can_insert_wra_comb_i_1_n_0),
        .Q(can_insert_wra_comb),
        .R(rxreset_rxusrclk2));
  LUT1 #(
    .INIT(2'h1)) 
    can_insert_wra_i_1
       (.I0(fifo_status),
        .O(can_insert));
  FDRE can_insert_wra_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(can_insert),
        .Q(can_insert_wra),
        .R(rxreset_rxusrclk2));
  ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_idle_delete idle_delete_i
       (.Q(Q),
        .comp_0(comp_0),
        .comp_0_0(comp_0_0),
        .comp_0_3(comp_0_3),
        .comp_0_5(comp_0_5),
        .comp_1(comp_1),
        .comp_1_1(comp_1_1),
        .comp_1_4(comp_1_4),
        .comp_1_6(comp_1_6),
        .comp_2(comp_2),
        .comp_2_7(comp_2_7),
        .comp_8(comp_8),
        .comp_8_2(comp_8_2),
        .\mcp1_ctrl_pipe_reg[7]_0 (\mcp1_ctrl_pipe_reg[7] ),
        .out(out),
        .rxreset_rxusrclk2(rxreset_rxusrclk2),
        .rxusrclk2(rxusrclk2),
        .status(fifo_status),
        .wr_data(fifo_wr_data),
        .wr_en(idle_delete_i_n_0));
  ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_idle_insert idle_insert_i
       (.can_insert_rd(can_insert_rd),
        .coreclk(coreclk),
        .empty(empty),
        .pcs_loopback_core_int(pcs_loopback_core_int),
        .rd_data(fifo_rd_data),
        .\rd_data_reg[0] (asynch_fifo_i_i_3_n_0),
        .rd_en(idle_insert_i_n_0),
        .reset(reset),
        .xgmii_rxc(xgmii_rxc),
        .\xgmii_rxc[7] (\xgmii_rxc[7] ),
        .xgmii_rxd(xgmii_rxd),
        .\xgmii_rxd[63] (\xgmii_rxd[63] ));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_15_elastic_buffer_wrapper" *) 
module ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_elastic_buffer_wrapper
   (xgmii_rxd,
    xgmii_rxc,
    comp_0,
    comp_1,
    comp_8,
    Q,
    comp_0_0,
    comp_1_1,
    comp_8_2,
    comp_0_3,
    comp_1_4,
    comp_2,
    comp_0_5,
    comp_1_6,
    comp_2_7,
    rxusrclk2,
    out,
    rxreset_rxusrclk2,
    coreclk,
    reset,
    \mcp1_ctrl_pipe_reg[7] ,
    \xgmii_rxd[63] ,
    pcs_loopback_core_int,
    \xgmii_rxc[7] );
  output [63:0]xgmii_rxd;
  output [7:0]xgmii_rxc;
  input comp_0;
  input comp_1;
  input comp_8;
  input [63:0]Q;
  input comp_0_0;
  input comp_1_1;
  input comp_8_2;
  input comp_0_3;
  input comp_1_4;
  input comp_2;
  input comp_0_5;
  input comp_1_6;
  input comp_2_7;
  input rxusrclk2;
  input out;
  input rxreset_rxusrclk2;
  input coreclk;
  input reset;
  input [7:0]\mcp1_ctrl_pipe_reg[7] ;
  input [63:0]\xgmii_rxd[63] ;
  input pcs_loopback_core_int;
  input [7:0]\xgmii_rxc[7] ;

  wire [63:0]Q;
  wire comp_0;
  wire comp_0_0;
  wire comp_0_3;
  wire comp_0_5;
  wire comp_1;
  wire comp_1_1;
  wire comp_1_4;
  wire comp_1_6;
  wire comp_2;
  wire comp_2_7;
  wire comp_8;
  wire comp_8_2;
  wire coreclk;
  wire [7:0]\mcp1_ctrl_pipe_reg[7] ;
  wire out;
  wire pcs_loopback_core_int;
  wire reset;
  wire rxreset_rxusrclk2;
  wire rxusrclk2;
  wire [7:0]xgmii_rxc;
  wire [7:0]\xgmii_rxc[7] ;
  wire [63:0]xgmii_rxd;
  wire [63:0]\xgmii_rxd[63] ;

  ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_elastic_buffer rx_elastic_buffer_i
       (.Q(Q),
        .comp_0(comp_0),
        .comp_0_0(comp_0_0),
        .comp_0_3(comp_0_3),
        .comp_0_5(comp_0_5),
        .comp_1(comp_1),
        .comp_1_1(comp_1_1),
        .comp_1_4(comp_1_4),
        .comp_1_6(comp_1_6),
        .comp_2(comp_2),
        .comp_2_7(comp_2_7),
        .comp_8(comp_8),
        .comp_8_2(comp_8_2),
        .coreclk(coreclk),
        .\mcp1_ctrl_pipe_reg[7] (\mcp1_ctrl_pipe_reg[7] ),
        .out(out),
        .pcs_loopback_core_int(pcs_loopback_core_int),
        .reset(reset),
        .rxreset_rxusrclk2(rxreset_rxusrclk2),
        .rxusrclk2(rxusrclk2),
        .xgmii_rxc(xgmii_rxc),
        .\xgmii_rxc[7] (\xgmii_rxc[7] ),
        .xgmii_rxd(xgmii_rxd),
        .\xgmii_rxd[63] (\xgmii_rxd[63] ));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_15_g_register" *) 
module ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_g_register
   (loopback_ctrl,
    \addr_reg_reg[0] ,
    reset,
    \q_reg[0]_0 ,
    coreclk,
    Q,
    \rddata_out[0]_i_2 );
  output [0:0]loopback_ctrl;
  output \addr_reg_reg[0] ;
  input reset;
  input \q_reg[0]_0 ;
  input coreclk;
  input [3:0]Q;
  input \rddata_out[0]_i_2 ;

  wire [3:0]Q;
  wire \addr_reg_reg[0] ;
  wire coreclk;
  wire [0:0]loopback_ctrl;
  wire \q_reg[0]_0 ;
  wire \rddata_out[0]_i_2 ;
  wire reset;

  FDRE #(
    .INIT(1'b0)) 
    \q_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\q_reg[0]_0 ),
        .Q(loopback_ctrl),
        .R(reset));
  LUT6 #(
    .INIT(64'hFAEEFAEFFEEEFEEF)) 
    \rddata_out[0]_i_7 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .I3(Q[3]),
        .I4(loopback_ctrl),
        .I5(\rddata_out[0]_i_2 ),
        .O(\addr_reg_reg[0] ));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_15_g_register" *) 
module ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_g_register_39
   (\q_reg[0]_0 ,
    reg_1_0_15_we,
    \addr_reg_reg[3] ,
    \q_reg[0]_1 ,
    \q_reg[0]_2 ,
    coreclk,
    \q_reg[0]_3 ,
    Q,
    \q[0]_i_2__1_0 ,
    \rddata_out_reg[11] ,
    \rddata_out_reg[11]_0 ,
    reg_1_8_11__0,
    \rddata_out_reg[11]_1 ,
    re_prev_reg);
  output \q_reg[0]_0 ;
  output reg_1_0_15_we;
  output \addr_reg_reg[3] ;
  output \q_reg[0]_1 ;
  input \q_reg[0]_2 ;
  input coreclk;
  input \q_reg[0]_3 ;
  input [9:0]Q;
  input \q[0]_i_2__1_0 ;
  input \rddata_out_reg[11] ;
  input \rddata_out_reg[11]_0 ;
  input reg_1_8_11__0;
  input \rddata_out_reg[11]_1 ;
  input re_prev_reg;

  wire [9:0]Q;
  wire \addr_reg_reg[3] ;
  wire coreclk;
  wire \q[0]_i_2__1_0 ;
  wire \q[0]_i_3_n_0 ;
  wire \q_reg[0]_0 ;
  wire \q_reg[0]_1 ;
  wire \q_reg[0]_2 ;
  wire \q_reg[0]_3 ;
  wire \rddata_out_reg[11] ;
  wire \rddata_out_reg[11]_0 ;
  wire \rddata_out_reg[11]_1 ;
  wire re_prev_reg;
  wire reg_1_0_15_we;
  wire reg_1_8_11__0;

  LUT6 #(
    .INIT(64'h0000000000000008)) 
    \q[0]_i_2__1 
       (.I0(\q[0]_i_3_n_0 ),
        .I1(\q_reg[0]_3 ),
        .I2(Q[0]),
        .I3(Q[1]),
        .I4(Q[2]),
        .I5(\addr_reg_reg[3] ),
        .O(reg_1_0_15_we));
  LUT4 #(
    .INIT(16'h0010)) 
    \q[0]_i_3 
       (.I0(\q[0]_i_2__1_0 ),
        .I1(Q[8]),
        .I2(Q[5]),
        .I3(Q[6]),
        .O(\q[0]_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\q_reg[0]_2 ),
        .Q(\q_reg[0]_0 ),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hEEFFEFEFFFFFFFFF)) 
    \rddata_out[11]_i_4 
       (.I0(\rddata_out_reg[11] ),
        .I1(\rddata_out_reg[11]_0 ),
        .I2(\q_reg[0]_0 ),
        .I3(reg_1_8_11__0),
        .I4(Q[3]),
        .I5(\rddata_out_reg[11]_1 ),
        .O(\q_reg[0]_1 ));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    re_prev_i_3__1
       (.I0(Q[3]),
        .I1(Q[4]),
        .I2(Q[9]),
        .I3(Q[7]),
        .I4(re_prev_reg),
        .O(\addr_reg_reg[3] ));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_15_g_register" *) 
module ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_g_register_40
   (in0,
    \addr_reg_reg[19] ,
    \addr_reg_reg[4] ,
    \addr_reg_reg[8] ,
    \addr_reg_reg[17] ,
    \q_reg[0]_0 ,
    \q_reg[0]_1 ,
    coreclk,
    Q,
    pma_pmd_type);
  output in0;
  output \addr_reg_reg[19] ;
  output \addr_reg_reg[4] ;
  output \addr_reg_reg[8] ;
  output \addr_reg_reg[17] ;
  output \q_reg[0]_0 ;
  input \q_reg[0]_1 ;
  input coreclk;
  input [13:0]Q;
  input [0:0]pma_pmd_type;

  wire [13:0]Q;
  wire \addr_reg_reg[17] ;
  wire \addr_reg_reg[19] ;
  wire \addr_reg_reg[4] ;
  wire \addr_reg_reg[8] ;
  wire coreclk;
  wire in0;
  wire [0:0]pma_pmd_type;
  wire \q_reg[0]_0 ;
  wire \q_reg[0]_1 ;

  LUT4 #(
    .INIT(16'hEFFF)) 
    \q[0]_i_3__0 
       (.I0(Q[10]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(Q[3]),
        .O(\addr_reg_reg[17] ));
  LUT2 #(
    .INIT(4'hB)) 
    \q[0]_i_4 
       (.I0(Q[12]),
        .I1(Q[9]),
        .O(\addr_reg_reg[19] ));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\q_reg[0]_1 ),
        .Q(in0),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h02020202C0000000)) 
    \rddata_out[0]_i_6 
       (.I0(in0),
        .I1(Q[2]),
        .I2(Q[1]),
        .I3(pma_pmd_type),
        .I4(Q[0]),
        .I5(Q[3]),
        .O(\q_reg[0]_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    re_prev_i_2__1
       (.I0(Q[8]),
        .I1(Q[6]),
        .I2(Q[7]),
        .I3(Q[5]),
        .O(\addr_reg_reg[8] ));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    re_prev_i_3__2
       (.I0(\addr_reg_reg[8] ),
        .I1(Q[4]),
        .I2(Q[1]),
        .I3(Q[13]),
        .I4(Q[11]),
        .O(\addr_reg_reg[4] ));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_15_g_register" *) 
module ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_g_register_41
   (\q_reg[0]_0 ,
    \q_reg[0]_1 ,
    \q_reg[0]_2 ,
    coreclk);
  output \q_reg[0]_0 ;
  input \q_reg[0]_1 ;
  input \q_reg[0]_2 ;
  input coreclk;

  wire coreclk;
  wire \q_reg[0]_0 ;
  wire \q_reg[0]_1 ;
  wire \q_reg[0]_2 ;

  FDRE #(
    .INIT(1'b0)) 
    \q_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\q_reg[0]_2 ),
        .Q(\q_reg[0]_0 ),
        .R(\q_reg[0]_1 ));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_15_g_register" *) 
module ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_g_register_42
   (\q_reg[0]_0 ,
    \addr_reg_reg[16] ,
    \addr_reg_reg[9] ,
    reg_3_0_15_we,
    \addr_reg_reg[0] ,
    \addr_reg_reg[20] ,
    reset,
    \q_reg[0]_1 ,
    coreclk,
    Q,
    \q_reg[0]_2 ,
    re_prev_reg);
  output \q_reg[0]_0 ;
  output \addr_reg_reg[16] ;
  output \addr_reg_reg[9] ;
  output reg_3_0_15_we;
  output \addr_reg_reg[0] ;
  output \addr_reg_reg[20] ;
  input reset;
  input \q_reg[0]_1 ;
  input coreclk;
  input [16:0]Q;
  input \q_reg[0]_2 ;
  input re_prev_reg;

  wire [16:0]Q;
  wire \addr_reg_reg[0] ;
  wire \addr_reg_reg[16] ;
  wire \addr_reg_reg[20] ;
  wire \addr_reg_reg[9] ;
  wire coreclk;
  wire \q_reg[0]_0 ;
  wire \q_reg[0]_1 ;
  wire \q_reg[0]_2 ;
  wire re_prev_i_5_n_0;
  wire re_prev_reg;
  wire reg_3_0_15_we;
  wire reset;

  LUT6 #(
    .INIT(64'h0000000000000010)) 
    \q[0]_i_2__0 
       (.I0(\addr_reg_reg[0] ),
        .I1(\addr_reg_reg[16] ),
        .I2(\q_reg[0]_2 ),
        .I3(Q[1]),
        .I4(Q[14]),
        .I5(\addr_reg_reg[20] ),
        .O(reg_3_0_15_we));
  LUT3 #(
    .INIT(8'hDF)) 
    \q[15]_i_5__1 
       (.I0(Q[12]),
        .I1(Q[15]),
        .I2(Q[13]),
        .O(\addr_reg_reg[16] ));
  LUT2 #(
    .INIT(4'hE)) 
    \q[15]_i_6 
       (.I0(Q[0]),
        .I1(\addr_reg_reg[9] ),
        .O(\addr_reg_reg[0] ));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\q_reg[0]_1 ),
        .Q(\q_reg[0]_0 ),
        .R(reset));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    re_prev_i_2__3
       (.I0(Q[5]),
        .I1(Q[8]),
        .I2(re_prev_i_5_n_0),
        .I3(Q[9]),
        .I4(Q[11]),
        .I5(Q[10]),
        .O(\addr_reg_reg[9] ));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    re_prev_i_4__0
       (.I0(re_prev_reg),
        .I1(Q[16]),
        .I2(Q[2]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\addr_reg_reg[20] ));
  LUT2 #(
    .INIT(4'hE)) 
    re_prev_i_5
       (.I0(Q[6]),
        .I1(Q[7]),
        .O(re_prev_i_5_n_0));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_15_g_register" *) 
module ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_g_register__parameterized0
   (\q_reg[0]_0 ,
    \addr_reg_reg[17] ,
    \q_reg[0]_1 ,
    \q_reg[0]_2 ,
    \q_reg[0]_3 ,
    \addr_reg_reg[18] ,
    \addr_reg_reg[18]_0 ,
    \addr_reg_reg[3] ,
    D,
    \addr_reg_reg[0] ,
    \q_reg[0]_4 ,
    pma_resetout,
    \q_reg[0]_5 ,
    \q_reg[0]_6 ,
    coreclk,
    \rddata_out_reg[7] ,
    Q,
    reg_1_0_15_we,
    reset,
    \q_reg[0]_7 ,
    loopback_ctrl,
    \q_reg[0]_8 ,
    \q_reg[0]_9 ,
    pcs_reset_clear_core_intr,
    resetdone,
    in0,
    \rddata_out_reg[14] ,
    \rddata_out_reg[1] ,
    \rddata_out_reg[1]_0 ,
    \rddata_out_reg[5] ,
    \rddata_out_reg[5]_0 ,
    \rddata_out_reg[5]_1 ,
    \rddata_out_reg[5]_2 ,
    \rddata_out_reg[6] ,
    pma_pmd_type,
    \rddata_out_reg[2] ,
    \rddata_out_reg[2]_0 ,
    \rddata_out_reg[2]_1 ,
    \rddata_out_reg[2]_2 ,
    \rddata_out_reg[2]_3 ,
    \rddata_out_reg[2]_4 ,
    \rddata_out_reg[2]_5 ,
    \rddata_out_reg[0] ,
    \rddata_out_reg[0]_0 ,
    \rddata_out_reg[0]_1 ,
    \rddata_out_reg[0]_2 ,
    \rddata_out_reg[0]_3 ,
    \rddata_out_reg[0]_4 ,
    \rddata_out_reg[0]_5 ,
    \rddata_out_reg[8] ,
    \rddata_out_reg[8]_0 ,
    \rddata_out_reg[8]_1 ,
    \rddata_out_reg[9] ,
    \rddata_out_reg[9]_0 ,
    \rddata_out_reg[9]_1 ,
    \rddata_out_reg[12] ,
    \rddata_out_reg[12]_0 ,
    \rddata_out_reg[12]_1 ,
    \rddata_out_reg[12]_2 ,
    \rddata_out_reg[12]_3 ,
    reg_3_0_15__0,
    \rddata_out_reg[14]_0 ,
    \rddata_out_reg[14]_1 ,
    \q_reg[0]_10 ,
    \q_reg[0]_11 ,
    \q_reg[0]_12 ,
    \q_reg[0]_13 ,
    \rddata_out_reg[15] ,
    \rddata_out_reg[13] ,
    \rddata_out_reg[14]_2 ,
    \rddata_out_reg[14]_3 ,
    \rddata_out_reg[14]_4 );
  output \q_reg[0]_0 ;
  output \addr_reg_reg[17] ;
  output \q_reg[0]_1 ;
  output \q_reg[0]_2 ;
  output \q_reg[0]_3 ;
  output \addr_reg_reg[18] ;
  output \addr_reg_reg[18]_0 ;
  output \addr_reg_reg[3] ;
  output [5:0]D;
  output \addr_reg_reg[0] ;
  output \q_reg[0]_4 ;
  output pma_resetout;
  output \q_reg[0]_5 ;
  output \q_reg[0]_6 ;
  input coreclk;
  input \rddata_out_reg[7] ;
  input [10:0]Q;
  input reg_1_0_15_we;
  input reset;
  input [2:0]\q_reg[0]_7 ;
  input [0:0]loopback_ctrl;
  input \q_reg[0]_8 ;
  input \q_reg[0]_9 ;
  input pcs_reset_clear_core_intr;
  input resetdone;
  input in0;
  input \rddata_out_reg[14] ;
  input \rddata_out_reg[1] ;
  input \rddata_out_reg[1]_0 ;
  input \rddata_out_reg[5] ;
  input \rddata_out_reg[5]_0 ;
  input \rddata_out_reg[5]_1 ;
  input \rddata_out_reg[5]_2 ;
  input \rddata_out_reg[6] ;
  input [2:0]pma_pmd_type;
  input \rddata_out_reg[2] ;
  input \rddata_out_reg[2]_0 ;
  input \rddata_out_reg[2]_1 ;
  input \rddata_out_reg[2]_2 ;
  input \rddata_out_reg[2]_3 ;
  input \rddata_out_reg[2]_4 ;
  input \rddata_out_reg[2]_5 ;
  input \rddata_out_reg[0] ;
  input \rddata_out_reg[0]_0 ;
  input \rddata_out_reg[0]_1 ;
  input \rddata_out_reg[0]_2 ;
  input \rddata_out_reg[0]_3 ;
  input \rddata_out_reg[0]_4 ;
  input \rddata_out_reg[0]_5 ;
  input \rddata_out_reg[8] ;
  input \rddata_out_reg[8]_0 ;
  input \rddata_out_reg[8]_1 ;
  input \rddata_out_reg[9] ;
  input \rddata_out_reg[9]_0 ;
  input \rddata_out_reg[9]_1 ;
  input \rddata_out_reg[12] ;
  input \rddata_out_reg[12]_0 ;
  input \rddata_out_reg[12]_1 ;
  input \rddata_out_reg[12]_2 ;
  input \rddata_out_reg[12]_3 ;
  input reg_3_0_15__0;
  input \rddata_out_reg[14]_0 ;
  input \rddata_out_reg[14]_1 ;
  input \q_reg[0]_10 ;
  input \q_reg[0]_11 ;
  input \q_reg[0]_12 ;
  input \q_reg[0]_13 ;
  input \rddata_out_reg[15] ;
  input \rddata_out_reg[13] ;
  input \rddata_out_reg[14]_2 ;
  input \rddata_out_reg[14]_3 ;
  input \rddata_out_reg[14]_4 ;

  wire [5:0]D;
  wire [10:0]Q;
  wire \addr_reg_reg[0] ;
  wire \addr_reg_reg[17] ;
  wire \addr_reg_reg[18] ;
  wire \addr_reg_reg[18]_0 ;
  wire \addr_reg_reg[3] ;
  wire coreclk;
  wire in0;
  wire [0:0]loopback_ctrl;
  wire pcs_reset_clear_core_intr;
  wire [2:0]pma_pmd_type;
  wire pma_resetout;
  wire \q[0]_i_1__3_n_0 ;
  wire \q_reg[0]_0 ;
  wire \q_reg[0]_1 ;
  wire \q_reg[0]_10 ;
  wire \q_reg[0]_11 ;
  wire \q_reg[0]_12 ;
  wire \q_reg[0]_13 ;
  wire \q_reg[0]_2 ;
  wire \q_reg[0]_3 ;
  wire \q_reg[0]_4 ;
  wire \q_reg[0]_5 ;
  wire \q_reg[0]_6 ;
  wire [2:0]\q_reg[0]_7 ;
  wire \q_reg[0]_8 ;
  wire \q_reg[0]_9 ;
  wire \rddata_out[0]_i_2_n_0 ;
  wire \rddata_out[12]_i_2_n_0 ;
  wire \rddata_out[14]_i_2_n_0 ;
  wire \rddata_out[1]_i_10_n_0 ;
  wire \rddata_out[1]_i_12_n_0 ;
  wire \rddata_out[2]_i_2_n_0 ;
  wire \rddata_out[5]_i_10_n_0 ;
  wire \rddata_out_reg[0] ;
  wire \rddata_out_reg[0]_0 ;
  wire \rddata_out_reg[0]_1 ;
  wire \rddata_out_reg[0]_2 ;
  wire \rddata_out_reg[0]_3 ;
  wire \rddata_out_reg[0]_4 ;
  wire \rddata_out_reg[0]_5 ;
  wire \rddata_out_reg[12] ;
  wire \rddata_out_reg[12]_0 ;
  wire \rddata_out_reg[12]_1 ;
  wire \rddata_out_reg[12]_2 ;
  wire \rddata_out_reg[12]_3 ;
  wire \rddata_out_reg[13] ;
  wire \rddata_out_reg[14] ;
  wire \rddata_out_reg[14]_0 ;
  wire \rddata_out_reg[14]_1 ;
  wire \rddata_out_reg[14]_2 ;
  wire \rddata_out_reg[14]_3 ;
  wire \rddata_out_reg[14]_4 ;
  wire \rddata_out_reg[15] ;
  wire \rddata_out_reg[1] ;
  wire \rddata_out_reg[1]_0 ;
  wire \rddata_out_reg[2] ;
  wire \rddata_out_reg[2]_0 ;
  wire \rddata_out_reg[2]_1 ;
  wire \rddata_out_reg[2]_2 ;
  wire \rddata_out_reg[2]_3 ;
  wire \rddata_out_reg[2]_4 ;
  wire \rddata_out_reg[2]_5 ;
  wire \rddata_out_reg[5] ;
  wire \rddata_out_reg[5]_0 ;
  wire \rddata_out_reg[5]_1 ;
  wire \rddata_out_reg[5]_2 ;
  wire \rddata_out_reg[6] ;
  wire \rddata_out_reg[7] ;
  wire \rddata_out_reg[8] ;
  wire \rddata_out_reg[8]_0 ;
  wire \rddata_out_reg[8]_1 ;
  wire \rddata_out_reg[9] ;
  wire \rddata_out_reg[9]_0 ;
  wire \rddata_out_reg[9]_1 ;
  wire reg_1_0_15_we;
  wire reg_1_9_we;
  wire reg_3_0_15__0;
  wire reset;
  wire resetdone;

  (* SOFT_HLUTNM = "soft_lutpair73" *) 
  LUT2 #(
    .INIT(4'hE)) 
    pma_resetout_INST_0
       (.I0(reset),
        .I1(\q_reg[0]_0 ),
        .O(pma_resetout));
  LUT5 #(
    .INIT(32'hFFFD0200)) 
    \q[0]_i_1__12 
       (.I0(reg_1_0_15_we),
        .I1(\q_reg[0]_0 ),
        .I2(reset),
        .I3(\q_reg[0]_7 [0]),
        .I4(loopback_ctrl),
        .O(\q_reg[0]_1 ));
  (* SOFT_HLUTNM = "soft_lutpair73" *) 
  LUT5 #(
    .INIT(32'h03020100)) 
    \q[0]_i_1__13 
       (.I0(reg_1_0_15_we),
        .I1(\q_reg[0]_0 ),
        .I2(reset),
        .I3(\q_reg[0]_8 ),
        .I4(\q_reg[0]_7 [1]),
        .O(\q_reg[0]_2 ));
  LUT6 #(
    .INIT(64'hE2220000E222E222)) 
    \q[0]_i_1__3 
       (.I0(\q_reg[0]_0 ),
        .I1(reg_1_0_15_we),
        .I2(\q_reg[0]_9 ),
        .I3(\q_reg[0]_7 [2]),
        .I4(pcs_reset_clear_core_intr),
        .I5(resetdone),
        .O(\q[0]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'h000000000000E222)) 
    \q[0]_i_1__4 
       (.I0(in0),
        .I1(reg_1_9_we),
        .I2(\q_reg[0]_7 [0]),
        .I3(\q_reg[0]_9 ),
        .I4(\q_reg[0]_0 ),
        .I5(reset),
        .O(\q_reg[0]_3 ));
  LUT6 #(
    .INIT(64'h0000000000000010)) 
    \q[0]_i_2 
       (.I0(\q_reg[0]_10 ),
        .I1(\q_reg[0]_11 ),
        .I2(\q_reg[0]_9 ),
        .I3(\q_reg[0]_12 ),
        .I4(pma_resetout),
        .I5(\q_reg[0]_13 ),
        .O(reg_1_9_we));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\q[0]_i_1__3_n_0 ),
        .Q(\q_reg[0]_0 ),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hBABBBABBBABBBABA)) 
    \rddata_out[0]_i_1 
       (.I0(\rddata_out[0]_i_2_n_0 ),
        .I1(\rddata_out_reg[0] ),
        .I2(\rddata_out_reg[0]_0 ),
        .I3(\rddata_out_reg[0]_1 ),
        .I4(\rddata_out_reg[0]_2 ),
        .I5(\rddata_out_reg[0]_3 ),
        .O(D[0]));
  LUT3 #(
    .INIT(8'h8A)) 
    \rddata_out[0]_i_2 
       (.I0(\addr_reg_reg[17] ),
        .I1(\rddata_out_reg[0]_4 ),
        .I2(\rddata_out_reg[0]_5 ),
        .O(\rddata_out[0]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hBBBBBBBBABABABAA)) 
    \rddata_out[12]_i_1 
       (.I0(\rddata_out[12]_i_2_n_0 ),
        .I1(\rddata_out_reg[12] ),
        .I2(\rddata_out_reg[12]_0 ),
        .I3(\rddata_out_reg[12]_1 ),
        .I4(\rddata_out_reg[12]_2 ),
        .I5(\rddata_out_reg[12]_3 ),
        .O(D[4]));
  LUT6 #(
    .INIT(64'h0000000000000800)) 
    \rddata_out[12]_i_2 
       (.I0(\rddata_out_reg[7] ),
        .I1(Q[3]),
        .I2(Q[2]),
        .I3(\q_reg[0]_4 ),
        .I4(Q[0]),
        .I5(Q[1]),
        .O(\rddata_out[12]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFEFFFFFFFFFFFFFE)) 
    \rddata_out[13]_i_5 
       (.I0(\rddata_out_reg[13] ),
        .I1(\q_reg[0]_0 ),
        .I2(Q[10]),
        .I3(Q[5]),
        .I4(Q[6]),
        .I5(Q[7]),
        .O(\q_reg[0]_6 ));
  LUT6 #(
    .INIT(64'h88A8888888A888A8)) 
    \rddata_out[14]_i_1 
       (.I0(\rddata_out_reg[14] ),
        .I1(\rddata_out[14]_i_2_n_0 ),
        .I2(Q[10]),
        .I3(reg_3_0_15__0),
        .I4(\rddata_out_reg[14]_0 ),
        .I5(\rddata_out_reg[14]_1 ),
        .O(D[5]));
  LUT6 #(
    .INIT(64'h0000000008000000)) 
    \rddata_out[14]_i_2 
       (.I0(\rddata_out_reg[14]_2 ),
        .I1(Q[3]),
        .I2(\rddata_out_reg[14]_3 ),
        .I3(\q_reg[0]_4 ),
        .I4(Q[0]),
        .I5(\rddata_out_reg[14]_4 ),
        .O(\rddata_out[14]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \rddata_out[14]_i_6 
       (.I0(\q_reg[0]_0 ),
        .I1(Q[10]),
        .O(\q_reg[0]_4 ));
  (* SOFT_HLUTNM = "soft_lutpair74" *) 
  LUT4 #(
    .INIT(16'h00A8)) 
    \rddata_out[15]_i_2 
       (.I0(\rddata_out_reg[15] ),
        .I1(\q_reg[0]_0 ),
        .I2(Q[3]),
        .I3(Q[10]),
        .O(\q_reg[0]_5 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF7EFFFF7E)) 
    \rddata_out[1]_i_10 
       (.I0(Q[5]),
        .I1(Q[4]),
        .I2(Q[6]),
        .I3(Q[8]),
        .I4(Q[9]),
        .I5(\rddata_out[1]_i_12_n_0 ),
        .O(\rddata_out[1]_i_10_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair75" *) 
  LUT3 #(
    .INIT(8'hFD)) 
    \rddata_out[1]_i_12 
       (.I0(Q[0]),
        .I1(Q[10]),
        .I2(\q_reg[0]_0 ),
        .O(\rddata_out[1]_i_12_n_0 ));
  LUT4 #(
    .INIT(16'h0002)) 
    \rddata_out[1]_i_5 
       (.I0(\rddata_out_reg[14] ),
        .I1(\rddata_out_reg[1] ),
        .I2(\rddata_out[1]_i_10_n_0 ),
        .I3(\rddata_out_reg[1]_0 ),
        .O(\addr_reg_reg[18] ));
  LUT6 #(
    .INIT(64'hAEFFAAAAAEAAAAAA)) 
    \rddata_out[2]_i_1 
       (.I0(\rddata_out[2]_i_2_n_0 ),
        .I1(\rddata_out_reg[2] ),
        .I2(\rddata_out_reg[2]_0 ),
        .I3(\rddata_out_reg[2]_1 ),
        .I4(\rddata_out_reg[2]_2 ),
        .I5(\rddata_out_reg[2]_3 ),
        .O(D[1]));
  LUT6 #(
    .INIT(64'h00000000A0080008)) 
    \rddata_out[2]_i_2 
       (.I0(\addr_reg_reg[17] ),
        .I1(\rddata_out_reg[2]_4 ),
        .I2(Q[2]),
        .I3(Q[1]),
        .I4(pma_pmd_type[2]),
        .I5(\rddata_out_reg[2]_5 ),
        .O(\rddata_out[2]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000008000)) 
    \rddata_out[3]_i_6 
       (.I0(\rddata_out_reg[7] ),
        .I1(\q_reg[0]_4 ),
        .I2(Q[0]),
        .I3(Q[2]),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\addr_reg_reg[0] ));
  (* SOFT_HLUTNM = "soft_lutpair74" *) 
  LUT4 #(
    .INIT(16'hFFFD)) 
    \rddata_out[5]_i_10 
       (.I0(Q[3]),
        .I1(Q[2]),
        .I2(Q[10]),
        .I3(\q_reg[0]_0 ),
        .O(\rddata_out[5]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000002)) 
    \rddata_out[5]_i_5 
       (.I0(\rddata_out_reg[14] ),
        .I1(\rddata_out_reg[5] ),
        .I2(\rddata_out_reg[5]_0 ),
        .I3(\rddata_out_reg[5]_1 ),
        .I4(\rddata_out[5]_i_10_n_0 ),
        .I5(\rddata_out_reg[5]_2 ),
        .O(\addr_reg_reg[18]_0 ));
  LUT6 #(
    .INIT(64'h0888080808080808)) 
    \rddata_out[6]_i_4 
       (.I0(\addr_reg_reg[17] ),
        .I1(\rddata_out_reg[6] ),
        .I2(Q[3]),
        .I3(pma_pmd_type[0]),
        .I4(pma_pmd_type[2]),
        .I5(pma_pmd_type[1]),
        .O(\addr_reg_reg[3] ));
  (* SOFT_HLUTNM = "soft_lutpair75" *) 
  LUT3 #(
    .INIT(8'h02)) 
    \rddata_out[7]_i_3 
       (.I0(\rddata_out_reg[7] ),
        .I1(Q[10]),
        .I2(\q_reg[0]_0 ),
        .O(\addr_reg_reg[17] ));
  LUT6 #(
    .INIT(64'hAEFFAEAEAAAAAAAA)) 
    \rddata_out[8]_i_1 
       (.I0(\rddata_out[12]_i_2_n_0 ),
        .I1(\rddata_out_reg[0]_0 ),
        .I2(\rddata_out_reg[8] ),
        .I3(\rddata_out_reg[8]_0 ),
        .I4(\rddata_out_reg[8]_1 ),
        .I5(\rddata_out_reg[2]_2 ),
        .O(D[2]));
  LUT6 #(
    .INIT(64'hAEFFAEAEAAAAAAAA)) 
    \rddata_out[9]_i_1 
       (.I0(\rddata_out[12]_i_2_n_0 ),
        .I1(\rddata_out_reg[0]_0 ),
        .I2(\rddata_out_reg[9] ),
        .I3(\rddata_out_reg[9]_0 ),
        .I4(\rddata_out_reg[9]_1 ),
        .I5(\rddata_out_reg[2]_2 ),
        .O(D[3]));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_15_g_register" *) 
module ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_g_register__parameterized0_43
   (reg_3_0_15__0,
    D,
    \addr_reg_reg[17] ,
    \state_reg[2] ,
    data_out_reg,
    \state_reg[2]_0 ,
    data_out_reg_0,
    SR,
    clear_test_pattern_err_count,
    re_prev_reg,
    E,
    \addr_reg_reg[5] ,
    \addr_reg_reg[2] ,
    coreclk,
    \rddata_out_reg[4] ,
    \rddata_out_reg[4]_0 ,
    \rddata_out_reg[4]_1 ,
    \rddata_out_reg[4]_2 ,
    \rddata_out_reg[4]_3 ,
    \rddata_out_reg[15] ,
    Q,
    reg_3_0_15_we,
    \q_reg[0]_0 ,
    \q_reg[0]_1 ,
    \q_reg[0]_2 ,
    \q_reg[0]_3 ,
    \q_reg[0]_4 ,
    \q_reg[0]_5 ,
    pcs_reset_clear_core_intr,
    resetdone,
    reg_3_33_re,
    re_prev,
    \pcs_test_pattern_error_count_reg[0] ,
    re_prev_0,
    \q_reg[15] ,
    \q_reg[15]_0 ,
    \q_reg[15]_1 ,
    \q_reg[5] ,
    \q_reg[5]_0 ,
    \q_reg[15]_2 ,
    \rddata_out_reg[10] ,
    \rddata_out_reg[10]_0 ,
    \rddata_out_reg[10]_1 ,
    \rddata_out_reg[10]_2 ,
    \rddata_out_reg[10]_3 ,
    \rddata_out_reg[15]_0 ,
    \rddata_out_reg[15]_1 ,
    \rddata_out_reg[15]_2 ,
    \rddata_out_reg[15]_3 ,
    \rddata_out_reg[15]_4 ,
    \rddata_out_reg[15]_5 ,
    \rddata_out_reg[15]_6 ,
    \rddata_out_reg[15]_7 ,
    reset);
  output reg_3_0_15__0;
  output [2:0]D;
  output \addr_reg_reg[17] ;
  output \state_reg[2] ;
  output data_out_reg;
  output \state_reg[2]_0 ;
  output [0:0]data_out_reg_0;
  output [0:0]SR;
  output clear_test_pattern_err_count;
  output [0:0]re_prev_reg;
  output [0:0]E;
  output [0:0]\addr_reg_reg[5] ;
  output [0:0]\addr_reg_reg[2] ;
  input coreclk;
  input \rddata_out_reg[4] ;
  input \rddata_out_reg[4]_0 ;
  input \rddata_out_reg[4]_1 ;
  input \rddata_out_reg[4]_2 ;
  input \rddata_out_reg[4]_3 ;
  input \rddata_out_reg[15] ;
  input [10:0]Q;
  input reg_3_0_15_we;
  input \q_reg[0]_0 ;
  input \q_reg[0]_1 ;
  input [2:0]\q_reg[0]_2 ;
  input \q_reg[0]_3 ;
  input \q_reg[0]_4 ;
  input \q_reg[0]_5 ;
  input pcs_reset_clear_core_intr;
  input resetdone;
  input reg_3_33_re;
  input re_prev;
  input \pcs_test_pattern_error_count_reg[0] ;
  input re_prev_0;
  input \q_reg[15] ;
  input \q_reg[15]_0 ;
  input \q_reg[15]_1 ;
  input \q_reg[5] ;
  input \q_reg[5]_0 ;
  input \q_reg[15]_2 ;
  input \rddata_out_reg[10] ;
  input \rddata_out_reg[10]_0 ;
  input \rddata_out_reg[10]_1 ;
  input \rddata_out_reg[10]_2 ;
  input \rddata_out_reg[10]_3 ;
  input \rddata_out_reg[15]_0 ;
  input \rddata_out_reg[15]_1 ;
  input \rddata_out_reg[15]_2 ;
  input \rddata_out_reg[15]_3 ;
  input \rddata_out_reg[15]_4 ;
  input \rddata_out_reg[15]_5 ;
  input \rddata_out_reg[15]_6 ;
  input \rddata_out_reg[15]_7 ;
  input reset;

  wire [2:0]D;
  wire [0:0]E;
  wire [10:0]Q;
  wire [0:0]SR;
  wire \addr_reg_reg[17] ;
  wire [0:0]\addr_reg_reg[2] ;
  wire [0:0]\addr_reg_reg[5] ;
  wire clear_test_pattern_err_count;
  wire coreclk;
  wire data_out_reg;
  wire [0:0]data_out_reg_0;
  wire pcs_reset_clear_core_intr;
  wire \pcs_test_pattern_error_count_reg[0] ;
  wire \q[0]_i_1__0_n_0 ;
  wire \q[15]_i_2__2_n_0 ;
  wire \q[15]_i_2__3_n_0 ;
  wire \q_reg[0]_0 ;
  wire \q_reg[0]_1 ;
  wire [2:0]\q_reg[0]_2 ;
  wire \q_reg[0]_3 ;
  wire \q_reg[0]_4 ;
  wire \q_reg[0]_5 ;
  wire \q_reg[15] ;
  wire \q_reg[15]_0 ;
  wire \q_reg[15]_1 ;
  wire \q_reg[15]_2 ;
  wire \q_reg[5] ;
  wire \q_reg[5]_0 ;
  wire \rddata_out[15]_i_3_n_0 ;
  wire \rddata_out[15]_i_6_n_0 ;
  wire \rddata_out_reg[10] ;
  wire \rddata_out_reg[10]_0 ;
  wire \rddata_out_reg[10]_1 ;
  wire \rddata_out_reg[10]_2 ;
  wire \rddata_out_reg[10]_3 ;
  wire \rddata_out_reg[15] ;
  wire \rddata_out_reg[15]_0 ;
  wire \rddata_out_reg[15]_1 ;
  wire \rddata_out_reg[15]_2 ;
  wire \rddata_out_reg[15]_3 ;
  wire \rddata_out_reg[15]_4 ;
  wire \rddata_out_reg[15]_5 ;
  wire \rddata_out_reg[15]_6 ;
  wire \rddata_out_reg[15]_7 ;
  wire \rddata_out_reg[4] ;
  wire \rddata_out_reg[4]_0 ;
  wire \rddata_out_reg[4]_1 ;
  wire \rddata_out_reg[4]_2 ;
  wire \rddata_out_reg[4]_3 ;
  wire re_prev;
  wire re_prev_0;
  wire [0:0]re_prev_reg;
  wire reg_3_0_15__0;
  wire reg_3_0_15_we;
  wire reg_3_33_re;
  wire reset;
  wire resetdone;
  wire \state_reg[2] ;
  wire \state_reg[2]_0 ;

  (* SOFT_HLUTNM = "soft_lutpair77" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \pcs_error_block_count[7]_i_1 
       (.I0(data_out_reg),
        .I1(reg_3_33_re),
        .O(data_out_reg_0));
  (* SOFT_HLUTNM = "soft_lutpair76" *) 
  LUT2 #(
    .INIT(4'hE)) 
    pcs_resetout_INST_0
       (.I0(reset),
        .I1(reg_3_0_15__0),
        .O(data_out_reg));
  (* SOFT_HLUTNM = "soft_lutpair78" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \pcs_test_pattern_error_count[0]_i_1 
       (.I0(data_out_reg),
        .I1(\pcs_test_pattern_error_count_reg[0] ),
        .O(clear_test_pattern_err_count));
  LUT6 #(
    .INIT(64'hE2220000E222E222)) 
    \q[0]_i_1__0 
       (.I0(reg_3_0_15__0),
        .I1(reg_3_0_15_we),
        .I2(\q_reg[0]_5 ),
        .I3(\q_reg[0]_2 [2]),
        .I4(pcs_reset_clear_core_intr),
        .I5(resetdone),
        .O(\q[0]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'hDDFDDDDD00200000)) 
    \q[0]_i_1__10 
       (.I0(reg_3_0_15_we),
        .I1(data_out_reg),
        .I2(\q_reg[0]_0 ),
        .I3(\q_reg[0]_1 ),
        .I4(\q_reg[0]_2 [0]),
        .I5(\q_reg[0]_3 ),
        .O(\state_reg[2] ));
  LUT6 #(
    .INIT(64'hDDFDDDDD00200000)) 
    \q[0]_i_1__11 
       (.I0(reg_3_0_15_we),
        .I1(data_out_reg),
        .I2(\q_reg[0]_0 ),
        .I3(\q_reg[0]_1 ),
        .I4(\q_reg[0]_2 [1]),
        .I5(\q_reg[0]_4 ),
        .O(\state_reg[2]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair78" *) 
  LUT3 #(
    .INIT(8'hAB)) 
    \q[15]_i_1__0 
       (.I0(data_out_reg),
        .I1(\pcs_test_pattern_error_count_reg[0] ),
        .I2(re_prev_0),
        .O(re_prev_reg));
  LUT6 #(
    .INIT(64'h0000000000000800)) 
    \q[15]_i_1__1 
       (.I0(\q_reg[15] ),
        .I1(\q_reg[15]_0 ),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(\q_reg[15]_1 ),
        .I5(\q[15]_i_2__3_n_0 ),
        .O(E));
  LUT6 #(
    .INIT(64'h0000000400000000)) 
    \q[15]_i_1__4 
       (.I0(\q_reg[5] ),
        .I1(Q[2]),
        .I2(\q_reg[15]_2 ),
        .I3(\q[15]_i_2__2_n_0 ),
        .I4(Q[3]),
        .I5(\q_reg[15]_0 ),
        .O(\addr_reg_reg[2] ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFD)) 
    \q[15]_i_2__2 
       (.I0(\q_reg[0]_5 ),
        .I1(data_out_reg),
        .I2(Q[4]),
        .I3(Q[0]),
        .I4(Q[10]),
        .I5(Q[8]),
        .O(\q[15]_i_2__2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFF7FFFFFF)) 
    \q[15]_i_2__3 
       (.I0(Q[5]),
        .I1(Q[6]),
        .I2(Q[9]),
        .I3(Q[7]),
        .I4(\q_reg[0]_5 ),
        .I5(data_out_reg),
        .O(\q[15]_i_2__3_n_0 ));
  LUT6 #(
    .INIT(64'h0000000200000000)) 
    \q[5]_i_1 
       (.I0(Q[5]),
        .I1(\q_reg[5] ),
        .I2(\q_reg[5]_0 ),
        .I3(\q[15]_i_2__2_n_0 ),
        .I4(Q[2]),
        .I5(\q_reg[15]_0 ),
        .O(\addr_reg_reg[5] ));
  (* SOFT_HLUTNM = "soft_lutpair77" *) 
  LUT3 #(
    .INIT(8'hBA)) 
    \q[7]_i_1 
       (.I0(data_out_reg),
        .I1(re_prev),
        .I2(reg_3_33_re),
        .O(SR));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\q[0]_i_1__0_n_0 ),
        .Q(reg_3_0_15__0),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h000002A2AAAA02A2)) 
    \rddata_out[10]_i_1 
       (.I0(\addr_reg_reg[17] ),
        .I1(\rddata_out_reg[10] ),
        .I2(\rddata_out_reg[10]_0 ),
        .I3(\rddata_out_reg[10]_1 ),
        .I4(\rddata_out_reg[10]_2 ),
        .I5(\rddata_out_reg[10]_3 ),
        .O(D[1]));
  (* SOFT_HLUTNM = "soft_lutpair76" *) 
  LUT3 #(
    .INIT(8'h08)) 
    \rddata_out[10]_i_2 
       (.I0(\rddata_out_reg[15]_0 ),
        .I1(Q[7]),
        .I2(reg_3_0_15__0),
        .O(\addr_reg_reg[17] ));
  LUT6 #(
    .INIT(64'hAAAAEEFE00000000)) 
    \rddata_out[15]_i_1 
       (.I0(\rddata_out_reg[15]_1 ),
        .I1(\rddata_out[15]_i_3_n_0 ),
        .I2(\rddata_out_reg[15]_2 ),
        .I3(\rddata_out_reg[15]_3 ),
        .I4(\rddata_out[15]_i_6_n_0 ),
        .I5(\rddata_out_reg[15]_0 ),
        .O(D[2]));
  LUT6 #(
    .INIT(64'hEFEEAAAAABAAAAAA)) 
    \rddata_out[15]_i_3 
       (.I0(reg_3_0_15__0),
        .I1(\rddata_out_reg[15]_4 ),
        .I2(\rddata_out_reg[15]_5 ),
        .I3(\rddata_out_reg[15]_6 ),
        .I4(\rddata_out_reg[4]_1 ),
        .I5(\rddata_out_reg[15]_7 ),
        .O(\rddata_out[15]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFD0000FFFFFFFF)) 
    \rddata_out[15]_i_6 
       (.I0(\rddata_out_reg[15] ),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[2]),
        .I4(reg_3_0_15__0),
        .I5(Q[7]),
        .O(\rddata_out[15]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h0008AAAA00080008)) 
    \rddata_out[4]_i_1 
       (.I0(\addr_reg_reg[17] ),
        .I1(\rddata_out_reg[4] ),
        .I2(\rddata_out_reg[4]_0 ),
        .I3(\rddata_out_reg[4]_1 ),
        .I4(\rddata_out_reg[4]_2 ),
        .I5(\rddata_out_reg[4]_3 ),
        .O(D[0]));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_15_g_register" *) 
module ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_g_register__parameterized1
   (\q_reg[0]_0 ,
    \addr_reg_reg[17] ,
    coreclk,
    signal_detect_sync,
    reset,
    \q_reg[0]_1 ,
    Q,
    re_prev_reg_0,
    re_prev_reg_1,
    re_prev_reg_2,
    re_prev_reg_3,
    re_prev_reg_4);
  output \q_reg[0]_0 ;
  output \addr_reg_reg[17] ;
  input coreclk;
  input signal_detect_sync;
  input reset;
  input \q_reg[0]_1 ;
  input [5:0]Q;
  input re_prev_reg_0;
  input re_prev_reg_1;
  input re_prev_reg_2;
  input re_prev_reg_3;
  input re_prev_reg_4;

  wire [5:0]Q;
  wire \addr_reg_reg[17] ;
  wire coreclk;
  wire \q[0]_i_1__9_n_0 ;
  wire \q_reg[0]_0 ;
  wire \q_reg[0]_1 ;
  wire re_prev;
  wire re_prev_reg_0;
  wire re_prev_reg_1;
  wire re_prev_reg_2;
  wire re_prev_reg_3;
  wire re_prev_reg_4;
  wire reg_1_1_re;
  wire reset;
  wire signal_detect_sync;

  LUT6 #(
    .INIT(64'h202020F020202020)) 
    \q[0]_i_1__9 
       (.I0(reg_1_1_re),
        .I1(re_prev),
        .I2(signal_detect_sync),
        .I3(reset),
        .I4(\q_reg[0]_1 ),
        .I5(\q_reg[0]_0 ),
        .O(\q[0]_i_1__9_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\q[0]_i_1__9_n_0 ),
        .Q(\q_reg[0]_0 ),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h0000000088080000)) 
    re_prev_i_1__4
       (.I0(\addr_reg_reg[17] ),
        .I1(Q[0]),
        .I2(re_prev_reg_0),
        .I3(re_prev_reg_1),
        .I4(re_prev_reg_2),
        .I5(re_prev_reg_3),
        .O(reg_1_1_re));
  LUT6 #(
    .INIT(64'h0000000000000004)) 
    re_prev_i_2__0
       (.I0(Q[3]),
        .I1(Q[2]),
        .I2(Q[5]),
        .I3(re_prev_reg_4),
        .I4(Q[4]),
        .I5(Q[1]),
        .O(\addr_reg_reg[17] ));
  FDRE re_prev_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(reg_1_1_re),
        .Q(re_prev),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_15_g_register" *) 
module ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_g_register__parameterized10
   (\q_reg[0]_0 ,
    \q_reg[0]_1 ,
    coreclk);
  output \q_reg[0]_0 ;
  input \q_reg[0]_1 ;
  input coreclk;

  wire coreclk;
  wire \q_reg[0]_0 ;
  wire \q_reg[0]_1 ;

  FDRE #(
    .INIT(1'b0)) 
    \q_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\q_reg[0]_1 ),
        .Q(\q_reg[0]_0 ),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_15_g_register" *) 
module ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_g_register__parameterized10_45
   (reg_3_32_0__0,
    \q_reg[0]_0 ,
    \q_reg[0]_1 ,
    core_status,
    coreclk,
    \rddata_out[0]_i_4 ,
    \rddata_out[0]_i_4_0 ,
    \rddata_out[0]_i_4_1 );
  output reg_3_32_0__0;
  output \q_reg[0]_0 ;
  input \q_reg[0]_1 ;
  input [0:0]core_status;
  input coreclk;
  input \rddata_out[0]_i_4 ;
  input \rddata_out[0]_i_4_0 ;
  input \rddata_out[0]_i_4_1 ;

  wire [0:0]core_status;
  wire coreclk;
  wire \q_reg[0]_0 ;
  wire \q_reg[0]_1 ;
  wire \rddata_out[0]_i_4 ;
  wire \rddata_out[0]_i_4_0 ;
  wire \rddata_out[0]_i_4_1 ;
  wire reg_3_32_0__0;

  FDRE #(
    .INIT(1'b0)) 
    \q_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(core_status),
        .Q(reg_3_32_0__0),
        .R(\q_reg[0]_1 ));
  LUT4 #(
    .INIT(16'h7000)) 
    \rddata_out[0]_i_10 
       (.I0(\rddata_out[0]_i_4 ),
        .I1(reg_3_32_0__0),
        .I2(\rddata_out[0]_i_4_0 ),
        .I3(\rddata_out[0]_i_4_1 ),
        .O(\q_reg[0]_0 ));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_15_g_register" *) 
module ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_g_register__parameterized10_46
   (\q_reg[0]_0 ,
    \q_reg[0]_1 ,
    \q_reg[0]_2 ,
    pcs_hi_ber_core_int,
    coreclk,
    reg_3_33_re,
    re_prev,
    reg_3_33,
    \rddata_out_reg[1] ,
    \rddata_out_reg[1]_0 ,
    \rddata_out_reg[1]_1 ,
    \rddata_out_reg[1]_2 );
  output \q_reg[0]_0 ;
  output \q_reg[0]_1 ;
  input \q_reg[0]_2 ;
  input pcs_hi_ber_core_int;
  input coreclk;
  input reg_3_33_re;
  input re_prev;
  input [0:0]reg_3_33;
  input \rddata_out_reg[1] ;
  input \rddata_out_reg[1]_0 ;
  input \rddata_out_reg[1]_1 ;
  input \rddata_out_reg[1]_2 ;

  wire coreclk;
  wire pcs_hi_ber_core_int;
  wire \q_reg[0]_0 ;
  wire \q_reg[0]_1 ;
  wire \q_reg[0]_2 ;
  wire \rddata_out_reg[1] ;
  wire \rddata_out_reg[1]_0 ;
  wire \rddata_out_reg[1]_1 ;
  wire \rddata_out_reg[1]_2 ;
  wire re_prev;
  wire reg_3_32_1__0;
  wire [0:0]reg_3_33;
  wire reg_3_33_re;

  LUT5 #(
    .INIT(32'h08FB08AA)) 
    \q[0]_i_1__1 
       (.I0(reg_3_32_1__0),
        .I1(reg_3_33_re),
        .I2(re_prev),
        .I3(\q_reg[0]_2 ),
        .I4(reg_3_33),
        .O(\q_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(pcs_hi_ber_core_int),
        .Q(reg_3_32_1__0),
        .R(\q_reg[0]_2 ));
  LUT5 #(
    .INIT(32'hFFFFD00A)) 
    \rddata_out[1]_i_4 
       (.I0(\rddata_out_reg[1] ),
        .I1(reg_3_32_1__0),
        .I2(\rddata_out_reg[1]_0 ),
        .I3(\rddata_out_reg[1]_1 ),
        .I4(\rddata_out_reg[1]_2 ),
        .O(\q_reg[0]_1 ));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_15_g_register" *) 
module ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_g_register__parameterized10_47
   (reg_3_32_12__0,
    \q_reg[0]_0 ,
    \q_reg[0]_1 ,
    pcs_rx_link_up_core_sync_int,
    coreclk,
    \rddata_out_reg[12] ,
    \rddata_out_reg[12]_0 ,
    \rddata_out_reg[12]_1 ,
    \rddata_out_reg[12]_2 ,
    \rddata_out_reg[12]_3 );
  output reg_3_32_12__0;
  output \q_reg[0]_0 ;
  input \q_reg[0]_1 ;
  input pcs_rx_link_up_core_sync_int;
  input coreclk;
  input \rddata_out_reg[12] ;
  input \rddata_out_reg[12]_0 ;
  input \rddata_out_reg[12]_1 ;
  input \rddata_out_reg[12]_2 ;
  input \rddata_out_reg[12]_3 ;

  wire coreclk;
  wire pcs_rx_link_up_core_sync_int;
  wire \q_reg[0]_0 ;
  wire \q_reg[0]_1 ;
  wire \rddata_out_reg[12] ;
  wire \rddata_out_reg[12]_0 ;
  wire \rddata_out_reg[12]_1 ;
  wire \rddata_out_reg[12]_2 ;
  wire \rddata_out_reg[12]_3 ;
  wire reg_3_32_12__0;

  FDRE #(
    .INIT(1'b0)) 
    \q_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(pcs_rx_link_up_core_sync_int),
        .Q(reg_3_32_12__0),
        .R(\q_reg[0]_1 ));
  LUT6 #(
    .INIT(64'hAAEAAAAAAAAAAAAA)) 
    \rddata_out[12]_i_7 
       (.I0(\rddata_out_reg[12] ),
        .I1(reg_3_32_12__0),
        .I2(\rddata_out_reg[12]_0 ),
        .I3(\rddata_out_reg[12]_1 ),
        .I4(\rddata_out_reg[12]_2 ),
        .I5(\rddata_out_reg[12]_3 ),
        .O(\q_reg[0]_0 ));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_15_g_register" *) 
module ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_g_register__parameterized1_44
   (\q_reg[0]_0 ,
    coreclk,
    reg_3_32_12__0,
    \q_reg[0]_1 ,
    re_prev_reg_0,
    Q,
    re_prev_reg_1,
    re_prev_reg_2,
    re_prev_reg_3,
    \rddata_out_reg[2] ,
    \rddata_out_reg[2]_0 ,
    \rddata_out_reg[2]_1 ,
    \rddata_out_reg[2]_2 ,
    \rddata_out_reg[2]_3 );
  output \q_reg[0]_0 ;
  input coreclk;
  input reg_3_32_12__0;
  input \q_reg[0]_1 ;
  input re_prev_reg_0;
  input [1:0]Q;
  input re_prev_reg_1;
  input re_prev_reg_2;
  input re_prev_reg_3;
  input \rddata_out_reg[2] ;
  input \rddata_out_reg[2]_0 ;
  input \rddata_out_reg[2]_1 ;
  input \rddata_out_reg[2]_2 ;
  input \rddata_out_reg[2]_3 ;

  wire [1:0]Q;
  wire coreclk;
  wire \q[0]_i_1__8_n_0 ;
  wire \q_reg[0]_0 ;
  wire \q_reg[0]_1 ;
  wire \q_reg_n_0_[0] ;
  wire \rddata_out_reg[2] ;
  wire \rddata_out_reg[2]_0 ;
  wire \rddata_out_reg[2]_1 ;
  wire \rddata_out_reg[2]_2 ;
  wire \rddata_out_reg[2]_3 ;
  wire re_prev;
  wire re_prev_reg_0;
  wire re_prev_reg_1;
  wire re_prev_reg_2;
  wire re_prev_reg_3;
  wire reg_3_1_re;
  wire reg_3_32_12__0;

  LUT5 #(
    .INIT(32'h20F02020)) 
    \q[0]_i_1__8 
       (.I0(reg_3_1_re),
        .I1(re_prev),
        .I2(reg_3_32_12__0),
        .I3(\q_reg[0]_1 ),
        .I4(\q_reg_n_0_[0] ),
        .O(\q[0]_i_1__8_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\q[0]_i_1__8_n_0 ),
        .Q(\q_reg_n_0_[0] ),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h00000000F0FFBBFF)) 
    \rddata_out[2]_i_4 
       (.I0(\rddata_out_reg[2] ),
        .I1(\q_reg_n_0_[0] ),
        .I2(\rddata_out_reg[2]_0 ),
        .I3(\rddata_out_reg[2]_1 ),
        .I4(\rddata_out_reg[2]_2 ),
        .I5(\rddata_out_reg[2]_3 ),
        .O(\q_reg[0]_0 ));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    re_prev_i_1__3
       (.I0(re_prev_reg_0),
        .I1(Q[0]),
        .I2(re_prev_reg_1),
        .I3(re_prev_reg_2),
        .I4(Q[1]),
        .I5(re_prev_reg_3),
        .O(reg_3_1_re));
  FDRE re_prev_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(reg_3_1_re),
        .Q(re_prev),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_15_g_register" *) 
module ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_g_register__parameterized1_49
   (re_prev,
    reg_3_33_re,
    reg_3_33,
    \addr_reg_reg[2] ,
    coreclk,
    Q,
    reg_3_32_0__0,
    \q_reg[0]_0 ,
    re_prev_reg_0,
    re_prev_reg_1,
    re_prev_reg_2,
    re_prev_reg_3);
  output re_prev;
  output reg_3_33_re;
  output [0:0]reg_3_33;
  output \addr_reg_reg[2] ;
  input coreclk;
  input [9:0]Q;
  input reg_3_32_0__0;
  input \q_reg[0]_0 ;
  input re_prev_reg_0;
  input re_prev_reg_1;
  input re_prev_reg_2;
  input re_prev_reg_3;

  wire [9:0]Q;
  wire \addr_reg_reg[2] ;
  wire coreclk;
  wire \q[0]_i_1__2_n_0 ;
  wire \q_reg[0]_0 ;
  wire re_prev;
  wire re_prev_i_2__2_n_0;
  wire re_prev_reg_0;
  wire re_prev_reg_1;
  wire re_prev_reg_2;
  wire re_prev_reg_3;
  wire reg_3_32_0__0;
  wire [0:0]reg_3_33;
  wire reg_3_33_re;

  LUT5 #(
    .INIT(32'h00A088A8)) 
    \q[0]_i_1__2 
       (.I0(reg_3_32_0__0),
        .I1(reg_3_33),
        .I2(reg_3_33_re),
        .I3(re_prev),
        .I4(\q_reg[0]_0 ),
        .O(\q[0]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    \q[15]_i_3 
       (.I0(re_prev_reg_2),
        .I1(re_prev_reg_3),
        .I2(Q[2]),
        .I3(Q[5]),
        .I4(Q[6]),
        .I5(Q[4]),
        .O(\addr_reg_reg[2] ));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\q[0]_i_1__2_n_0 ),
        .Q(reg_3_33),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h0000000000000020)) 
    re_prev_i_1
       (.I0(\addr_reg_reg[2] ),
        .I1(re_prev_i_2__2_n_0),
        .I2(Q[0]),
        .I3(re_prev_reg_0),
        .I4(Q[1]),
        .I5(re_prev_reg_1),
        .O(reg_3_33_re));
  LUT4 #(
    .INIT(16'hDFFF)) 
    re_prev_i_2__2
       (.I0(Q[8]),
        .I1(Q[9]),
        .I2(Q[7]),
        .I3(Q[3]),
        .O(re_prev_i_2__2_n_0));
  FDRE re_prev_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(reg_3_33_re),
        .Q(re_prev),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_15_g_register" *) 
module ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_g_register__parameterized2
   (reg_1_8_11__0,
    D,
    coreclk,
    fifo_full,
    reset,
    \q_reg[0]_0 ,
    re_prev_reg_0,
    re_prev_reg_1,
    re_prev_reg_2,
    Q,
    \rddata_out_reg[7] ,
    \rddata_out_reg[7]_0 ,
    \rddata_out_reg[7]_1 ,
    re_prev_reg_3,
    pma_pmd_type);
  output reg_1_8_11__0;
  output [0:0]D;
  input coreclk;
  input fifo_full;
  input reset;
  input \q_reg[0]_0 ;
  input re_prev_reg_0;
  input re_prev_reg_1;
  input re_prev_reg_2;
  input [5:0]Q;
  input \rddata_out_reg[7] ;
  input \rddata_out_reg[7]_0 ;
  input \rddata_out_reg[7]_1 ;
  input re_prev_reg_3;
  input [2:0]pma_pmd_type;

  wire [0:0]D;
  wire [5:0]Q;
  wire coreclk;
  wire fifo_full;
  wire [2:0]pma_pmd_type;
  wire \q[0]_i_1__6_n_0 ;
  wire \q_reg[0]_0 ;
  wire \rddata_out[7]_i_2_n_0 ;
  wire \rddata_out_reg[7] ;
  wire \rddata_out_reg[7]_0 ;
  wire \rddata_out_reg[7]_1 ;
  wire re_prev_i_3__0_n_0;
  wire re_prev_reg_0;
  wire re_prev_reg_1;
  wire re_prev_reg_2;
  wire re_prev_reg_3;
  wire \reg_1_8_10/re_prev ;
  wire reg_1_8_11__0;
  wire reg_1_8_re;
  wire reset;

  LUT6 #(
    .INIT(64'h202020202020FDF0)) 
    \q[0]_i_1__6 
       (.I0(reg_1_8_re),
        .I1(\reg_1_8_10/re_prev ),
        .I2(fifo_full),
        .I3(reg_1_8_11__0),
        .I4(reset),
        .I5(\q_reg[0]_0 ),
        .O(\q[0]_i_1__6_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\q[0]_i_1__6_n_0 ),
        .Q(reg_1_8_11__0),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h0100FFFF01000100)) 
    \rddata_out[7]_i_1 
       (.I0(Q[1]),
        .I1(Q[2]),
        .I2(\rddata_out[7]_i_2_n_0 ),
        .I3(\rddata_out_reg[7] ),
        .I4(\rddata_out_reg[7]_0 ),
        .I5(\rddata_out_reg[7]_1 ),
        .O(D));
  LUT6 #(
    .INIT(64'hCF77FF77FF77FF77)) 
    \rddata_out[7]_i_2 
       (.I0(reg_1_8_11__0),
        .I1(Q[0]),
        .I2(pma_pmd_type[0]),
        .I3(Q[3]),
        .I4(pma_pmd_type[2]),
        .I5(pma_pmd_type[1]),
        .O(\rddata_out[7]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h0002)) 
    re_prev_i_1__0
       (.I0(re_prev_reg_0),
        .I1(re_prev_reg_1),
        .I2(re_prev_i_3__0_n_0),
        .I3(re_prev_reg_2),
        .O(reg_1_8_re));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFD)) 
    re_prev_i_3__0
       (.I0(Q[3]),
        .I1(re_prev_reg_3),
        .I2(Q[4]),
        .I3(Q[0]),
        .I4(Q[5]),
        .I5(Q[2]),
        .O(re_prev_i_3__0_n_0));
  FDRE re_prev_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(reg_1_8_re),
        .Q(\reg_1_8_10/re_prev ),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_15_g_register" *) 
module ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_g_register__parameterized2_48
   (reg_3_33,
    \q_reg[0]_0 ,
    coreclk);
  output [0:0]reg_3_33;
  input \q_reg[0]_0 ;
  input coreclk;

  wire coreclk;
  wire \q_reg[0]_0 ;
  wire [0:0]reg_3_33;

  FDRE #(
    .INIT(1'b0)) 
    \q_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\q_reg[0]_0 ),
        .Q(reg_3_33),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_15_g_register" *) 
module ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_g_register__parameterized2_56
   (reg_3_8,
    \q_reg[0]_0 ,
    reg_3_8_re,
    \q_reg[0]_1 ,
    \q_reg[0]_2 ,
    coreclk,
    \rddata_out_reg[7] ,
    \rddata_out_reg[7]_0 ,
    \rddata_out_reg[7]_1 ,
    \rddata_out_reg[7]_2 ,
    \rddata_out_reg[7]_3 ,
    re_prev_reg,
    Q,
    re_prev_reg_0,
    re_prev_reg_1,
    re_prev_reg_2,
    \rddata_out_reg[10] ,
    \rddata_out_reg[10]_0 ,
    \rddata_out_reg[10]_1 );
  output [0:0]reg_3_8;
  output \q_reg[0]_0 ;
  output reg_3_8_re;
  output \q_reg[0]_1 ;
  input \q_reg[0]_2 ;
  input coreclk;
  input \rddata_out_reg[7] ;
  input \rddata_out_reg[7]_0 ;
  input \rddata_out_reg[7]_1 ;
  input \rddata_out_reg[7]_2 ;
  input \rddata_out_reg[7]_3 ;
  input re_prev_reg;
  input [1:0]Q;
  input re_prev_reg_0;
  input re_prev_reg_1;
  input re_prev_reg_2;
  input \rddata_out_reg[10] ;
  input \rddata_out_reg[10]_0 ;
  input \rddata_out_reg[10]_1 ;

  wire [1:0]Q;
  wire coreclk;
  wire \q_reg[0]_0 ;
  wire \q_reg[0]_1 ;
  wire \q_reg[0]_2 ;
  wire \rddata_out_reg[10] ;
  wire \rddata_out_reg[10]_0 ;
  wire \rddata_out_reg[10]_1 ;
  wire \rddata_out_reg[7] ;
  wire \rddata_out_reg[7]_0 ;
  wire \rddata_out_reg[7]_1 ;
  wire \rddata_out_reg[7]_2 ;
  wire \rddata_out_reg[7]_3 ;
  wire re_prev_reg;
  wire re_prev_reg_0;
  wire re_prev_reg_1;
  wire re_prev_reg_2;
  wire [0:0]reg_3_8;
  wire reg_3_8_re;

  FDRE #(
    .INIT(1'b0)) 
    \q_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\q_reg[0]_2 ),
        .Q(reg_3_8),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hFF00DFDF)) 
    \rddata_out[10]_i_7 
       (.I0(reg_3_8),
        .I1(\rddata_out_reg[10] ),
        .I2(\rddata_out_reg[10]_0 ),
        .I3(\rddata_out_reg[10]_1 ),
        .I4(\rddata_out_reg[7]_0 ),
        .O(\q_reg[0]_1 ));
  LUT6 #(
    .INIT(64'hF7000700FFFFFFFF)) 
    \rddata_out[7]_i_4 
       (.I0(\rddata_out_reg[7] ),
        .I1(reg_3_8),
        .I2(\rddata_out_reg[7]_0 ),
        .I3(\rddata_out_reg[7]_1 ),
        .I4(\rddata_out_reg[7]_2 ),
        .I5(\rddata_out_reg[7]_3 ),
        .O(\q_reg[0]_0 ));
  LUT6 #(
    .INIT(64'h0000000000000008)) 
    re_prev_i_1__1
       (.I0(re_prev_reg),
        .I1(Q[1]),
        .I2(re_prev_reg_0),
        .I3(re_prev_reg_1),
        .I4(Q[0]),
        .I5(re_prev_reg_2),
        .O(reg_3_8_re));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_15_g_register" *) 
module ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_g_register__parameterized2_57
   (re_prev_reg_0,
    reg_3_8_re,
    coreclk,
    pcs_rx_link_up_core_sync_int,
    reg_3_8,
    \q_reg[0] );
  output re_prev_reg_0;
  input reg_3_8_re;
  input coreclk;
  input pcs_rx_link_up_core_sync_int;
  input [0:0]reg_3_8;
  input \q_reg[0] ;

  wire coreclk;
  wire pcs_rx_link_up_core_sync_int;
  wire \q_reg[0] ;
  wire re_prev_reg_0;
  wire [0:0]reg_3_8;
  wire \reg_3_8_10/re_prev ;
  wire reg_3_8_re;

  LUT5 #(
    .INIT(32'h0202DF0F)) 
    \q[0]_i_1__7 
       (.I0(reg_3_8_re),
        .I1(\reg_3_8_10/re_prev ),
        .I2(pcs_rx_link_up_core_sync_int),
        .I3(reg_3_8),
        .I4(\q_reg[0] ),
        .O(re_prev_reg_0));
  FDRE re_prev_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(reg_3_8_re),
        .Q(\reg_3_8_10/re_prev ),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_15_g_register" *) 
module ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_g_register__parameterized3
   (Q,
    SR,
    \q_reg[5]_0 ,
    coreclk);
  output [5:0]Q;
  input [0:0]SR;
  input [5:0]\q_reg[5]_0 ;
  input coreclk;

  wire [5:0]Q;
  wire [0:0]SR;
  wire coreclk;
  wire [5:0]\q_reg[5]_0 ;

  FDRE #(
    .INIT(1'b0)) 
    \q_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\q_reg[5]_0 [0]),
        .Q(Q[0]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[1] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\q_reg[5]_0 [1]),
        .Q(Q[1]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[2] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\q_reg[5]_0 [2]),
        .Q(Q[2]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[3] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\q_reg[5]_0 [3]),
        .Q(Q[3]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[4] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\q_reg[5]_0 [4]),
        .Q(Q[4]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[5] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\q_reg[5]_0 [5]),
        .Q(Q[5]),
        .R(SR));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_15_g_register" *) 
module ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_g_register__parameterized4
   (\q_reg[2]_0 ,
    Q,
    pseudo_rand_seeds_int,
    \rddata_out_reg[2] ,
    \rddata_out_reg[2]_0 ,
    \rddata_out_reg[2]_1 ,
    \rddata_out[2]_i_5_0 ,
    \rddata_out[2]_i_5_1 ,
    \rddata_out[2]_i_5_2 ,
    SR,
    \q_reg[7]_0 ,
    coreclk);
  output \q_reg[2]_0 ;
  output [6:0]Q;
  input [3:0]pseudo_rand_seeds_int;
  input \rddata_out_reg[2] ;
  input \rddata_out_reg[2]_0 ;
  input \rddata_out_reg[2]_1 ;
  input \rddata_out[2]_i_5_0 ;
  input \rddata_out[2]_i_5_1 ;
  input \rddata_out[2]_i_5_2 ;
  input [0:0]SR;
  input [7:0]\q_reg[7]_0 ;
  input coreclk;

  wire [6:0]Q;
  wire [0:0]SR;
  wire coreclk;
  wire [3:0]pseudo_rand_seeds_int;
  wire \q_reg[2]_0 ;
  wire [7:0]\q_reg[7]_0 ;
  wire \q_reg_n_0_[2] ;
  wire \rddata_out[2]_i_5_0 ;
  wire \rddata_out[2]_i_5_1 ;
  wire \rddata_out[2]_i_5_2 ;
  wire \rddata_out[2]_i_8_n_0 ;
  wire \rddata_out_reg[2] ;
  wire \rddata_out_reg[2]_0 ;
  wire \rddata_out_reg[2]_1 ;

  FDRE #(
    .INIT(1'b0)) 
    \q_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\q_reg[7]_0 [0]),
        .Q(Q[0]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[1] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\q_reg[7]_0 [1]),
        .Q(Q[1]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[2] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\q_reg[7]_0 [2]),
        .Q(\q_reg_n_0_[2] ),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[3] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\q_reg[7]_0 [3]),
        .Q(Q[2]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[4] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\q_reg[7]_0 [4]),
        .Q(Q[3]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[5] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\q_reg[7]_0 [5]),
        .Q(Q[4]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[6] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\q_reg[7]_0 [6]),
        .Q(Q[5]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[7] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\q_reg[7]_0 [7]),
        .Q(Q[6]),
        .R(SR));
  LUT6 #(
    .INIT(64'hF0AAFFEEF0AAF0EE)) 
    \rddata_out[2]_i_5 
       (.I0(\rddata_out[2]_i_8_n_0 ),
        .I1(pseudo_rand_seeds_int[2]),
        .I2(\rddata_out_reg[2] ),
        .I3(\rddata_out_reg[2]_0 ),
        .I4(\rddata_out_reg[2]_1 ),
        .I5(pseudo_rand_seeds_int[3]),
        .O(\q_reg[2]_0 ));
  LUT6 #(
    .INIT(64'h0C0A0C0A0CFF0C0A)) 
    \rddata_out[2]_i_8 
       (.I0(\q_reg_n_0_[2] ),
        .I1(pseudo_rand_seeds_int[1]),
        .I2(\rddata_out[2]_i_5_0 ),
        .I3(\rddata_out[2]_i_5_1 ),
        .I4(pseudo_rand_seeds_int[0]),
        .I5(\rddata_out[2]_i_5_2 ),
        .O(\rddata_out[2]_i_8_n_0 ));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_15_g_register" *) 
module ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_g_register__parameterized5
   (D,
    \q_reg[5]_0 ,
    \q_reg[8]_0 ,
    \q_reg[1]_0 ,
    \q_reg[15]_0 ,
    \q_reg[13]_0 ,
    \q_reg[12]_0 ,
    \q_reg[0]_0 ,
    \q_reg[0]_1 ,
    \q_reg[0]_2 ,
    Q,
    \q_reg[0]_3 ,
    \rddata_out_reg[1] ,
    \rddata_out_reg[1]_0 ,
    \rddata_out_reg[1]_1 ,
    \rddata_out_reg[1]_2 ,
    \rddata_out_reg[1]_3 ,
    \rddata_out_reg[5] ,
    \rddata_out_reg[5]_0 ,
    \rddata_out_reg[5]_1 ,
    \rddata_out_reg[8] ,
    pseudo_rand_seeds_int,
    \rddata_out_reg[12] ,
    \rddata_out_reg[1]_4 ,
    \rddata_out_reg[1]_5 ,
    \rddata_out[1]_i_2_0 ,
    \rddata_out[1]_i_2_1 ,
    \rddata_out[1]_i_2_2 ,
    \rddata_out_reg[12]_0 ,
    \q_reg[15]_1 ,
    \q_reg[15]_2 ,
    coreclk);
  output [0:0]D;
  output \q_reg[5]_0 ;
  output \q_reg[8]_0 ;
  output \q_reg[1]_0 ;
  output [15:0]\q_reg[15]_0 ;
  output \q_reg[13]_0 ;
  output \q_reg[12]_0 ;
  input \q_reg[0]_0 ;
  input \q_reg[0]_1 ;
  input \q_reg[0]_2 ;
  input [1:0]Q;
  input \q_reg[0]_3 ;
  input \rddata_out_reg[1] ;
  input \rddata_out_reg[1]_0 ;
  input \rddata_out_reg[1]_1 ;
  input \rddata_out_reg[1]_2 ;
  input \rddata_out_reg[1]_3 ;
  input \rddata_out_reg[5] ;
  input \rddata_out_reg[5]_0 ;
  input [1:0]\rddata_out_reg[5]_1 ;
  input \rddata_out_reg[8] ;
  input [11:0]pseudo_rand_seeds_int;
  input [2:0]\rddata_out_reg[12] ;
  input \rddata_out_reg[1]_4 ;
  input \rddata_out_reg[1]_5 ;
  input \rddata_out[1]_i_2_0 ;
  input \rddata_out[1]_i_2_1 ;
  input \rddata_out[1]_i_2_2 ;
  input \rddata_out_reg[12]_0 ;
  input \q_reg[15]_1 ;
  input [15:0]\q_reg[15]_2 ;
  input coreclk;

  wire [0:0]D;
  wire [1:0]Q;
  wire coreclk;
  wire [11:0]pseudo_rand_seeds_int;
  wire \q_reg[0]_0 ;
  wire \q_reg[0]_1 ;
  wire \q_reg[0]_2 ;
  wire \q_reg[0]_3 ;
  wire \q_reg[12]_0 ;
  wire \q_reg[13]_0 ;
  wire [15:0]\q_reg[15]_0 ;
  wire \q_reg[15]_1 ;
  wire [15:0]\q_reg[15]_2 ;
  wire \q_reg[1]_0 ;
  wire \q_reg[5]_0 ;
  wire \q_reg[8]_0 ;
  wire \rddata_out[1]_i_2_0 ;
  wire \rddata_out[1]_i_2_1 ;
  wire \rddata_out[1]_i_2_2 ;
  wire \rddata_out[1]_i_2_n_0 ;
  wire \rddata_out[1]_i_6_n_0 ;
  wire \rddata_out[5]_i_6_n_0 ;
  wire \rddata_out[8]_i_5_n_0 ;
  wire \rddata_out[9]_i_7_n_0 ;
  wire [2:0]\rddata_out_reg[12] ;
  wire \rddata_out_reg[12]_0 ;
  wire \rddata_out_reg[1] ;
  wire \rddata_out_reg[1]_0 ;
  wire \rddata_out_reg[1]_1 ;
  wire \rddata_out_reg[1]_2 ;
  wire \rddata_out_reg[1]_3 ;
  wire \rddata_out_reg[1]_4 ;
  wire \rddata_out_reg[1]_5 ;
  wire \rddata_out_reg[5] ;
  wire \rddata_out_reg[5]_0 ;
  wire [1:0]\rddata_out_reg[5]_1 ;
  wire \rddata_out_reg[8] ;
  wire reg_3_34_we;

  LUT6 #(
    .INIT(64'h0000000002000000)) 
    \q[15]_i_1 
       (.I0(\q_reg[0]_0 ),
        .I1(\q_reg[0]_1 ),
        .I2(\q_reg[0]_2 ),
        .I3(Q[1]),
        .I4(Q[0]),
        .I5(\q_reg[0]_3 ),
        .O(reg_3_34_we));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[0] 
       (.C(coreclk),
        .CE(reg_3_34_we),
        .D(\q_reg[15]_2 [0]),
        .Q(\q_reg[15]_0 [0]),
        .R(\q_reg[15]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[10] 
       (.C(coreclk),
        .CE(reg_3_34_we),
        .D(\q_reg[15]_2 [10]),
        .Q(\q_reg[15]_0 [10]),
        .R(\q_reg[15]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[11] 
       (.C(coreclk),
        .CE(reg_3_34_we),
        .D(\q_reg[15]_2 [11]),
        .Q(\q_reg[15]_0 [11]),
        .R(\q_reg[15]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[12] 
       (.C(coreclk),
        .CE(reg_3_34_we),
        .D(\q_reg[15]_2 [12]),
        .Q(\q_reg[15]_0 [12]),
        .R(\q_reg[15]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[13] 
       (.C(coreclk),
        .CE(reg_3_34_we),
        .D(\q_reg[15]_2 [13]),
        .Q(\q_reg[15]_0 [13]),
        .R(\q_reg[15]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[14] 
       (.C(coreclk),
        .CE(reg_3_34_we),
        .D(\q_reg[15]_2 [14]),
        .Q(\q_reg[15]_0 [14]),
        .R(\q_reg[15]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[15] 
       (.C(coreclk),
        .CE(reg_3_34_we),
        .D(\q_reg[15]_2 [15]),
        .Q(\q_reg[15]_0 [15]),
        .R(\q_reg[15]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[1] 
       (.C(coreclk),
        .CE(reg_3_34_we),
        .D(\q_reg[15]_2 [1]),
        .Q(\q_reg[15]_0 [1]),
        .R(\q_reg[15]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[2] 
       (.C(coreclk),
        .CE(reg_3_34_we),
        .D(\q_reg[15]_2 [2]),
        .Q(\q_reg[15]_0 [2]),
        .R(\q_reg[15]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[3] 
       (.C(coreclk),
        .CE(reg_3_34_we),
        .D(\q_reg[15]_2 [3]),
        .Q(\q_reg[15]_0 [3]),
        .R(\q_reg[15]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[4] 
       (.C(coreclk),
        .CE(reg_3_34_we),
        .D(\q_reg[15]_2 [4]),
        .Q(\q_reg[15]_0 [4]),
        .R(\q_reg[15]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[5] 
       (.C(coreclk),
        .CE(reg_3_34_we),
        .D(\q_reg[15]_2 [5]),
        .Q(\q_reg[15]_0 [5]),
        .R(\q_reg[15]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[6] 
       (.C(coreclk),
        .CE(reg_3_34_we),
        .D(\q_reg[15]_2 [6]),
        .Q(\q_reg[15]_0 [6]),
        .R(\q_reg[15]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[7] 
       (.C(coreclk),
        .CE(reg_3_34_we),
        .D(\q_reg[15]_2 [7]),
        .Q(\q_reg[15]_0 [7]),
        .R(\q_reg[15]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[8] 
       (.C(coreclk),
        .CE(reg_3_34_we),
        .D(\q_reg[15]_2 [8]),
        .Q(\q_reg[15]_0 [8]),
        .R(\q_reg[15]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[9] 
       (.C(coreclk),
        .CE(reg_3_34_we),
        .D(\q_reg[15]_2 [9]),
        .Q(\q_reg[15]_0 [9]),
        .R(\q_reg[15]_1 ));
  LUT6 #(
    .INIT(64'h44F444F4FFFF44F4)) 
    \rddata_out[12]_i_6 
       (.I0(\rddata_out_reg[12]_0 ),
        .I1(\q_reg[15]_0 [12]),
        .I2(pseudo_rand_seeds_int[4]),
        .I3(\rddata_out_reg[8] ),
        .I4(\rddata_out_reg[12] [2]),
        .I5(\rddata_out_reg[5]_0 ),
        .O(\q_reg[12]_0 ));
  LUT5 #(
    .INIT(32'hC0EEC022)) 
    \rddata_out[13]_i_9 
       (.I0(\q_reg[15]_0 [13]),
        .I1(\rddata_out[1]_i_2_0 ),
        .I2(pseudo_rand_seeds_int[5]),
        .I3(\rddata_out[1]_i_2_1 ),
        .I4(pseudo_rand_seeds_int[10]),
        .O(\q_reg[13]_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF20E02020)) 
    \rddata_out[1]_i_1 
       (.I0(\rddata_out[1]_i_2_n_0 ),
        .I1(\rddata_out_reg[1] ),
        .I2(\rddata_out_reg[1]_0 ),
        .I3(\rddata_out_reg[1]_1 ),
        .I4(\rddata_out_reg[1]_2 ),
        .I5(\rddata_out_reg[1]_3 ),
        .O(D));
  LUT6 #(
    .INIT(64'hF0AAFFEEF0AAF0EE)) 
    \rddata_out[1]_i_2 
       (.I0(\rddata_out[1]_i_6_n_0 ),
        .I1(pseudo_rand_seeds_int[6]),
        .I2(\rddata_out_reg[1]_4 ),
        .I3(\rddata_out_reg[5] ),
        .I4(\rddata_out_reg[1]_5 ),
        .I5(pseudo_rand_seeds_int[11]),
        .O(\rddata_out[1]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h00FF44F4000044F4)) 
    \rddata_out[1]_i_6 
       (.I0(\rddata_out[1]_i_2_1 ),
        .I1(\q_reg[15]_0 [1]),
        .I2(\rddata_out_reg[5]_1 [0]),
        .I3(\rddata_out[1]_i_2_2 ),
        .I4(\rddata_out[1]_i_2_0 ),
        .I5(pseudo_rand_seeds_int[0]),
        .O(\rddata_out[1]_i_6_n_0 ));
  LUT5 #(
    .INIT(32'hABAAABAB)) 
    \rddata_out[5]_i_3 
       (.I0(\rddata_out_reg[1] ),
        .I1(\rddata_out[5]_i_6_n_0 ),
        .I2(\rddata_out_reg[5] ),
        .I3(\rddata_out_reg[5]_0 ),
        .I4(\rddata_out_reg[5]_1 [1]),
        .O(\q_reg[5]_0 ));
  LUT5 #(
    .INIT(32'hC0EEC022)) 
    \rddata_out[5]_i_6 
       (.I0(\q_reg[15]_0 [5]),
        .I1(\rddata_out[1]_i_2_0 ),
        .I2(pseudo_rand_seeds_int[1]),
        .I3(\rddata_out[1]_i_2_1 ),
        .I4(pseudo_rand_seeds_int[7]),
        .O(\rddata_out[5]_i_6_n_0 ));
  LUT5 #(
    .INIT(32'hABAAABAB)) 
    \rddata_out[8]_i_3 
       (.I0(\rddata_out_reg[1] ),
        .I1(\rddata_out[8]_i_5_n_0 ),
        .I2(\rddata_out_reg[5] ),
        .I3(\rddata_out_reg[8] ),
        .I4(pseudo_rand_seeds_int[2]),
        .O(\q_reg[8]_0 ));
  LUT6 #(
    .INIT(64'h000C000CFFAE00AE)) 
    \rddata_out[8]_i_5 
       (.I0(\q_reg[15]_0 [8]),
        .I1(\rddata_out_reg[12] [0]),
        .I2(\rddata_out[1]_i_2_2 ),
        .I3(\rddata_out[1]_i_2_0 ),
        .I4(pseudo_rand_seeds_int[8]),
        .I5(\rddata_out[1]_i_2_1 ),
        .O(\rddata_out[8]_i_5_n_0 ));
  LUT5 #(
    .INIT(32'hABAAABAB)) 
    \rddata_out[9]_i_4 
       (.I0(\rddata_out_reg[1] ),
        .I1(\rddata_out[9]_i_7_n_0 ),
        .I2(\rddata_out_reg[5] ),
        .I3(\rddata_out_reg[5]_0 ),
        .I4(\rddata_out_reg[12] [1]),
        .O(\q_reg[1]_0 ));
  LUT5 #(
    .INIT(32'hC0EEC022)) 
    \rddata_out[9]_i_7 
       (.I0(\q_reg[15]_0 [9]),
        .I1(\rddata_out[1]_i_2_0 ),
        .I2(pseudo_rand_seeds_int[3]),
        .I3(\rddata_out[1]_i_2_1 ),
        .I4(pseudo_rand_seeds_int[9]),
        .O(\rddata_out[9]_i_7_n_0 ));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_15_g_register" *) 
module ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_g_register__parameterized5_50
   (\addr_reg_reg[3] ,
    \addr_reg_reg[18] ,
    \addr_reg_reg[17] ,
    \q_reg[6]_0 ,
    \q_reg[14]_0 ,
    \q_reg[15]_0 ,
    \q_reg[3]_0 ,
    \q_reg[15]_1 ,
    \q_reg[7]_0 ,
    \q_reg[10]_0 ,
    \q_reg[11]_0 ,
    \q_reg[4]_0 ,
    Q,
    \q_reg[0]_0 ,
    \q_reg[0]_1 ,
    \rddata_out_reg[6] ,
    \rddata_out_reg[6]_0 ,
    \rddata_out_reg[14] ,
    \rddata_out_reg[14]_0 ,
    \rddata_out_reg[14]_1 ,
    \rddata_out_reg[14]_2 ,
    \rddata_out_reg[14]_3 ,
    \rddata_out_reg[3] ,
    pseudo_rand_seeds_int,
    \rddata_out_reg[3]_0 ,
    \rddata_out[7]_i_5 ,
    \rddata_out_reg[10] ,
    \rddata_out_reg[10]_0 ,
    \rddata_out[11]_i_2 ,
    reg_3_33,
    \rddata_out[4]_i_3 ,
    \q_reg[0]_2 ,
    \q_reg[15]_2 ,
    coreclk);
  output \addr_reg_reg[3] ;
  output \addr_reg_reg[18] ;
  output \addr_reg_reg[17] ;
  output \q_reg[6]_0 ;
  output \q_reg[14]_0 ;
  output \q_reg[15]_0 ;
  output \q_reg[3]_0 ;
  output [15:0]\q_reg[15]_1 ;
  output \q_reg[7]_0 ;
  output \q_reg[10]_0 ;
  output \q_reg[11]_0 ;
  output \q_reg[4]_0 ;
  input [12:0]Q;
  input \q_reg[0]_0 ;
  input \q_reg[0]_1 ;
  input \rddata_out_reg[6] ;
  input \rddata_out_reg[6]_0 ;
  input \rddata_out_reg[14] ;
  input \rddata_out_reg[14]_0 ;
  input \rddata_out_reg[14]_1 ;
  input \rddata_out_reg[14]_2 ;
  input \rddata_out_reg[14]_3 ;
  input \rddata_out_reg[3] ;
  input [13:0]pseudo_rand_seeds_int;
  input \rddata_out_reg[3]_0 ;
  input [3:0]\rddata_out[7]_i_5 ;
  input \rddata_out_reg[10] ;
  input \rddata_out_reg[10]_0 ;
  input [1:0]\rddata_out[11]_i_2 ;
  input [1:0]reg_3_33;
  input \rddata_out[4]_i_3 ;
  input \q_reg[0]_2 ;
  input [15:0]\q_reg[15]_2 ;
  input coreclk;

  wire [12:0]Q;
  wire \addr_reg_reg[17] ;
  wire \addr_reg_reg[18] ;
  wire \addr_reg_reg[3] ;
  wire coreclk;
  wire [13:0]pseudo_rand_seeds_int;
  wire \q_reg[0]_0 ;
  wire \q_reg[0]_1 ;
  wire \q_reg[0]_2 ;
  wire \q_reg[10]_0 ;
  wire \q_reg[11]_0 ;
  wire \q_reg[14]_0 ;
  wire \q_reg[15]_0 ;
  wire [15:0]\q_reg[15]_1 ;
  wire [15:0]\q_reg[15]_2 ;
  wire \q_reg[3]_0 ;
  wire \q_reg[4]_0 ;
  wire \q_reg[6]_0 ;
  wire \q_reg[7]_0 ;
  wire [1:0]\rddata_out[11]_i_2 ;
  wire \rddata_out[14]_i_10_n_0 ;
  wire \rddata_out[15]_i_12_n_0 ;
  wire \rddata_out[3]_i_11_n_0 ;
  wire \rddata_out[4]_i_3 ;
  wire \rddata_out[6]_i_7_n_0 ;
  wire [3:0]\rddata_out[7]_i_5 ;
  wire \rddata_out_reg[10] ;
  wire \rddata_out_reg[10]_0 ;
  wire \rddata_out_reg[14] ;
  wire \rddata_out_reg[14]_0 ;
  wire \rddata_out_reg[14]_1 ;
  wire \rddata_out_reg[14]_2 ;
  wire \rddata_out_reg[14]_3 ;
  wire \rddata_out_reg[3] ;
  wire \rddata_out_reg[3]_0 ;
  wire \rddata_out_reg[6] ;
  wire \rddata_out_reg[6]_0 ;
  wire [1:0]reg_3_33;
  wire reg_3_35_we;

  LUT6 #(
    .INIT(64'h0000000000000004)) 
    \q[15]_i_1__5 
       (.I0(\q_reg[0]_0 ),
        .I1(Q[0]),
        .I2(\addr_reg_reg[18] ),
        .I3(\addr_reg_reg[17] ),
        .I4(\q_reg[0]_1 ),
        .I5(\addr_reg_reg[3] ),
        .O(reg_3_35_we));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \q[15]_i_3__2 
       (.I0(Q[11]),
        .I1(Q[12]),
        .I2(Q[4]),
        .I3(Q[2]),
        .O(\addr_reg_reg[18] ));
  LUT4 #(
    .INIT(16'h7FFF)) 
    \q[15]_i_4__2 
       (.I0(Q[10]),
        .I1(Q[1]),
        .I2(Q[9]),
        .I3(Q[5]),
        .O(\addr_reg_reg[17] ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \q[15]_i_5__3 
       (.I0(Q[3]),
        .I1(Q[7]),
        .I2(Q[8]),
        .I3(Q[6]),
        .O(\addr_reg_reg[3] ));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[0] 
       (.C(coreclk),
        .CE(reg_3_35_we),
        .D(\q_reg[15]_2 [0]),
        .Q(\q_reg[15]_1 [0]),
        .R(\q_reg[0]_2 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[10] 
       (.C(coreclk),
        .CE(reg_3_35_we),
        .D(\q_reg[15]_2 [10]),
        .Q(\q_reg[15]_1 [10]),
        .R(\q_reg[0]_2 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[11] 
       (.C(coreclk),
        .CE(reg_3_35_we),
        .D(\q_reg[15]_2 [11]),
        .Q(\q_reg[15]_1 [11]),
        .R(\q_reg[0]_2 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[12] 
       (.C(coreclk),
        .CE(reg_3_35_we),
        .D(\q_reg[15]_2 [12]),
        .Q(\q_reg[15]_1 [12]),
        .R(\q_reg[0]_2 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[13] 
       (.C(coreclk),
        .CE(reg_3_35_we),
        .D(\q_reg[15]_2 [13]),
        .Q(\q_reg[15]_1 [13]),
        .R(\q_reg[0]_2 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[14] 
       (.C(coreclk),
        .CE(reg_3_35_we),
        .D(\q_reg[15]_2 [14]),
        .Q(\q_reg[15]_1 [14]),
        .R(\q_reg[0]_2 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[15] 
       (.C(coreclk),
        .CE(reg_3_35_we),
        .D(\q_reg[15]_2 [15]),
        .Q(\q_reg[15]_1 [15]),
        .R(\q_reg[0]_2 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[1] 
       (.C(coreclk),
        .CE(reg_3_35_we),
        .D(\q_reg[15]_2 [1]),
        .Q(\q_reg[15]_1 [1]),
        .R(\q_reg[0]_2 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[2] 
       (.C(coreclk),
        .CE(reg_3_35_we),
        .D(\q_reg[15]_2 [2]),
        .Q(\q_reg[15]_1 [2]),
        .R(\q_reg[0]_2 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[3] 
       (.C(coreclk),
        .CE(reg_3_35_we),
        .D(\q_reg[15]_2 [3]),
        .Q(\q_reg[15]_1 [3]),
        .R(\q_reg[0]_2 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[4] 
       (.C(coreclk),
        .CE(reg_3_35_we),
        .D(\q_reg[15]_2 [4]),
        .Q(\q_reg[15]_1 [4]),
        .R(\q_reg[0]_2 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[5] 
       (.C(coreclk),
        .CE(reg_3_35_we),
        .D(\q_reg[15]_2 [5]),
        .Q(\q_reg[15]_1 [5]),
        .R(\q_reg[0]_2 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[6] 
       (.C(coreclk),
        .CE(reg_3_35_we),
        .D(\q_reg[15]_2 [6]),
        .Q(\q_reg[15]_1 [6]),
        .R(\q_reg[0]_2 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[7] 
       (.C(coreclk),
        .CE(reg_3_35_we),
        .D(\q_reg[15]_2 [7]),
        .Q(\q_reg[15]_1 [7]),
        .R(\q_reg[0]_2 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[8] 
       (.C(coreclk),
        .CE(reg_3_35_we),
        .D(\q_reg[15]_2 [8]),
        .Q(\q_reg[15]_1 [8]),
        .R(\q_reg[0]_2 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[9] 
       (.C(coreclk),
        .CE(reg_3_35_we),
        .D(\q_reg[15]_2 [9]),
        .Q(\q_reg[15]_1 [9]),
        .R(\q_reg[0]_2 ));
  LUT6 #(
    .INIT(64'h505F3030505F3F3F)) 
    \rddata_out[10]_i_5 
       (.I0(\q_reg[15]_1 [10]),
        .I1(pseudo_rand_seeds_int[10]),
        .I2(\rddata_out_reg[10] ),
        .I3(\rddata_out[11]_i_2 [0]),
        .I4(\rddata_out_reg[10]_0 ),
        .I5(pseudo_rand_seeds_int[3]),
        .O(\q_reg[10]_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \rddata_out[11]_i_6 
       (.I0(\q_reg[15]_1 [11]),
        .I1(pseudo_rand_seeds_int[11]),
        .I2(\rddata_out_reg[10] ),
        .I3(\rddata_out[11]_i_2 [1]),
        .I4(\rddata_out_reg[10]_0 ),
        .I5(pseudo_rand_seeds_int[4]),
        .O(\q_reg[11]_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \rddata_out[14]_i_10 
       (.I0(\q_reg[15]_1 [14]),
        .I1(pseudo_rand_seeds_int[12]),
        .I2(\rddata_out_reg[10] ),
        .I3(reg_3_33[0]),
        .I4(\rddata_out_reg[10]_0 ),
        .I5(pseudo_rand_seeds_int[5]),
        .O(\rddata_out[14]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF4444F444)) 
    \rddata_out[14]_i_4 
       (.I0(\rddata_out[14]_i_10_n_0 ),
        .I1(\rddata_out_reg[14] ),
        .I2(\rddata_out_reg[14]_0 ),
        .I3(\rddata_out_reg[14]_1 ),
        .I4(\rddata_out_reg[14]_2 ),
        .I5(\rddata_out_reg[14]_3 ),
        .O(\q_reg[14]_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \rddata_out[15]_i_12 
       (.I0(\q_reg[15]_1 [15]),
        .I1(pseudo_rand_seeds_int[13]),
        .I2(\rddata_out_reg[10] ),
        .I3(reg_3_33[1]),
        .I4(\rddata_out_reg[10]_0 ),
        .I5(pseudo_rand_seeds_int[6]),
        .O(\rddata_out[15]_i_12_n_0 ));
  LUT2 #(
    .INIT(4'hB)) 
    \rddata_out[15]_i_4 
       (.I0(\rddata_out[15]_i_12_n_0 ),
        .I1(\rddata_out_reg[14] ),
        .O(\q_reg[15]_0 ));
  LUT5 #(
    .INIT(32'h404F4040)) 
    \rddata_out[3]_i_11 
       (.I0(\rddata_out[4]_i_3 ),
        .I1(\q_reg[15]_1 [3]),
        .I2(\rddata_out_reg[10] ),
        .I3(\rddata_out_reg[10]_0 ),
        .I4(pseudo_rand_seeds_int[0]),
        .O(\rddata_out[3]_i_11_n_0 ));
  LUT6 #(
    .INIT(64'h4544555545444544)) 
    \rddata_out[3]_i_5 
       (.I0(\rddata_out_reg[14]_3 ),
        .I1(\rddata_out[3]_i_11_n_0 ),
        .I2(\rddata_out_reg[3] ),
        .I3(pseudo_rand_seeds_int[7]),
        .I4(\rddata_out_reg[3]_0 ),
        .I5(\rddata_out[7]_i_5 [0]),
        .O(\q_reg[3]_0 ));
  LUT4 #(
    .INIT(16'h0B08)) 
    \rddata_out[4]_i_7 
       (.I0(\q_reg[15]_1 [4]),
        .I1(\rddata_out_reg[10] ),
        .I2(\rddata_out[4]_i_3 ),
        .I3(\rddata_out[7]_i_5 [1]),
        .O(\q_reg[4]_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \rddata_out[6]_i_3 
       (.I0(\rddata_out[6]_i_7_n_0 ),
        .I1(\rddata_out_reg[6] ),
        .I2(\rddata_out_reg[6]_0 ),
        .O(\q_reg[6]_0 ));
  LUT6 #(
    .INIT(64'h505F3030505F3F3F)) 
    \rddata_out[6]_i_7 
       (.I0(\q_reg[15]_1 [6]),
        .I1(pseudo_rand_seeds_int[8]),
        .I2(\rddata_out_reg[10] ),
        .I3(\rddata_out[7]_i_5 [2]),
        .I4(\rddata_out_reg[10]_0 ),
        .I5(pseudo_rand_seeds_int[1]),
        .O(\rddata_out[6]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \rddata_out[7]_i_9 
       (.I0(\q_reg[15]_1 [7]),
        .I1(pseudo_rand_seeds_int[9]),
        .I2(\rddata_out_reg[10] ),
        .I3(\rddata_out[7]_i_5 [3]),
        .I4(\rddata_out_reg[10]_0 ),
        .I5(pseudo_rand_seeds_int[2]),
        .O(\q_reg[7]_0 ));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_15_g_register" *) 
module ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_g_register__parameterized5_51
   (\q_reg[4]_0 ,
    pseudo_rand_seeds_int,
    \q_reg[12]_0 ,
    \q_reg[0]_0 ,
    Q,
    \q_reg[0]_1 ,
    \q_reg[0]_2 ,
    \q_reg[0]_3 ,
    \q_reg[0]_4 ,
    \rddata_out_reg[4] ,
    \rddata_out_reg[4]_0 ,
    \rddata_out_reg[4]_1 ,
    \rddata_out_reg[0] ,
    \rddata_out_reg[4]_2 ,
    \rddata_out_reg[0]_0 ,
    \rddata_out_reg[0]_1 ,
    \rddata_out_reg[0]_2 ,
    \rddata_out_reg[0]_3 ,
    \rddata_out[0]_i_5_0 ,
    \rddata_out[0]_i_5_1 ,
    \q_reg[15]_0 ,
    \q_reg[15]_1 ,
    coreclk);
  output \q_reg[4]_0 ;
  output [15:0]pseudo_rand_seeds_int;
  output \q_reg[12]_0 ;
  output \q_reg[0]_0 ;
  input [5:0]Q;
  input \q_reg[0]_1 ;
  input \q_reg[0]_2 ;
  input \q_reg[0]_3 ;
  input \q_reg[0]_4 ;
  input \rddata_out_reg[4] ;
  input \rddata_out_reg[4]_0 ;
  input \rddata_out_reg[4]_1 ;
  input [2:0]\rddata_out_reg[0] ;
  input \rddata_out_reg[4]_2 ;
  input \rddata_out_reg[0]_0 ;
  input \rddata_out_reg[0]_1 ;
  input \rddata_out_reg[0]_2 ;
  input [0:0]\rddata_out_reg[0]_3 ;
  input \rddata_out[0]_i_5_0 ;
  input \rddata_out[0]_i_5_1 ;
  input \q_reg[15]_0 ;
  input [15:0]\q_reg[15]_1 ;
  input coreclk;

  wire [5:0]Q;
  wire coreclk;
  wire [15:0]pseudo_rand_seeds_int;
  wire \q[15]_i_3__4_n_0 ;
  wire \q[15]_i_5__2_n_0 ;
  wire \q_reg[0]_0 ;
  wire \q_reg[0]_1 ;
  wire \q_reg[0]_2 ;
  wire \q_reg[0]_3 ;
  wire \q_reg[0]_4 ;
  wire \q_reg[12]_0 ;
  wire \q_reg[15]_0 ;
  wire [15:0]\q_reg[15]_1 ;
  wire \q_reg[4]_0 ;
  wire \rddata_out[0]_i_11_n_0 ;
  wire \rddata_out[0]_i_5_0 ;
  wire \rddata_out[0]_i_5_1 ;
  wire [2:0]\rddata_out_reg[0] ;
  wire \rddata_out_reg[0]_0 ;
  wire \rddata_out_reg[0]_1 ;
  wire \rddata_out_reg[0]_2 ;
  wire [0:0]\rddata_out_reg[0]_3 ;
  wire \rddata_out_reg[4] ;
  wire \rddata_out_reg[4]_0 ;
  wire \rddata_out_reg[4]_1 ;
  wire \rddata_out_reg[4]_2 ;
  wire reg_3_36_we;

  LUT6 #(
    .INIT(64'h0000000000000002)) 
    \q[15]_i_1__2 
       (.I0(\q_reg[0]_1 ),
        .I1(\q[15]_i_3__4_n_0 ),
        .I2(\q_reg[0]_2 ),
        .I3(\q_reg[0]_3 ),
        .I4(\q_reg[0]_4 ),
        .I5(\q[15]_i_5__2_n_0 ),
        .O(reg_3_36_we));
  LUT2 #(
    .INIT(4'h7)) 
    \q[15]_i_3__4 
       (.I0(Q[1]),
        .I1(Q[2]),
        .O(\q[15]_i_3__4_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \q[15]_i_5__2 
       (.I0(Q[0]),
        .I1(Q[4]),
        .I2(Q[5]),
        .I3(Q[3]),
        .O(\q[15]_i_5__2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[0] 
       (.C(coreclk),
        .CE(reg_3_36_we),
        .D(\q_reg[15]_1 [0]),
        .Q(pseudo_rand_seeds_int[0]),
        .R(\q_reg[15]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[10] 
       (.C(coreclk),
        .CE(reg_3_36_we),
        .D(\q_reg[15]_1 [10]),
        .Q(pseudo_rand_seeds_int[10]),
        .R(\q_reg[15]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[11] 
       (.C(coreclk),
        .CE(reg_3_36_we),
        .D(\q_reg[15]_1 [11]),
        .Q(pseudo_rand_seeds_int[11]),
        .R(\q_reg[15]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[12] 
       (.C(coreclk),
        .CE(reg_3_36_we),
        .D(\q_reg[15]_1 [12]),
        .Q(pseudo_rand_seeds_int[12]),
        .R(\q_reg[15]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[13] 
       (.C(coreclk),
        .CE(reg_3_36_we),
        .D(\q_reg[15]_1 [13]),
        .Q(pseudo_rand_seeds_int[13]),
        .R(\q_reg[15]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[14] 
       (.C(coreclk),
        .CE(reg_3_36_we),
        .D(\q_reg[15]_1 [14]),
        .Q(pseudo_rand_seeds_int[14]),
        .R(\q_reg[15]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[15] 
       (.C(coreclk),
        .CE(reg_3_36_we),
        .D(\q_reg[15]_1 [15]),
        .Q(pseudo_rand_seeds_int[15]),
        .R(\q_reg[15]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[1] 
       (.C(coreclk),
        .CE(reg_3_36_we),
        .D(\q_reg[15]_1 [1]),
        .Q(pseudo_rand_seeds_int[1]),
        .R(\q_reg[15]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[2] 
       (.C(coreclk),
        .CE(reg_3_36_we),
        .D(\q_reg[15]_1 [2]),
        .Q(pseudo_rand_seeds_int[2]),
        .R(\q_reg[15]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[3] 
       (.C(coreclk),
        .CE(reg_3_36_we),
        .D(\q_reg[15]_1 [3]),
        .Q(pseudo_rand_seeds_int[3]),
        .R(\q_reg[15]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[4] 
       (.C(coreclk),
        .CE(reg_3_36_we),
        .D(\q_reg[15]_1 [4]),
        .Q(pseudo_rand_seeds_int[4]),
        .R(\q_reg[15]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[5] 
       (.C(coreclk),
        .CE(reg_3_36_we),
        .D(\q_reg[15]_1 [5]),
        .Q(pseudo_rand_seeds_int[5]),
        .R(\q_reg[15]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[6] 
       (.C(coreclk),
        .CE(reg_3_36_we),
        .D(\q_reg[15]_1 [6]),
        .Q(pseudo_rand_seeds_int[6]),
        .R(\q_reg[15]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[7] 
       (.C(coreclk),
        .CE(reg_3_36_we),
        .D(\q_reg[15]_1 [7]),
        .Q(pseudo_rand_seeds_int[7]),
        .R(\q_reg[15]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[8] 
       (.C(coreclk),
        .CE(reg_3_36_we),
        .D(\q_reg[15]_1 [8]),
        .Q(pseudo_rand_seeds_int[8]),
        .R(\q_reg[15]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[9] 
       (.C(coreclk),
        .CE(reg_3_36_we),
        .D(\q_reg[15]_1 [9]),
        .Q(pseudo_rand_seeds_int[9]),
        .R(\q_reg[15]_0 ));
  LUT4 #(
    .INIT(16'h0B08)) 
    \rddata_out[0]_i_11 
       (.I0(pseudo_rand_seeds_int[0]),
        .I1(\rddata_out[0]_i_5_0 ),
        .I2(\rddata_out[0]_i_5_1 ),
        .I3(\rddata_out_reg[0] [0]),
        .O(\rddata_out[0]_i_11_n_0 ));
  LUT6 #(
    .INIT(64'h4544555545444544)) 
    \rddata_out[0]_i_5 
       (.I0(\rddata_out_reg[0]_0 ),
        .I1(\rddata_out[0]_i_11_n_0 ),
        .I2(\rddata_out_reg[0]_1 ),
        .I3(\rddata_out_reg[0] [2]),
        .I4(\rddata_out_reg[0]_2 ),
        .I5(\rddata_out_reg[0]_3 ),
        .O(\q_reg[0]_0 ));
  LUT3 #(
    .INIT(8'hBA)) 
    \rddata_out[12]_i_5 
       (.I0(\rddata_out_reg[4]_0 ),
        .I1(\rddata_out_reg[4] ),
        .I2(pseudo_rand_seeds_int[12]),
        .O(\q_reg[12]_0 ));
  LUT6 #(
    .INIT(64'h000D000D0000000D)) 
    \rddata_out[4]_i_3 
       (.I0(pseudo_rand_seeds_int[4]),
        .I1(\rddata_out_reg[4] ),
        .I2(\rddata_out_reg[4]_0 ),
        .I3(\rddata_out_reg[4]_1 ),
        .I4(\rddata_out_reg[0] [1]),
        .I5(\rddata_out_reg[4]_2 ),
        .O(\q_reg[4]_0 ));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_15_g_register" *) 
module ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_g_register__parameterized5_52
   (D,
    \q_reg[3]_0 ,
    \q_reg[5]_0 ,
    \q_reg[15]_0 ,
    \q_reg[4]_0 ,
    \q_reg[5]_1 ,
    \q_reg[2]_0 ,
    \q_reg[14]_0 ,
    \rddata_out_reg[11] ,
    \rddata_out_reg[11]_0 ,
    reg_3_0_15__0,
    Q,
    \rddata_out_reg[11]_1 ,
    \rddata_out_reg[11]_2 ,
    \rddata_out_reg[11]_3 ,
    \rddata_out_reg[11]_4 ,
    pseudo_rand_seeds_int,
    \rddata_out_reg[3] ,
    \rddata_out_reg[3]_0 ,
    \rddata_out_reg[3]_1 ,
    \rddata_out_reg[13] ,
    \rddata_out_reg[13]_0 ,
    \rddata_out_reg[13]_1 ,
    \rddata_out[14]_i_4 ,
    \rddata_out[14]_i_4_0 ,
    \rddata_out[2]_i_5 ,
    \q_reg[15]_1 ,
    E,
    \q_reg[15]_2 ,
    coreclk);
  output [0:0]D;
  output \q_reg[3]_0 ;
  output \q_reg[5]_0 ;
  output [15:0]\q_reg[15]_0 ;
  output \q_reg[4]_0 ;
  output \q_reg[5]_1 ;
  output \q_reg[2]_0 ;
  output \q_reg[14]_0 ;
  input \rddata_out_reg[11] ;
  input \rddata_out_reg[11]_0 ;
  input reg_3_0_15__0;
  input [0:0]Q;
  input \rddata_out_reg[11]_1 ;
  input \rddata_out_reg[11]_2 ;
  input \rddata_out_reg[11]_3 ;
  input \rddata_out_reg[11]_4 ;
  input [10:0]pseudo_rand_seeds_int;
  input \rddata_out_reg[3] ;
  input \rddata_out_reg[3]_0 ;
  input \rddata_out_reg[3]_1 ;
  input [0:0]\rddata_out_reg[13] ;
  input \rddata_out_reg[13]_0 ;
  input \rddata_out_reg[13]_1 ;
  input \rddata_out[14]_i_4 ;
  input \rddata_out[14]_i_4_0 ;
  input \rddata_out[2]_i_5 ;
  input \q_reg[15]_1 ;
  input [0:0]E;
  input [15:0]\q_reg[15]_2 ;
  input coreclk;

  wire [0:0]D;
  wire [0:0]E;
  wire [0:0]Q;
  wire coreclk;
  wire [10:0]pseudo_rand_seeds_int;
  wire \q_reg[14]_0 ;
  wire [15:0]\q_reg[15]_0 ;
  wire \q_reg[15]_1 ;
  wire [15:0]\q_reg[15]_2 ;
  wire \q_reg[2]_0 ;
  wire \q_reg[3]_0 ;
  wire \q_reg[4]_0 ;
  wire \q_reg[5]_0 ;
  wire \q_reg[5]_1 ;
  wire \rddata_out[11]_i_2_n_0 ;
  wire \rddata_out[11]_i_5_n_0 ;
  wire \rddata_out[13]_i_7_n_0 ;
  wire \rddata_out[14]_i_4 ;
  wire \rddata_out[14]_i_4_0 ;
  wire \rddata_out[2]_i_5 ;
  wire \rddata_out[3]_i_8_n_0 ;
  wire \rddata_out_reg[11] ;
  wire \rddata_out_reg[11]_0 ;
  wire \rddata_out_reg[11]_1 ;
  wire \rddata_out_reg[11]_2 ;
  wire \rddata_out_reg[11]_3 ;
  wire \rddata_out_reg[11]_4 ;
  wire [0:0]\rddata_out_reg[13] ;
  wire \rddata_out_reg[13]_0 ;
  wire \rddata_out_reg[13]_1 ;
  wire \rddata_out_reg[3] ;
  wire \rddata_out_reg[3]_0 ;
  wire \rddata_out_reg[3]_1 ;
  wire reg_3_0_15__0;

  FDRE #(
    .INIT(1'b0)) 
    \q_reg[0] 
       (.C(coreclk),
        .CE(E),
        .D(\q_reg[15]_2 [0]),
        .Q(\q_reg[15]_0 [0]),
        .R(\q_reg[15]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[10] 
       (.C(coreclk),
        .CE(E),
        .D(\q_reg[15]_2 [10]),
        .Q(\q_reg[15]_0 [10]),
        .R(\q_reg[15]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[11] 
       (.C(coreclk),
        .CE(E),
        .D(\q_reg[15]_2 [11]),
        .Q(\q_reg[15]_0 [11]),
        .R(\q_reg[15]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[12] 
       (.C(coreclk),
        .CE(E),
        .D(\q_reg[15]_2 [12]),
        .Q(\q_reg[15]_0 [12]),
        .R(\q_reg[15]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[13] 
       (.C(coreclk),
        .CE(E),
        .D(\q_reg[15]_2 [13]),
        .Q(\q_reg[15]_0 [13]),
        .R(\q_reg[15]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[14] 
       (.C(coreclk),
        .CE(E),
        .D(\q_reg[15]_2 [14]),
        .Q(\q_reg[15]_0 [14]),
        .R(\q_reg[15]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[15] 
       (.C(coreclk),
        .CE(E),
        .D(\q_reg[15]_2 [15]),
        .Q(\q_reg[15]_0 [15]),
        .R(\q_reg[15]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[1] 
       (.C(coreclk),
        .CE(E),
        .D(\q_reg[15]_2 [1]),
        .Q(\q_reg[15]_0 [1]),
        .R(\q_reg[15]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[2] 
       (.C(coreclk),
        .CE(E),
        .D(\q_reg[15]_2 [2]),
        .Q(\q_reg[15]_0 [2]),
        .R(\q_reg[15]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[3] 
       (.C(coreclk),
        .CE(E),
        .D(\q_reg[15]_2 [3]),
        .Q(\q_reg[15]_0 [3]),
        .R(\q_reg[15]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[4] 
       (.C(coreclk),
        .CE(E),
        .D(\q_reg[15]_2 [4]),
        .Q(\q_reg[15]_0 [4]),
        .R(\q_reg[15]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[5] 
       (.C(coreclk),
        .CE(E),
        .D(\q_reg[15]_2 [5]),
        .Q(\q_reg[15]_0 [5]),
        .R(\q_reg[15]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[6] 
       (.C(coreclk),
        .CE(E),
        .D(\q_reg[15]_2 [6]),
        .Q(\q_reg[15]_0 [6]),
        .R(\q_reg[15]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[7] 
       (.C(coreclk),
        .CE(E),
        .D(\q_reg[15]_2 [7]),
        .Q(\q_reg[15]_0 [7]),
        .R(\q_reg[15]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[8] 
       (.C(coreclk),
        .CE(E),
        .D(\q_reg[15]_2 [8]),
        .Q(\q_reg[15]_0 [8]),
        .R(\q_reg[15]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[9] 
       (.C(coreclk),
        .CE(E),
        .D(\q_reg[15]_2 [9]),
        .Q(\q_reg[15]_0 [9]),
        .R(\q_reg[15]_1 ));
  LUT6 #(
    .INIT(64'h00080000AAAAAAAA)) 
    \rddata_out[11]_i_1 
       (.I0(\rddata_out_reg[11] ),
        .I1(\rddata_out[11]_i_2_n_0 ),
        .I2(\rddata_out_reg[11]_0 ),
        .I3(reg_3_0_15__0),
        .I4(Q),
        .I5(\rddata_out_reg[11]_1 ),
        .O(D));
  LUT4 #(
    .INIT(16'hFEAE)) 
    \rddata_out[11]_i_2 
       (.I0(\rddata_out_reg[11]_2 ),
        .I1(\rddata_out[11]_i_5_n_0 ),
        .I2(\rddata_out_reg[11]_3 ),
        .I3(\rddata_out_reg[11]_4 ),
        .O(\rddata_out[11]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hC0EEC022)) 
    \rddata_out[11]_i_5 
       (.I0(\q_reg[15]_0 [11]),
        .I1(\rddata_out[14]_i_4 ),
        .I2(pseudo_rand_seeds_int[5]),
        .I3(\rddata_out[14]_i_4_0 ),
        .I4(pseudo_rand_seeds_int[9]),
        .O(\rddata_out[11]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hBBBBBBBBBBBBAABA)) 
    \rddata_out[13]_i_3 
       (.I0(\rddata_out_reg[11]_2 ),
        .I1(\rddata_out[13]_i_7_n_0 ),
        .I2(\rddata_out_reg[13] ),
        .I3(\rddata_out_reg[13]_0 ),
        .I4(\rddata_out_reg[3]_0 ),
        .I5(\rddata_out_reg[13]_1 ),
        .O(\q_reg[5]_0 ));
  LUT6 #(
    .INIT(64'h0CCC04040CCCC4C4)) 
    \rddata_out[13]_i_7 
       (.I0(\q_reg[15]_0 [13]),
        .I1(\rddata_out_reg[3]_0 ),
        .I2(\rddata_out[14]_i_4 ),
        .I3(pseudo_rand_seeds_int[6]),
        .I4(\rddata_out[14]_i_4_0 ),
        .I5(pseudo_rand_seeds_int[10]),
        .O(\rddata_out[13]_i_7_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair79" *) 
  LUT3 #(
    .INIT(8'h02)) 
    \rddata_out[14]_i_12 
       (.I0(\q_reg[15]_0 [14]),
        .I1(\rddata_out[14]_i_4_0 ),
        .I2(\rddata_out[14]_i_4 ),
        .O(\q_reg[14]_0 ));
  LUT6 #(
    .INIT(64'h00F044FF00F04444)) 
    \rddata_out[2]_i_9 
       (.I0(\rddata_out[14]_i_4_0 ),
        .I1(\q_reg[15]_0 [2]),
        .I2(pseudo_rand_seeds_int[3]),
        .I3(\rddata_out[2]_i_5 ),
        .I4(\rddata_out[14]_i_4 ),
        .I5(pseudo_rand_seeds_int[0]),
        .O(\q_reg[2]_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAAA0000A200)) 
    \rddata_out[3]_i_3 
       (.I0(\rddata_out[3]_i_8_n_0 ),
        .I1(pseudo_rand_seeds_int[4]),
        .I2(\rddata_out_reg[3] ),
        .I3(\rddata_out_reg[3]_0 ),
        .I4(\rddata_out_reg[3]_1 ),
        .I5(\rddata_out_reg[11]_2 ),
        .O(\q_reg[3]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair79" *) 
  LUT4 #(
    .INIT(16'hEEEF)) 
    \rddata_out[3]_i_8 
       (.I0(\rddata_out[14]_i_4_0 ),
        .I1(\rddata_out[14]_i_4 ),
        .I2(\rddata_out_reg[11]_2 ),
        .I3(\q_reg[15]_0 [3]),
        .O(\rddata_out[3]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'h000C000CFFAE00AE)) 
    \rddata_out[4]_i_6 
       (.I0(\q_reg[15]_0 [4]),
        .I1(pseudo_rand_seeds_int[1]),
        .I2(\rddata_out[2]_i_5 ),
        .I3(\rddata_out[14]_i_4 ),
        .I4(pseudo_rand_seeds_int[7]),
        .I5(\rddata_out[14]_i_4_0 ),
        .O(\q_reg[4]_0 ));
  LUT6 #(
    .INIT(64'h000C000CFFAE00AE)) 
    \rddata_out[5]_i_7 
       (.I0(\q_reg[15]_0 [5]),
        .I1(pseudo_rand_seeds_int[2]),
        .I2(\rddata_out[2]_i_5 ),
        .I3(\rddata_out[14]_i_4 ),
        .I4(pseudo_rand_seeds_int[8]),
        .I5(\rddata_out[14]_i_4_0 ),
        .O(\q_reg[5]_1 ));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_15_g_register" *) 
module ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_g_register__parameterized5_53
   (\addr_reg_reg[18] ,
    \addr_reg_reg[2] ,
    \q_reg[15]_0 ,
    pseudo_rand_seeds_int,
    \q_reg[4]_0 ,
    \q_reg[5]_0 ,
    \q_reg[8]_0 ,
    \q_reg[9]_0 ,
    \q_reg[12]_0 ,
    \q_reg[6]_0 ,
    \q_reg[10]_0 ,
    \q_reg[1]_0 ,
    \q_reg[0]_0 ,
    \q_reg[0]_1 ,
    \q_reg[0]_2 ,
    Q,
    \rddata_out_reg[7] ,
    \rddata_out_reg[7]_0 ,
    \rddata_out_reg[7]_1 ,
    \rddata_out_reg[15] ,
    \rddata_out_reg[15]_0 ,
    \rddata_out_reg[15]_1 ,
    \rddata_out_reg[4] ,
    \rddata_out_reg[4]_0 ,
    \rddata_out_reg[5] ,
    \rddata_out_reg[8] ,
    \rddata_out_reg[9] ,
    \rddata_out_reg[12] ,
    \rddata_out_reg[10] ,
    \rddata_out_reg[12]_0 ,
    \rddata_out_reg[10]_0 ,
    \rddata_out_reg[10]_1 ,
    \rddata_out_reg[10]_2 ,
    \q_reg[0]_3 ,
    \q_reg[15]_1 ,
    coreclk);
  output \addr_reg_reg[18] ;
  output \addr_reg_reg[2] ;
  output \q_reg[15]_0 ;
  output [15:0]pseudo_rand_seeds_int;
  output \q_reg[4]_0 ;
  output \q_reg[5]_0 ;
  output \q_reg[8]_0 ;
  output \q_reg[9]_0 ;
  output \q_reg[12]_0 ;
  output \q_reg[6]_0 ;
  output \q_reg[10]_0 ;
  output \q_reg[1]_0 ;
  input \q_reg[0]_0 ;
  input \q_reg[0]_1 ;
  input \q_reg[0]_2 ;
  input [5:0]Q;
  input \rddata_out_reg[7] ;
  input \rddata_out_reg[7]_0 ;
  input \rddata_out_reg[7]_1 ;
  input \rddata_out_reg[15] ;
  input \rddata_out_reg[15]_0 ;
  input \rddata_out_reg[15]_1 ;
  input \rddata_out_reg[4] ;
  input \rddata_out_reg[4]_0 ;
  input \rddata_out_reg[5] ;
  input \rddata_out_reg[8] ;
  input \rddata_out_reg[9] ;
  input \rddata_out_reg[12] ;
  input [10:0]\rddata_out_reg[10] ;
  input \rddata_out_reg[12]_0 ;
  input \rddata_out_reg[10]_0 ;
  input \rddata_out_reg[10]_1 ;
  input \rddata_out_reg[10]_2 ;
  input \q_reg[0]_3 ;
  input [15:0]\q_reg[15]_1 ;
  input coreclk;

  wire [5:0]Q;
  wire \addr_reg_reg[18] ;
  wire \addr_reg_reg[2] ;
  wire coreclk;
  wire [15:0]pseudo_rand_seeds_int;
  wire \q_reg[0]_0 ;
  wire \q_reg[0]_1 ;
  wire \q_reg[0]_2 ;
  wire \q_reg[0]_3 ;
  wire \q_reg[10]_0 ;
  wire \q_reg[12]_0 ;
  wire \q_reg[15]_0 ;
  wire [15:0]\q_reg[15]_1 ;
  wire \q_reg[1]_0 ;
  wire \q_reg[4]_0 ;
  wire \q_reg[5]_0 ;
  wire \q_reg[6]_0 ;
  wire \q_reg[8]_0 ;
  wire \q_reg[9]_0 ;
  wire \rddata_out[7]_i_8_n_0 ;
  wire [10:0]\rddata_out_reg[10] ;
  wire \rddata_out_reg[10]_0 ;
  wire \rddata_out_reg[10]_1 ;
  wire \rddata_out_reg[10]_2 ;
  wire \rddata_out_reg[12] ;
  wire \rddata_out_reg[12]_0 ;
  wire \rddata_out_reg[15] ;
  wire \rddata_out_reg[15]_0 ;
  wire \rddata_out_reg[15]_1 ;
  wire \rddata_out_reg[4] ;
  wire \rddata_out_reg[4]_0 ;
  wire \rddata_out_reg[5] ;
  wire \rddata_out_reg[7] ;
  wire \rddata_out_reg[7]_0 ;
  wire \rddata_out_reg[7]_1 ;
  wire \rddata_out_reg[8] ;
  wire \rddata_out_reg[9] ;
  wire reg_3_39_we;

  LUT6 #(
    .INIT(64'h0002000000000000)) 
    \q[15]_i_1__3 
       (.I0(\q_reg[0]_0 ),
        .I1(\q_reg[0]_1 ),
        .I2(\q_reg[0]_2 ),
        .I3(\addr_reg_reg[18] ),
        .I4(Q[0]),
        .I5(Q[1]),
        .O(reg_3_39_we));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \q[15]_i_4__1 
       (.I0(Q[4]),
        .I1(Q[5]),
        .I2(Q[3]),
        .I3(Q[2]),
        .O(\addr_reg_reg[18] ));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[0] 
       (.C(coreclk),
        .CE(reg_3_39_we),
        .D(\q_reg[15]_1 [0]),
        .Q(pseudo_rand_seeds_int[0]),
        .R(\q_reg[0]_3 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[10] 
       (.C(coreclk),
        .CE(reg_3_39_we),
        .D(\q_reg[15]_1 [10]),
        .Q(pseudo_rand_seeds_int[10]),
        .R(\q_reg[0]_3 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[11] 
       (.C(coreclk),
        .CE(reg_3_39_we),
        .D(\q_reg[15]_1 [11]),
        .Q(pseudo_rand_seeds_int[11]),
        .R(\q_reg[0]_3 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[12] 
       (.C(coreclk),
        .CE(reg_3_39_we),
        .D(\q_reg[15]_1 [12]),
        .Q(pseudo_rand_seeds_int[12]),
        .R(\q_reg[0]_3 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[13] 
       (.C(coreclk),
        .CE(reg_3_39_we),
        .D(\q_reg[15]_1 [13]),
        .Q(pseudo_rand_seeds_int[13]),
        .R(\q_reg[0]_3 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[14] 
       (.C(coreclk),
        .CE(reg_3_39_we),
        .D(\q_reg[15]_1 [14]),
        .Q(pseudo_rand_seeds_int[14]),
        .R(\q_reg[0]_3 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[15] 
       (.C(coreclk),
        .CE(reg_3_39_we),
        .D(\q_reg[15]_1 [15]),
        .Q(pseudo_rand_seeds_int[15]),
        .R(\q_reg[0]_3 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[1] 
       (.C(coreclk),
        .CE(reg_3_39_we),
        .D(\q_reg[15]_1 [1]),
        .Q(pseudo_rand_seeds_int[1]),
        .R(\q_reg[0]_3 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[2] 
       (.C(coreclk),
        .CE(reg_3_39_we),
        .D(\q_reg[15]_1 [2]),
        .Q(pseudo_rand_seeds_int[2]),
        .R(\q_reg[0]_3 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[3] 
       (.C(coreclk),
        .CE(reg_3_39_we),
        .D(\q_reg[15]_1 [3]),
        .Q(pseudo_rand_seeds_int[3]),
        .R(\q_reg[0]_3 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[4] 
       (.C(coreclk),
        .CE(reg_3_39_we),
        .D(\q_reg[15]_1 [4]),
        .Q(pseudo_rand_seeds_int[4]),
        .R(\q_reg[0]_3 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[5] 
       (.C(coreclk),
        .CE(reg_3_39_we),
        .D(\q_reg[15]_1 [5]),
        .Q(pseudo_rand_seeds_int[5]),
        .R(\q_reg[0]_3 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[6] 
       (.C(coreclk),
        .CE(reg_3_39_we),
        .D(\q_reg[15]_1 [6]),
        .Q(pseudo_rand_seeds_int[6]),
        .R(\q_reg[0]_3 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[7] 
       (.C(coreclk),
        .CE(reg_3_39_we),
        .D(\q_reg[15]_1 [7]),
        .Q(pseudo_rand_seeds_int[7]),
        .R(\q_reg[0]_3 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[8] 
       (.C(coreclk),
        .CE(reg_3_39_we),
        .D(\q_reg[15]_1 [8]),
        .Q(pseudo_rand_seeds_int[8]),
        .R(\q_reg[0]_3 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[9] 
       (.C(coreclk),
        .CE(reg_3_39_we),
        .D(\q_reg[15]_1 [9]),
        .Q(pseudo_rand_seeds_int[9]),
        .R(\q_reg[0]_3 ));
  LUT6 #(
    .INIT(64'hBB00FF0FBBBBFF0F)) 
    \rddata_out[10]_i_3 
       (.I0(\rddata_out_reg[10]_2 ),
        .I1(pseudo_rand_seeds_int[10]),
        .I2(\rddata_out_reg[10] [6]),
        .I3(\rddata_out_reg[10]_1 ),
        .I4(\rddata_out_reg[10]_0 ),
        .I5(\rddata_out_reg[10] [10]),
        .O(\q_reg[10]_0 ));
  LUT6 #(
    .INIT(64'hEFAAEFEFAAAAAAAA)) 
    \rddata_out[12]_i_4 
       (.I0(\rddata_out_reg[7] ),
        .I1(\rddata_out_reg[15] ),
        .I2(pseudo_rand_seeds_int[12]),
        .I3(\rddata_out_reg[12] ),
        .I4(\rddata_out_reg[10] [7]),
        .I5(\rddata_out_reg[12]_0 ),
        .O(\q_reg[12]_0 ));
  LUT5 #(
    .INIT(32'hEFAAAAAA)) 
    \rddata_out[15]_i_5 
       (.I0(\rddata_out_reg[7] ),
        .I1(\rddata_out_reg[15] ),
        .I2(pseudo_rand_seeds_int[15]),
        .I3(\rddata_out_reg[15]_0 ),
        .I4(\rddata_out_reg[15]_1 ),
        .O(\q_reg[15]_0 ));
  LUT6 #(
    .INIT(64'h000C000CAAFFAA0C)) 
    \rddata_out[1]_i_7 
       (.I0(pseudo_rand_seeds_int[1]),
        .I1(\rddata_out_reg[10] [3]),
        .I2(\rddata_out_reg[10]_1 ),
        .I3(\rddata_out_reg[10]_0 ),
        .I4(\rddata_out_reg[10] [0]),
        .I5(\rddata_out_reg[10]_2 ),
        .O(\q_reg[1]_0 ));
  LUT4 #(
    .INIT(16'hFF5D)) 
    \rddata_out[4]_i_2 
       (.I0(\rddata_out_reg[4] ),
        .I1(pseudo_rand_seeds_int[4]),
        .I2(\rddata_out_reg[15] ),
        .I3(\rddata_out_reg[4]_0 ),
        .O(\q_reg[4]_0 ));
  LUT4 #(
    .INIT(16'hFF5D)) 
    \rddata_out[5]_i_4 
       (.I0(\rddata_out_reg[4] ),
        .I1(pseudo_rand_seeds_int[5]),
        .I2(\rddata_out_reg[15] ),
        .I3(\rddata_out_reg[5] ),
        .O(\q_reg[5]_0 ));
  LUT6 #(
    .INIT(64'h505F3030505F3F3F)) 
    \rddata_out[6]_i_8 
       (.I0(pseudo_rand_seeds_int[6]),
        .I1(\rddata_out_reg[10] [8]),
        .I2(\rddata_out_reg[10]_0 ),
        .I3(\rddata_out_reg[10] [1]),
        .I4(\rddata_out_reg[10]_1 ),
        .I5(\rddata_out_reg[10] [4]),
        .O(\q_reg[6]_0 ));
  LUT4 #(
    .INIT(16'hFEAE)) 
    \rddata_out[7]_i_5 
       (.I0(\rddata_out_reg[7] ),
        .I1(\rddata_out[7]_i_8_n_0 ),
        .I2(\rddata_out_reg[7]_0 ),
        .I3(\rddata_out_reg[7]_1 ),
        .O(\addr_reg_reg[2] ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \rddata_out[7]_i_8 
       (.I0(pseudo_rand_seeds_int[7]),
        .I1(\rddata_out_reg[10] [9]),
        .I2(\rddata_out_reg[10]_0 ),
        .I3(\rddata_out_reg[10] [2]),
        .I4(\rddata_out_reg[10]_1 ),
        .I5(\rddata_out_reg[10] [5]),
        .O(\rddata_out[7]_i_8_n_0 ));
  LUT4 #(
    .INIT(16'hFF5D)) 
    \rddata_out[8]_i_4 
       (.I0(\rddata_out_reg[4] ),
        .I1(pseudo_rand_seeds_int[8]),
        .I2(\rddata_out_reg[15] ),
        .I3(\rddata_out_reg[8] ),
        .O(\q_reg[8]_0 ));
  LUT4 #(
    .INIT(16'hFF5D)) 
    \rddata_out[9]_i_5 
       (.I0(\rddata_out_reg[4] ),
        .I1(pseudo_rand_seeds_int[9]),
        .I2(\rddata_out_reg[15] ),
        .I3(\rddata_out_reg[9] ),
        .O(\q_reg[9]_0 ));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_15_g_register" *) 
module ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_g_register__parameterized5_54
   (\q_reg[12]_0 ,
    pseudo_rand_seeds_int,
    \q_reg[8]_0 ,
    \q_reg[9]_0 ,
    \q_reg[14]_0 ,
    \q_reg[15]_0 ,
    \rddata_out[12]_i_4 ,
    \rddata_out[15]_i_5 ,
    \rddata_out[15]_i_5_0 ,
    \rddata_out[14]_i_4 ,
    \rddata_out[9]_i_5 ,
    \q_reg[15]_1 ,
    E,
    \q_reg[15]_2 ,
    coreclk);
  output \q_reg[12]_0 ;
  output [15:0]pseudo_rand_seeds_int;
  output \q_reg[8]_0 ;
  output \q_reg[9]_0 ;
  output \q_reg[14]_0 ;
  output \q_reg[15]_0 ;
  input \rddata_out[12]_i_4 ;
  input \rddata_out[15]_i_5 ;
  input \rddata_out[15]_i_5_0 ;
  input [5:0]\rddata_out[14]_i_4 ;
  input \rddata_out[9]_i_5 ;
  input \q_reg[15]_1 ;
  input [0:0]E;
  input [15:0]\q_reg[15]_2 ;
  input coreclk;

  wire [0:0]E;
  wire coreclk;
  wire [15:0]pseudo_rand_seeds_int;
  wire \q_reg[12]_0 ;
  wire \q_reg[14]_0 ;
  wire \q_reg[15]_0 ;
  wire \q_reg[15]_1 ;
  wire [15:0]\q_reg[15]_2 ;
  wire \q_reg[8]_0 ;
  wire \q_reg[9]_0 ;
  wire \rddata_out[12]_i_4 ;
  wire [5:0]\rddata_out[14]_i_4 ;
  wire \rddata_out[15]_i_5 ;
  wire \rddata_out[15]_i_5_0 ;
  wire \rddata_out[9]_i_5 ;

  FDRE #(
    .INIT(1'b0)) 
    \q_reg[0] 
       (.C(coreclk),
        .CE(E),
        .D(\q_reg[15]_2 [0]),
        .Q(pseudo_rand_seeds_int[0]),
        .R(\q_reg[15]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[10] 
       (.C(coreclk),
        .CE(E),
        .D(\q_reg[15]_2 [10]),
        .Q(pseudo_rand_seeds_int[10]),
        .R(\q_reg[15]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[11] 
       (.C(coreclk),
        .CE(E),
        .D(\q_reg[15]_2 [11]),
        .Q(pseudo_rand_seeds_int[11]),
        .R(\q_reg[15]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[12] 
       (.C(coreclk),
        .CE(E),
        .D(\q_reg[15]_2 [12]),
        .Q(pseudo_rand_seeds_int[12]),
        .R(\q_reg[15]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[13] 
       (.C(coreclk),
        .CE(E),
        .D(\q_reg[15]_2 [13]),
        .Q(pseudo_rand_seeds_int[13]),
        .R(\q_reg[15]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[14] 
       (.C(coreclk),
        .CE(E),
        .D(\q_reg[15]_2 [14]),
        .Q(pseudo_rand_seeds_int[14]),
        .R(\q_reg[15]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[15] 
       (.C(coreclk),
        .CE(E),
        .D(\q_reg[15]_2 [15]),
        .Q(pseudo_rand_seeds_int[15]),
        .R(\q_reg[15]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[1] 
       (.C(coreclk),
        .CE(E),
        .D(\q_reg[15]_2 [1]),
        .Q(pseudo_rand_seeds_int[1]),
        .R(\q_reg[15]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[2] 
       (.C(coreclk),
        .CE(E),
        .D(\q_reg[15]_2 [2]),
        .Q(pseudo_rand_seeds_int[2]),
        .R(\q_reg[15]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[3] 
       (.C(coreclk),
        .CE(E),
        .D(\q_reg[15]_2 [3]),
        .Q(pseudo_rand_seeds_int[3]),
        .R(\q_reg[15]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[4] 
       (.C(coreclk),
        .CE(E),
        .D(\q_reg[15]_2 [4]),
        .Q(pseudo_rand_seeds_int[4]),
        .R(\q_reg[15]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[5] 
       (.C(coreclk),
        .CE(E),
        .D(\q_reg[15]_2 [5]),
        .Q(pseudo_rand_seeds_int[5]),
        .R(\q_reg[15]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[6] 
       (.C(coreclk),
        .CE(E),
        .D(\q_reg[15]_2 [6]),
        .Q(pseudo_rand_seeds_int[6]),
        .R(\q_reg[15]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[7] 
       (.C(coreclk),
        .CE(E),
        .D(\q_reg[15]_2 [7]),
        .Q(pseudo_rand_seeds_int[7]),
        .R(\q_reg[15]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[8] 
       (.C(coreclk),
        .CE(E),
        .D(\q_reg[15]_2 [8]),
        .Q(pseudo_rand_seeds_int[8]),
        .R(\q_reg[15]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[9] 
       (.C(coreclk),
        .CE(E),
        .D(\q_reg[15]_2 [9]),
        .Q(pseudo_rand_seeds_int[9]),
        .R(\q_reg[15]_1 ));
  LUT4 #(
    .INIT(16'hA2AA)) 
    \rddata_out[12]_i_12 
       (.I0(\rddata_out[12]_i_4 ),
        .I1(\rddata_out[15]_i_5 ),
        .I2(\rddata_out[15]_i_5_0 ),
        .I3(pseudo_rand_seeds_int[12]),
        .O(\q_reg[12]_0 ));
  LUT4 #(
    .INIT(16'h57F7)) 
    \rddata_out[14]_i_11 
       (.I0(\rddata_out[15]_i_5 ),
        .I1(pseudo_rand_seeds_int[14]),
        .I2(\rddata_out[15]_i_5_0 ),
        .I3(\rddata_out[14]_i_4 [5]),
        .O(\q_reg[14]_0 ));
  LUT4 #(
    .INIT(16'hF4F7)) 
    \rddata_out[15]_i_14 
       (.I0(pseudo_rand_seeds_int[15]),
        .I1(\rddata_out[15]_i_5 ),
        .I2(\rddata_out[15]_i_5_0 ),
        .I3(\rddata_out[14]_i_4 [4]),
        .O(\q_reg[15]_0 ));
  LUT6 #(
    .INIT(64'h000C000CAAFFAA0C)) 
    \rddata_out[8]_i_6 
       (.I0(pseudo_rand_seeds_int[8]),
        .I1(\rddata_out[14]_i_4 [0]),
        .I2(\rddata_out[9]_i_5 ),
        .I3(\rddata_out[15]_i_5 ),
        .I4(\rddata_out[14]_i_4 [2]),
        .I5(\rddata_out[15]_i_5_0 ),
        .O(\q_reg[8]_0 ));
  LUT6 #(
    .INIT(64'h0A0C0A0C0AFF0A0C)) 
    \rddata_out[9]_i_8 
       (.I0(pseudo_rand_seeds_int[9]),
        .I1(\rddata_out[14]_i_4 [3]),
        .I2(\rddata_out[15]_i_5_0 ),
        .I3(\rddata_out[15]_i_5 ),
        .I4(\rddata_out[14]_i_4 [1]),
        .I5(\rddata_out[9]_i_5 ),
        .O(\q_reg[9]_0 ));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_15_g_register" *) 
module ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_g_register__parameterized6
   (\addr_reg_reg[16] ,
    \addr_reg_reg[4] ,
    \q_reg[0]_0 ,
    \q_reg[3]_0 ,
    \q_reg[9]_0 ,
    Q,
    \q_reg[0]_1 ,
    \q_reg[0]_2 ,
    \q_reg[0]_3 ,
    \rddata_out_reg[0] ,
    \rddata_out_reg[0]_0 ,
    \rddata_out_reg[0]_1 ,
    pseudo_rand_seeds_int,
    \rddata_out_reg[0]_2 ,
    \rddata_out[0]_i_4_0 ,
    \rddata_out[0]_i_4_1 ,
    \rddata_out[0]_i_4_2 ,
    \q_reg[0]_4 ,
    \q_reg[9]_1 ,
    coreclk);
  output \addr_reg_reg[16] ;
  output \addr_reg_reg[4] ;
  output \q_reg[0]_0 ;
  output \q_reg[3]_0 ;
  output [9:0]\q_reg[9]_0 ;
  input [8:0]Q;
  input \q_reg[0]_1 ;
  input \q_reg[0]_2 ;
  input \q_reg[0]_3 ;
  input \rddata_out_reg[0] ;
  input \rddata_out_reg[0]_0 ;
  input \rddata_out_reg[0]_1 ;
  input [3:0]pseudo_rand_seeds_int;
  input \rddata_out_reg[0]_2 ;
  input \rddata_out[0]_i_4_0 ;
  input \rddata_out[0]_i_4_1 ;
  input \rddata_out[0]_i_4_2 ;
  input \q_reg[0]_4 ;
  input [9:0]\q_reg[9]_1 ;
  input coreclk;

  wire [8:0]Q;
  wire \addr_reg_reg[16] ;
  wire \addr_reg_reg[4] ;
  wire coreclk;
  wire [3:0]pseudo_rand_seeds_int;
  wire \q_reg[0]_0 ;
  wire \q_reg[0]_1 ;
  wire \q_reg[0]_2 ;
  wire \q_reg[0]_3 ;
  wire \q_reg[0]_4 ;
  wire \q_reg[3]_0 ;
  wire [9:0]\q_reg[9]_0 ;
  wire [9:0]\q_reg[9]_1 ;
  wire \rddata_out[0]_i_4_0 ;
  wire \rddata_out[0]_i_4_1 ;
  wire \rddata_out[0]_i_4_2 ;
  wire \rddata_out[0]_i_9_n_0 ;
  wire \rddata_out_reg[0] ;
  wire \rddata_out_reg[0]_0 ;
  wire \rddata_out_reg[0]_1 ;
  wire \rddata_out_reg[0]_2 ;
  wire reg_3_37_we;

  LUT6 #(
    .INIT(64'h0000000000001000)) 
    \q[9]_i_1__0 
       (.I0(\addr_reg_reg[4] ),
        .I1(\addr_reg_reg[16] ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(\q_reg[0]_1 ),
        .I5(\q_reg[0]_2 ),
        .O(reg_3_37_we));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \q[9]_i_2 
       (.I0(\q_reg[0]_3 ),
        .I1(Q[3]),
        .I2(Q[1]),
        .I3(Q[8]),
        .I4(Q[7]),
        .O(\addr_reg_reg[4] ));
  LUT3 #(
    .INIT(8'h7F)) 
    \q[9]_i_3 
       (.I0(Q[5]),
        .I1(Q[0]),
        .I2(Q[6]),
        .O(\addr_reg_reg[16] ));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[0] 
       (.C(coreclk),
        .CE(reg_3_37_we),
        .D(\q_reg[9]_1 [0]),
        .Q(\q_reg[9]_0 [0]),
        .R(\q_reg[0]_4 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[1] 
       (.C(coreclk),
        .CE(reg_3_37_we),
        .D(\q_reg[9]_1 [1]),
        .Q(\q_reg[9]_0 [1]),
        .R(\q_reg[0]_4 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[2] 
       (.C(coreclk),
        .CE(reg_3_37_we),
        .D(\q_reg[9]_1 [2]),
        .Q(\q_reg[9]_0 [2]),
        .R(\q_reg[0]_4 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[3] 
       (.C(coreclk),
        .CE(reg_3_37_we),
        .D(\q_reg[9]_1 [3]),
        .Q(\q_reg[9]_0 [3]),
        .R(\q_reg[0]_4 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[4] 
       (.C(coreclk),
        .CE(reg_3_37_we),
        .D(\q_reg[9]_1 [4]),
        .Q(\q_reg[9]_0 [4]),
        .R(\q_reg[0]_4 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[5] 
       (.C(coreclk),
        .CE(reg_3_37_we),
        .D(\q_reg[9]_1 [5]),
        .Q(\q_reg[9]_0 [5]),
        .R(\q_reg[0]_4 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[6] 
       (.C(coreclk),
        .CE(reg_3_37_we),
        .D(\q_reg[9]_1 [6]),
        .Q(\q_reg[9]_0 [6]),
        .R(\q_reg[0]_4 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[7] 
       (.C(coreclk),
        .CE(reg_3_37_we),
        .D(\q_reg[9]_1 [7]),
        .Q(\q_reg[9]_0 [7]),
        .R(\q_reg[0]_4 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[8] 
       (.C(coreclk),
        .CE(reg_3_37_we),
        .D(\q_reg[9]_1 [8]),
        .Q(\q_reg[9]_0 [8]),
        .R(\q_reg[0]_4 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[9] 
       (.C(coreclk),
        .CE(reg_3_37_we),
        .D(\q_reg[9]_1 [9]),
        .Q(\q_reg[9]_0 [9]),
        .R(\q_reg[0]_4 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF10001010)) 
    \rddata_out[0]_i_4 
       (.I0(\rddata_out[0]_i_9_n_0 ),
        .I1(\rddata_out_reg[0] ),
        .I2(\rddata_out_reg[0]_0 ),
        .I3(\rddata_out_reg[0]_1 ),
        .I4(pseudo_rand_seeds_int[2]),
        .I5(\rddata_out_reg[0]_2 ),
        .O(\q_reg[0]_0 ));
  LUT6 #(
    .INIT(64'h0C0A0C0A0CFF0C0A)) 
    \rddata_out[0]_i_9 
       (.I0(\q_reg[9]_0 [0]),
        .I1(pseudo_rand_seeds_int[1]),
        .I2(\rddata_out[0]_i_4_0 ),
        .I3(\rddata_out[0]_i_4_1 ),
        .I4(pseudo_rand_seeds_int[0]),
        .I5(\rddata_out[0]_i_4_2 ),
        .O(\rddata_out[0]_i_9_n_0 ));
  LUT5 #(
    .INIT(32'h04F40404)) 
    \rddata_out[3]_i_9 
       (.I0(\rddata_out[0]_i_4_0 ),
        .I1(\q_reg[9]_0 [3]),
        .I2(\rddata_out[0]_i_4_1 ),
        .I3(\rddata_out[0]_i_4_2 ),
        .I4(pseudo_rand_seeds_int[3]),
        .O(\q_reg[3]_0 ));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_15_g_register" *) 
module ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_g_register__parameterized6_55
   (\q_reg[0]_0 ,
    \q_reg[9]_0 ,
    pseudo_rand_seeds_int,
    D,
    \q_reg[7]_0 ,
    \rddata_out_reg[0] ,
    \rddata_out_reg[0]_0 ,
    \rddata_out_reg[9] ,
    \rddata_out_reg[6] ,
    Q,
    \rddata_out_reg[9]_0 ,
    \rddata_out_reg[9]_1 ,
    \rddata_out_reg[9]_2 ,
    \rddata_out_reg[9]_3 ,
    \rddata_out_reg[6]_0 ,
    \rddata_out_reg[6]_1 ,
    \rddata_out_reg[6]_2 ,
    \q_reg[0]_1 ,
    \q_reg[0]_2 ,
    \q_reg[0]_3 ,
    \rddata_out_reg[6]_3 ,
    \rddata_out_reg[6]_4 ,
    \rddata_out_reg[6]_5 ,
    \rddata_out[0]_i_3_0 ,
    \rddata_out[0]_i_3_1 ,
    \q_reg[0]_4 ,
    \q_reg[9]_1 ,
    coreclk);
  output \q_reg[0]_0 ;
  output \q_reg[9]_0 ;
  output [9:0]pseudo_rand_seeds_int;
  output [0:0]D;
  output \q_reg[7]_0 ;
  input \rddata_out_reg[0] ;
  input \rddata_out_reg[0]_0 ;
  input [2:0]\rddata_out_reg[9] ;
  input \rddata_out_reg[6] ;
  input [5:0]Q;
  input \rddata_out_reg[9]_0 ;
  input \rddata_out_reg[9]_1 ;
  input [2:0]\rddata_out_reg[9]_2 ;
  input \rddata_out_reg[9]_3 ;
  input \rddata_out_reg[6]_0 ;
  input \rddata_out_reg[6]_1 ;
  input \rddata_out_reg[6]_2 ;
  input \q_reg[0]_1 ;
  input \q_reg[0]_2 ;
  input \q_reg[0]_3 ;
  input \rddata_out_reg[6]_3 ;
  input \rddata_out_reg[6]_4 ;
  input \rddata_out_reg[6]_5 ;
  input \rddata_out[0]_i_3_0 ;
  input [0:0]\rddata_out[0]_i_3_1 ;
  input \q_reg[0]_4 ;
  input [9:0]\q_reg[9]_1 ;
  input coreclk;

  wire [0:0]D;
  wire [5:0]Q;
  wire coreclk;
  wire [9:0]pseudo_rand_seeds_int;
  wire \q[9]_i_2__0_n_0 ;
  wire \q_reg[0]_0 ;
  wire \q_reg[0]_1 ;
  wire \q_reg[0]_2 ;
  wire \q_reg[0]_3 ;
  wire \q_reg[0]_4 ;
  wire \q_reg[7]_0 ;
  wire \q_reg[9]_0 ;
  wire [9:0]\q_reg[9]_1 ;
  wire \rddata_out[0]_i_3_0 ;
  wire [0:0]\rddata_out[0]_i_3_1 ;
  wire \rddata_out[0]_i_8_n_0 ;
  wire \rddata_out[6]_i_2_n_0 ;
  wire \rddata_out_reg[0] ;
  wire \rddata_out_reg[0]_0 ;
  wire \rddata_out_reg[6] ;
  wire \rddata_out_reg[6]_0 ;
  wire \rddata_out_reg[6]_1 ;
  wire \rddata_out_reg[6]_2 ;
  wire \rddata_out_reg[6]_3 ;
  wire \rddata_out_reg[6]_4 ;
  wire \rddata_out_reg[6]_5 ;
  wire [2:0]\rddata_out_reg[9] ;
  wire \rddata_out_reg[9]_0 ;
  wire \rddata_out_reg[9]_1 ;
  wire [2:0]\rddata_out_reg[9]_2 ;
  wire \rddata_out_reg[9]_3 ;
  wire reg_3_41_we;

  LUT6 #(
    .INIT(64'h0000000000001000)) 
    \q[9]_i_1 
       (.I0(\q_reg[0]_1 ),
        .I1(\q[9]_i_2__0_n_0 ),
        .I2(Q[1]),
        .I3(Q[2]),
        .I4(\q_reg[0]_2 ),
        .I5(\q_reg[0]_3 ),
        .O(reg_3_41_we));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \q[9]_i_2__0 
       (.I0(Q[0]),
        .I1(Q[4]),
        .I2(Q[5]),
        .I3(Q[3]),
        .O(\q[9]_i_2__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[0] 
       (.C(coreclk),
        .CE(reg_3_41_we),
        .D(\q_reg[9]_1 [0]),
        .Q(pseudo_rand_seeds_int[0]),
        .R(\q_reg[0]_4 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[1] 
       (.C(coreclk),
        .CE(reg_3_41_we),
        .D(\q_reg[9]_1 [1]),
        .Q(pseudo_rand_seeds_int[1]),
        .R(\q_reg[0]_4 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[2] 
       (.C(coreclk),
        .CE(reg_3_41_we),
        .D(\q_reg[9]_1 [2]),
        .Q(pseudo_rand_seeds_int[2]),
        .R(\q_reg[0]_4 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[3] 
       (.C(coreclk),
        .CE(reg_3_41_we),
        .D(\q_reg[9]_1 [3]),
        .Q(pseudo_rand_seeds_int[3]),
        .R(\q_reg[0]_4 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[4] 
       (.C(coreclk),
        .CE(reg_3_41_we),
        .D(\q_reg[9]_1 [4]),
        .Q(pseudo_rand_seeds_int[4]),
        .R(\q_reg[0]_4 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[5] 
       (.C(coreclk),
        .CE(reg_3_41_we),
        .D(\q_reg[9]_1 [5]),
        .Q(pseudo_rand_seeds_int[5]),
        .R(\q_reg[0]_4 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[6] 
       (.C(coreclk),
        .CE(reg_3_41_we),
        .D(\q_reg[9]_1 [6]),
        .Q(pseudo_rand_seeds_int[6]),
        .R(\q_reg[0]_4 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[7] 
       (.C(coreclk),
        .CE(reg_3_41_we),
        .D(\q_reg[9]_1 [7]),
        .Q(pseudo_rand_seeds_int[7]),
        .R(\q_reg[0]_4 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[8] 
       (.C(coreclk),
        .CE(reg_3_41_we),
        .D(\q_reg[9]_1 [8]),
        .Q(pseudo_rand_seeds_int[8]),
        .R(\q_reg[0]_4 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[9] 
       (.C(coreclk),
        .CE(reg_3_41_we),
        .D(\q_reg[9]_1 [9]),
        .Q(pseudo_rand_seeds_int[9]),
        .R(\q_reg[0]_4 ));
  LUT5 #(
    .INIT(32'h4044FFFF)) 
    \rddata_out[0]_i_3 
       (.I0(\rddata_out[0]_i_8_n_0 ),
        .I1(\rddata_out_reg[0] ),
        .I2(\rddata_out_reg[0]_0 ),
        .I3(\rddata_out_reg[9] [0]),
        .I4(\rddata_out_reg[6] ),
        .O(\q_reg[0]_0 ));
  LUT6 #(
    .INIT(64'h000C000CFFAE00AE)) 
    \rddata_out[0]_i_8 
       (.I0(pseudo_rand_seeds_int[0]),
        .I1(\rddata_out[0]_i_3_1 ),
        .I2(\rddata_out_reg[9]_3 ),
        .I3(\rddata_out_reg[9]_0 ),
        .I4(\rddata_out_reg[9]_2 [0]),
        .I5(\rddata_out[0]_i_3_0 ),
        .O(\rddata_out[0]_i_8_n_0 ));
  LUT5 #(
    .INIT(32'hFFFF4700)) 
    \rddata_out[6]_i_1 
       (.I0(\rddata_out[6]_i_2_n_0 ),
        .I1(\rddata_out_reg[6]_3 ),
        .I2(\rddata_out_reg[6]_4 ),
        .I3(\rddata_out_reg[6] ),
        .I4(\rddata_out_reg[6]_5 ),
        .O(D));
  LUT6 #(
    .INIT(64'h1101330333333333)) 
    \rddata_out[6]_i_2 
       (.I0(\rddata_out_reg[9]_0 ),
        .I1(\rddata_out_reg[6]_0 ),
        .I2(pseudo_rand_seeds_int[6]),
        .I3(\rddata_out_reg[9]_1 ),
        .I4(\rddata_out_reg[6]_1 ),
        .I5(\rddata_out_reg[6]_2 ),
        .O(\rddata_out[6]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0DFD0D0D0DFDFDFD)) 
    \rddata_out[7]_i_7 
       (.I0(pseudo_rand_seeds_int[7]),
        .I1(\rddata_out[0]_i_3_0 ),
        .I2(\rddata_out_reg[9]_0 ),
        .I3(\rddata_out_reg[9]_2 [1]),
        .I4(\rddata_out_reg[9]_3 ),
        .I5(\rddata_out_reg[9] [1]),
        .O(\q_reg[7]_0 ));
  LUT6 #(
    .INIT(64'h51F3515151F3F3F3)) 
    \rddata_out[9]_i_3 
       (.I0(\rddata_out_reg[9]_0 ),
        .I1(pseudo_rand_seeds_int[9]),
        .I2(\rddata_out_reg[9]_1 ),
        .I3(\rddata_out_reg[9]_2 [2]),
        .I4(\rddata_out_reg[9]_3 ),
        .I5(\rddata_out_reg[9] [2]),
        .O(\q_reg[9]_0 ));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_15_g_register" *) 
module ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_g_register__parameterized7
   (core_in_testmode_wire,
    Q,
    \q_reg[3]_0 ,
    \q_reg[1]_0 ,
    tx_66_fifo,
    \q_reg[2]_0 ,
    D,
    prbs31_rx_enable_core_int,
    prbs31_tx_enable_core_int,
    out,
    core_in_testmode_reg,
    new_tx_test_seed,
    asynch_fifo_i_i_68,
    \rd_data_reg[1] ,
    \rddata_out_reg[2] ,
    \rddata_out_reg[2]_0 ,
    \rddata_out_reg[2]_1 ,
    pseudo_rand_seeds_int,
    \rddata_out_reg[2]_2 ,
    \rddata_out[2]_i_3_0 ,
    \rddata_out[2]_i_3_1 ,
    \rddata_out[2]_i_3_2 ,
    \prbs_err_count_reg[15] ,
    pcs_test_pattern_error_count,
    \q_reg[5]_0 ,
    E,
    \q_reg[5]_1 ,
    coreclk);
  output core_in_testmode_wire;
  output [5:0]Q;
  output \q_reg[3]_0 ;
  output \q_reg[1]_0 ;
  output [0:0]tx_66_fifo;
  output \q_reg[2]_0 ;
  output [15:0]D;
  output prbs31_rx_enable_core_int;
  output prbs31_tx_enable_core_int;
  input out;
  input core_in_testmode_reg;
  input new_tx_test_seed;
  input [0:0]asynch_fifo_i_i_68;
  input [0:0]\rd_data_reg[1] ;
  input \rddata_out_reg[2] ;
  input [0:0]\rddata_out_reg[2]_0 ;
  input \rddata_out_reg[2]_1 ;
  input [0:0]pseudo_rand_seeds_int;
  input \rddata_out_reg[2]_2 ;
  input \rddata_out[2]_i_3_0 ;
  input \rddata_out[2]_i_3_1 ;
  input [0:0]\rddata_out[2]_i_3_2 ;
  input [15:0]\prbs_err_count_reg[15] ;
  input [15:0]pcs_test_pattern_error_count;
  input \q_reg[5]_0 ;
  input [0:0]E;
  input [5:0]\q_reg[5]_1 ;
  input coreclk;

  wire [15:0]D;
  wire [0:0]E;
  wire [5:0]Q;
  wire [0:0]asynch_fifo_i_i_68;
  wire core_in_testmode_reg;
  wire core_in_testmode_wire;
  wire coreclk;
  wire new_tx_test_seed;
  wire out;
  wire [15:0]pcs_test_pattern_error_count;
  wire prbs31_rx_enable_core_int;
  wire prbs31_tx_enable_core_int;
  wire [15:0]\prbs_err_count_reg[15] ;
  wire [0:0]pseudo_rand_seeds_int;
  wire \q_reg[1]_0 ;
  wire \q_reg[2]_0 ;
  wire \q_reg[3]_0 ;
  wire \q_reg[5]_0 ;
  wire [5:0]\q_reg[5]_1 ;
  wire [0:0]\rd_data_reg[1] ;
  wire \rddata_out[2]_i_3_0 ;
  wire \rddata_out[2]_i_3_1 ;
  wire [0:0]\rddata_out[2]_i_3_2 ;
  wire \rddata_out[2]_i_7_n_0 ;
  wire \rddata_out_reg[2] ;
  wire [0:0]\rddata_out_reg[2]_0 ;
  wire \rddata_out_reg[2]_1 ;
  wire \rddata_out_reg[2]_2 ;
  wire [0:0]tx_66_fifo;

  LUT3 #(
    .INIT(8'h74)) 
    asynch_fifo_i_i_66
       (.I0(Q[1]),
        .I1(Q[3]),
        .I2(\rd_data_reg[1] ),
        .O(tx_66_fifo));
  (* SOFT_HLUTNM = "soft_lutpair80" *) 
  LUT4 #(
    .INIT(16'h4004)) 
    asynch_fifo_i_i_80
       (.I0(Q[1]),
        .I1(Q[3]),
        .I2(Q[0]),
        .I3(asynch_fifo_i_i_68),
        .O(\q_reg[1]_0 ));
  LUT3 #(
    .INIT(8'hFE)) 
    core_in_testmode_i_1
       (.I0(out),
        .I1(Q[2]),
        .I2(core_in_testmode_reg),
        .O(core_in_testmode_wire));
  (* SOFT_HLUTNM = "soft_lutpair81" *) 
  LUT2 #(
    .INIT(4'h2)) 
    prbs31_rx_enable_core_regb_i_1
       (.I0(Q[5]),
        .I1(Q[2]),
        .O(prbs31_rx_enable_core_int));
  LUT2 #(
    .INIT(4'h2)) 
    prbs31_tx_enable_core_reg_i_1
       (.I0(Q[4]),
        .I1(Q[3]),
        .O(prbs31_tx_enable_core_int));
  LUT4 #(
    .INIT(16'hFB08)) 
    \prbs_err_count[0]_i_1 
       (.I0(\prbs_err_count_reg[15] [0]),
        .I1(Q[5]),
        .I2(Q[2]),
        .I3(pcs_test_pattern_error_count[0]),
        .O(D[0]));
  LUT4 #(
    .INIT(16'hFB08)) 
    \prbs_err_count[10]_i_1 
       (.I0(\prbs_err_count_reg[15] [10]),
        .I1(Q[5]),
        .I2(Q[2]),
        .I3(pcs_test_pattern_error_count[10]),
        .O(D[10]));
  LUT4 #(
    .INIT(16'hFB08)) 
    \prbs_err_count[11]_i_1 
       (.I0(\prbs_err_count_reg[15] [11]),
        .I1(Q[5]),
        .I2(Q[2]),
        .I3(pcs_test_pattern_error_count[11]),
        .O(D[11]));
  LUT4 #(
    .INIT(16'hFB08)) 
    \prbs_err_count[12]_i_1 
       (.I0(\prbs_err_count_reg[15] [12]),
        .I1(Q[5]),
        .I2(Q[2]),
        .I3(pcs_test_pattern_error_count[12]),
        .O(D[12]));
  LUT4 #(
    .INIT(16'hFB08)) 
    \prbs_err_count[13]_i_1 
       (.I0(\prbs_err_count_reg[15] [13]),
        .I1(Q[5]),
        .I2(Q[2]),
        .I3(pcs_test_pattern_error_count[13]),
        .O(D[13]));
  LUT4 #(
    .INIT(16'hFB08)) 
    \prbs_err_count[14]_i_1 
       (.I0(\prbs_err_count_reg[15] [14]),
        .I1(Q[5]),
        .I2(Q[2]),
        .I3(pcs_test_pattern_error_count[14]),
        .O(D[14]));
  LUT4 #(
    .INIT(16'hFB08)) 
    \prbs_err_count[15]_i_1 
       (.I0(\prbs_err_count_reg[15] [15]),
        .I1(Q[5]),
        .I2(Q[2]),
        .I3(pcs_test_pattern_error_count[15]),
        .O(D[15]));
  LUT4 #(
    .INIT(16'hFB08)) 
    \prbs_err_count[1]_i_1 
       (.I0(\prbs_err_count_reg[15] [1]),
        .I1(Q[5]),
        .I2(Q[2]),
        .I3(pcs_test_pattern_error_count[1]),
        .O(D[1]));
  LUT4 #(
    .INIT(16'hFB08)) 
    \prbs_err_count[2]_i_1 
       (.I0(\prbs_err_count_reg[15] [2]),
        .I1(Q[5]),
        .I2(Q[2]),
        .I3(pcs_test_pattern_error_count[2]),
        .O(D[2]));
  LUT4 #(
    .INIT(16'hFB08)) 
    \prbs_err_count[3]_i_1 
       (.I0(\prbs_err_count_reg[15] [3]),
        .I1(Q[5]),
        .I2(Q[2]),
        .I3(pcs_test_pattern_error_count[3]),
        .O(D[3]));
  LUT4 #(
    .INIT(16'hFB08)) 
    \prbs_err_count[4]_i_1 
       (.I0(\prbs_err_count_reg[15] [4]),
        .I1(Q[5]),
        .I2(Q[2]),
        .I3(pcs_test_pattern_error_count[4]),
        .O(D[4]));
  LUT4 #(
    .INIT(16'hFB08)) 
    \prbs_err_count[5]_i_1 
       (.I0(\prbs_err_count_reg[15] [5]),
        .I1(Q[5]),
        .I2(Q[2]),
        .I3(pcs_test_pattern_error_count[5]),
        .O(D[5]));
  LUT4 #(
    .INIT(16'hFB08)) 
    \prbs_err_count[6]_i_1 
       (.I0(\prbs_err_count_reg[15] [6]),
        .I1(Q[5]),
        .I2(Q[2]),
        .I3(pcs_test_pattern_error_count[6]),
        .O(D[6]));
  LUT4 #(
    .INIT(16'hFB08)) 
    \prbs_err_count[7]_i_1 
       (.I0(\prbs_err_count_reg[15] [7]),
        .I1(Q[5]),
        .I2(Q[2]),
        .I3(pcs_test_pattern_error_count[7]),
        .O(D[7]));
  LUT4 #(
    .INIT(16'hFB08)) 
    \prbs_err_count[8]_i_1 
       (.I0(\prbs_err_count_reg[15] [8]),
        .I1(Q[5]),
        .I2(Q[2]),
        .I3(pcs_test_pattern_error_count[8]),
        .O(D[8]));
  LUT4 #(
    .INIT(16'hFB08)) 
    \prbs_err_count[9]_i_1 
       (.I0(\prbs_err_count_reg[15] [9]),
        .I1(Q[5]),
        .I2(Q[2]),
        .I3(pcs_test_pattern_error_count[9]),
        .O(D[9]));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[0] 
       (.C(coreclk),
        .CE(E),
        .D(\q_reg[5]_1 [0]),
        .Q(Q[0]),
        .R(\q_reg[5]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[1] 
       (.C(coreclk),
        .CE(E),
        .D(\q_reg[5]_1 [1]),
        .Q(Q[1]),
        .R(\q_reg[5]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[2] 
       (.C(coreclk),
        .CE(E),
        .D(\q_reg[5]_1 [2]),
        .Q(Q[2]),
        .R(\q_reg[5]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[3] 
       (.C(coreclk),
        .CE(E),
        .D(\q_reg[5]_1 [3]),
        .Q(Q[3]),
        .R(\q_reg[5]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[4] 
       (.C(coreclk),
        .CE(E),
        .D(\q_reg[5]_1 [4]),
        .Q(Q[4]),
        .R(\q_reg[5]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[5] 
       (.C(coreclk),
        .CE(E),
        .D(\q_reg[5]_1 [5]),
        .Q(Q[5]),
        .R(\q_reg[5]_0 ));
  LUT6 #(
    .INIT(64'hBAFFBAFFFFFFBAFF)) 
    \rddata_out[2]_i_3 
       (.I0(\rddata_out[2]_i_7_n_0 ),
        .I1(\rddata_out_reg[2] ),
        .I2(\rddata_out_reg[2]_0 ),
        .I3(\rddata_out_reg[2]_1 ),
        .I4(pseudo_rand_seeds_int),
        .I5(\rddata_out_reg[2]_2 ),
        .O(\q_reg[2]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair81" *) 
  LUT4 #(
    .INIT(16'h0E02)) 
    \rddata_out[2]_i_7 
       (.I0(Q[2]),
        .I1(\rddata_out[2]_i_3_0 ),
        .I2(\rddata_out[2]_i_3_1 ),
        .I3(\rddata_out[2]_i_3_2 ),
        .O(\rddata_out[2]_i_7_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair80" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \scr_reg[57]_i_2 
       (.I0(Q[3]),
        .I1(new_tx_test_seed),
        .O(\q_reg[3]_0 ));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_15_g_register" *) 
module ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_g_register__parameterized8
   (re_prev,
    \addr_reg_reg[0] ,
    \addr_reg_reg[17] ,
    \addr_reg_reg[7] ,
    D,
    \q_reg[0]_0 ,
    \q_reg[0]_1 ,
    \q_reg[4]_0 ,
    \q_reg[6]_0 ,
    \addr_reg_reg[6] ,
    \q_reg[15]_0 ,
    coreclk,
    Q,
    \pcs_test_pattern_error_count_reg[0] ,
    \pcs_test_pattern_error_count_reg[0]_0 ,
    \rddata_out_reg[13] ,
    \rddata_out_reg[5] ,
    \rddata_out_reg[3] ,
    \rddata_out_reg[13]_0 ,
    \rddata_out_reg[5]_0 ,
    \rddata_out_reg[3]_0 ,
    \rddata_out[14]_i_3_0 ,
    re_prev_reg_0,
    re_prev_reg_1,
    re_prev_reg_2,
    re_prev_reg_3,
    \rddata_out_reg[5]_1 ,
    \rddata_out_reg[5]_2 ,
    \rddata_out_reg[5]_3 ,
    \rddata_out_reg[3]_1 ,
    \rddata_out_reg[3]_2 ,
    \rddata_out_reg[3]_3 ,
    \rddata_out_reg[13]_1 ,
    \rddata_out_reg[13]_2 ,
    \rddata_out_reg[13]_3 ,
    \rddata_out_reg[13]_4 ,
    \rddata_out_reg[11] ,
    \rddata_out_reg[14] ,
    pseudo_rand_seeds_int,
    \rddata_out_reg[4] ,
    \rddata_out_reg[5]_4 ,
    \rddata_out[3]_i_2_0 ,
    SR,
    \q_reg[15]_1 );
  output re_prev;
  output \addr_reg_reg[0] ;
  output \addr_reg_reg[17] ;
  output \addr_reg_reg[7] ;
  output [2:0]D;
  output \q_reg[0]_0 ;
  output \q_reg[0]_1 ;
  output \q_reg[4]_0 ;
  output \q_reg[6]_0 ;
  output \addr_reg_reg[6] ;
  output [8:0]\q_reg[15]_0 ;
  input coreclk;
  input [20:0]Q;
  input \pcs_test_pattern_error_count_reg[0] ;
  input \pcs_test_pattern_error_count_reg[0]_0 ;
  input \rddata_out_reg[13] ;
  input \rddata_out_reg[5] ;
  input \rddata_out_reg[3] ;
  input \rddata_out_reg[13]_0 ;
  input \rddata_out_reg[5]_0 ;
  input \rddata_out_reg[3]_0 ;
  input [6:0]\rddata_out[14]_i_3_0 ;
  input re_prev_reg_0;
  input re_prev_reg_1;
  input re_prev_reg_2;
  input re_prev_reg_3;
  input \rddata_out_reg[5]_1 ;
  input \rddata_out_reg[5]_2 ;
  input \rddata_out_reg[5]_3 ;
  input \rddata_out_reg[3]_1 ;
  input \rddata_out_reg[3]_2 ;
  input \rddata_out_reg[3]_3 ;
  input \rddata_out_reg[13]_1 ;
  input \rddata_out_reg[13]_2 ;
  input \rddata_out_reg[13]_3 ;
  input \rddata_out_reg[13]_4 ;
  input \rddata_out_reg[11] ;
  input \rddata_out_reg[14] ;
  input [2:0]pseudo_rand_seeds_int;
  input \rddata_out_reg[4] ;
  input [2:0]\rddata_out_reg[5]_4 ;
  input \rddata_out[3]_i_2_0 ;
  input [0:0]SR;
  input [15:0]\q_reg[15]_1 ;

  wire [2:0]D;
  wire [20:0]Q;
  wire [0:0]SR;
  wire \addr_reg_reg[0] ;
  wire \addr_reg_reg[17] ;
  wire \addr_reg_reg[6] ;
  wire \addr_reg_reg[7] ;
  wire coreclk;
  wire \pcs_test_pattern_error_count_reg[0] ;
  wire \pcs_test_pattern_error_count_reg[0]_0 ;
  wire [2:0]pseudo_rand_seeds_int;
  wire \q[15]_i_3__1_n_0 ;
  wire \q[15]_i_4__0_n_0 ;
  wire \q[15]_i_5_n_0 ;
  wire \q_reg[0]_0 ;
  wire \q_reg[0]_1 ;
  wire [8:0]\q_reg[15]_0 ;
  wire [15:0]\q_reg[15]_1 ;
  wire \q_reg[4]_0 ;
  wire \q_reg[6]_0 ;
  wire \q_reg_n_0_[11] ;
  wire \q_reg_n_0_[13] ;
  wire \q_reg_n_0_[14] ;
  wire \q_reg_n_0_[3] ;
  wire \q_reg_n_0_[4] ;
  wire \q_reg_n_0_[5] ;
  wire \q_reg_n_0_[6] ;
  wire \rddata_out[11]_i_7_n_0 ;
  wire \rddata_out[13]_i_2_n_0 ;
  wire \rddata_out[13]_i_6_n_0 ;
  wire [6:0]\rddata_out[14]_i_3_0 ;
  wire \rddata_out[14]_i_8_n_0 ;
  wire \rddata_out[3]_i_2_0 ;
  wire \rddata_out[3]_i_2_n_0 ;
  wire \rddata_out[3]_i_7_n_0 ;
  wire \rddata_out[5]_i_2_n_0 ;
  wire \rddata_out_reg[11] ;
  wire \rddata_out_reg[13] ;
  wire \rddata_out_reg[13]_0 ;
  wire \rddata_out_reg[13]_1 ;
  wire \rddata_out_reg[13]_2 ;
  wire \rddata_out_reg[13]_3 ;
  wire \rddata_out_reg[13]_4 ;
  wire \rddata_out_reg[14] ;
  wire \rddata_out_reg[3] ;
  wire \rddata_out_reg[3]_0 ;
  wire \rddata_out_reg[3]_1 ;
  wire \rddata_out_reg[3]_2 ;
  wire \rddata_out_reg[3]_3 ;
  wire \rddata_out_reg[4] ;
  wire \rddata_out_reg[5] ;
  wire \rddata_out_reg[5]_0 ;
  wire \rddata_out_reg[5]_1 ;
  wire \rddata_out_reg[5]_2 ;
  wire \rddata_out_reg[5]_3 ;
  wire [2:0]\rddata_out_reg[5]_4 ;
  wire re_prev;
  wire re_prev_reg_0;
  wire re_prev_reg_1;
  wire re_prev_reg_2;
  wire re_prev_reg_3;
  wire reg_3_43_re;

  (* SOFT_HLUTNM = "soft_lutpair82" *) 
  LUT5 #(
    .INIT(32'h00000100)) 
    \q[15]_i_2__0 
       (.I0(Q[7]),
        .I1(Q[8]),
        .I2(Q[6]),
        .I3(Q[5]),
        .I4(re_prev_reg_3),
        .O(\addr_reg_reg[7] ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFEF)) 
    \q[15]_i_2__6 
       (.I0(\q[15]_i_3__1_n_0 ),
        .I1(\q[15]_i_4__0_n_0 ),
        .I2(Q[0]),
        .I3(\addr_reg_reg[17] ),
        .I4(\pcs_test_pattern_error_count_reg[0] ),
        .I5(\pcs_test_pattern_error_count_reg[0]_0 ),
        .O(\addr_reg_reg[0] ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFEFFFF)) 
    \q[15]_i_3__1 
       (.I0(Q[2]),
        .I1(Q[4]),
        .I2(Q[20]),
        .I3(Q[18]),
        .I4(\addr_reg_reg[6] ),
        .I5(Q[15]),
        .O(\q[15]_i_3__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair82" *) 
  LUT3 #(
    .INIT(8'h01)) 
    \q[15]_i_3__3 
       (.I0(Q[6]),
        .I1(Q[8]),
        .I2(Q[7]),
        .O(\addr_reg_reg[6] ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFEFF)) 
    \q[15]_i_4__0 
       (.I0(\q[15]_i_5_n_0 ),
        .I1(Q[9]),
        .I2(Q[19]),
        .I3(Q[5]),
        .I4(Q[13]),
        .I5(Q[14]),
        .O(\q[15]_i_4__0_n_0 ));
  LUT3 #(
    .INIT(8'hFE)) 
    \q[15]_i_5 
       (.I0(Q[12]),
        .I1(Q[11]),
        .I2(Q[10]),
        .O(\q[15]_i_5_n_0 ));
  LUT4 #(
    .INIT(16'h7FFF)) 
    \q[5]_i_2 
       (.I0(Q[17]),
        .I1(Q[1]),
        .I2(Q[16]),
        .I3(Q[3]),
        .O(\addr_reg_reg[17] ));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\q_reg[15]_1 [0]),
        .Q(\q_reg[15]_0 [0]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[10] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\q_reg[15]_1 [10]),
        .Q(\q_reg[15]_0 [6]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[11] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\q_reg[15]_1 [11]),
        .Q(\q_reg_n_0_[11] ),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[12] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\q_reg[15]_1 [12]),
        .Q(\q_reg[15]_0 [7]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[13] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\q_reg[15]_1 [13]),
        .Q(\q_reg_n_0_[13] ),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[14] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\q_reg[15]_1 [14]),
        .Q(\q_reg_n_0_[14] ),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[15] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\q_reg[15]_1 [15]),
        .Q(\q_reg[15]_0 [8]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[1] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\q_reg[15]_1 [1]),
        .Q(\q_reg[15]_0 [1]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[2] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\q_reg[15]_1 [2]),
        .Q(\q_reg[15]_0 [2]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[3] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\q_reg[15]_1 [3]),
        .Q(\q_reg_n_0_[3] ),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[4] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\q_reg[15]_1 [4]),
        .Q(\q_reg_n_0_[4] ),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[5] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\q_reg[15]_1 [5]),
        .Q(\q_reg_n_0_[5] ),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[6] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\q_reg[15]_1 [6]),
        .Q(\q_reg_n_0_[6] ),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[7] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\q_reg[15]_1 [7]),
        .Q(\q_reg[15]_0 [3]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[8] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\q_reg[15]_1 [8]),
        .Q(\q_reg[15]_0 [4]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[9] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\q_reg[15]_1 [9]),
        .Q(\q_reg[15]_0 [5]),
        .R(SR));
  LUT6 #(
    .INIT(64'h44CCCCCC44CCCC0C)) 
    \rddata_out[11]_i_3 
       (.I0(\rddata_out[11]_i_7_n_0 ),
        .I1(\rddata_out_reg[13]_0 ),
        .I2(\rddata_out_reg[11] ),
        .I3(\rddata_out_reg[13] ),
        .I4(\rddata_out_reg[5] ),
        .I5(\rddata_out_reg[3] ),
        .O(\q_reg[0]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair83" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \rddata_out[11]_i_7 
       (.I0(\q_reg_n_0_[11] ),
        .I1(\rddata_out_reg[4] ),
        .I2(\rddata_out[14]_i_3_0 [4]),
        .O(\rddata_out[11]_i_7_n_0 ));
  LUT5 #(
    .INIT(32'h444F4444)) 
    \rddata_out[13]_i_1 
       (.I0(\rddata_out[13]_i_2_n_0 ),
        .I1(\rddata_out_reg[13]_1 ),
        .I2(\rddata_out_reg[13]_2 ),
        .I3(\rddata_out_reg[13]_3 ),
        .I4(\rddata_out_reg[13]_4 ),
        .O(D[2]));
  LUT6 #(
    .INIT(64'h7600FE00FFFFFFFF)) 
    \rddata_out[13]_i_2 
       (.I0(\rddata_out_reg[13] ),
        .I1(\rddata_out_reg[5] ),
        .I2(\rddata_out_reg[3] ),
        .I3(\rddata_out_reg[13]_0 ),
        .I4(\rddata_out[13]_i_6_n_0 ),
        .I5(\rddata_out_reg[5]_0 ),
        .O(\rddata_out[13]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair84" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \rddata_out[13]_i_6 
       (.I0(\q_reg_n_0_[13] ),
        .I1(\rddata_out_reg[4] ),
        .I2(\rddata_out[14]_i_3_0 [5]),
        .O(\rddata_out[13]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hC0000404C0000000)) 
    \rddata_out[14]_i_3 
       (.I0(\rddata_out_reg[3] ),
        .I1(\rddata_out_reg[13]_0 ),
        .I2(\rddata_out_reg[5] ),
        .I3(\rddata_out[14]_i_8_n_0 ),
        .I4(\rddata_out_reg[13] ),
        .I5(\rddata_out_reg[14] ),
        .O(\q_reg[0]_1 ));
  (* SOFT_HLUTNM = "soft_lutpair84" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \rddata_out[14]_i_8 
       (.I0(\q_reg_n_0_[14] ),
        .I1(\rddata_out_reg[4] ),
        .I2(\rddata_out[14]_i_3_0 [6]),
        .O(\rddata_out[14]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF45454544)) 
    \rddata_out[3]_i_1 
       (.I0(\rddata_out[3]_i_2_n_0 ),
        .I1(\rddata_out_reg[5] ),
        .I2(\rddata_out_reg[3]_1 ),
        .I3(\rddata_out_reg[3] ),
        .I4(\rddata_out_reg[3]_2 ),
        .I5(\rddata_out_reg[3]_3 ),
        .O(D[0]));
  LUT5 #(
    .INIT(32'h4044FFFF)) 
    \rddata_out[3]_i_2 
       (.I0(\rddata_out[3]_i_7_n_0 ),
        .I1(\rddata_out_reg[5] ),
        .I2(\rddata_out_reg[3]_0 ),
        .I3(\rddata_out[14]_i_3_0 [0]),
        .I4(\rddata_out_reg[5]_0 ),
        .O(\rddata_out[3]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h000C000CAAFFAA0C)) 
    \rddata_out[3]_i_7 
       (.I0(\q_reg_n_0_[3] ),
        .I1(\rddata_out_reg[5]_4 [0]),
        .I2(\rddata_out_reg[4] ),
        .I3(\rddata_out_reg[13] ),
        .I4(pseudo_rand_seeds_int[0]),
        .I5(\rddata_out[3]_i_2_0 ),
        .O(\rddata_out[3]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h505F3030505F3F3F)) 
    \rddata_out[4]_i_5 
       (.I0(\q_reg_n_0_[4] ),
        .I1(\rddata_out[14]_i_3_0 [1]),
        .I2(\rddata_out_reg[13] ),
        .I3(pseudo_rand_seeds_int[1]),
        .I4(\rddata_out_reg[4] ),
        .I5(\rddata_out_reg[5]_4 [1]),
        .O(\q_reg[4]_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF2F220000)) 
    \rddata_out[5]_i_1 
       (.I0(\rddata_out_reg[5] ),
        .I1(\rddata_out[5]_i_2_n_0 ),
        .I2(\rddata_out_reg[5]_1 ),
        .I3(\rddata_out_reg[5]_2 ),
        .I4(\rddata_out_reg[5]_0 ),
        .I5(\rddata_out_reg[5]_3 ),
        .O(D[1]));
  LUT6 #(
    .INIT(64'h505F3030505F3F3F)) 
    \rddata_out[5]_i_2 
       (.I0(\q_reg_n_0_[5] ),
        .I1(\rddata_out[14]_i_3_0 [2]),
        .I2(\rddata_out_reg[13] ),
        .I3(pseudo_rand_seeds_int[2]),
        .I4(\rddata_out_reg[4] ),
        .I5(\rddata_out_reg[5]_4 [2]),
        .O(\rddata_out[5]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair83" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \rddata_out[6]_i_6 
       (.I0(\q_reg_n_0_[6] ),
        .I1(\rddata_out_reg[4] ),
        .I2(\rddata_out[14]_i_3_0 [3]),
        .O(\q_reg[6]_0 ));
  LUT6 #(
    .INIT(64'h0200020200000000)) 
    re_prev_i_1__2
       (.I0(\addr_reg_reg[7] ),
        .I1(re_prev_reg_0),
        .I2(\addr_reg_reg[17] ),
        .I3(re_prev_reg_1),
        .I4(re_prev_reg_2),
        .I5(Q[0]),
        .O(reg_3_43_re));
  FDRE re_prev_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(reg_3_43_re),
        .Q(re_prev),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_15_g_register" *) 
module ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_g_register__parameterized9
   (\q_reg[12]_0 ,
    \q_reg[15]_0 ,
    \addr_reg_reg[14] ,
    \q_reg[1]_0 ,
    \q_reg[10]_0 ,
    \q_reg[8]_0 ,
    \q_reg[15]_1 ,
    \rddata_out_reg[12] ,
    \rddata_out_reg[12]_0 ,
    \rddata_out[15]_i_3 ,
    \rddata_out_reg[12]_1 ,
    \rddata_out_reg[12]_2 ,
    Q,
    \q_reg[0]_0 ,
    \q_reg[0]_1 ,
    \rddata_out_reg[1] ,
    \rddata_out_reg[1]_0 ,
    \rddata_out_reg[1]_1 ,
    \rddata_out_reg[1]_2 ,
    pseudo_rand_seeds_int,
    \rddata_out[15]_i_3_0 ,
    \rddata_out[15]_i_3_1 ,
    \rddata_out_reg[8] ,
    \q_reg[2]_0 ,
    \q_reg[15]_2 ,
    coreclk);
  output \q_reg[12]_0 ;
  output [15:0]\q_reg[15]_0 ;
  output \addr_reg_reg[14] ;
  output \q_reg[1]_0 ;
  output \q_reg[10]_0 ;
  output \q_reg[8]_0 ;
  output \q_reg[15]_1 ;
  input \rddata_out_reg[12] ;
  input \rddata_out_reg[12]_0 ;
  input [4:0]\rddata_out[15]_i_3 ;
  input \rddata_out_reg[12]_1 ;
  input \rddata_out_reg[12]_2 ;
  input [17:0]Q;
  input \q_reg[0]_0 ;
  input \q_reg[0]_1 ;
  input \rddata_out_reg[1] ;
  input \rddata_out_reg[1]_0 ;
  input [0:0]\rddata_out_reg[1]_1 ;
  input \rddata_out_reg[1]_2 ;
  input [1:0]pseudo_rand_seeds_int;
  input \rddata_out[15]_i_3_0 ;
  input \rddata_out[15]_i_3_1 ;
  input \rddata_out_reg[8] ;
  input \q_reg[2]_0 ;
  input [15:0]\q_reg[15]_2 ;
  input coreclk;

  wire [17:0]Q;
  wire \addr_reg_reg[14] ;
  wire coreclk;
  wire [1:0]pseudo_rand_seeds_int;
  wire \q[15]_i_3__0_n_0 ;
  wire \q[15]_i_4__3_n_0 ;
  wire \q[15]_i_5__0_n_0 ;
  wire \q[15]_i_6__0_n_0 ;
  wire \q_reg[0]_0 ;
  wire \q_reg[0]_1 ;
  wire \q_reg[10]_0 ;
  wire \q_reg[12]_0 ;
  wire [15:0]\q_reg[15]_0 ;
  wire \q_reg[15]_1 ;
  wire [15:0]\q_reg[15]_2 ;
  wire \q_reg[1]_0 ;
  wire \q_reg[2]_0 ;
  wire \q_reg[8]_0 ;
  wire [4:0]\rddata_out[15]_i_3 ;
  wire \rddata_out[15]_i_3_0 ;
  wire \rddata_out[15]_i_3_1 ;
  wire \rddata_out[1]_i_8_n_0 ;
  wire \rddata_out_reg[12] ;
  wire \rddata_out_reg[12]_0 ;
  wire \rddata_out_reg[12]_1 ;
  wire \rddata_out_reg[12]_2 ;
  wire \rddata_out_reg[1] ;
  wire \rddata_out_reg[1]_0 ;
  wire [0:0]\rddata_out_reg[1]_1 ;
  wire \rddata_out_reg[1]_2 ;
  wire \rddata_out_reg[8] ;
  wire reg_3_65535_we;

  LUT6 #(
    .INIT(64'h2000000000000000)) 
    \q[15]_i_1__6 
       (.I0(\addr_reg_reg[14] ),
        .I1(\q[15]_i_3__0_n_0 ),
        .I2(Q[7]),
        .I3(Q[6]),
        .I4(Q[5]),
        .I5(Q[4]),
        .O(reg_3_65535_we));
  LUT6 #(
    .INIT(64'h0000000000008000)) 
    \q[15]_i_2__4 
       (.I0(Q[14]),
        .I1(Q[15]),
        .I2(Q[12]),
        .I3(Q[13]),
        .I4(\q[15]_i_4__3_n_0 ),
        .I5(\q[15]_i_5__0_n_0 ),
        .O(\addr_reg_reg[14] ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFEF)) 
    \q[15]_i_3__0 
       (.I0(Q[16]),
        .I1(Q[17]),
        .I2(Q[3]),
        .I3(\q_reg[0]_0 ),
        .I4(\q[15]_i_6__0_n_0 ),
        .I5(\q_reg[0]_1 ),
        .O(\q[15]_i_3__0_n_0 ));
  LUT2 #(
    .INIT(4'h7)) 
    \q[15]_i_4__3 
       (.I0(Q[8]),
        .I1(Q[9]),
        .O(\q[15]_i_4__3_n_0 ));
  LUT2 #(
    .INIT(4'h7)) 
    \q[15]_i_5__0 
       (.I0(Q[10]),
        .I1(Q[11]),
        .O(\q[15]_i_5__0_n_0 ));
  LUT3 #(
    .INIT(8'h7F)) 
    \q[15]_i_6__0 
       (.I0(Q[1]),
        .I1(Q[2]),
        .I2(Q[0]),
        .O(\q[15]_i_6__0_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \q_reg[0] 
       (.C(coreclk),
        .CE(reg_3_65535_we),
        .D(\q_reg[15]_2 [0]),
        .Q(\q_reg[15]_0 [0]),
        .S(\q_reg[2]_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \q_reg[10] 
       (.C(coreclk),
        .CE(reg_3_65535_we),
        .D(\q_reg[15]_2 [10]),
        .Q(\q_reg[15]_0 [10]),
        .S(\q_reg[2]_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \q_reg[11] 
       (.C(coreclk),
        .CE(reg_3_65535_we),
        .D(\q_reg[15]_2 [11]),
        .Q(\q_reg[15]_0 [11]),
        .S(\q_reg[2]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[12] 
       (.C(coreclk),
        .CE(reg_3_65535_we),
        .D(\q_reg[15]_2 [12]),
        .Q(\q_reg[15]_0 [12]),
        .R(\q_reg[2]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[13] 
       (.C(coreclk),
        .CE(reg_3_65535_we),
        .D(\q_reg[15]_2 [13]),
        .Q(\q_reg[15]_0 [13]),
        .R(\q_reg[2]_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \q_reg[14] 
       (.C(coreclk),
        .CE(reg_3_65535_we),
        .D(\q_reg[15]_2 [14]),
        .Q(\q_reg[15]_0 [14]),
        .S(\q_reg[2]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[15] 
       (.C(coreclk),
        .CE(reg_3_65535_we),
        .D(\q_reg[15]_2 [15]),
        .Q(\q_reg[15]_0 [15]),
        .R(\q_reg[2]_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \q_reg[1] 
       (.C(coreclk),
        .CE(reg_3_65535_we),
        .D(\q_reg[15]_2 [1]),
        .Q(\q_reg[15]_0 [1]),
        .S(\q_reg[2]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[2] 
       (.C(coreclk),
        .CE(reg_3_65535_we),
        .D(\q_reg[15]_2 [2]),
        .Q(\q_reg[15]_0 [2]),
        .R(\q_reg[2]_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \q_reg[3] 
       (.C(coreclk),
        .CE(reg_3_65535_we),
        .D(\q_reg[15]_2 [3]),
        .Q(\q_reg[15]_0 [3]),
        .S(\q_reg[2]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[4] 
       (.C(coreclk),
        .CE(reg_3_65535_we),
        .D(\q_reg[15]_2 [4]),
        .Q(\q_reg[15]_0 [4]),
        .R(\q_reg[2]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[5] 
       (.C(coreclk),
        .CE(reg_3_65535_we),
        .D(\q_reg[15]_2 [5]),
        .Q(\q_reg[15]_0 [5]),
        .R(\q_reg[2]_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \q_reg[6] 
       (.C(coreclk),
        .CE(reg_3_65535_we),
        .D(\q_reg[15]_2 [6]),
        .Q(\q_reg[15]_0 [6]),
        .S(\q_reg[2]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[7] 
       (.C(coreclk),
        .CE(reg_3_65535_we),
        .D(\q_reg[15]_2 [7]),
        .Q(\q_reg[15]_0 [7]),
        .R(\q_reg[2]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[8] 
       (.C(coreclk),
        .CE(reg_3_65535_we),
        .D(\q_reg[15]_2 [8]),
        .Q(\q_reg[15]_0 [8]),
        .R(\q_reg[2]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[9] 
       (.C(coreclk),
        .CE(reg_3_65535_we),
        .D(\q_reg[15]_2 [9]),
        .Q(\q_reg[15]_0 [9]),
        .R(\q_reg[2]_0 ));
  LUT4 #(
    .INIT(16'h57F7)) 
    \rddata_out[10]_i_12 
       (.I0(\rddata_out[15]_i_3_0 ),
        .I1(\q_reg[15]_0 [10]),
        .I2(\rddata_out[15]_i_3_1 ),
        .I3(\rddata_out[15]_i_3 [2]),
        .O(\q_reg[10]_0 ));
  LUT6 #(
    .INIT(64'h00B0B0B0FFFFFFFF)) 
    \rddata_out[12]_i_3 
       (.I0(\rddata_out_reg[12] ),
        .I1(\q_reg[15]_0 [12]),
        .I2(\rddata_out_reg[12]_0 ),
        .I3(\rddata_out[15]_i_3 [3]),
        .I4(\rddata_out_reg[12]_1 ),
        .I5(\rddata_out_reg[12]_2 ),
        .O(\q_reg[12]_0 ));
  LUT4 #(
    .INIT(16'hE200)) 
    \rddata_out[15]_i_11 
       (.I0(\q_reg[15]_0 [15]),
        .I1(\rddata_out[15]_i_3_1 ),
        .I2(\rddata_out[15]_i_3 [4]),
        .I3(\rddata_out[15]_i_3_0 ),
        .O(\q_reg[15]_1 ));
  LUT6 #(
    .INIT(64'h8088000080888088)) 
    \rddata_out[1]_i_3 
       (.I0(\rddata_out[1]_i_8_n_0 ),
        .I1(\rddata_out_reg[1] ),
        .I2(\rddata_out_reg[1]_0 ),
        .I3(\rddata_out_reg[1]_1 ),
        .I4(\rddata_out_reg[1]_2 ),
        .I5(pseudo_rand_seeds_int[0]),
        .O(\q_reg[1]_0 ));
  LUT4 #(
    .INIT(16'h57F7)) 
    \rddata_out[1]_i_8 
       (.I0(\rddata_out[15]_i_3_0 ),
        .I1(\q_reg[15]_0 [1]),
        .I2(\rddata_out[15]_i_3_1 ),
        .I3(\rddata_out[15]_i_3 [0]),
        .O(\rddata_out[1]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hBB0BBB0B0000BB0B)) 
    \rddata_out[8]_i_2 
       (.I0(\rddata_out_reg[12] ),
        .I1(\q_reg[15]_0 [8]),
        .I2(pseudo_rand_seeds_int[1]),
        .I3(\rddata_out_reg[1]_2 ),
        .I4(\rddata_out[15]_i_3 [1]),
        .I5(\rddata_out_reg[8] ),
        .O(\q_reg[8]_0 ));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_15_g_resyncs" *) 
module ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_g_resyncs
   (core_status,
    pcs_hi_ber_core_int,
    pcs_rx_link_up_core_sync_int,
    b_lock,
    hiber,
    in0,
    coreclk);
  output [0:0]core_status;
  output pcs_hi_ber_core_int;
  output pcs_rx_link_up_core_sync_int;
  input b_lock;
  input hiber;
  input in0;
  input coreclk;

  wire b_lock;
  wire [0:0]core_status;
  wire coreclk;
  wire hiber;
  wire in0;
  wire pcs_hi_ber_core_int;
  wire pcs_rx_link_up_core_sync_int;

  ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_synchronizer_29 \resynch[0].synch_inst 
       (.b_lock(b_lock),
        .core_status(core_status),
        .coreclk(coreclk));
  ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_synchronizer_30 \resynch[1].synch_inst 
       (.coreclk(coreclk),
        .hiber(hiber),
        .pcs_hi_ber_core_int(pcs_hi_ber_core_int));
  ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_synchronizer_31 \resynch[2].synch_inst 
       (.coreclk(coreclk),
        .in0(in0),
        .pcs_rx_link_up_core_sync_int(pcs_rx_link_up_core_sync_int));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_15_g_resyncs" *) 
module ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_g_resyncs__parameterized0
   (tx_prbs31_en,
    q,
    in0,
    pcs_loopback_core_int,
    txusrclk2);
  output tx_prbs31_en;
  output q;
  input in0;
  input pcs_loopback_core_int;
  input txusrclk2;

  wire in0;
  wire pcs_loopback_core_int;
  wire q;
  wire tx_prbs31_en;
  wire txusrclk2;

  ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_synchronizer_63 \resynch[0].synch_inst 
       (.in0(in0),
        .tx_prbs31_en(tx_prbs31_en),
        .txusrclk2(txusrclk2));
  ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_synchronizer_64 \resynch[1].synch_inst 
       (.pcs_loopback_core_int(pcs_loopback_core_int),
        .q(q),
        .txusrclk2(txusrclk2));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_15_g_resyncs_en" *) 
module ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_g_resyncs_en
   (q,
    rxusrclk2,
    d,
    E);
  output q;
  input rxusrclk2;
  input d;
  input [0:0]E;

  wire [0:0]E;
  wire d;
  wire q;
  wire rxusrclk2;

  ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_synchronizer_enable \resynch[0].synch_inst 
       (.clk(rxusrclk2),
        .d(d),
        .en(E),
        .q(q));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_15_idle_delete" *) 
module ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_idle_delete
   (wr_en,
    wr_data,
    comp_0,
    comp_1,
    comp_8,
    Q,
    comp_0_0,
    comp_1_1,
    comp_8_2,
    comp_0_3,
    comp_1_4,
    comp_2,
    comp_0_5,
    comp_1_6,
    comp_2_7,
    rxreset_rxusrclk2,
    out,
    rxusrclk2,
    status,
    \mcp1_ctrl_pipe_reg[7]_0 );
  output wr_en;
  output [73:0]wr_data;
  input comp_0;
  input comp_1;
  input comp_8;
  input [63:0]Q;
  input comp_0_0;
  input comp_1_1;
  input comp_8_2;
  input comp_0_3;
  input comp_1_4;
  input comp_2;
  input comp_0_5;
  input comp_1_6;
  input comp_2_7;
  input rxreset_rxusrclk2;
  input out;
  input rxusrclk2;
  input [0:0]status;
  input [7:0]\mcp1_ctrl_pipe_reg[7]_0 ;

  wire \FSM_sequential_mcp1_state[0]_i_1_n_0 ;
  wire \FSM_sequential_mcp1_state[0]_i_2_n_0 ;
  wire \FSM_sequential_mcp1_state[0]_i_3_n_0 ;
  wire \FSM_sequential_mcp1_state[1]_i_1_n_0 ;
  wire \FSM_sequential_mcp1_state[1]_i_2_n_0 ;
  wire \FSM_sequential_mcp1_state[1]_i_3_n_0 ;
  wire \FSM_sequential_mcp1_state[1]_i_4_n_0 ;
  wire \FSM_sequential_mcp1_state[2]_i_1_n_0 ;
  wire \FSM_sequential_mcp1_state[2]_i_2_n_0 ;
  wire [63:0]Q;
  wire comp_0;
  wire comp_0_0;
  wire comp_0_3;
  wire comp_0_5;
  wire comp_1;
  wire comp_1_1;
  wire comp_1_4;
  wire comp_1_6;
  wire comp_2;
  wire comp_2_7;
  wire comp_8;
  wire comp_8_2;
  wire [1:0]input_is_idle_comb;
  wire [1:0]input_is_seq_comb;
  wire [7:4]mcp1_ctrl_delay;
  wire [7:0]mcp1_ctrl_pipe;
  wire [7:0]\mcp1_ctrl_pipe_reg[7]_0 ;
  wire [63:32]mcp1_data_delay;
  wire [63:0]mcp1_data_pipe;
  wire \mcp1_fifo_cc_seq_out[0]_i_1_n_0 ;
  wire \mcp1_fifo_cc_seq_out[1]_i_1_n_0 ;
  wire \mcp1_fifo_ctrl_out[0]_i_1_n_0 ;
  wire \mcp1_fifo_ctrl_out[1]_i_1_n_0 ;
  wire \mcp1_fifo_ctrl_out[2]_i_1_n_0 ;
  wire \mcp1_fifo_ctrl_out[3]_i_1_n_0 ;
  wire \mcp1_fifo_ctrl_out[4]_i_1_n_0 ;
  wire \mcp1_fifo_ctrl_out[5]_i_1_n_0 ;
  wire \mcp1_fifo_ctrl_out[6]_i_1_n_0 ;
  wire \mcp1_fifo_ctrl_out[7]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[0]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[10]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[11]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[12]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[13]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[14]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[15]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[16]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[17]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[18]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[19]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[1]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[20]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[21]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[22]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[23]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[24]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[25]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[26]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[27]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[28]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[29]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[2]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[30]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[31]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[32]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[33]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[34]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[35]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[36]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[37]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[38]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[39]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[3]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[40]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[41]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[42]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[43]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[44]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[45]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[46]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[47]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[48]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[49]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[4]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[50]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[51]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[52]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[53]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[54]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[55]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[56]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[57]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[58]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[59]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[5]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[60]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[61]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[62]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[63]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[63]_i_2_n_0 ;
  wire \mcp1_fifo_data_out[63]_i_3_n_0 ;
  wire \mcp1_fifo_data_out[6]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[7]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[8]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[9]_i_1_n_0 ;
  wire \mcp1_input_is_idle_reg_n_0_[0] ;
  wire \mcp1_input_is_idle_reg_n_0_[1] ;
  wire [1:0]mcp1_input_is_seq_or_idle;
  wire \mcp1_input_is_seq_or_idle[0]_i_1_n_0 ;
  wire \mcp1_input_is_seq_or_idle[1]_i_1_n_0 ;
  wire \mcp1_input_is_seq_reg_n_0_[0] ;
  wire \mcp1_input_is_seq_reg_n_0_[1] ;
  wire mcp1_input_was_idle;
  wire mcp1_input_was_seq;
  wire [2:0]mcp1_state;
  wire out;
  wire p_0_in;
  wire rxreset_rxusrclk2;
  wire rxusrclk2;
  wire [0:0]status;
  wire [73:0]wr_data;
  wire wr_en;

  LUT6 #(
    .INIT(64'hCDCDFEFCCDCD3E3C)) 
    \FSM_sequential_mcp1_state[0]_i_1 
       (.I0(\FSM_sequential_mcp1_state[0]_i_2_n_0 ),
        .I1(mcp1_state[0]),
        .I2(mcp1_state[1]),
        .I3(\FSM_sequential_mcp1_state[0]_i_3_n_0 ),
        .I4(mcp1_state[2]),
        .I5(\FSM_sequential_mcp1_state[1]_i_2_n_0 ),
        .O(\FSM_sequential_mcp1_state[0]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \FSM_sequential_mcp1_state[0]_i_2 
       (.I0(mcp1_input_was_seq),
        .I1(\mcp1_input_is_seq_reg_n_0_[0] ),
        .I2(mcp1_input_was_idle),
        .I3(\mcp1_input_is_idle_reg_n_0_[0] ),
        .O(\FSM_sequential_mcp1_state[0]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \FSM_sequential_mcp1_state[0]_i_3 
       (.I0(out),
        .I1(status),
        .O(\FSM_sequential_mcp1_state[0]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hCCE6FFFFCCE6FFE6)) 
    \FSM_sequential_mcp1_state[1]_i_1 
       (.I0(mcp1_state[0]),
        .I1(mcp1_state[1]),
        .I2(\FSM_sequential_mcp1_state[1]_i_2_n_0 ),
        .I3(mcp1_state[2]),
        .I4(\FSM_sequential_mcp1_state[1]_i_3_n_0 ),
        .I5(\FSM_sequential_mcp1_state[1]_i_4_n_0 ),
        .O(\FSM_sequential_mcp1_state[1]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h1FFF)) 
    \FSM_sequential_mcp1_state[1]_i_2 
       (.I0(\mcp1_input_is_seq_reg_n_0_[1] ),
        .I1(\mcp1_input_is_idle_reg_n_0_[1] ),
        .I2(out),
        .I3(status),
        .O(\FSM_sequential_mcp1_state[1]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFF888)) 
    \FSM_sequential_mcp1_state[1]_i_3 
       (.I0(\mcp1_input_is_idle_reg_n_0_[0] ),
        .I1(mcp1_input_was_idle),
        .I2(\mcp1_input_is_seq_reg_n_0_[0] ),
        .I3(mcp1_input_was_seq),
        .I4(mcp1_state[0]),
        .I5(mcp1_state[1]),
        .O(\FSM_sequential_mcp1_state[1]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h8888800080008000)) 
    \FSM_sequential_mcp1_state[1]_i_4 
       (.I0(status),
        .I1(out),
        .I2(\mcp1_input_is_idle_reg_n_0_[0] ),
        .I3(\mcp1_input_is_idle_reg_n_0_[1] ),
        .I4(\mcp1_input_is_seq_reg_n_0_[0] ),
        .I5(\mcp1_input_is_seq_reg_n_0_[1] ),
        .O(\FSM_sequential_mcp1_state[1]_i_4_n_0 ));
  LUT4 #(
    .INIT(16'hDCC0)) 
    \FSM_sequential_mcp1_state[2]_i_1 
       (.I0(\FSM_sequential_mcp1_state[2]_i_2_n_0 ),
        .I1(mcp1_state[2]),
        .I2(mcp1_state[0]),
        .I3(mcp1_state[1]),
        .O(\FSM_sequential_mcp1_state[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBB0BFFFFFFFFFFFF)) 
    \FSM_sequential_mcp1_state[2]_i_2 
       (.I0(\mcp1_input_is_seq_reg_n_0_[0] ),
        .I1(\mcp1_input_is_seq_reg_n_0_[1] ),
        .I2(\mcp1_input_is_idle_reg_n_0_[1] ),
        .I3(\mcp1_input_is_idle_reg_n_0_[0] ),
        .I4(status),
        .I5(out),
        .O(\FSM_sequential_mcp1_state[2]_i_2_n_0 ));
  (* FSM_ENCODED_STATES = "DELETE3:001,DELETE1:010,POSSIBLE_DELETE4:100,TWISTED:011,STRAIGHT:000" *) 
  FDRE \FSM_sequential_mcp1_state_reg[0] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\FSM_sequential_mcp1_state[0]_i_1_n_0 ),
        .Q(mcp1_state[0]),
        .R(rxreset_rxusrclk2));
  (* FSM_ENCODED_STATES = "DELETE3:001,DELETE1:010,POSSIBLE_DELETE4:100,TWISTED:011,STRAIGHT:000" *) 
  FDRE \FSM_sequential_mcp1_state_reg[1] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\FSM_sequential_mcp1_state[1]_i_1_n_0 ),
        .Q(mcp1_state[1]),
        .R(rxreset_rxusrclk2));
  (* FSM_ENCODED_STATES = "DELETE3:001,DELETE1:010,POSSIBLE_DELETE4:100,TWISTED:011,STRAIGHT:000" *) 
  FDRE \FSM_sequential_mcp1_state_reg[2] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\FSM_sequential_mcp1_state[2]_i_1_n_0 ),
        .Q(mcp1_state[2]),
        .R(rxreset_rxusrclk2));
  LUT3 #(
    .INIT(8'h19)) 
    asynch_fifo_i_i_1
       (.I0(mcp1_state[1]),
        .I1(mcp1_state[0]),
        .I2(mcp1_state[2]),
        .O(wr_en));
  ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_idle_detect idle_detect_i0
       (.D(input_is_idle_comb[0]),
        .Q(Q[31:8]),
        .comp_0(comp_0),
        .comp_1(comp_1),
        .comp_8(comp_8));
  ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_idle_detect_61 idle_detect_i1
       (.D(input_is_idle_comb[1]),
        .Q(Q[63:40]),
        .comp_0_0(comp_0_0),
        .comp_1_1(comp_1_1),
        .comp_8_2(comp_8_2));
  FDSE \mcp1_ctrl_delay_reg[4] 
       (.C(rxusrclk2),
        .CE(out),
        .D(mcp1_ctrl_pipe[4]),
        .Q(mcp1_ctrl_delay[4]),
        .S(rxreset_rxusrclk2));
  FDRE \mcp1_ctrl_delay_reg[5] 
       (.C(rxusrclk2),
        .CE(out),
        .D(mcp1_ctrl_pipe[5]),
        .Q(mcp1_ctrl_delay[5]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_ctrl_delay_reg[6] 
       (.C(rxusrclk2),
        .CE(out),
        .D(mcp1_ctrl_pipe[6]),
        .Q(mcp1_ctrl_delay[6]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_ctrl_delay_reg[7] 
       (.C(rxusrclk2),
        .CE(out),
        .D(mcp1_ctrl_pipe[7]),
        .Q(mcp1_ctrl_delay[7]),
        .R(rxreset_rxusrclk2));
  FDSE \mcp1_ctrl_pipe_reg[0] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_ctrl_pipe_reg[7]_0 [0]),
        .Q(mcp1_ctrl_pipe[0]),
        .S(rxreset_rxusrclk2));
  FDRE \mcp1_ctrl_pipe_reg[1] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_ctrl_pipe_reg[7]_0 [1]),
        .Q(mcp1_ctrl_pipe[1]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_ctrl_pipe_reg[2] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_ctrl_pipe_reg[7]_0 [2]),
        .Q(mcp1_ctrl_pipe[2]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_ctrl_pipe_reg[3] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_ctrl_pipe_reg[7]_0 [3]),
        .Q(mcp1_ctrl_pipe[3]),
        .R(rxreset_rxusrclk2));
  FDSE \mcp1_ctrl_pipe_reg[4] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_ctrl_pipe_reg[7]_0 [4]),
        .Q(mcp1_ctrl_pipe[4]),
        .S(rxreset_rxusrclk2));
  FDRE \mcp1_ctrl_pipe_reg[5] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_ctrl_pipe_reg[7]_0 [5]),
        .Q(mcp1_ctrl_pipe[5]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_ctrl_pipe_reg[6] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_ctrl_pipe_reg[7]_0 [6]),
        .Q(mcp1_ctrl_pipe[6]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_ctrl_pipe_reg[7] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_ctrl_pipe_reg[7]_0 [7]),
        .Q(mcp1_ctrl_pipe[7]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_delay_reg[32] 
       (.C(rxusrclk2),
        .CE(out),
        .D(mcp1_data_pipe[32]),
        .Q(mcp1_data_delay[32]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_delay_reg[33] 
       (.C(rxusrclk2),
        .CE(out),
        .D(mcp1_data_pipe[33]),
        .Q(mcp1_data_delay[33]),
        .R(rxreset_rxusrclk2));
  FDSE \mcp1_data_delay_reg[34] 
       (.C(rxusrclk2),
        .CE(out),
        .D(mcp1_data_pipe[34]),
        .Q(mcp1_data_delay[34]),
        .S(rxreset_rxusrclk2));
  FDSE \mcp1_data_delay_reg[35] 
       (.C(rxusrclk2),
        .CE(out),
        .D(mcp1_data_pipe[35]),
        .Q(mcp1_data_delay[35]),
        .S(rxreset_rxusrclk2));
  FDSE \mcp1_data_delay_reg[36] 
       (.C(rxusrclk2),
        .CE(out),
        .D(mcp1_data_pipe[36]),
        .Q(mcp1_data_delay[36]),
        .S(rxreset_rxusrclk2));
  FDRE \mcp1_data_delay_reg[37] 
       (.C(rxusrclk2),
        .CE(out),
        .D(mcp1_data_pipe[37]),
        .Q(mcp1_data_delay[37]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_delay_reg[38] 
       (.C(rxusrclk2),
        .CE(out),
        .D(mcp1_data_pipe[38]),
        .Q(mcp1_data_delay[38]),
        .R(rxreset_rxusrclk2));
  FDSE \mcp1_data_delay_reg[39] 
       (.C(rxusrclk2),
        .CE(out),
        .D(mcp1_data_pipe[39]),
        .Q(mcp1_data_delay[39]),
        .S(rxreset_rxusrclk2));
  FDRE \mcp1_data_delay_reg[40] 
       (.C(rxusrclk2),
        .CE(out),
        .D(mcp1_data_pipe[40]),
        .Q(mcp1_data_delay[40]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_delay_reg[41] 
       (.C(rxusrclk2),
        .CE(out),
        .D(mcp1_data_pipe[41]),
        .Q(mcp1_data_delay[41]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_delay_reg[42] 
       (.C(rxusrclk2),
        .CE(out),
        .D(mcp1_data_pipe[42]),
        .Q(mcp1_data_delay[42]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_delay_reg[43] 
       (.C(rxusrclk2),
        .CE(out),
        .D(mcp1_data_pipe[43]),
        .Q(mcp1_data_delay[43]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_delay_reg[44] 
       (.C(rxusrclk2),
        .CE(out),
        .D(mcp1_data_pipe[44]),
        .Q(mcp1_data_delay[44]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_delay_reg[45] 
       (.C(rxusrclk2),
        .CE(out),
        .D(mcp1_data_pipe[45]),
        .Q(mcp1_data_delay[45]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_delay_reg[46] 
       (.C(rxusrclk2),
        .CE(out),
        .D(mcp1_data_pipe[46]),
        .Q(mcp1_data_delay[46]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_delay_reg[47] 
       (.C(rxusrclk2),
        .CE(out),
        .D(mcp1_data_pipe[47]),
        .Q(mcp1_data_delay[47]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_delay_reg[48] 
       (.C(rxusrclk2),
        .CE(out),
        .D(mcp1_data_pipe[48]),
        .Q(mcp1_data_delay[48]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_delay_reg[49] 
       (.C(rxusrclk2),
        .CE(out),
        .D(mcp1_data_pipe[49]),
        .Q(mcp1_data_delay[49]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_delay_reg[50] 
       (.C(rxusrclk2),
        .CE(out),
        .D(mcp1_data_pipe[50]),
        .Q(mcp1_data_delay[50]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_delay_reg[51] 
       (.C(rxusrclk2),
        .CE(out),
        .D(mcp1_data_pipe[51]),
        .Q(mcp1_data_delay[51]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_delay_reg[52] 
       (.C(rxusrclk2),
        .CE(out),
        .D(mcp1_data_pipe[52]),
        .Q(mcp1_data_delay[52]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_delay_reg[53] 
       (.C(rxusrclk2),
        .CE(out),
        .D(mcp1_data_pipe[53]),
        .Q(mcp1_data_delay[53]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_delay_reg[54] 
       (.C(rxusrclk2),
        .CE(out),
        .D(mcp1_data_pipe[54]),
        .Q(mcp1_data_delay[54]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_delay_reg[55] 
       (.C(rxusrclk2),
        .CE(out),
        .D(mcp1_data_pipe[55]),
        .Q(mcp1_data_delay[55]),
        .R(rxreset_rxusrclk2));
  FDSE \mcp1_data_delay_reg[56] 
       (.C(rxusrclk2),
        .CE(out),
        .D(mcp1_data_pipe[56]),
        .Q(mcp1_data_delay[56]),
        .S(rxreset_rxusrclk2));
  FDRE \mcp1_data_delay_reg[57] 
       (.C(rxusrclk2),
        .CE(out),
        .D(mcp1_data_pipe[57]),
        .Q(mcp1_data_delay[57]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_delay_reg[58] 
       (.C(rxusrclk2),
        .CE(out),
        .D(mcp1_data_pipe[58]),
        .Q(mcp1_data_delay[58]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_delay_reg[59] 
       (.C(rxusrclk2),
        .CE(out),
        .D(mcp1_data_pipe[59]),
        .Q(mcp1_data_delay[59]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_delay_reg[60] 
       (.C(rxusrclk2),
        .CE(out),
        .D(mcp1_data_pipe[60]),
        .Q(mcp1_data_delay[60]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_delay_reg[61] 
       (.C(rxusrclk2),
        .CE(out),
        .D(mcp1_data_pipe[61]),
        .Q(mcp1_data_delay[61]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_delay_reg[62] 
       (.C(rxusrclk2),
        .CE(out),
        .D(mcp1_data_pipe[62]),
        .Q(mcp1_data_delay[62]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_delay_reg[63] 
       (.C(rxusrclk2),
        .CE(out),
        .D(mcp1_data_pipe[63]),
        .Q(mcp1_data_delay[63]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_pipe_reg[0] 
       (.C(rxusrclk2),
        .CE(out),
        .D(Q[0]),
        .Q(mcp1_data_pipe[0]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_pipe_reg[10] 
       (.C(rxusrclk2),
        .CE(out),
        .D(Q[10]),
        .Q(mcp1_data_pipe[10]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_pipe_reg[11] 
       (.C(rxusrclk2),
        .CE(out),
        .D(Q[11]),
        .Q(mcp1_data_pipe[11]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_pipe_reg[12] 
       (.C(rxusrclk2),
        .CE(out),
        .D(Q[12]),
        .Q(mcp1_data_pipe[12]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_pipe_reg[13] 
       (.C(rxusrclk2),
        .CE(out),
        .D(Q[13]),
        .Q(mcp1_data_pipe[13]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_pipe_reg[14] 
       (.C(rxusrclk2),
        .CE(out),
        .D(Q[14]),
        .Q(mcp1_data_pipe[14]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_pipe_reg[15] 
       (.C(rxusrclk2),
        .CE(out),
        .D(Q[15]),
        .Q(mcp1_data_pipe[15]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_pipe_reg[16] 
       (.C(rxusrclk2),
        .CE(out),
        .D(Q[16]),
        .Q(mcp1_data_pipe[16]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_pipe_reg[17] 
       (.C(rxusrclk2),
        .CE(out),
        .D(Q[17]),
        .Q(mcp1_data_pipe[17]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_pipe_reg[18] 
       (.C(rxusrclk2),
        .CE(out),
        .D(Q[18]),
        .Q(mcp1_data_pipe[18]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_pipe_reg[19] 
       (.C(rxusrclk2),
        .CE(out),
        .D(Q[19]),
        .Q(mcp1_data_pipe[19]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_pipe_reg[1] 
       (.C(rxusrclk2),
        .CE(out),
        .D(Q[1]),
        .Q(mcp1_data_pipe[1]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_pipe_reg[20] 
       (.C(rxusrclk2),
        .CE(out),
        .D(Q[20]),
        .Q(mcp1_data_pipe[20]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_pipe_reg[21] 
       (.C(rxusrclk2),
        .CE(out),
        .D(Q[21]),
        .Q(mcp1_data_pipe[21]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_pipe_reg[22] 
       (.C(rxusrclk2),
        .CE(out),
        .D(Q[22]),
        .Q(mcp1_data_pipe[22]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_pipe_reg[23] 
       (.C(rxusrclk2),
        .CE(out),
        .D(Q[23]),
        .Q(mcp1_data_pipe[23]),
        .R(rxreset_rxusrclk2));
  FDSE \mcp1_data_pipe_reg[24] 
       (.C(rxusrclk2),
        .CE(out),
        .D(Q[24]),
        .Q(mcp1_data_pipe[24]),
        .S(rxreset_rxusrclk2));
  FDRE \mcp1_data_pipe_reg[25] 
       (.C(rxusrclk2),
        .CE(out),
        .D(Q[25]),
        .Q(mcp1_data_pipe[25]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_pipe_reg[26] 
       (.C(rxusrclk2),
        .CE(out),
        .D(Q[26]),
        .Q(mcp1_data_pipe[26]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_pipe_reg[27] 
       (.C(rxusrclk2),
        .CE(out),
        .D(Q[27]),
        .Q(mcp1_data_pipe[27]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_pipe_reg[28] 
       (.C(rxusrclk2),
        .CE(out),
        .D(Q[28]),
        .Q(mcp1_data_pipe[28]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_pipe_reg[29] 
       (.C(rxusrclk2),
        .CE(out),
        .D(Q[29]),
        .Q(mcp1_data_pipe[29]),
        .R(rxreset_rxusrclk2));
  FDSE \mcp1_data_pipe_reg[2] 
       (.C(rxusrclk2),
        .CE(out),
        .D(Q[2]),
        .Q(mcp1_data_pipe[2]),
        .S(rxreset_rxusrclk2));
  FDRE \mcp1_data_pipe_reg[30] 
       (.C(rxusrclk2),
        .CE(out),
        .D(Q[30]),
        .Q(mcp1_data_pipe[30]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_pipe_reg[31] 
       (.C(rxusrclk2),
        .CE(out),
        .D(Q[31]),
        .Q(mcp1_data_pipe[31]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_pipe_reg[32] 
       (.C(rxusrclk2),
        .CE(out),
        .D(Q[32]),
        .Q(mcp1_data_pipe[32]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_pipe_reg[33] 
       (.C(rxusrclk2),
        .CE(out),
        .D(Q[33]),
        .Q(mcp1_data_pipe[33]),
        .R(rxreset_rxusrclk2));
  FDSE \mcp1_data_pipe_reg[34] 
       (.C(rxusrclk2),
        .CE(out),
        .D(Q[34]),
        .Q(mcp1_data_pipe[34]),
        .S(rxreset_rxusrclk2));
  FDSE \mcp1_data_pipe_reg[35] 
       (.C(rxusrclk2),
        .CE(out),
        .D(Q[35]),
        .Q(mcp1_data_pipe[35]),
        .S(rxreset_rxusrclk2));
  FDSE \mcp1_data_pipe_reg[36] 
       (.C(rxusrclk2),
        .CE(out),
        .D(Q[36]),
        .Q(mcp1_data_pipe[36]),
        .S(rxreset_rxusrclk2));
  FDRE \mcp1_data_pipe_reg[37] 
       (.C(rxusrclk2),
        .CE(out),
        .D(Q[37]),
        .Q(mcp1_data_pipe[37]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_pipe_reg[38] 
       (.C(rxusrclk2),
        .CE(out),
        .D(Q[38]),
        .Q(mcp1_data_pipe[38]),
        .R(rxreset_rxusrclk2));
  FDSE \mcp1_data_pipe_reg[39] 
       (.C(rxusrclk2),
        .CE(out),
        .D(Q[39]),
        .Q(mcp1_data_pipe[39]),
        .S(rxreset_rxusrclk2));
  FDSE \mcp1_data_pipe_reg[3] 
       (.C(rxusrclk2),
        .CE(out),
        .D(Q[3]),
        .Q(mcp1_data_pipe[3]),
        .S(rxreset_rxusrclk2));
  FDRE \mcp1_data_pipe_reg[40] 
       (.C(rxusrclk2),
        .CE(out),
        .D(Q[40]),
        .Q(mcp1_data_pipe[40]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_pipe_reg[41] 
       (.C(rxusrclk2),
        .CE(out),
        .D(Q[41]),
        .Q(mcp1_data_pipe[41]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_pipe_reg[42] 
       (.C(rxusrclk2),
        .CE(out),
        .D(Q[42]),
        .Q(mcp1_data_pipe[42]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_pipe_reg[43] 
       (.C(rxusrclk2),
        .CE(out),
        .D(Q[43]),
        .Q(mcp1_data_pipe[43]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_pipe_reg[44] 
       (.C(rxusrclk2),
        .CE(out),
        .D(Q[44]),
        .Q(mcp1_data_pipe[44]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_pipe_reg[45] 
       (.C(rxusrclk2),
        .CE(out),
        .D(Q[45]),
        .Q(mcp1_data_pipe[45]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_pipe_reg[46] 
       (.C(rxusrclk2),
        .CE(out),
        .D(Q[46]),
        .Q(mcp1_data_pipe[46]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_pipe_reg[47] 
       (.C(rxusrclk2),
        .CE(out),
        .D(Q[47]),
        .Q(mcp1_data_pipe[47]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_pipe_reg[48] 
       (.C(rxusrclk2),
        .CE(out),
        .D(Q[48]),
        .Q(mcp1_data_pipe[48]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_pipe_reg[49] 
       (.C(rxusrclk2),
        .CE(out),
        .D(Q[49]),
        .Q(mcp1_data_pipe[49]),
        .R(rxreset_rxusrclk2));
  FDSE \mcp1_data_pipe_reg[4] 
       (.C(rxusrclk2),
        .CE(out),
        .D(Q[4]),
        .Q(mcp1_data_pipe[4]),
        .S(rxreset_rxusrclk2));
  FDRE \mcp1_data_pipe_reg[50] 
       (.C(rxusrclk2),
        .CE(out),
        .D(Q[50]),
        .Q(mcp1_data_pipe[50]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_pipe_reg[51] 
       (.C(rxusrclk2),
        .CE(out),
        .D(Q[51]),
        .Q(mcp1_data_pipe[51]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_pipe_reg[52] 
       (.C(rxusrclk2),
        .CE(out),
        .D(Q[52]),
        .Q(mcp1_data_pipe[52]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_pipe_reg[53] 
       (.C(rxusrclk2),
        .CE(out),
        .D(Q[53]),
        .Q(mcp1_data_pipe[53]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_pipe_reg[54] 
       (.C(rxusrclk2),
        .CE(out),
        .D(Q[54]),
        .Q(mcp1_data_pipe[54]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_pipe_reg[55] 
       (.C(rxusrclk2),
        .CE(out),
        .D(Q[55]),
        .Q(mcp1_data_pipe[55]),
        .R(rxreset_rxusrclk2));
  FDSE \mcp1_data_pipe_reg[56] 
       (.C(rxusrclk2),
        .CE(out),
        .D(Q[56]),
        .Q(mcp1_data_pipe[56]),
        .S(rxreset_rxusrclk2));
  FDRE \mcp1_data_pipe_reg[57] 
       (.C(rxusrclk2),
        .CE(out),
        .D(Q[57]),
        .Q(mcp1_data_pipe[57]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_pipe_reg[58] 
       (.C(rxusrclk2),
        .CE(out),
        .D(Q[58]),
        .Q(mcp1_data_pipe[58]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_pipe_reg[59] 
       (.C(rxusrclk2),
        .CE(out),
        .D(Q[59]),
        .Q(mcp1_data_pipe[59]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_pipe_reg[5] 
       (.C(rxusrclk2),
        .CE(out),
        .D(Q[5]),
        .Q(mcp1_data_pipe[5]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_pipe_reg[60] 
       (.C(rxusrclk2),
        .CE(out),
        .D(Q[60]),
        .Q(mcp1_data_pipe[60]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_pipe_reg[61] 
       (.C(rxusrclk2),
        .CE(out),
        .D(Q[61]),
        .Q(mcp1_data_pipe[61]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_pipe_reg[62] 
       (.C(rxusrclk2),
        .CE(out),
        .D(Q[62]),
        .Q(mcp1_data_pipe[62]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_pipe_reg[63] 
       (.C(rxusrclk2),
        .CE(out),
        .D(Q[63]),
        .Q(mcp1_data_pipe[63]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_pipe_reg[6] 
       (.C(rxusrclk2),
        .CE(out),
        .D(Q[6]),
        .Q(mcp1_data_pipe[6]),
        .R(rxreset_rxusrclk2));
  FDSE \mcp1_data_pipe_reg[7] 
       (.C(rxusrclk2),
        .CE(out),
        .D(Q[7]),
        .Q(mcp1_data_pipe[7]),
        .S(rxreset_rxusrclk2));
  FDRE \mcp1_data_pipe_reg[8] 
       (.C(rxusrclk2),
        .CE(out),
        .D(Q[8]),
        .Q(mcp1_data_pipe[8]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_pipe_reg[9] 
       (.C(rxusrclk2),
        .CE(out),
        .D(Q[9]),
        .Q(mcp1_data_pipe[9]),
        .R(rxreset_rxusrclk2));
  LUT3 #(
    .INIT(8'hB8)) 
    \mcp1_fifo_cc_seq_out[0]_i_1 
       (.I0(p_0_in),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_input_is_seq_or_idle[0]),
        .O(\mcp1_fifo_cc_seq_out[0]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \mcp1_fifo_cc_seq_out[1]_i_1 
       (.I0(mcp1_input_is_seq_or_idle[0]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_input_is_seq_or_idle[1]),
        .O(\mcp1_fifo_cc_seq_out[1]_i_1_n_0 ));
  FDRE \mcp1_fifo_cc_seq_out_reg[0] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_fifo_cc_seq_out[0]_i_1_n_0 ),
        .Q(wr_data[72]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_cc_seq_out_reg[1] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_fifo_cc_seq_out[1]_i_1_n_0 ),
        .Q(wr_data[73]),
        .R(rxreset_rxusrclk2));
  LUT3 #(
    .INIT(8'hB8)) 
    \mcp1_fifo_ctrl_out[0]_i_1 
       (.I0(mcp1_ctrl_delay[4]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_ctrl_pipe[0]),
        .O(\mcp1_fifo_ctrl_out[0]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \mcp1_fifo_ctrl_out[1]_i_1 
       (.I0(mcp1_ctrl_delay[5]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_ctrl_pipe[1]),
        .O(\mcp1_fifo_ctrl_out[1]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \mcp1_fifo_ctrl_out[2]_i_1 
       (.I0(mcp1_ctrl_delay[6]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_ctrl_pipe[2]),
        .O(\mcp1_fifo_ctrl_out[2]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \mcp1_fifo_ctrl_out[3]_i_1 
       (.I0(mcp1_ctrl_delay[7]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_ctrl_pipe[3]),
        .O(\mcp1_fifo_ctrl_out[3]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \mcp1_fifo_ctrl_out[4]_i_1 
       (.I0(mcp1_ctrl_pipe[0]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_ctrl_pipe[4]),
        .O(\mcp1_fifo_ctrl_out[4]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \mcp1_fifo_ctrl_out[5]_i_1 
       (.I0(mcp1_ctrl_pipe[1]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_ctrl_pipe[5]),
        .O(\mcp1_fifo_ctrl_out[5]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \mcp1_fifo_ctrl_out[6]_i_1 
       (.I0(mcp1_ctrl_pipe[2]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_ctrl_pipe[6]),
        .O(\mcp1_fifo_ctrl_out[6]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \mcp1_fifo_ctrl_out[7]_i_1 
       (.I0(mcp1_ctrl_pipe[3]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_ctrl_pipe[7]),
        .O(\mcp1_fifo_ctrl_out[7]_i_1_n_0 ));
  FDSE \mcp1_fifo_ctrl_out_reg[0] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_fifo_ctrl_out[0]_i_1_n_0 ),
        .Q(wr_data[64]),
        .S(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_ctrl_out_reg[1] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_fifo_ctrl_out[1]_i_1_n_0 ),
        .Q(wr_data[65]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_ctrl_out_reg[2] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_fifo_ctrl_out[2]_i_1_n_0 ),
        .Q(wr_data[66]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_ctrl_out_reg[3] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_fifo_ctrl_out[3]_i_1_n_0 ),
        .Q(wr_data[67]),
        .R(rxreset_rxusrclk2));
  FDSE \mcp1_fifo_ctrl_out_reg[4] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_fifo_ctrl_out[4]_i_1_n_0 ),
        .Q(wr_data[68]),
        .S(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_ctrl_out_reg[5] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_fifo_ctrl_out[5]_i_1_n_0 ),
        .Q(wr_data[69]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_ctrl_out_reg[6] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_fifo_ctrl_out[6]_i_1_n_0 ),
        .Q(wr_data[70]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_ctrl_out_reg[7] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_fifo_ctrl_out[7]_i_1_n_0 ),
        .Q(wr_data[71]),
        .R(rxreset_rxusrclk2));
  LUT3 #(
    .INIT(8'hB8)) 
    \mcp1_fifo_data_out[0]_i_1 
       (.I0(mcp1_data_delay[32]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_data_pipe[0]),
        .O(\mcp1_fifo_data_out[0]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \mcp1_fifo_data_out[10]_i_1 
       (.I0(mcp1_data_delay[42]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_data_pipe[10]),
        .O(\mcp1_fifo_data_out[10]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \mcp1_fifo_data_out[11]_i_1 
       (.I0(mcp1_data_delay[43]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_data_pipe[11]),
        .O(\mcp1_fifo_data_out[11]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \mcp1_fifo_data_out[12]_i_1 
       (.I0(mcp1_data_delay[44]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_data_pipe[12]),
        .O(\mcp1_fifo_data_out[12]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \mcp1_fifo_data_out[13]_i_1 
       (.I0(mcp1_data_delay[45]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_data_pipe[13]),
        .O(\mcp1_fifo_data_out[13]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \mcp1_fifo_data_out[14]_i_1 
       (.I0(mcp1_data_delay[46]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_data_pipe[14]),
        .O(\mcp1_fifo_data_out[14]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \mcp1_fifo_data_out[15]_i_1 
       (.I0(mcp1_data_delay[47]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_data_pipe[15]),
        .O(\mcp1_fifo_data_out[15]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \mcp1_fifo_data_out[16]_i_1 
       (.I0(mcp1_data_delay[48]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_data_pipe[16]),
        .O(\mcp1_fifo_data_out[16]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \mcp1_fifo_data_out[17]_i_1 
       (.I0(mcp1_data_delay[49]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_data_pipe[17]),
        .O(\mcp1_fifo_data_out[17]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \mcp1_fifo_data_out[18]_i_1 
       (.I0(mcp1_data_delay[50]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_data_pipe[18]),
        .O(\mcp1_fifo_data_out[18]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \mcp1_fifo_data_out[19]_i_1 
       (.I0(mcp1_data_delay[51]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_data_pipe[19]),
        .O(\mcp1_fifo_data_out[19]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \mcp1_fifo_data_out[1]_i_1 
       (.I0(mcp1_data_delay[33]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_data_pipe[1]),
        .O(\mcp1_fifo_data_out[1]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \mcp1_fifo_data_out[20]_i_1 
       (.I0(mcp1_data_delay[52]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_data_pipe[20]),
        .O(\mcp1_fifo_data_out[20]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \mcp1_fifo_data_out[21]_i_1 
       (.I0(mcp1_data_delay[53]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_data_pipe[21]),
        .O(\mcp1_fifo_data_out[21]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \mcp1_fifo_data_out[22]_i_1 
       (.I0(mcp1_data_delay[54]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_data_pipe[22]),
        .O(\mcp1_fifo_data_out[22]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \mcp1_fifo_data_out[23]_i_1 
       (.I0(mcp1_data_delay[55]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_data_pipe[23]),
        .O(\mcp1_fifo_data_out[23]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \mcp1_fifo_data_out[24]_i_1 
       (.I0(mcp1_data_delay[56]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_data_pipe[24]),
        .O(\mcp1_fifo_data_out[24]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \mcp1_fifo_data_out[25]_i_1 
       (.I0(mcp1_data_delay[57]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_data_pipe[25]),
        .O(\mcp1_fifo_data_out[25]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \mcp1_fifo_data_out[26]_i_1 
       (.I0(mcp1_data_delay[58]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_data_pipe[26]),
        .O(\mcp1_fifo_data_out[26]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \mcp1_fifo_data_out[27]_i_1 
       (.I0(mcp1_data_delay[59]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_data_pipe[27]),
        .O(\mcp1_fifo_data_out[27]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \mcp1_fifo_data_out[28]_i_1 
       (.I0(mcp1_data_delay[60]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_data_pipe[28]),
        .O(\mcp1_fifo_data_out[28]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \mcp1_fifo_data_out[29]_i_1 
       (.I0(mcp1_data_delay[61]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_data_pipe[29]),
        .O(\mcp1_fifo_data_out[29]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \mcp1_fifo_data_out[2]_i_1 
       (.I0(mcp1_data_delay[34]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_data_pipe[2]),
        .O(\mcp1_fifo_data_out[2]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \mcp1_fifo_data_out[30]_i_1 
       (.I0(mcp1_data_delay[62]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_data_pipe[30]),
        .O(\mcp1_fifo_data_out[30]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \mcp1_fifo_data_out[31]_i_1 
       (.I0(mcp1_data_delay[63]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_data_pipe[31]),
        .O(\mcp1_fifo_data_out[31]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \mcp1_fifo_data_out[32]_i_1 
       (.I0(mcp1_data_pipe[0]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_data_pipe[32]),
        .O(\mcp1_fifo_data_out[32]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \mcp1_fifo_data_out[33]_i_1 
       (.I0(mcp1_data_pipe[1]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_data_pipe[33]),
        .O(\mcp1_fifo_data_out[33]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \mcp1_fifo_data_out[34]_i_1 
       (.I0(mcp1_data_pipe[2]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_data_pipe[34]),
        .O(\mcp1_fifo_data_out[34]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \mcp1_fifo_data_out[35]_i_1 
       (.I0(mcp1_data_pipe[3]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_data_pipe[35]),
        .O(\mcp1_fifo_data_out[35]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \mcp1_fifo_data_out[36]_i_1 
       (.I0(mcp1_data_pipe[4]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_data_pipe[36]),
        .O(\mcp1_fifo_data_out[36]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \mcp1_fifo_data_out[37]_i_1 
       (.I0(mcp1_data_pipe[5]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_data_pipe[37]),
        .O(\mcp1_fifo_data_out[37]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \mcp1_fifo_data_out[38]_i_1 
       (.I0(mcp1_data_pipe[6]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_data_pipe[38]),
        .O(\mcp1_fifo_data_out[38]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \mcp1_fifo_data_out[39]_i_1 
       (.I0(mcp1_data_pipe[7]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_data_pipe[39]),
        .O(\mcp1_fifo_data_out[39]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \mcp1_fifo_data_out[3]_i_1 
       (.I0(mcp1_data_delay[35]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_data_pipe[3]),
        .O(\mcp1_fifo_data_out[3]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \mcp1_fifo_data_out[40]_i_1 
       (.I0(mcp1_data_pipe[8]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_data_pipe[40]),
        .O(\mcp1_fifo_data_out[40]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \mcp1_fifo_data_out[41]_i_1 
       (.I0(mcp1_data_pipe[9]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_data_pipe[41]),
        .O(\mcp1_fifo_data_out[41]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \mcp1_fifo_data_out[42]_i_1 
       (.I0(mcp1_data_pipe[10]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_data_pipe[42]),
        .O(\mcp1_fifo_data_out[42]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \mcp1_fifo_data_out[43]_i_1 
       (.I0(mcp1_data_pipe[11]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_data_pipe[43]),
        .O(\mcp1_fifo_data_out[43]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \mcp1_fifo_data_out[44]_i_1 
       (.I0(mcp1_data_pipe[12]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_data_pipe[44]),
        .O(\mcp1_fifo_data_out[44]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \mcp1_fifo_data_out[45]_i_1 
       (.I0(mcp1_data_pipe[13]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_data_pipe[45]),
        .O(\mcp1_fifo_data_out[45]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \mcp1_fifo_data_out[46]_i_1 
       (.I0(mcp1_data_pipe[14]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_data_pipe[46]),
        .O(\mcp1_fifo_data_out[46]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \mcp1_fifo_data_out[47]_i_1 
       (.I0(mcp1_data_pipe[15]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_data_pipe[47]),
        .O(\mcp1_fifo_data_out[47]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \mcp1_fifo_data_out[48]_i_1 
       (.I0(mcp1_data_pipe[16]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_data_pipe[48]),
        .O(\mcp1_fifo_data_out[48]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \mcp1_fifo_data_out[49]_i_1 
       (.I0(mcp1_data_pipe[17]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_data_pipe[49]),
        .O(\mcp1_fifo_data_out[49]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \mcp1_fifo_data_out[4]_i_1 
       (.I0(mcp1_data_delay[36]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_data_pipe[4]),
        .O(\mcp1_fifo_data_out[4]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \mcp1_fifo_data_out[50]_i_1 
       (.I0(mcp1_data_pipe[18]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_data_pipe[50]),
        .O(\mcp1_fifo_data_out[50]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \mcp1_fifo_data_out[51]_i_1 
       (.I0(mcp1_data_pipe[19]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_data_pipe[51]),
        .O(\mcp1_fifo_data_out[51]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \mcp1_fifo_data_out[52]_i_1 
       (.I0(mcp1_data_pipe[20]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_data_pipe[52]),
        .O(\mcp1_fifo_data_out[52]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \mcp1_fifo_data_out[53]_i_1 
       (.I0(mcp1_data_pipe[21]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_data_pipe[53]),
        .O(\mcp1_fifo_data_out[53]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \mcp1_fifo_data_out[54]_i_1 
       (.I0(mcp1_data_pipe[22]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_data_pipe[54]),
        .O(\mcp1_fifo_data_out[54]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \mcp1_fifo_data_out[55]_i_1 
       (.I0(mcp1_data_pipe[23]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_data_pipe[55]),
        .O(\mcp1_fifo_data_out[55]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \mcp1_fifo_data_out[56]_i_1 
       (.I0(mcp1_data_pipe[24]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_data_pipe[56]),
        .O(\mcp1_fifo_data_out[56]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \mcp1_fifo_data_out[57]_i_1 
       (.I0(mcp1_data_pipe[25]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_data_pipe[57]),
        .O(\mcp1_fifo_data_out[57]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \mcp1_fifo_data_out[58]_i_1 
       (.I0(mcp1_data_pipe[26]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_data_pipe[58]),
        .O(\mcp1_fifo_data_out[58]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \mcp1_fifo_data_out[59]_i_1 
       (.I0(mcp1_data_pipe[27]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_data_pipe[59]),
        .O(\mcp1_fifo_data_out[59]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \mcp1_fifo_data_out[5]_i_1 
       (.I0(mcp1_data_delay[37]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_data_pipe[5]),
        .O(\mcp1_fifo_data_out[5]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \mcp1_fifo_data_out[60]_i_1 
       (.I0(mcp1_data_pipe[28]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_data_pipe[60]),
        .O(\mcp1_fifo_data_out[60]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \mcp1_fifo_data_out[61]_i_1 
       (.I0(mcp1_data_pipe[29]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_data_pipe[61]),
        .O(\mcp1_fifo_data_out[61]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \mcp1_fifo_data_out[62]_i_1 
       (.I0(mcp1_data_pipe[30]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_data_pipe[62]),
        .O(\mcp1_fifo_data_out[62]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \mcp1_fifo_data_out[63]_i_1 
       (.I0(mcp1_data_pipe[31]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_data_pipe[63]),
        .O(\mcp1_fifo_data_out[63]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h077700000000FFFF)) 
    \mcp1_fifo_data_out[63]_i_2 
       (.I0(\mcp1_input_is_idle_reg_n_0_[0] ),
        .I1(mcp1_input_was_idle),
        .I2(\mcp1_input_is_seq_reg_n_0_[0] ),
        .I3(mcp1_input_was_seq),
        .I4(\mcp1_fifo_data_out[63]_i_3_n_0 ),
        .I5(mcp1_state[2]),
        .O(\mcp1_fifo_data_out[63]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \mcp1_fifo_data_out[63]_i_3 
       (.I0(mcp1_state[1]),
        .I1(mcp1_state[0]),
        .O(\mcp1_fifo_data_out[63]_i_3_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \mcp1_fifo_data_out[6]_i_1 
       (.I0(mcp1_data_delay[38]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_data_pipe[6]),
        .O(\mcp1_fifo_data_out[6]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \mcp1_fifo_data_out[7]_i_1 
       (.I0(mcp1_data_delay[39]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_data_pipe[7]),
        .O(\mcp1_fifo_data_out[7]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \mcp1_fifo_data_out[8]_i_1 
       (.I0(mcp1_data_delay[40]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_data_pipe[8]),
        .O(\mcp1_fifo_data_out[8]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \mcp1_fifo_data_out[9]_i_1 
       (.I0(mcp1_data_delay[41]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_data_pipe[9]),
        .O(\mcp1_fifo_data_out[9]_i_1_n_0 ));
  FDRE \mcp1_fifo_data_out_reg[0] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_fifo_data_out[0]_i_1_n_0 ),
        .Q(wr_data[0]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_data_out_reg[10] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_fifo_data_out[10]_i_1_n_0 ),
        .Q(wr_data[10]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_data_out_reg[11] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_fifo_data_out[11]_i_1_n_0 ),
        .Q(wr_data[11]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_data_out_reg[12] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_fifo_data_out[12]_i_1_n_0 ),
        .Q(wr_data[12]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_data_out_reg[13] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_fifo_data_out[13]_i_1_n_0 ),
        .Q(wr_data[13]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_data_out_reg[14] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_fifo_data_out[14]_i_1_n_0 ),
        .Q(wr_data[14]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_data_out_reg[15] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_fifo_data_out[15]_i_1_n_0 ),
        .Q(wr_data[15]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_data_out_reg[16] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_fifo_data_out[16]_i_1_n_0 ),
        .Q(wr_data[16]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_data_out_reg[17] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_fifo_data_out[17]_i_1_n_0 ),
        .Q(wr_data[17]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_data_out_reg[18] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_fifo_data_out[18]_i_1_n_0 ),
        .Q(wr_data[18]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_data_out_reg[19] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_fifo_data_out[19]_i_1_n_0 ),
        .Q(wr_data[19]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_data_out_reg[1] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_fifo_data_out[1]_i_1_n_0 ),
        .Q(wr_data[1]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_data_out_reg[20] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_fifo_data_out[20]_i_1_n_0 ),
        .Q(wr_data[20]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_data_out_reg[21] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_fifo_data_out[21]_i_1_n_0 ),
        .Q(wr_data[21]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_data_out_reg[22] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_fifo_data_out[22]_i_1_n_0 ),
        .Q(wr_data[22]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_data_out_reg[23] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_fifo_data_out[23]_i_1_n_0 ),
        .Q(wr_data[23]),
        .R(rxreset_rxusrclk2));
  FDSE \mcp1_fifo_data_out_reg[24] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_fifo_data_out[24]_i_1_n_0 ),
        .Q(wr_data[24]),
        .S(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_data_out_reg[25] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_fifo_data_out[25]_i_1_n_0 ),
        .Q(wr_data[25]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_data_out_reg[26] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_fifo_data_out[26]_i_1_n_0 ),
        .Q(wr_data[26]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_data_out_reg[27] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_fifo_data_out[27]_i_1_n_0 ),
        .Q(wr_data[27]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_data_out_reg[28] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_fifo_data_out[28]_i_1_n_0 ),
        .Q(wr_data[28]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_data_out_reg[29] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_fifo_data_out[29]_i_1_n_0 ),
        .Q(wr_data[29]),
        .R(rxreset_rxusrclk2));
  FDSE \mcp1_fifo_data_out_reg[2] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_fifo_data_out[2]_i_1_n_0 ),
        .Q(wr_data[2]),
        .S(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_data_out_reg[30] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_fifo_data_out[30]_i_1_n_0 ),
        .Q(wr_data[30]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_data_out_reg[31] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_fifo_data_out[31]_i_1_n_0 ),
        .Q(wr_data[31]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_data_out_reg[32] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_fifo_data_out[32]_i_1_n_0 ),
        .Q(wr_data[32]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_data_out_reg[33] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_fifo_data_out[33]_i_1_n_0 ),
        .Q(wr_data[33]),
        .R(rxreset_rxusrclk2));
  FDSE \mcp1_fifo_data_out_reg[34] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_fifo_data_out[34]_i_1_n_0 ),
        .Q(wr_data[34]),
        .S(rxreset_rxusrclk2));
  FDSE \mcp1_fifo_data_out_reg[35] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_fifo_data_out[35]_i_1_n_0 ),
        .Q(wr_data[35]),
        .S(rxreset_rxusrclk2));
  FDSE \mcp1_fifo_data_out_reg[36] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_fifo_data_out[36]_i_1_n_0 ),
        .Q(wr_data[36]),
        .S(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_data_out_reg[37] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_fifo_data_out[37]_i_1_n_0 ),
        .Q(wr_data[37]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_data_out_reg[38] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_fifo_data_out[38]_i_1_n_0 ),
        .Q(wr_data[38]),
        .R(rxreset_rxusrclk2));
  FDSE \mcp1_fifo_data_out_reg[39] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_fifo_data_out[39]_i_1_n_0 ),
        .Q(wr_data[39]),
        .S(rxreset_rxusrclk2));
  FDSE \mcp1_fifo_data_out_reg[3] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_fifo_data_out[3]_i_1_n_0 ),
        .Q(wr_data[3]),
        .S(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_data_out_reg[40] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_fifo_data_out[40]_i_1_n_0 ),
        .Q(wr_data[40]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_data_out_reg[41] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_fifo_data_out[41]_i_1_n_0 ),
        .Q(wr_data[41]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_data_out_reg[42] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_fifo_data_out[42]_i_1_n_0 ),
        .Q(wr_data[42]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_data_out_reg[43] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_fifo_data_out[43]_i_1_n_0 ),
        .Q(wr_data[43]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_data_out_reg[44] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_fifo_data_out[44]_i_1_n_0 ),
        .Q(wr_data[44]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_data_out_reg[45] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_fifo_data_out[45]_i_1_n_0 ),
        .Q(wr_data[45]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_data_out_reg[46] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_fifo_data_out[46]_i_1_n_0 ),
        .Q(wr_data[46]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_data_out_reg[47] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_fifo_data_out[47]_i_1_n_0 ),
        .Q(wr_data[47]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_data_out_reg[48] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_fifo_data_out[48]_i_1_n_0 ),
        .Q(wr_data[48]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_data_out_reg[49] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_fifo_data_out[49]_i_1_n_0 ),
        .Q(wr_data[49]),
        .R(rxreset_rxusrclk2));
  FDSE \mcp1_fifo_data_out_reg[4] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_fifo_data_out[4]_i_1_n_0 ),
        .Q(wr_data[4]),
        .S(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_data_out_reg[50] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_fifo_data_out[50]_i_1_n_0 ),
        .Q(wr_data[50]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_data_out_reg[51] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_fifo_data_out[51]_i_1_n_0 ),
        .Q(wr_data[51]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_data_out_reg[52] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_fifo_data_out[52]_i_1_n_0 ),
        .Q(wr_data[52]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_data_out_reg[53] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_fifo_data_out[53]_i_1_n_0 ),
        .Q(wr_data[53]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_data_out_reg[54] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_fifo_data_out[54]_i_1_n_0 ),
        .Q(wr_data[54]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_data_out_reg[55] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_fifo_data_out[55]_i_1_n_0 ),
        .Q(wr_data[55]),
        .R(rxreset_rxusrclk2));
  FDSE \mcp1_fifo_data_out_reg[56] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_fifo_data_out[56]_i_1_n_0 ),
        .Q(wr_data[56]),
        .S(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_data_out_reg[57] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_fifo_data_out[57]_i_1_n_0 ),
        .Q(wr_data[57]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_data_out_reg[58] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_fifo_data_out[58]_i_1_n_0 ),
        .Q(wr_data[58]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_data_out_reg[59] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_fifo_data_out[59]_i_1_n_0 ),
        .Q(wr_data[59]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_data_out_reg[5] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_fifo_data_out[5]_i_1_n_0 ),
        .Q(wr_data[5]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_data_out_reg[60] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_fifo_data_out[60]_i_1_n_0 ),
        .Q(wr_data[60]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_data_out_reg[61] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_fifo_data_out[61]_i_1_n_0 ),
        .Q(wr_data[61]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_data_out_reg[62] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_fifo_data_out[62]_i_1_n_0 ),
        .Q(wr_data[62]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_data_out_reg[63] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_fifo_data_out[63]_i_1_n_0 ),
        .Q(wr_data[63]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_data_out_reg[6] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_fifo_data_out[6]_i_1_n_0 ),
        .Q(wr_data[6]),
        .R(rxreset_rxusrclk2));
  FDSE \mcp1_fifo_data_out_reg[7] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_fifo_data_out[7]_i_1_n_0 ),
        .Q(wr_data[7]),
        .S(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_data_out_reg[8] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_fifo_data_out[8]_i_1_n_0 ),
        .Q(wr_data[8]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_data_out_reg[9] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_fifo_data_out[9]_i_1_n_0 ),
        .Q(wr_data[9]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_input_is_idle_reg[0] 
       (.C(rxusrclk2),
        .CE(out),
        .D(input_is_idle_comb[0]),
        .Q(\mcp1_input_is_idle_reg_n_0_[0] ),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_input_is_idle_reg[1] 
       (.C(rxusrclk2),
        .CE(out),
        .D(input_is_idle_comb[1]),
        .Q(\mcp1_input_is_idle_reg_n_0_[1] ),
        .R(rxreset_rxusrclk2));
  LUT2 #(
    .INIT(4'hE)) 
    \mcp1_input_is_seq_or_idle[0]_i_1 
       (.I0(input_is_idle_comb[0]),
        .I1(input_is_seq_comb[0]),
        .O(\mcp1_input_is_seq_or_idle[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \mcp1_input_is_seq_or_idle[1]_i_1 
       (.I0(input_is_idle_comb[1]),
        .I1(input_is_seq_comb[1]),
        .O(\mcp1_input_is_seq_or_idle[1]_i_1_n_0 ));
  FDRE \mcp1_input_is_seq_or_idle_reg[0] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_input_is_seq_or_idle[0]_i_1_n_0 ),
        .Q(mcp1_input_is_seq_or_idle[0]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_input_is_seq_or_idle_reg[1] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_input_is_seq_or_idle[1]_i_1_n_0 ),
        .Q(mcp1_input_is_seq_or_idle[1]),
        .R(rxreset_rxusrclk2));
  FDSE \mcp1_input_is_seq_reg[0] 
       (.C(rxusrclk2),
        .CE(out),
        .D(input_is_seq_comb[0]),
        .Q(\mcp1_input_is_seq_reg_n_0_[0] ),
        .S(rxreset_rxusrclk2));
  FDSE \mcp1_input_is_seq_reg[1] 
       (.C(rxusrclk2),
        .CE(out),
        .D(input_is_seq_comb[1]),
        .Q(\mcp1_input_is_seq_reg_n_0_[1] ),
        .S(rxreset_rxusrclk2));
  FDRE mcp1_input_was_idle_reg
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_input_is_idle_reg_n_0_[1] ),
        .Q(mcp1_input_was_idle),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_input_was_seq_or_idle_reg[1] 
       (.C(rxusrclk2),
        .CE(out),
        .D(mcp1_input_is_seq_or_idle[1]),
        .Q(p_0_in),
        .R(rxreset_rxusrclk2));
  FDRE mcp1_input_was_seq_reg
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_input_is_seq_reg_n_0_[1] ),
        .Q(mcp1_input_was_seq),
        .R(rxreset_rxusrclk2));
  ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_seq_detect seq_detect_i0
       (.D(input_is_seq_comb[0]),
        .comp_0_3(comp_0_3),
        .comp_1_4(comp_1_4),
        .comp_2(comp_2));
  ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_seq_detect_62 seq_detect_i1
       (.D(input_is_seq_comb[1]),
        .comp_0_5(comp_0_5),
        .comp_1_6(comp_1_6),
        .comp_2_7(comp_2_7));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_15_idle_detect" *) 
module ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_idle_detect
   (D,
    comp_0,
    comp_1,
    comp_8,
    Q);
  output [0:0]D;
  input comp_0;
  input comp_1;
  input comp_8;
  input [23:0]Q;

  wire [0:0]D;
  wire [23:0]Q;
  wire comp_0;
  wire comp_1;
  wire comp_2__0;
  wire comp_3__0;
  wire comp_4__0;
  wire comp_5__0;
  wire comp_6__0;
  wire comp_7__0;
  wire comp_8;
  wire muxcyo_0;
  wire muxcyo_1;
  wire muxcyo_2;
  wire muxcyo_3;
  wire muxcyo_4;
  wire muxcyo_5;
  wire muxcyo_6;
  wire muxcyo_7;
  wire [3:0]NLW_muxcy_i0_CARRY4_O_UNCONNECTED;
  wire [3:0]NLW_muxcy_i4_CARRY4_O_UNCONNECTED;
  wire [3:1]NLW_muxcy_i8_CARRY4_CO_UNCONNECTED;
  wire [3:1]NLW_muxcy_i8_CARRY4_DI_UNCONNECTED;
  wire [3:0]NLW_muxcy_i8_CARRY4_O_UNCONNECTED;
  wire [3:1]NLW_muxcy_i8_CARRY4_S_UNCONNECTED;

  LUT4 #(
    .INIT(16'h2000)) 
    comp_2
       (.I0(Q[2]),
        .I1(Q[3]),
        .I2(Q[0]),
        .I3(Q[1]),
        .O(comp_2__0));
  LUT4 #(
    .INIT(16'h0001)) 
    comp_3
       (.I0(Q[7]),
        .I1(Q[6]),
        .I2(Q[4]),
        .I3(Q[5]),
        .O(comp_3__0));
  LUT4 #(
    .INIT(16'h2000)) 
    comp_4
       (.I0(Q[10]),
        .I1(Q[11]),
        .I2(Q[8]),
        .I3(Q[9]),
        .O(comp_4__0));
  LUT4 #(
    .INIT(16'h0001)) 
    comp_5
       (.I0(Q[15]),
        .I1(Q[14]),
        .I2(Q[12]),
        .I3(Q[13]),
        .O(comp_5__0));
  LUT4 #(
    .INIT(16'h2000)) 
    comp_6
       (.I0(Q[18]),
        .I1(Q[19]),
        .I2(Q[16]),
        .I3(Q[17]),
        .O(comp_6__0));
  LUT4 #(
    .INIT(16'h0001)) 
    comp_7
       (.I0(Q[23]),
        .I1(Q[22]),
        .I2(Q[20]),
        .I3(Q[21]),
        .O(comp_7__0));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* OPT_MODIFIED = "MLO" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  CARRY4 muxcy_i0_CARRY4
       (.CI(1'b0),
        .CO({muxcyo_3,muxcyo_2,muxcyo_1,muxcyo_0}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_muxcy_i0_CARRY4_O_UNCONNECTED[3:0]),
        .S({comp_3__0,comp_2__0,comp_1,comp_0}));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* OPT_MODIFIED = "MLO" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  CARRY4 muxcy_i4_CARRY4
       (.CI(muxcyo_3),
        .CO({muxcyo_7,muxcyo_6,muxcyo_5,muxcyo_4}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_muxcy_i4_CARRY4_O_UNCONNECTED[3:0]),
        .S({comp_7__0,comp_6__0,comp_5__0,comp_4__0}));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* OPT_MODIFIED = "MLO" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  CARRY4 muxcy_i8_CARRY4
       (.CI(muxcyo_7),
        .CO({NLW_muxcy_i8_CARRY4_CO_UNCONNECTED[3:1],D}),
        .CYINIT(1'b0),
        .DI({NLW_muxcy_i8_CARRY4_DI_UNCONNECTED[3:1],1'b0}),
        .O(NLW_muxcy_i8_CARRY4_O_UNCONNECTED[3:0]),
        .S({NLW_muxcy_i8_CARRY4_S_UNCONNECTED[3:1],comp_8}));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_15_idle_detect" *) 
module ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_idle_detect_61
   (D,
    comp_0_0,
    comp_1_1,
    comp_8_2,
    Q);
  output [0:0]D;
  input comp_0_0;
  input comp_1_1;
  input comp_8_2;
  input [23:0]Q;

  wire [0:0]D;
  wire [23:0]Q;
  wire comp_0_0;
  wire comp_1_1;
  wire comp_2__0;
  wire comp_3__0;
  wire comp_4__0;
  wire comp_5__0;
  wire comp_6__0;
  wire comp_7__0;
  wire comp_8_2;
  wire muxcyo_0;
  wire muxcyo_1;
  wire muxcyo_2;
  wire muxcyo_3;
  wire muxcyo_4;
  wire muxcyo_5;
  wire muxcyo_6;
  wire muxcyo_7;
  wire [3:0]NLW_muxcy_i0_CARRY4_O_UNCONNECTED;
  wire [3:0]NLW_muxcy_i4_CARRY4_O_UNCONNECTED;
  wire [3:1]NLW_muxcy_i8_CARRY4_CO_UNCONNECTED;
  wire [3:1]NLW_muxcy_i8_CARRY4_DI_UNCONNECTED;
  wire [3:0]NLW_muxcy_i8_CARRY4_O_UNCONNECTED;
  wire [3:1]NLW_muxcy_i8_CARRY4_S_UNCONNECTED;

  LUT4 #(
    .INIT(16'h2000)) 
    comp_2
       (.I0(Q[2]),
        .I1(Q[3]),
        .I2(Q[0]),
        .I3(Q[1]),
        .O(comp_2__0));
  LUT4 #(
    .INIT(16'h0001)) 
    comp_3
       (.I0(Q[7]),
        .I1(Q[6]),
        .I2(Q[4]),
        .I3(Q[5]),
        .O(comp_3__0));
  LUT4 #(
    .INIT(16'h2000)) 
    comp_4
       (.I0(Q[10]),
        .I1(Q[11]),
        .I2(Q[8]),
        .I3(Q[9]),
        .O(comp_4__0));
  LUT4 #(
    .INIT(16'h0001)) 
    comp_5
       (.I0(Q[15]),
        .I1(Q[14]),
        .I2(Q[12]),
        .I3(Q[13]),
        .O(comp_5__0));
  LUT4 #(
    .INIT(16'h2000)) 
    comp_6
       (.I0(Q[18]),
        .I1(Q[19]),
        .I2(Q[16]),
        .I3(Q[17]),
        .O(comp_6__0));
  LUT4 #(
    .INIT(16'h0001)) 
    comp_7
       (.I0(Q[23]),
        .I1(Q[22]),
        .I2(Q[20]),
        .I3(Q[21]),
        .O(comp_7__0));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* OPT_MODIFIED = "MLO" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  CARRY4 muxcy_i0_CARRY4
       (.CI(1'b0),
        .CO({muxcyo_3,muxcyo_2,muxcyo_1,muxcyo_0}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_muxcy_i0_CARRY4_O_UNCONNECTED[3:0]),
        .S({comp_3__0,comp_2__0,comp_1_1,comp_0_0}));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* OPT_MODIFIED = "MLO" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  CARRY4 muxcy_i4_CARRY4
       (.CI(muxcyo_3),
        .CO({muxcyo_7,muxcyo_6,muxcyo_5,muxcyo_4}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_muxcy_i4_CARRY4_O_UNCONNECTED[3:0]),
        .S({comp_7__0,comp_6__0,comp_5__0,comp_4__0}));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* OPT_MODIFIED = "MLO" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  CARRY4 muxcy_i8_CARRY4
       (.CI(muxcyo_7),
        .CO({NLW_muxcy_i8_CARRY4_CO_UNCONNECTED[3:1],D}),
        .CYINIT(1'b0),
        .DI({NLW_muxcy_i8_CARRY4_DI_UNCONNECTED[3:1],1'b0}),
        .O(NLW_muxcy_i8_CARRY4_O_UNCONNECTED[3:0]),
        .S({NLW_muxcy_i8_CARRY4_S_UNCONNECTED[3:1],comp_8_2}));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_15_idle_insert" *) 
module ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_idle_insert
   (rd_en,
    xgmii_rxd,
    xgmii_rxc,
    coreclk,
    rd_data,
    empty,
    can_insert_rd,
    reset,
    \rd_data_reg[0] ,
    \xgmii_rxd[63] ,
    pcs_loopback_core_int,
    \xgmii_rxc[7] );
  output rd_en;
  output [63:0]xgmii_rxd;
  output [7:0]xgmii_rxc;
  input coreclk;
  input [73:0]rd_data;
  input empty;
  input can_insert_rd;
  input reset;
  input \rd_data_reg[0] ;
  input [63:0]\xgmii_rxd[63] ;
  input pcs_loopback_core_int;
  input [7:0]\xgmii_rxc[7] ;

  wire can_insert_rd;
  wire coreclk;
  wire \ctrl_out[0]_i_1_n_0 ;
  wire \ctrl_out[1]_i_1_n_0 ;
  wire \ctrl_out[2]_i_1_n_0 ;
  wire \ctrl_out[3]_i_1_n_0 ;
  wire \ctrl_out[4]_i_1_n_0 ;
  wire \ctrl_out[5]_i_1_n_0 ;
  wire \ctrl_out[6]_i_1_n_0 ;
  wire \ctrl_out[7]_i_1_n_0 ;
  wire \data_out[0]_i_1_n_0 ;
  wire \data_out[10]_i_1_n_0 ;
  wire \data_out[11]_i_1_n_0 ;
  wire \data_out[12]_i_1_n_0 ;
  wire \data_out[13]_i_1_n_0 ;
  wire \data_out[14]_i_1_n_0 ;
  wire \data_out[15]_i_1_n_0 ;
  wire \data_out[16]_i_1_n_0 ;
  wire \data_out[16]_i_2_n_0 ;
  wire \data_out[17]_i_1_n_0 ;
  wire \data_out[18]_i_1_n_0 ;
  wire \data_out[19]_i_1_n_0 ;
  wire \data_out[1]_i_1_n_0 ;
  wire \data_out[20]_i_1_n_0 ;
  wire \data_out[21]_i_1_n_0 ;
  wire \data_out[22]_i_1_n_0 ;
  wire \data_out[23]_i_1_n_0 ;
  wire \data_out[24]_i_1_n_0 ;
  wire \data_out[25]_i_1_n_0 ;
  wire \data_out[26]_i_1_n_0 ;
  wire \data_out[26]_i_2_n_0 ;
  wire \data_out[26]_i_3_n_0 ;
  wire \data_out[27]_i_1_n_0 ;
  wire \data_out[28]_i_1_n_0 ;
  wire \data_out[29]_i_1_n_0 ;
  wire \data_out[2]_i_1_n_0 ;
  wire \data_out[30]_i_1_n_0 ;
  wire \data_out[30]_i_2_n_0 ;
  wire \data_out[31]_i_1_n_0 ;
  wire \data_out[31]_i_2_n_0 ;
  wire \data_out[31]_i_3_n_0 ;
  wire \data_out[32]_i_1_n_0 ;
  wire \data_out[33]_i_1_n_0 ;
  wire \data_out[34]_i_1_n_0 ;
  wire \data_out[34]_i_2_n_0 ;
  wire \data_out[35]_i_1_n_0 ;
  wire \data_out[36]_i_1_n_0 ;
  wire \data_out[37]_i_1_n_0 ;
  wire \data_out[38]_i_1_n_0 ;
  wire \data_out[39]_i_1_n_0 ;
  wire \data_out[39]_i_2_n_0 ;
  wire \data_out[3]_i_1_n_0 ;
  wire \data_out[40]_i_1_n_0 ;
  wire \data_out[41]_i_1_n_0 ;
  wire \data_out[42]_i_1_n_0 ;
  wire \data_out[43]_i_1_n_0 ;
  wire \data_out[44]_i_1_n_0 ;
  wire \data_out[45]_i_1_n_0 ;
  wire \data_out[46]_i_1_n_0 ;
  wire \data_out[47]_i_1_n_0 ;
  wire \data_out[48]_i_1_n_0 ;
  wire \data_out[49]_i_1_n_0 ;
  wire \data_out[4]_i_1_n_0 ;
  wire \data_out[50]_i_1_n_0 ;
  wire \data_out[51]_i_1_n_0 ;
  wire \data_out[52]_i_1_n_0 ;
  wire \data_out[53]_i_1_n_0 ;
  wire \data_out[54]_i_1_n_0 ;
  wire \data_out[55]_i_1_n_0 ;
  wire \data_out[56]_i_1_n_0 ;
  wire \data_out[57]_i_1_n_0 ;
  wire \data_out[58]_i_1_n_0 ;
  wire \data_out[58]_i_2_n_0 ;
  wire \data_out[59]_i_1_n_0 ;
  wire \data_out[5]_i_1_n_0 ;
  wire \data_out[60]_i_1_n_0 ;
  wire \data_out[61]_i_1_n_0 ;
  wire \data_out[62]_i_1_n_0 ;
  wire \data_out[62]_i_2_n_0 ;
  wire \data_out[62]_i_3_n_0 ;
  wire \data_out[63]_i_1_n_0 ;
  wire \data_out[63]_i_2_n_0 ;
  wire \data_out[6]_i_1_n_0 ;
  wire \data_out[7]_i_1_n_0 ;
  wire \data_out[8]_i_1_n_0 ;
  wire \data_out[9]_i_1_n_0 ;
  wire empty;
  wire [7:4]fifo_ctrl_delay;
  wire [63:32]fifo_data_delay;
  wire local_fault;
  wire local_fault_i_1_n_0;
  wire pcs_loopback_core_int;
  wire [73:0]rd_data;
  wire \rd_data_reg[0] ;
  wire rd_en;
  wire reset;
  wire [2:0]state;
  wire \state[0]_i_1_n_0 ;
  wire \state[1]_i_1_n_0 ;
  wire \state[2]_i_1_n_0 ;
  wire [7:0]xgmii_rxc;
  wire [7:0]\xgmii_rxc[7] ;
  wire [7:0]xgmii_rxc_ebuff;
  wire [63:0]xgmii_rxd;
  wire [63:0]\xgmii_rxd[63] ;
  wire [63:0]xgmii_rxd_ebuff;

  LUT6 #(
    .INIT(64'h00000000FEFFFF0F)) 
    asynch_fifo_i_i_2
       (.I0(\state[0]_i_1_n_0 ),
        .I1(\rd_data_reg[0] ),
        .I2(state[1]),
        .I3(state[0]),
        .I4(state[2]),
        .I5(local_fault),
        .O(rd_en));
  LUT5 #(
    .INIT(32'hFFCAFFFF)) 
    \ctrl_out[0]_i_1 
       (.I0(rd_data[64]),
        .I1(fifo_ctrl_delay[4]),
        .I2(\data_out[63]_i_2_n_0 ),
        .I3(\data_out[31]_i_2_n_0 ),
        .I4(\data_out[39]_i_2_n_0 ),
        .O(\ctrl_out[0]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hEEFC)) 
    \ctrl_out[1]_i_1 
       (.I0(fifo_ctrl_delay[5]),
        .I1(\data_out[26]_i_3_n_0 ),
        .I2(rd_data[65]),
        .I3(\data_out[63]_i_2_n_0 ),
        .O(\ctrl_out[1]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hEEFC)) 
    \ctrl_out[2]_i_1 
       (.I0(fifo_ctrl_delay[6]),
        .I1(\data_out[26]_i_3_n_0 ),
        .I2(rd_data[66]),
        .I3(\data_out[63]_i_2_n_0 ),
        .O(\ctrl_out[2]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hEEFC)) 
    \ctrl_out[3]_i_1 
       (.I0(fifo_ctrl_delay[7]),
        .I1(\data_out[26]_i_3_n_0 ),
        .I2(rd_data[67]),
        .I3(\data_out[63]_i_2_n_0 ),
        .O(\ctrl_out[3]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFDDDFD)) 
    \ctrl_out[4]_i_1 
       (.I0(\data_out[39]_i_2_n_0 ),
        .I1(\data_out[34]_i_2_n_0 ),
        .I2(rd_data[68]),
        .I3(\data_out[63]_i_2_n_0 ),
        .I4(rd_data[64]),
        .O(\ctrl_out[4]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h1111111110111000)) 
    \ctrl_out[5]_i_1 
       (.I0(local_fault),
        .I1(reset),
        .I2(rd_data[65]),
        .I3(\data_out[63]_i_2_n_0 ),
        .I4(rd_data[69]),
        .I5(empty),
        .O(\ctrl_out[5]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h1111111110111000)) 
    \ctrl_out[6]_i_1 
       (.I0(local_fault),
        .I1(reset),
        .I2(rd_data[66]),
        .I3(\data_out[63]_i_2_n_0 ),
        .I4(rd_data[70]),
        .I5(empty),
        .O(\ctrl_out[6]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h1111111110111000)) 
    \ctrl_out[7]_i_1 
       (.I0(local_fault),
        .I1(reset),
        .I2(rd_data[67]),
        .I3(\data_out[63]_i_2_n_0 ),
        .I4(rd_data[71]),
        .I5(empty),
        .O(\ctrl_out[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \ctrl_out_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\ctrl_out[0]_i_1_n_0 ),
        .Q(xgmii_rxc_ebuff[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ctrl_out_reg[1] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\ctrl_out[1]_i_1_n_0 ),
        .Q(xgmii_rxc_ebuff[1]),
        .R(\data_out[26]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \ctrl_out_reg[2] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\ctrl_out[2]_i_1_n_0 ),
        .Q(xgmii_rxc_ebuff[2]),
        .R(\data_out[26]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \ctrl_out_reg[3] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\ctrl_out[3]_i_1_n_0 ),
        .Q(xgmii_rxc_ebuff[3]),
        .R(\data_out[26]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \ctrl_out_reg[4] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\ctrl_out[4]_i_1_n_0 ),
        .Q(xgmii_rxc_ebuff[4]),
        .R(1'b0));
  FDSE #(
    .INIT(1'b0)) 
    \ctrl_out_reg[5] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\ctrl_out[5]_i_1_n_0 ),
        .Q(xgmii_rxc_ebuff[5]),
        .S(\data_out[58]_i_1_n_0 ));
  FDSE #(
    .INIT(1'b0)) 
    \ctrl_out_reg[6] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\ctrl_out[6]_i_1_n_0 ),
        .Q(xgmii_rxc_ebuff[6]),
        .S(\data_out[58]_i_1_n_0 ));
  FDSE #(
    .INIT(1'b0)) 
    \ctrl_out_reg[7] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\ctrl_out[7]_i_1_n_0 ),
        .Q(xgmii_rxc_ebuff[7]),
        .S(\data_out[58]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFEAEAAAA)) 
    \data_out[0]_i_1 
       (.I0(\data_out[16]_i_2_n_0 ),
        .I1(rd_data[0]),
        .I2(\data_out[63]_i_2_n_0 ),
        .I3(fifo_data_delay[32]),
        .I4(\data_out[39]_i_2_n_0 ),
        .O(\data_out[0]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hEEFC)) 
    \data_out[10]_i_1 
       (.I0(fifo_data_delay[42]),
        .I1(\data_out[26]_i_3_n_0 ),
        .I2(rd_data[10]),
        .I3(\data_out[63]_i_2_n_0 ),
        .O(\data_out[10]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFEAE)) 
    \data_out[11]_i_1 
       (.I0(empty),
        .I1(rd_data[11]),
        .I2(\data_out[63]_i_2_n_0 ),
        .I3(fifo_data_delay[43]),
        .O(\data_out[11]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFEAE)) 
    \data_out[12]_i_1 
       (.I0(empty),
        .I1(rd_data[12]),
        .I2(\data_out[63]_i_2_n_0 ),
        .I3(fifo_data_delay[44]),
        .O(\data_out[12]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFEAE)) 
    \data_out[13]_i_1 
       (.I0(empty),
        .I1(rd_data[13]),
        .I2(\data_out[63]_i_2_n_0 ),
        .I3(fifo_data_delay[45]),
        .O(\data_out[13]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFEAE)) 
    \data_out[14]_i_1 
       (.I0(empty),
        .I1(rd_data[14]),
        .I2(\data_out[63]_i_2_n_0 ),
        .I3(fifo_data_delay[46]),
        .O(\data_out[14]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFEAE)) 
    \data_out[15]_i_1 
       (.I0(empty),
        .I1(rd_data[15]),
        .I2(\data_out[63]_i_2_n_0 ),
        .I3(fifo_data_delay[47]),
        .O(\data_out[15]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFEAEAAAA)) 
    \data_out[16]_i_1 
       (.I0(\data_out[16]_i_2_n_0 ),
        .I1(rd_data[16]),
        .I2(\data_out[63]_i_2_n_0 ),
        .I3(fifo_data_delay[48]),
        .I4(\data_out[39]_i_2_n_0 ),
        .O(\data_out[16]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair9" *) 
  LUT5 #(
    .INIT(32'h00000006)) 
    \data_out[16]_i_2 
       (.I0(state[0]),
        .I1(state[2]),
        .I2(state[1]),
        .I3(local_fault),
        .I4(reset),
        .O(\data_out[16]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hEEFC)) 
    \data_out[17]_i_1 
       (.I0(fifo_data_delay[49]),
        .I1(\data_out[26]_i_3_n_0 ),
        .I2(rd_data[17]),
        .I3(\data_out[63]_i_2_n_0 ),
        .O(\data_out[17]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hEEFC)) 
    \data_out[18]_i_1 
       (.I0(fifo_data_delay[50]),
        .I1(\data_out[26]_i_3_n_0 ),
        .I2(rd_data[18]),
        .I3(\data_out[63]_i_2_n_0 ),
        .O(\data_out[18]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFEAE)) 
    \data_out[19]_i_1 
       (.I0(empty),
        .I1(rd_data[19]),
        .I2(\data_out[63]_i_2_n_0 ),
        .I3(fifo_data_delay[51]),
        .O(\data_out[19]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hEEFC)) 
    \data_out[1]_i_1 
       (.I0(fifo_data_delay[33]),
        .I1(\data_out[26]_i_3_n_0 ),
        .I2(rd_data[1]),
        .I3(\data_out[63]_i_2_n_0 ),
        .O(\data_out[1]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFEAE)) 
    \data_out[20]_i_1 
       (.I0(empty),
        .I1(rd_data[20]),
        .I2(\data_out[63]_i_2_n_0 ),
        .I3(fifo_data_delay[52]),
        .O(\data_out[20]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFEAE)) 
    \data_out[21]_i_1 
       (.I0(empty),
        .I1(rd_data[21]),
        .I2(\data_out[63]_i_2_n_0 ),
        .I3(fifo_data_delay[53]),
        .O(\data_out[21]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFEAE)) 
    \data_out[22]_i_1 
       (.I0(empty),
        .I1(rd_data[22]),
        .I2(\data_out[63]_i_2_n_0 ),
        .I3(fifo_data_delay[54]),
        .O(\data_out[22]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFEAE)) 
    \data_out[23]_i_1 
       (.I0(empty),
        .I1(rd_data[23]),
        .I2(\data_out[63]_i_2_n_0 ),
        .I3(fifo_data_delay[55]),
        .O(\data_out[23]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF00E2FFFFFFFF)) 
    \data_out[24]_i_1 
       (.I0(rd_data[24]),
        .I1(\data_out[63]_i_2_n_0 ),
        .I2(fifo_data_delay[56]),
        .I3(empty),
        .I4(\data_out[31]_i_2_n_0 ),
        .I5(\data_out[31]_i_3_n_0 ),
        .O(\data_out[24]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hEEFC)) 
    \data_out[25]_i_1 
       (.I0(fifo_data_delay[57]),
        .I1(\data_out[26]_i_3_n_0 ),
        .I2(rd_data[25]),
        .I3(\data_out[63]_i_2_n_0 ),
        .O(\data_out[25]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \data_out[26]_i_1 
       (.I0(local_fault),
        .I1(reset),
        .O(\data_out[26]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFECE)) 
    \data_out[26]_i_2 
       (.I0(rd_data[26]),
        .I1(\data_out[26]_i_3_n_0 ),
        .I2(\data_out[63]_i_2_n_0 ),
        .I3(fifo_data_delay[58]),
        .O(\data_out[26]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair10" *) 
  LUT5 #(
    .INIT(32'hAAAAAABE)) 
    \data_out[26]_i_3 
       (.I0(empty),
        .I1(state[0]),
        .I2(state[2]),
        .I3(state[1]),
        .I4(local_fault),
        .O(\data_out[26]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'hFEAE)) 
    \data_out[27]_i_1 
       (.I0(empty),
        .I1(rd_data[27]),
        .I2(\data_out[63]_i_2_n_0 ),
        .I3(fifo_data_delay[59]),
        .O(\data_out[27]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFEAE)) 
    \data_out[28]_i_1 
       (.I0(empty),
        .I1(rd_data[28]),
        .I2(\data_out[63]_i_2_n_0 ),
        .I3(fifo_data_delay[60]),
        .O(\data_out[28]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFEAE)) 
    \data_out[29]_i_1 
       (.I0(empty),
        .I1(rd_data[29]),
        .I2(\data_out[63]_i_2_n_0 ),
        .I3(fifo_data_delay[61]),
        .O(\data_out[29]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFCAFFFF)) 
    \data_out[2]_i_1 
       (.I0(rd_data[2]),
        .I1(fifo_data_delay[34]),
        .I2(\data_out[63]_i_2_n_0 ),
        .I3(\data_out[31]_i_2_n_0 ),
        .I4(\data_out[39]_i_2_n_0 ),
        .O(\data_out[2]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFABBA)) 
    \data_out[30]_i_1 
       (.I0(local_fault),
        .I1(state[1]),
        .I2(state[2]),
        .I3(state[0]),
        .I4(reset),
        .O(\data_out[30]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFEAE)) 
    \data_out[30]_i_2 
       (.I0(empty),
        .I1(rd_data[30]),
        .I2(\data_out[63]_i_2_n_0 ),
        .I3(fifo_data_delay[62]),
        .O(\data_out[30]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000FFB800000000)) 
    \data_out[31]_i_1 
       (.I0(fifo_data_delay[63]),
        .I1(\data_out[63]_i_2_n_0 ),
        .I2(rd_data[31]),
        .I3(empty),
        .I4(\data_out[31]_i_2_n_0 ),
        .I5(\data_out[31]_i_3_n_0 ),
        .O(\data_out[31]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair9" *) 
  LUT4 #(
    .INIT(16'h0110)) 
    \data_out[31]_i_2 
       (.I0(local_fault),
        .I1(state[1]),
        .I2(state[2]),
        .I3(state[0]),
        .O(\data_out[31]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \data_out[31]_i_3 
       (.I0(reset),
        .I1(local_fault),
        .O(\data_out[31]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h0101010000000100)) 
    \data_out[32]_i_1 
       (.I0(empty),
        .I1(reset),
        .I2(local_fault),
        .I3(rd_data[32]),
        .I4(\data_out[63]_i_2_n_0 ),
        .I5(rd_data[0]),
        .O(\data_out[32]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h1111111110111000)) 
    \data_out[33]_i_1 
       (.I0(local_fault),
        .I1(reset),
        .I2(rd_data[1]),
        .I3(\data_out[63]_i_2_n_0 ),
        .I4(rd_data[33]),
        .I5(empty),
        .O(\data_out[33]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFE2FF)) 
    \data_out[34]_i_1 
       (.I0(rd_data[34]),
        .I1(\data_out[63]_i_2_n_0 ),
        .I2(rd_data[2]),
        .I3(\data_out[39]_i_2_n_0 ),
        .I4(\data_out[34]_i_2_n_0 ),
        .O(\data_out[34]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h00000000000000EA)) 
    \data_out[34]_i_2 
       (.I0(state[1]),
        .I1(rd_data[72]),
        .I2(can_insert_rd),
        .I3(state[2]),
        .I4(state[0]),
        .I5(local_fault),
        .O(\data_out[34]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h45405555)) 
    \data_out[35]_i_1 
       (.I0(\data_out[58]_i_1_n_0 ),
        .I1(rd_data[3]),
        .I2(\data_out[63]_i_2_n_0 ),
        .I3(rd_data[35]),
        .I4(\data_out[39]_i_2_n_0 ),
        .O(\data_out[35]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h45405555)) 
    \data_out[36]_i_1 
       (.I0(\data_out[58]_i_1_n_0 ),
        .I1(rd_data[4]),
        .I2(\data_out[63]_i_2_n_0 ),
        .I3(rd_data[36]),
        .I4(\data_out[39]_i_2_n_0 ),
        .O(\data_out[36]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFEAE)) 
    \data_out[37]_i_1 
       (.I0(empty),
        .I1(rd_data[37]),
        .I2(\data_out[63]_i_2_n_0 ),
        .I3(rd_data[5]),
        .O(\data_out[37]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFEAE)) 
    \data_out[38]_i_1 
       (.I0(empty),
        .I1(rd_data[38]),
        .I2(\data_out[63]_i_2_n_0 ),
        .I3(rd_data[6]),
        .O(\data_out[38]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h45405555)) 
    \data_out[39]_i_1 
       (.I0(\data_out[58]_i_1_n_0 ),
        .I1(rd_data[7]),
        .I2(\data_out[63]_i_2_n_0 ),
        .I3(rd_data[39]),
        .I4(\data_out[39]_i_2_n_0 ),
        .O(\data_out[39]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair11" *) 
  LUT3 #(
    .INIT(8'h01)) 
    \data_out[39]_i_2 
       (.I0(local_fault),
        .I1(reset),
        .I2(empty),
        .O(\data_out[39]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h45405555)) 
    \data_out[3]_i_1 
       (.I0(\data_out[16]_i_2_n_0 ),
        .I1(fifo_data_delay[35]),
        .I2(\data_out[63]_i_2_n_0 ),
        .I3(rd_data[3]),
        .I4(\data_out[39]_i_2_n_0 ),
        .O(\data_out[3]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0101010000000100)) 
    \data_out[40]_i_1 
       (.I0(empty),
        .I1(reset),
        .I2(local_fault),
        .I3(rd_data[40]),
        .I4(\data_out[63]_i_2_n_0 ),
        .I5(rd_data[8]),
        .O(\data_out[40]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h1111111110111000)) 
    \data_out[41]_i_1 
       (.I0(local_fault),
        .I1(reset),
        .I2(rd_data[9]),
        .I3(\data_out[63]_i_2_n_0 ),
        .I4(rd_data[41]),
        .I5(empty),
        .O(\data_out[41]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h1111111110111000)) 
    \data_out[42]_i_1 
       (.I0(local_fault),
        .I1(reset),
        .I2(rd_data[10]),
        .I3(\data_out[63]_i_2_n_0 ),
        .I4(rd_data[42]),
        .I5(empty),
        .O(\data_out[42]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFEAE)) 
    \data_out[43]_i_1 
       (.I0(empty),
        .I1(rd_data[43]),
        .I2(\data_out[63]_i_2_n_0 ),
        .I3(rd_data[11]),
        .O(\data_out[43]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFEAE)) 
    \data_out[44]_i_1 
       (.I0(empty),
        .I1(rd_data[44]),
        .I2(\data_out[63]_i_2_n_0 ),
        .I3(rd_data[12]),
        .O(\data_out[44]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFEAE)) 
    \data_out[45]_i_1 
       (.I0(empty),
        .I1(rd_data[45]),
        .I2(\data_out[63]_i_2_n_0 ),
        .I3(rd_data[13]),
        .O(\data_out[45]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFEAE)) 
    \data_out[46]_i_1 
       (.I0(empty),
        .I1(rd_data[46]),
        .I2(\data_out[63]_i_2_n_0 ),
        .I3(rd_data[14]),
        .O(\data_out[46]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFEAE)) 
    \data_out[47]_i_1 
       (.I0(empty),
        .I1(rd_data[47]),
        .I2(\data_out[63]_i_2_n_0 ),
        .I3(rd_data[15]),
        .O(\data_out[47]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0101010000000100)) 
    \data_out[48]_i_1 
       (.I0(empty),
        .I1(reset),
        .I2(local_fault),
        .I3(rd_data[48]),
        .I4(\data_out[63]_i_2_n_0 ),
        .I5(rd_data[16]),
        .O(\data_out[48]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h1111111110111000)) 
    \data_out[49]_i_1 
       (.I0(local_fault),
        .I1(reset),
        .I2(rd_data[17]),
        .I3(\data_out[63]_i_2_n_0 ),
        .I4(rd_data[49]),
        .I5(empty),
        .O(\data_out[49]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h45405555)) 
    \data_out[4]_i_1 
       (.I0(\data_out[16]_i_2_n_0 ),
        .I1(fifo_data_delay[36]),
        .I2(\data_out[63]_i_2_n_0 ),
        .I3(rd_data[4]),
        .I4(\data_out[39]_i_2_n_0 ),
        .O(\data_out[4]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h1111111110111000)) 
    \data_out[50]_i_1 
       (.I0(local_fault),
        .I1(reset),
        .I2(rd_data[18]),
        .I3(\data_out[63]_i_2_n_0 ),
        .I4(rd_data[50]),
        .I5(empty),
        .O(\data_out[50]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFEAE)) 
    \data_out[51]_i_1 
       (.I0(empty),
        .I1(rd_data[51]),
        .I2(\data_out[63]_i_2_n_0 ),
        .I3(rd_data[19]),
        .O(\data_out[51]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFEAE)) 
    \data_out[52]_i_1 
       (.I0(empty),
        .I1(rd_data[52]),
        .I2(\data_out[63]_i_2_n_0 ),
        .I3(rd_data[20]),
        .O(\data_out[52]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFEAE)) 
    \data_out[53]_i_1 
       (.I0(empty),
        .I1(rd_data[53]),
        .I2(\data_out[63]_i_2_n_0 ),
        .I3(rd_data[21]),
        .O(\data_out[53]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFEAE)) 
    \data_out[54]_i_1 
       (.I0(empty),
        .I1(rd_data[54]),
        .I2(\data_out[63]_i_2_n_0 ),
        .I3(rd_data[22]),
        .O(\data_out[54]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFEAE)) 
    \data_out[55]_i_1 
       (.I0(empty),
        .I1(rd_data[55]),
        .I2(\data_out[63]_i_2_n_0 ),
        .I3(rd_data[23]),
        .O(\data_out[55]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hAAAAEFEA)) 
    \data_out[56]_i_1 
       (.I0(\data_out[62]_i_1_n_0 ),
        .I1(rd_data[24]),
        .I2(\data_out[63]_i_2_n_0 ),
        .I3(rd_data[56]),
        .I4(empty),
        .O(\data_out[56]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h1111111110111000)) 
    \data_out[57]_i_1 
       (.I0(local_fault),
        .I1(reset),
        .I2(rd_data[25]),
        .I3(\data_out[63]_i_2_n_0 ),
        .I4(rd_data[57]),
        .I5(empty),
        .O(\data_out[57]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000011111000)) 
    \data_out[58]_i_1 
       (.I0(local_fault),
        .I1(\data_out[62]_i_3_n_0 ),
        .I2(can_insert_rd),
        .I3(rd_data[72]),
        .I4(state[1]),
        .I5(reset),
        .O(\data_out[58]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h1111111110111000)) 
    \data_out[58]_i_2 
       (.I0(local_fault),
        .I1(reset),
        .I2(rd_data[26]),
        .I3(\data_out[63]_i_2_n_0 ),
        .I4(rd_data[58]),
        .I5(empty),
        .O(\data_out[58]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hFEAE)) 
    \data_out[59]_i_1 
       (.I0(empty),
        .I1(rd_data[59]),
        .I2(\data_out[63]_i_2_n_0 ),
        .I3(rd_data[27]),
        .O(\data_out[59]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFEAE)) 
    \data_out[5]_i_1 
       (.I0(empty),
        .I1(rd_data[5]),
        .I2(\data_out[63]_i_2_n_0 ),
        .I3(fifo_data_delay[37]),
        .O(\data_out[5]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFEAE)) 
    \data_out[60]_i_1 
       (.I0(empty),
        .I1(rd_data[60]),
        .I2(\data_out[63]_i_2_n_0 ),
        .I3(rd_data[28]),
        .O(\data_out[60]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFEAE)) 
    \data_out[61]_i_1 
       (.I0(empty),
        .I1(rd_data[61]),
        .I2(\data_out[63]_i_2_n_0 ),
        .I3(rd_data[29]),
        .O(\data_out[61]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFF5540)) 
    \data_out[62]_i_1 
       (.I0(\data_out[62]_i_3_n_0 ),
        .I1(can_insert_rd),
        .I2(rd_data[72]),
        .I3(state[1]),
        .I4(local_fault),
        .I5(reset),
        .O(\data_out[62]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFEAE)) 
    \data_out[62]_i_2 
       (.I0(empty),
        .I1(rd_data[62]),
        .I2(\data_out[63]_i_2_n_0 ),
        .I3(rd_data[30]),
        .O(\data_out[62]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair10" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \data_out[62]_i_3 
       (.I0(state[2]),
        .I1(state[0]),
        .O(\data_out[62]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'h0000FFB8)) 
    \data_out[63]_i_1 
       (.I0(rd_data[31]),
        .I1(\data_out[63]_i_2_n_0 ),
        .I2(rd_data[63]),
        .I3(empty),
        .I4(\data_out[62]_i_1_n_0 ),
        .O(\data_out[63]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h0074)) 
    \data_out[63]_i_2 
       (.I0(state[2]),
        .I1(state[1]),
        .I2(state[0]),
        .I3(local_fault),
        .O(\data_out[63]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hFEAE)) 
    \data_out[6]_i_1 
       (.I0(empty),
        .I1(rd_data[6]),
        .I2(\data_out[63]_i_2_n_0 ),
        .I3(fifo_data_delay[38]),
        .O(\data_out[6]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h45405555)) 
    \data_out[7]_i_1 
       (.I0(\data_out[16]_i_2_n_0 ),
        .I1(fifo_data_delay[39]),
        .I2(\data_out[63]_i_2_n_0 ),
        .I3(rd_data[7]),
        .I4(\data_out[39]_i_2_n_0 ),
        .O(\data_out[7]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFEAEAAAA)) 
    \data_out[8]_i_1 
       (.I0(\data_out[16]_i_2_n_0 ),
        .I1(rd_data[8]),
        .I2(\data_out[63]_i_2_n_0 ),
        .I3(fifo_data_delay[40]),
        .I4(\data_out[39]_i_2_n_0 ),
        .O(\data_out[8]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hEEFC)) 
    \data_out[9]_i_1 
       (.I0(fifo_data_delay[41]),
        .I1(\data_out[26]_i_3_n_0 ),
        .I2(rd_data[9]),
        .I3(\data_out[63]_i_2_n_0 ),
        .O(\data_out[9]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[0]_i_1_n_0 ),
        .Q(xgmii_rxd_ebuff[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[10] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[10]_i_1_n_0 ),
        .Q(xgmii_rxd_ebuff[10]),
        .R(\data_out[26]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[11] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[11]_i_1_n_0 ),
        .Q(xgmii_rxd_ebuff[11]),
        .R(\data_out[30]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[12] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[12]_i_1_n_0 ),
        .Q(xgmii_rxd_ebuff[12]),
        .R(\data_out[30]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[13] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[13]_i_1_n_0 ),
        .Q(xgmii_rxd_ebuff[13]),
        .R(\data_out[30]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[14] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[14]_i_1_n_0 ),
        .Q(xgmii_rxd_ebuff[14]),
        .R(\data_out[30]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[15] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[15]_i_1_n_0 ),
        .Q(xgmii_rxd_ebuff[15]),
        .R(\data_out[30]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[16] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[16]_i_1_n_0 ),
        .Q(xgmii_rxd_ebuff[16]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[17] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[17]_i_1_n_0 ),
        .Q(xgmii_rxd_ebuff[17]),
        .R(\data_out[26]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[18] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[18]_i_1_n_0 ),
        .Q(xgmii_rxd_ebuff[18]),
        .R(\data_out[26]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[19] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[19]_i_1_n_0 ),
        .Q(xgmii_rxd_ebuff[19]),
        .R(\data_out[30]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[1] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[1]_i_1_n_0 ),
        .Q(xgmii_rxd_ebuff[1]),
        .R(\data_out[26]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[20] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[20]_i_1_n_0 ),
        .Q(xgmii_rxd_ebuff[20]),
        .R(\data_out[30]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[21] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[21]_i_1_n_0 ),
        .Q(xgmii_rxd_ebuff[21]),
        .R(\data_out[30]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[22] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[22]_i_1_n_0 ),
        .Q(xgmii_rxd_ebuff[22]),
        .R(\data_out[30]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[23] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[23]_i_1_n_0 ),
        .Q(xgmii_rxd_ebuff[23]),
        .R(\data_out[30]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[24] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[24]_i_1_n_0 ),
        .Q(xgmii_rxd_ebuff[24]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[25] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[25]_i_1_n_0 ),
        .Q(xgmii_rxd_ebuff[25]),
        .R(\data_out[26]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[26] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[26]_i_2_n_0 ),
        .Q(xgmii_rxd_ebuff[26]),
        .R(\data_out[26]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[27] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[27]_i_1_n_0 ),
        .Q(xgmii_rxd_ebuff[27]),
        .R(\data_out[30]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[28] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[28]_i_1_n_0 ),
        .Q(xgmii_rxd_ebuff[28]),
        .R(\data_out[30]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[29] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[29]_i_1_n_0 ),
        .Q(xgmii_rxd_ebuff[29]),
        .R(\data_out[30]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[2] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[2]_i_1_n_0 ),
        .Q(xgmii_rxd_ebuff[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[30] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[30]_i_2_n_0 ),
        .Q(xgmii_rxd_ebuff[30]),
        .R(\data_out[30]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[31] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[31]_i_1_n_0 ),
        .Q(xgmii_rxd_ebuff[31]),
        .R(1'b0));
  FDSE #(
    .INIT(1'b0)) 
    \data_out_reg[32] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[32]_i_1_n_0 ),
        .Q(xgmii_rxd_ebuff[32]),
        .S(\data_out[58]_i_1_n_0 ));
  FDSE #(
    .INIT(1'b0)) 
    \data_out_reg[33] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[33]_i_1_n_0 ),
        .Q(xgmii_rxd_ebuff[33]),
        .S(\data_out[58]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[34] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[34]_i_1_n_0 ),
        .Q(xgmii_rxd_ebuff[34]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[35] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[35]_i_1_n_0 ),
        .Q(xgmii_rxd_ebuff[35]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[36] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[36]_i_1_n_0 ),
        .Q(xgmii_rxd_ebuff[36]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[37] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[37]_i_1_n_0 ),
        .Q(xgmii_rxd_ebuff[37]),
        .R(\data_out[62]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[38] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[38]_i_1_n_0 ),
        .Q(xgmii_rxd_ebuff[38]),
        .R(\data_out[62]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[39] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[39]_i_1_n_0 ),
        .Q(xgmii_rxd_ebuff[39]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[3] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[3]_i_1_n_0 ),
        .Q(xgmii_rxd_ebuff[3]),
        .R(1'b0));
  FDSE #(
    .INIT(1'b0)) 
    \data_out_reg[40] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[40]_i_1_n_0 ),
        .Q(xgmii_rxd_ebuff[40]),
        .S(\data_out[58]_i_1_n_0 ));
  FDSE #(
    .INIT(1'b0)) 
    \data_out_reg[41] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[41]_i_1_n_0 ),
        .Q(xgmii_rxd_ebuff[41]),
        .S(\data_out[58]_i_1_n_0 ));
  FDSE #(
    .INIT(1'b0)) 
    \data_out_reg[42] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[42]_i_1_n_0 ),
        .Q(xgmii_rxd_ebuff[42]),
        .S(\data_out[58]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[43] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[43]_i_1_n_0 ),
        .Q(xgmii_rxd_ebuff[43]),
        .R(\data_out[62]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[44] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[44]_i_1_n_0 ),
        .Q(xgmii_rxd_ebuff[44]),
        .R(\data_out[62]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[45] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[45]_i_1_n_0 ),
        .Q(xgmii_rxd_ebuff[45]),
        .R(\data_out[62]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[46] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[46]_i_1_n_0 ),
        .Q(xgmii_rxd_ebuff[46]),
        .R(\data_out[62]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[47] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[47]_i_1_n_0 ),
        .Q(xgmii_rxd_ebuff[47]),
        .R(\data_out[62]_i_1_n_0 ));
  FDSE #(
    .INIT(1'b0)) 
    \data_out_reg[48] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[48]_i_1_n_0 ),
        .Q(xgmii_rxd_ebuff[48]),
        .S(\data_out[58]_i_1_n_0 ));
  FDSE #(
    .INIT(1'b0)) 
    \data_out_reg[49] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[49]_i_1_n_0 ),
        .Q(xgmii_rxd_ebuff[49]),
        .S(\data_out[58]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[4] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[4]_i_1_n_0 ),
        .Q(xgmii_rxd_ebuff[4]),
        .R(1'b0));
  FDSE #(
    .INIT(1'b0)) 
    \data_out_reg[50] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[50]_i_1_n_0 ),
        .Q(xgmii_rxd_ebuff[50]),
        .S(\data_out[58]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[51] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[51]_i_1_n_0 ),
        .Q(xgmii_rxd_ebuff[51]),
        .R(\data_out[62]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[52] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[52]_i_1_n_0 ),
        .Q(xgmii_rxd_ebuff[52]),
        .R(\data_out[62]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[53] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[53]_i_1_n_0 ),
        .Q(xgmii_rxd_ebuff[53]),
        .R(\data_out[62]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[54] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[54]_i_1_n_0 ),
        .Q(xgmii_rxd_ebuff[54]),
        .R(\data_out[62]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[55] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[55]_i_1_n_0 ),
        .Q(xgmii_rxd_ebuff[55]),
        .R(\data_out[62]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[56] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[56]_i_1_n_0 ),
        .Q(xgmii_rxd_ebuff[56]),
        .R(1'b0));
  FDSE #(
    .INIT(1'b0)) 
    \data_out_reg[57] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[57]_i_1_n_0 ),
        .Q(xgmii_rxd_ebuff[57]),
        .S(\data_out[58]_i_1_n_0 ));
  FDSE #(
    .INIT(1'b0)) 
    \data_out_reg[58] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[58]_i_2_n_0 ),
        .Q(xgmii_rxd_ebuff[58]),
        .S(\data_out[58]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[59] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[59]_i_1_n_0 ),
        .Q(xgmii_rxd_ebuff[59]),
        .R(\data_out[62]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[5] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[5]_i_1_n_0 ),
        .Q(xgmii_rxd_ebuff[5]),
        .R(\data_out[30]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[60] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[60]_i_1_n_0 ),
        .Q(xgmii_rxd_ebuff[60]),
        .R(\data_out[62]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[61] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[61]_i_1_n_0 ),
        .Q(xgmii_rxd_ebuff[61]),
        .R(\data_out[62]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[62] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[62]_i_2_n_0 ),
        .Q(xgmii_rxd_ebuff[62]),
        .R(\data_out[62]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[63] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[63]_i_1_n_0 ),
        .Q(xgmii_rxd_ebuff[63]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[6] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[6]_i_1_n_0 ),
        .Q(xgmii_rxd_ebuff[6]),
        .R(\data_out[30]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[7] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[7]_i_1_n_0 ),
        .Q(xgmii_rxd_ebuff[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[8] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[8]_i_1_n_0 ),
        .Q(xgmii_rxd_ebuff[8]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[9] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[9]_i_1_n_0 ),
        .Q(xgmii_rxd_ebuff[9]),
        .R(\data_out[26]_i_1_n_0 ));
  FDSE \fifo_ctrl_delay_reg[4] 
       (.C(coreclk),
        .CE(1'b1),
        .D(rd_data[68]),
        .Q(fifo_ctrl_delay[4]),
        .S(reset));
  FDRE \fifo_ctrl_delay_reg[5] 
       (.C(coreclk),
        .CE(1'b1),
        .D(rd_data[69]),
        .Q(fifo_ctrl_delay[5]),
        .R(reset));
  FDRE \fifo_ctrl_delay_reg[6] 
       (.C(coreclk),
        .CE(1'b1),
        .D(rd_data[70]),
        .Q(fifo_ctrl_delay[6]),
        .R(reset));
  FDRE \fifo_ctrl_delay_reg[7] 
       (.C(coreclk),
        .CE(1'b1),
        .D(rd_data[71]),
        .Q(fifo_ctrl_delay[7]),
        .R(reset));
  FDRE \fifo_data_delay_reg[32] 
       (.C(coreclk),
        .CE(1'b1),
        .D(rd_data[32]),
        .Q(fifo_data_delay[32]),
        .R(reset));
  FDRE \fifo_data_delay_reg[33] 
       (.C(coreclk),
        .CE(1'b1),
        .D(rd_data[33]),
        .Q(fifo_data_delay[33]),
        .R(reset));
  FDSE \fifo_data_delay_reg[34] 
       (.C(coreclk),
        .CE(1'b1),
        .D(rd_data[34]),
        .Q(fifo_data_delay[34]),
        .S(reset));
  FDSE \fifo_data_delay_reg[35] 
       (.C(coreclk),
        .CE(1'b1),
        .D(rd_data[35]),
        .Q(fifo_data_delay[35]),
        .S(reset));
  FDSE \fifo_data_delay_reg[36] 
       (.C(coreclk),
        .CE(1'b1),
        .D(rd_data[36]),
        .Q(fifo_data_delay[36]),
        .S(reset));
  FDRE \fifo_data_delay_reg[37] 
       (.C(coreclk),
        .CE(1'b1),
        .D(rd_data[37]),
        .Q(fifo_data_delay[37]),
        .R(reset));
  FDRE \fifo_data_delay_reg[38] 
       (.C(coreclk),
        .CE(1'b1),
        .D(rd_data[38]),
        .Q(fifo_data_delay[38]),
        .R(reset));
  FDSE \fifo_data_delay_reg[39] 
       (.C(coreclk),
        .CE(1'b1),
        .D(rd_data[39]),
        .Q(fifo_data_delay[39]),
        .S(reset));
  FDRE \fifo_data_delay_reg[40] 
       (.C(coreclk),
        .CE(1'b1),
        .D(rd_data[40]),
        .Q(fifo_data_delay[40]),
        .R(reset));
  FDRE \fifo_data_delay_reg[41] 
       (.C(coreclk),
        .CE(1'b1),
        .D(rd_data[41]),
        .Q(fifo_data_delay[41]),
        .R(reset));
  FDRE \fifo_data_delay_reg[42] 
       (.C(coreclk),
        .CE(1'b1),
        .D(rd_data[42]),
        .Q(fifo_data_delay[42]),
        .R(reset));
  FDRE \fifo_data_delay_reg[43] 
       (.C(coreclk),
        .CE(1'b1),
        .D(rd_data[43]),
        .Q(fifo_data_delay[43]),
        .R(reset));
  FDRE \fifo_data_delay_reg[44] 
       (.C(coreclk),
        .CE(1'b1),
        .D(rd_data[44]),
        .Q(fifo_data_delay[44]),
        .R(reset));
  FDRE \fifo_data_delay_reg[45] 
       (.C(coreclk),
        .CE(1'b1),
        .D(rd_data[45]),
        .Q(fifo_data_delay[45]),
        .R(reset));
  FDRE \fifo_data_delay_reg[46] 
       (.C(coreclk),
        .CE(1'b1),
        .D(rd_data[46]),
        .Q(fifo_data_delay[46]),
        .R(reset));
  FDRE \fifo_data_delay_reg[47] 
       (.C(coreclk),
        .CE(1'b1),
        .D(rd_data[47]),
        .Q(fifo_data_delay[47]),
        .R(reset));
  FDRE \fifo_data_delay_reg[48] 
       (.C(coreclk),
        .CE(1'b1),
        .D(rd_data[48]),
        .Q(fifo_data_delay[48]),
        .R(reset));
  FDRE \fifo_data_delay_reg[49] 
       (.C(coreclk),
        .CE(1'b1),
        .D(rd_data[49]),
        .Q(fifo_data_delay[49]),
        .R(reset));
  FDRE \fifo_data_delay_reg[50] 
       (.C(coreclk),
        .CE(1'b1),
        .D(rd_data[50]),
        .Q(fifo_data_delay[50]),
        .R(reset));
  FDRE \fifo_data_delay_reg[51] 
       (.C(coreclk),
        .CE(1'b1),
        .D(rd_data[51]),
        .Q(fifo_data_delay[51]),
        .R(reset));
  FDRE \fifo_data_delay_reg[52] 
       (.C(coreclk),
        .CE(1'b1),
        .D(rd_data[52]),
        .Q(fifo_data_delay[52]),
        .R(reset));
  FDRE \fifo_data_delay_reg[53] 
       (.C(coreclk),
        .CE(1'b1),
        .D(rd_data[53]),
        .Q(fifo_data_delay[53]),
        .R(reset));
  FDRE \fifo_data_delay_reg[54] 
       (.C(coreclk),
        .CE(1'b1),
        .D(rd_data[54]),
        .Q(fifo_data_delay[54]),
        .R(reset));
  FDRE \fifo_data_delay_reg[55] 
       (.C(coreclk),
        .CE(1'b1),
        .D(rd_data[55]),
        .Q(fifo_data_delay[55]),
        .R(reset));
  FDSE \fifo_data_delay_reg[56] 
       (.C(coreclk),
        .CE(1'b1),
        .D(rd_data[56]),
        .Q(fifo_data_delay[56]),
        .S(reset));
  FDRE \fifo_data_delay_reg[57] 
       (.C(coreclk),
        .CE(1'b1),
        .D(rd_data[57]),
        .Q(fifo_data_delay[57]),
        .R(reset));
  FDRE \fifo_data_delay_reg[58] 
       (.C(coreclk),
        .CE(1'b1),
        .D(rd_data[58]),
        .Q(fifo_data_delay[58]),
        .R(reset));
  FDRE \fifo_data_delay_reg[59] 
       (.C(coreclk),
        .CE(1'b1),
        .D(rd_data[59]),
        .Q(fifo_data_delay[59]),
        .R(reset));
  FDRE \fifo_data_delay_reg[60] 
       (.C(coreclk),
        .CE(1'b1),
        .D(rd_data[60]),
        .Q(fifo_data_delay[60]),
        .R(reset));
  FDRE \fifo_data_delay_reg[61] 
       (.C(coreclk),
        .CE(1'b1),
        .D(rd_data[61]),
        .Q(fifo_data_delay[61]),
        .R(reset));
  FDRE \fifo_data_delay_reg[62] 
       (.C(coreclk),
        .CE(1'b1),
        .D(rd_data[62]),
        .Q(fifo_data_delay[62]),
        .R(reset));
  FDRE \fifo_data_delay_reg[63] 
       (.C(coreclk),
        .CE(1'b1),
        .D(rd_data[63]),
        .Q(fifo_data_delay[63]),
        .R(reset));
  (* SOFT_HLUTNM = "soft_lutpair11" *) 
  LUT4 #(
    .INIT(16'hFFF8)) 
    local_fault_i_1
       (.I0(local_fault),
        .I1(can_insert_rd),
        .I2(reset),
        .I3(empty),
        .O(local_fault_i_1_n_0));
  FDRE local_fault_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(local_fault_i_1_n_0),
        .Q(local_fault),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFFF5F7F00005040)) 
    \state[0]_i_1 
       (.I0(state[2]),
        .I1(rd_data[73]),
        .I2(can_insert_rd),
        .I3(rd_data[72]),
        .I4(state[1]),
        .I5(state[0]),
        .O(\state[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF0000080000C0)) 
    \state[1]_i_1 
       (.I0(rd_data[73]),
        .I1(can_insert_rd),
        .I2(rd_data[72]),
        .I3(state[0]),
        .I4(state[2]),
        .I5(state[1]),
        .O(\state[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFBFFF88888888)) 
    \state[2]_i_1 
       (.I0(state[1]),
        .I1(state[2]),
        .I2(rd_data[73]),
        .I3(can_insert_rd),
        .I4(rd_data[72]),
        .I5(state[0]),
        .O(\state[2]_i_1_n_0 ));
  FDRE \state_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\state[0]_i_1_n_0 ),
        .Q(state[0]),
        .R(reset));
  FDRE \state_reg[1] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\state[1]_i_1_n_0 ),
        .Q(state[1]),
        .R(reset));
  FDRE \state_reg[2] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\state[2]_i_1_n_0 ),
        .Q(state[2]),
        .R(reset));
  (* SOFT_HLUTNM = "soft_lutpair44" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \xgmii_rxc[0]_INST_0 
       (.I0(\xgmii_rxc[7] [0]),
        .I1(xgmii_rxc_ebuff[0]),
        .I2(pcs_loopback_core_int),
        .O(xgmii_rxc[0]));
  (* SOFT_HLUTNM = "soft_lutpair45" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \xgmii_rxc[1]_INST_0 
       (.I0(\xgmii_rxc[7] [1]),
        .I1(xgmii_rxc_ebuff[1]),
        .I2(pcs_loopback_core_int),
        .O(xgmii_rxc[1]));
  (* SOFT_HLUTNM = "soft_lutpair46" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \xgmii_rxc[2]_INST_0 
       (.I0(\xgmii_rxc[7] [2]),
        .I1(xgmii_rxc_ebuff[2]),
        .I2(pcs_loopback_core_int),
        .O(xgmii_rxc[2]));
  (* SOFT_HLUTNM = "soft_lutpair45" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \xgmii_rxc[3]_INST_0 
       (.I0(\xgmii_rxc[7] [3]),
        .I1(xgmii_rxc_ebuff[3]),
        .I2(pcs_loopback_core_int),
        .O(xgmii_rxc[3]));
  (* SOFT_HLUTNM = "soft_lutpair46" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \xgmii_rxc[4]_INST_0 
       (.I0(\xgmii_rxc[7] [4]),
        .I1(xgmii_rxc_ebuff[4]),
        .I2(pcs_loopback_core_int),
        .O(xgmii_rxc[4]));
  (* SOFT_HLUTNM = "soft_lutpair47" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \xgmii_rxc[5]_INST_0 
       (.I0(\xgmii_rxc[7] [5]),
        .I1(xgmii_rxc_ebuff[5]),
        .I2(pcs_loopback_core_int),
        .O(xgmii_rxc[5]));
  (* SOFT_HLUTNM = "soft_lutpair47" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \xgmii_rxc[6]_INST_0 
       (.I0(\xgmii_rxc[7] [6]),
        .I1(xgmii_rxc_ebuff[6]),
        .I2(pcs_loopback_core_int),
        .O(xgmii_rxc[6]));
  (* SOFT_HLUTNM = "soft_lutpair41" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \xgmii_rxc[7]_INST_0 
       (.I0(\xgmii_rxc[7] [7]),
        .I1(xgmii_rxc_ebuff[7]),
        .I2(pcs_loopback_core_int),
        .O(xgmii_rxc[7]));
  (* SOFT_HLUTNM = "soft_lutpair12" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \xgmii_rxd[0]_INST_0 
       (.I0(\xgmii_rxd[63] [0]),
        .I1(xgmii_rxd_ebuff[0]),
        .I2(pcs_loopback_core_int),
        .O(xgmii_rxd[0]));
  (* SOFT_HLUTNM = "soft_lutpair18" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \xgmii_rxd[10]_INST_0 
       (.I0(\xgmii_rxd[63] [10]),
        .I1(xgmii_rxd_ebuff[10]),
        .I2(pcs_loopback_core_int),
        .O(xgmii_rxd[10]));
  (* SOFT_HLUTNM = "soft_lutpair18" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \xgmii_rxd[11]_INST_0 
       (.I0(\xgmii_rxd[63] [11]),
        .I1(xgmii_rxd_ebuff[11]),
        .I2(pcs_loopback_core_int),
        .O(xgmii_rxd[11]));
  (* SOFT_HLUTNM = "soft_lutpair19" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \xgmii_rxd[12]_INST_0 
       (.I0(\xgmii_rxd[63] [12]),
        .I1(xgmii_rxd_ebuff[12]),
        .I2(pcs_loopback_core_int),
        .O(xgmii_rxd[12]));
  (* SOFT_HLUTNM = "soft_lutpair19" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \xgmii_rxd[13]_INST_0 
       (.I0(\xgmii_rxd[63] [13]),
        .I1(xgmii_rxd_ebuff[13]),
        .I2(pcs_loopback_core_int),
        .O(xgmii_rxd[13]));
  (* SOFT_HLUTNM = "soft_lutpair20" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \xgmii_rxd[14]_INST_0 
       (.I0(\xgmii_rxd[63] [14]),
        .I1(xgmii_rxd_ebuff[14]),
        .I2(pcs_loopback_core_int),
        .O(xgmii_rxd[14]));
  (* SOFT_HLUTNM = "soft_lutpair20" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \xgmii_rxd[15]_INST_0 
       (.I0(\xgmii_rxd[63] [15]),
        .I1(xgmii_rxd_ebuff[15]),
        .I2(pcs_loopback_core_int),
        .O(xgmii_rxd[15]));
  (* SOFT_HLUTNM = "soft_lutpair21" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \xgmii_rxd[16]_INST_0 
       (.I0(\xgmii_rxd[63] [16]),
        .I1(xgmii_rxd_ebuff[16]),
        .I2(pcs_loopback_core_int),
        .O(xgmii_rxd[16]));
  (* SOFT_HLUTNM = "soft_lutpair21" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \xgmii_rxd[17]_INST_0 
       (.I0(\xgmii_rxd[63] [17]),
        .I1(xgmii_rxd_ebuff[17]),
        .I2(pcs_loopback_core_int),
        .O(xgmii_rxd[17]));
  (* SOFT_HLUTNM = "soft_lutpair22" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \xgmii_rxd[18]_INST_0 
       (.I0(\xgmii_rxd[63] [18]),
        .I1(xgmii_rxd_ebuff[18]),
        .I2(pcs_loopback_core_int),
        .O(xgmii_rxd[18]));
  (* SOFT_HLUTNM = "soft_lutpair22" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \xgmii_rxd[19]_INST_0 
       (.I0(\xgmii_rxd[63] [19]),
        .I1(xgmii_rxd_ebuff[19]),
        .I2(pcs_loopback_core_int),
        .O(xgmii_rxd[19]));
  (* SOFT_HLUTNM = "soft_lutpair13" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \xgmii_rxd[1]_INST_0 
       (.I0(\xgmii_rxd[63] [1]),
        .I1(xgmii_rxd_ebuff[1]),
        .I2(pcs_loopback_core_int),
        .O(xgmii_rxd[1]));
  (* SOFT_HLUTNM = "soft_lutpair23" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \xgmii_rxd[20]_INST_0 
       (.I0(\xgmii_rxd[63] [20]),
        .I1(xgmii_rxd_ebuff[20]),
        .I2(pcs_loopback_core_int),
        .O(xgmii_rxd[20]));
  (* SOFT_HLUTNM = "soft_lutpair23" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \xgmii_rxd[21]_INST_0 
       (.I0(\xgmii_rxd[63] [21]),
        .I1(xgmii_rxd_ebuff[21]),
        .I2(pcs_loopback_core_int),
        .O(xgmii_rxd[21]));
  (* SOFT_HLUTNM = "soft_lutpair24" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \xgmii_rxd[22]_INST_0 
       (.I0(\xgmii_rxd[63] [22]),
        .I1(xgmii_rxd_ebuff[22]),
        .I2(pcs_loopback_core_int),
        .O(xgmii_rxd[22]));
  (* SOFT_HLUTNM = "soft_lutpair24" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \xgmii_rxd[23]_INST_0 
       (.I0(\xgmii_rxd[63] [23]),
        .I1(xgmii_rxd_ebuff[23]),
        .I2(pcs_loopback_core_int),
        .O(xgmii_rxd[23]));
  (* SOFT_HLUTNM = "soft_lutpair25" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \xgmii_rxd[24]_INST_0 
       (.I0(\xgmii_rxd[63] [24]),
        .I1(xgmii_rxd_ebuff[24]),
        .I2(pcs_loopback_core_int),
        .O(xgmii_rxd[24]));
  (* SOFT_HLUTNM = "soft_lutpair25" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \xgmii_rxd[25]_INST_0 
       (.I0(\xgmii_rxd[63] [25]),
        .I1(xgmii_rxd_ebuff[25]),
        .I2(pcs_loopback_core_int),
        .O(xgmii_rxd[25]));
  (* SOFT_HLUTNM = "soft_lutpair26" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \xgmii_rxd[26]_INST_0 
       (.I0(\xgmii_rxd[63] [26]),
        .I1(xgmii_rxd_ebuff[26]),
        .I2(pcs_loopback_core_int),
        .O(xgmii_rxd[26]));
  (* SOFT_HLUTNM = "soft_lutpair26" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \xgmii_rxd[27]_INST_0 
       (.I0(\xgmii_rxd[63] [27]),
        .I1(xgmii_rxd_ebuff[27]),
        .I2(pcs_loopback_core_int),
        .O(xgmii_rxd[27]));
  (* SOFT_HLUTNM = "soft_lutpair27" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \xgmii_rxd[28]_INST_0 
       (.I0(\xgmii_rxd[63] [28]),
        .I1(xgmii_rxd_ebuff[28]),
        .I2(pcs_loopback_core_int),
        .O(xgmii_rxd[28]));
  (* SOFT_HLUTNM = "soft_lutpair27" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \xgmii_rxd[29]_INST_0 
       (.I0(\xgmii_rxd[63] [29]),
        .I1(xgmii_rxd_ebuff[29]),
        .I2(pcs_loopback_core_int),
        .O(xgmii_rxd[29]));
  (* SOFT_HLUTNM = "soft_lutpair14" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \xgmii_rxd[2]_INST_0 
       (.I0(\xgmii_rxd[63] [2]),
        .I1(xgmii_rxd_ebuff[2]),
        .I2(pcs_loopback_core_int),
        .O(xgmii_rxd[2]));
  (* SOFT_HLUTNM = "soft_lutpair28" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \xgmii_rxd[30]_INST_0 
       (.I0(\xgmii_rxd[63] [30]),
        .I1(xgmii_rxd_ebuff[30]),
        .I2(pcs_loopback_core_int),
        .O(xgmii_rxd[30]));
  (* SOFT_HLUTNM = "soft_lutpair28" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \xgmii_rxd[31]_INST_0 
       (.I0(\xgmii_rxd[63] [31]),
        .I1(xgmii_rxd_ebuff[31]),
        .I2(pcs_loopback_core_int),
        .O(xgmii_rxd[31]));
  (* SOFT_HLUTNM = "soft_lutpair29" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \xgmii_rxd[32]_INST_0 
       (.I0(\xgmii_rxd[63] [32]),
        .I1(xgmii_rxd_ebuff[32]),
        .I2(pcs_loopback_core_int),
        .O(xgmii_rxd[32]));
  (* SOFT_HLUTNM = "soft_lutpair29" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \xgmii_rxd[33]_INST_0 
       (.I0(\xgmii_rxd[63] [33]),
        .I1(xgmii_rxd_ebuff[33]),
        .I2(pcs_loopback_core_int),
        .O(xgmii_rxd[33]));
  (* SOFT_HLUTNM = "soft_lutpair12" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \xgmii_rxd[34]_INST_0 
       (.I0(\xgmii_rxd[63] [34]),
        .I1(xgmii_rxd_ebuff[34]),
        .I2(pcs_loopback_core_int),
        .O(xgmii_rxd[34]));
  (* SOFT_HLUTNM = "soft_lutpair13" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \xgmii_rxd[35]_INST_0 
       (.I0(\xgmii_rxd[63] [35]),
        .I1(xgmii_rxd_ebuff[35]),
        .I2(pcs_loopback_core_int),
        .O(xgmii_rxd[35]));
  (* SOFT_HLUTNM = "soft_lutpair30" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \xgmii_rxd[36]_INST_0 
       (.I0(\xgmii_rxd[63] [36]),
        .I1(xgmii_rxd_ebuff[36]),
        .I2(pcs_loopback_core_int),
        .O(xgmii_rxd[36]));
  (* SOFT_HLUTNM = "soft_lutpair30" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \xgmii_rxd[37]_INST_0 
       (.I0(\xgmii_rxd[63] [37]),
        .I1(xgmii_rxd_ebuff[37]),
        .I2(pcs_loopback_core_int),
        .O(xgmii_rxd[37]));
  (* SOFT_HLUTNM = "soft_lutpair31" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \xgmii_rxd[38]_INST_0 
       (.I0(\xgmii_rxd[63] [38]),
        .I1(xgmii_rxd_ebuff[38]),
        .I2(pcs_loopback_core_int),
        .O(xgmii_rxd[38]));
  (* SOFT_HLUTNM = "soft_lutpair32" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \xgmii_rxd[39]_INST_0 
       (.I0(\xgmii_rxd[63] [39]),
        .I1(xgmii_rxd_ebuff[39]),
        .I2(pcs_loopback_core_int),
        .O(xgmii_rxd[39]));
  (* SOFT_HLUTNM = "soft_lutpair14" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \xgmii_rxd[3]_INST_0 
       (.I0(\xgmii_rxd[63] [3]),
        .I1(xgmii_rxd_ebuff[3]),
        .I2(pcs_loopback_core_int),
        .O(xgmii_rxd[3]));
  (* SOFT_HLUTNM = "soft_lutpair33" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \xgmii_rxd[40]_INST_0 
       (.I0(\xgmii_rxd[63] [40]),
        .I1(xgmii_rxd_ebuff[40]),
        .I2(pcs_loopback_core_int),
        .O(xgmii_rxd[40]));
  (* SOFT_HLUTNM = "soft_lutpair33" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \xgmii_rxd[41]_INST_0 
       (.I0(\xgmii_rxd[63] [41]),
        .I1(xgmii_rxd_ebuff[41]),
        .I2(pcs_loopback_core_int),
        .O(xgmii_rxd[41]));
  (* SOFT_HLUTNM = "soft_lutpair34" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \xgmii_rxd[42]_INST_0 
       (.I0(\xgmii_rxd[63] [42]),
        .I1(xgmii_rxd_ebuff[42]),
        .I2(pcs_loopback_core_int),
        .O(xgmii_rxd[42]));
  (* SOFT_HLUTNM = "soft_lutpair34" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \xgmii_rxd[43]_INST_0 
       (.I0(\xgmii_rxd[63] [43]),
        .I1(xgmii_rxd_ebuff[43]),
        .I2(pcs_loopback_core_int),
        .O(xgmii_rxd[43]));
  (* SOFT_HLUTNM = "soft_lutpair35" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \xgmii_rxd[44]_INST_0 
       (.I0(\xgmii_rxd[63] [44]),
        .I1(xgmii_rxd_ebuff[44]),
        .I2(pcs_loopback_core_int),
        .O(xgmii_rxd[44]));
  (* SOFT_HLUTNM = "soft_lutpair35" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \xgmii_rxd[45]_INST_0 
       (.I0(\xgmii_rxd[63] [45]),
        .I1(xgmii_rxd_ebuff[45]),
        .I2(pcs_loopback_core_int),
        .O(xgmii_rxd[45]));
  (* SOFT_HLUTNM = "soft_lutpair36" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \xgmii_rxd[46]_INST_0 
       (.I0(\xgmii_rxd[63] [46]),
        .I1(xgmii_rxd_ebuff[46]),
        .I2(pcs_loopback_core_int),
        .O(xgmii_rxd[46]));
  (* SOFT_HLUTNM = "soft_lutpair36" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \xgmii_rxd[47]_INST_0 
       (.I0(\xgmii_rxd[63] [47]),
        .I1(xgmii_rxd_ebuff[47]),
        .I2(pcs_loopback_core_int),
        .O(xgmii_rxd[47]));
  (* SOFT_HLUTNM = "soft_lutpair37" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \xgmii_rxd[48]_INST_0 
       (.I0(\xgmii_rxd[63] [48]),
        .I1(xgmii_rxd_ebuff[48]),
        .I2(pcs_loopback_core_int),
        .O(xgmii_rxd[48]));
  (* SOFT_HLUTNM = "soft_lutpair37" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \xgmii_rxd[49]_INST_0 
       (.I0(\xgmii_rxd[63] [49]),
        .I1(xgmii_rxd_ebuff[49]),
        .I2(pcs_loopback_core_int),
        .O(xgmii_rxd[49]));
  (* SOFT_HLUTNM = "soft_lutpair15" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \xgmii_rxd[4]_INST_0 
       (.I0(\xgmii_rxd[63] [4]),
        .I1(xgmii_rxd_ebuff[4]),
        .I2(pcs_loopback_core_int),
        .O(xgmii_rxd[4]));
  (* SOFT_HLUTNM = "soft_lutpair38" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \xgmii_rxd[50]_INST_0 
       (.I0(\xgmii_rxd[63] [50]),
        .I1(xgmii_rxd_ebuff[50]),
        .I2(pcs_loopback_core_int),
        .O(xgmii_rxd[50]));
  (* SOFT_HLUTNM = "soft_lutpair38" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \xgmii_rxd[51]_INST_0 
       (.I0(\xgmii_rxd[63] [51]),
        .I1(xgmii_rxd_ebuff[51]),
        .I2(pcs_loopback_core_int),
        .O(xgmii_rxd[51]));
  (* SOFT_HLUTNM = "soft_lutpair39" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \xgmii_rxd[52]_INST_0 
       (.I0(\xgmii_rxd[63] [52]),
        .I1(xgmii_rxd_ebuff[52]),
        .I2(pcs_loopback_core_int),
        .O(xgmii_rxd[52]));
  (* SOFT_HLUTNM = "soft_lutpair31" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \xgmii_rxd[53]_INST_0 
       (.I0(\xgmii_rxd[63] [53]),
        .I1(xgmii_rxd_ebuff[53]),
        .I2(pcs_loopback_core_int),
        .O(xgmii_rxd[53]));
  (* SOFT_HLUTNM = "soft_lutpair32" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \xgmii_rxd[54]_INST_0 
       (.I0(\xgmii_rxd[63] [54]),
        .I1(xgmii_rxd_ebuff[54]),
        .I2(pcs_loopback_core_int),
        .O(xgmii_rxd[54]));
  (* SOFT_HLUTNM = "soft_lutpair39" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \xgmii_rxd[55]_INST_0 
       (.I0(\xgmii_rxd[63] [55]),
        .I1(xgmii_rxd_ebuff[55]),
        .I2(pcs_loopback_core_int),
        .O(xgmii_rxd[55]));
  (* SOFT_HLUTNM = "soft_lutpair40" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \xgmii_rxd[56]_INST_0 
       (.I0(\xgmii_rxd[63] [56]),
        .I1(xgmii_rxd_ebuff[56]),
        .I2(pcs_loopback_core_int),
        .O(xgmii_rxd[56]));
  (* SOFT_HLUTNM = "soft_lutpair41" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \xgmii_rxd[57]_INST_0 
       (.I0(\xgmii_rxd[63] [57]),
        .I1(xgmii_rxd_ebuff[57]),
        .I2(pcs_loopback_core_int),
        .O(xgmii_rxd[57]));
  (* SOFT_HLUTNM = "soft_lutpair42" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \xgmii_rxd[58]_INST_0 
       (.I0(\xgmii_rxd[63] [58]),
        .I1(xgmii_rxd_ebuff[58]),
        .I2(pcs_loopback_core_int),
        .O(xgmii_rxd[58]));
  (* SOFT_HLUTNM = "soft_lutpair42" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \xgmii_rxd[59]_INST_0 
       (.I0(\xgmii_rxd[63] [59]),
        .I1(xgmii_rxd_ebuff[59]),
        .I2(pcs_loopback_core_int),
        .O(xgmii_rxd[59]));
  (* SOFT_HLUTNM = "soft_lutpair15" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \xgmii_rxd[5]_INST_0 
       (.I0(\xgmii_rxd[63] [5]),
        .I1(xgmii_rxd_ebuff[5]),
        .I2(pcs_loopback_core_int),
        .O(xgmii_rxd[5]));
  (* SOFT_HLUTNM = "soft_lutpair43" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \xgmii_rxd[60]_INST_0 
       (.I0(\xgmii_rxd[63] [60]),
        .I1(xgmii_rxd_ebuff[60]),
        .I2(pcs_loopback_core_int),
        .O(xgmii_rxd[60]));
  (* SOFT_HLUTNM = "soft_lutpair43" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \xgmii_rxd[61]_INST_0 
       (.I0(\xgmii_rxd[63] [61]),
        .I1(xgmii_rxd_ebuff[61]),
        .I2(pcs_loopback_core_int),
        .O(xgmii_rxd[61]));
  (* SOFT_HLUTNM = "soft_lutpair44" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \xgmii_rxd[62]_INST_0 
       (.I0(\xgmii_rxd[63] [62]),
        .I1(xgmii_rxd_ebuff[62]),
        .I2(pcs_loopback_core_int),
        .O(xgmii_rxd[62]));
  (* SOFT_HLUTNM = "soft_lutpair40" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \xgmii_rxd[63]_INST_0 
       (.I0(\xgmii_rxd[63] [63]),
        .I1(xgmii_rxd_ebuff[63]),
        .I2(pcs_loopback_core_int),
        .O(xgmii_rxd[63]));
  (* SOFT_HLUTNM = "soft_lutpair16" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \xgmii_rxd[6]_INST_0 
       (.I0(\xgmii_rxd[63] [6]),
        .I1(xgmii_rxd_ebuff[6]),
        .I2(pcs_loopback_core_int),
        .O(xgmii_rxd[6]));
  (* SOFT_HLUTNM = "soft_lutpair16" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \xgmii_rxd[7]_INST_0 
       (.I0(\xgmii_rxd[63] [7]),
        .I1(xgmii_rxd_ebuff[7]),
        .I2(pcs_loopback_core_int),
        .O(xgmii_rxd[7]));
  (* SOFT_HLUTNM = "soft_lutpair17" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \xgmii_rxd[8]_INST_0 
       (.I0(\xgmii_rxd[63] [8]),
        .I1(xgmii_rxd_ebuff[8]),
        .I2(pcs_loopback_core_int),
        .O(xgmii_rxd[8]));
  (* SOFT_HLUTNM = "soft_lutpair17" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \xgmii_rxd[9]_INST_0 
       (.I0(\xgmii_rxd[63] [9]),
        .I1(xgmii_rxd_ebuff[9]),
        .I2(pcs_loopback_core_int),
        .O(xgmii_rxd[9]));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_15_ieee_counters" *) 
module ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_ieee_counters
   (pcs_test_pattern_error_count,
    Q,
    \pcs_ber_count_reg[5]_0 ,
    \pcs_test_pattern_error_count_reg[0]_0 ,
    coreclk,
    counter_out,
    \pcs_ber_count_reg[0]_0 ,
    \pcs_test_pattern_error_count_reg[0]_1 ,
    SR);
  output [15:0]pcs_test_pattern_error_count;
  output [7:0]Q;
  output [5:0]\pcs_ber_count_reg[5]_0 ;
  input \pcs_test_pattern_error_count_reg[0]_0 ;
  input coreclk;
  input counter_out;
  input \pcs_ber_count_reg[0]_0 ;
  input \pcs_test_pattern_error_count_reg[0]_1 ;
  input [0:0]SR;

  wire [7:0]Q;
  wire [0:0]SR;
  wire coreclk;
  wire counter_out;
  wire [7:0]p_0_in__0;
  wire [5:0]p_0_in__1;
  wire pcs_ber_count0;
  wire \pcs_ber_count[5]_i_3_n_0 ;
  wire \pcs_ber_count_reg[0]_0 ;
  wire [5:0]\pcs_ber_count_reg[5]_0 ;
  wire pcs_error_block_count0;
  wire \pcs_error_block_count[7]_i_4_n_0 ;
  wire [15:0]pcs_test_pattern_error_count;
  wire pcs_test_pattern_error_count0;
  wire \pcs_test_pattern_error_count[0]_i_4_n_0 ;
  wire \pcs_test_pattern_error_count[0]_i_5_n_0 ;
  wire \pcs_test_pattern_error_count[0]_i_6_n_0 ;
  wire \pcs_test_pattern_error_count[0]_i_7_n_0 ;
  wire \pcs_test_pattern_error_count[0]_i_8_n_0 ;
  wire \pcs_test_pattern_error_count_reg[0]_0 ;
  wire \pcs_test_pattern_error_count_reg[0]_1 ;
  wire \pcs_test_pattern_error_count_reg[0]_i_3_n_0 ;
  wire \pcs_test_pattern_error_count_reg[0]_i_3_n_1 ;
  wire \pcs_test_pattern_error_count_reg[0]_i_3_n_2 ;
  wire \pcs_test_pattern_error_count_reg[0]_i_3_n_3 ;
  wire \pcs_test_pattern_error_count_reg[0]_i_3_n_4 ;
  wire \pcs_test_pattern_error_count_reg[0]_i_3_n_5 ;
  wire \pcs_test_pattern_error_count_reg[0]_i_3_n_6 ;
  wire \pcs_test_pattern_error_count_reg[0]_i_3_n_7 ;
  wire \pcs_test_pattern_error_count_reg[12]_i_1_n_1 ;
  wire \pcs_test_pattern_error_count_reg[12]_i_1_n_2 ;
  wire \pcs_test_pattern_error_count_reg[12]_i_1_n_3 ;
  wire \pcs_test_pattern_error_count_reg[12]_i_1_n_4 ;
  wire \pcs_test_pattern_error_count_reg[12]_i_1_n_5 ;
  wire \pcs_test_pattern_error_count_reg[12]_i_1_n_6 ;
  wire \pcs_test_pattern_error_count_reg[12]_i_1_n_7 ;
  wire \pcs_test_pattern_error_count_reg[4]_i_1_n_0 ;
  wire \pcs_test_pattern_error_count_reg[4]_i_1_n_1 ;
  wire \pcs_test_pattern_error_count_reg[4]_i_1_n_2 ;
  wire \pcs_test_pattern_error_count_reg[4]_i_1_n_3 ;
  wire \pcs_test_pattern_error_count_reg[4]_i_1_n_4 ;
  wire \pcs_test_pattern_error_count_reg[4]_i_1_n_5 ;
  wire \pcs_test_pattern_error_count_reg[4]_i_1_n_6 ;
  wire \pcs_test_pattern_error_count_reg[4]_i_1_n_7 ;
  wire \pcs_test_pattern_error_count_reg[8]_i_1_n_0 ;
  wire \pcs_test_pattern_error_count_reg[8]_i_1_n_1 ;
  wire \pcs_test_pattern_error_count_reg[8]_i_1_n_2 ;
  wire \pcs_test_pattern_error_count_reg[8]_i_1_n_3 ;
  wire \pcs_test_pattern_error_count_reg[8]_i_1_n_4 ;
  wire \pcs_test_pattern_error_count_reg[8]_i_1_n_5 ;
  wire \pcs_test_pattern_error_count_reg[8]_i_1_n_6 ;
  wire \pcs_test_pattern_error_count_reg[8]_i_1_n_7 ;
  wire [3:3]\NLW_pcs_test_pattern_error_count_reg[12]_i_1_CO_UNCONNECTED ;

  (* SOFT_HLUTNM = "soft_lutpair53" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \pcs_ber_count[0]_i_1 
       (.I0(\pcs_ber_count_reg[5]_0 [0]),
        .O(p_0_in__1[0]));
  (* SOFT_HLUTNM = "soft_lutpair53" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \pcs_ber_count[1]_i_1 
       (.I0(\pcs_ber_count_reg[5]_0 [0]),
        .I1(\pcs_ber_count_reg[5]_0 [1]),
        .O(p_0_in__1[1]));
  (* SOFT_HLUTNM = "soft_lutpair50" *) 
  LUT3 #(
    .INIT(8'h6A)) 
    \pcs_ber_count[2]_i_1 
       (.I0(\pcs_ber_count_reg[5]_0 [2]),
        .I1(\pcs_ber_count_reg[5]_0 [1]),
        .I2(\pcs_ber_count_reg[5]_0 [0]),
        .O(p_0_in__1[2]));
  (* SOFT_HLUTNM = "soft_lutpair50" *) 
  LUT4 #(
    .INIT(16'h6AAA)) 
    \pcs_ber_count[3]_i_1 
       (.I0(\pcs_ber_count_reg[5]_0 [3]),
        .I1(\pcs_ber_count_reg[5]_0 [0]),
        .I2(\pcs_ber_count_reg[5]_0 [1]),
        .I3(\pcs_ber_count_reg[5]_0 [2]),
        .O(p_0_in__1[3]));
  (* SOFT_HLUTNM = "soft_lutpair48" *) 
  LUT5 #(
    .INIT(32'h6AAAAAAA)) 
    \pcs_ber_count[4]_i_1 
       (.I0(\pcs_ber_count_reg[5]_0 [4]),
        .I1(\pcs_ber_count_reg[5]_0 [2]),
        .I2(\pcs_ber_count_reg[5]_0 [1]),
        .I3(\pcs_ber_count_reg[5]_0 [0]),
        .I4(\pcs_ber_count_reg[5]_0 [3]),
        .O(p_0_in__1[4]));
  LUT3 #(
    .INIT(8'h2A)) 
    \pcs_ber_count[5]_i_1 
       (.I0(\pcs_ber_count_reg[0]_0 ),
        .I1(\pcs_ber_count[5]_i_3_n_0 ),
        .I2(\pcs_ber_count_reg[5]_0 [5]),
        .O(pcs_ber_count0));
  LUT6 #(
    .INIT(64'h6AAAAAAAAAAAAAAA)) 
    \pcs_ber_count[5]_i_2 
       (.I0(\pcs_ber_count_reg[5]_0 [5]),
        .I1(\pcs_ber_count_reg[5]_0 [3]),
        .I2(\pcs_ber_count_reg[5]_0 [0]),
        .I3(\pcs_ber_count_reg[5]_0 [1]),
        .I4(\pcs_ber_count_reg[5]_0 [2]),
        .I5(\pcs_ber_count_reg[5]_0 [4]),
        .O(p_0_in__1[5]));
  (* SOFT_HLUTNM = "soft_lutpair48" *) 
  LUT5 #(
    .INIT(32'h80000000)) 
    \pcs_ber_count[5]_i_3 
       (.I0(\pcs_ber_count_reg[5]_0 [4]),
        .I1(\pcs_ber_count_reg[5]_0 [2]),
        .I2(\pcs_ber_count_reg[5]_0 [1]),
        .I3(\pcs_ber_count_reg[5]_0 [0]),
        .I4(\pcs_ber_count_reg[5]_0 [3]),
        .O(\pcs_ber_count[5]_i_3_n_0 ));
  FDRE \pcs_ber_count_reg[0] 
       (.C(coreclk),
        .CE(pcs_ber_count0),
        .D(p_0_in__1[0]),
        .Q(\pcs_ber_count_reg[5]_0 [0]),
        .R(SR));
  FDRE \pcs_ber_count_reg[1] 
       (.C(coreclk),
        .CE(pcs_ber_count0),
        .D(p_0_in__1[1]),
        .Q(\pcs_ber_count_reg[5]_0 [1]),
        .R(SR));
  FDRE \pcs_ber_count_reg[2] 
       (.C(coreclk),
        .CE(pcs_ber_count0),
        .D(p_0_in__1[2]),
        .Q(\pcs_ber_count_reg[5]_0 [2]),
        .R(SR));
  FDRE \pcs_ber_count_reg[3] 
       (.C(coreclk),
        .CE(pcs_ber_count0),
        .D(p_0_in__1[3]),
        .Q(\pcs_ber_count_reg[5]_0 [3]),
        .R(SR));
  FDRE \pcs_ber_count_reg[4] 
       (.C(coreclk),
        .CE(pcs_ber_count0),
        .D(p_0_in__1[4]),
        .Q(\pcs_ber_count_reg[5]_0 [4]),
        .R(SR));
  FDRE \pcs_ber_count_reg[5] 
       (.C(coreclk),
        .CE(pcs_ber_count0),
        .D(p_0_in__1[5]),
        .Q(\pcs_ber_count_reg[5]_0 [5]),
        .R(SR));
  LUT1 #(
    .INIT(2'h1)) 
    \pcs_error_block_count[0]_i_1 
       (.I0(Q[0]),
        .O(p_0_in__0[0]));
  (* SOFT_HLUTNM = "soft_lutpair51" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \pcs_error_block_count[1]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(p_0_in__0[1]));
  (* SOFT_HLUTNM = "soft_lutpair51" *) 
  LUT3 #(
    .INIT(8'h6A)) 
    \pcs_error_block_count[2]_i_1 
       (.I0(Q[2]),
        .I1(Q[1]),
        .I2(Q[0]),
        .O(p_0_in__0[2]));
  (* SOFT_HLUTNM = "soft_lutpair49" *) 
  LUT4 #(
    .INIT(16'h6AAA)) 
    \pcs_error_block_count[3]_i_1 
       (.I0(Q[3]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[2]),
        .O(p_0_in__0[3]));
  (* SOFT_HLUTNM = "soft_lutpair49" *) 
  LUT5 #(
    .INIT(32'h6AAAAAAA)) 
    \pcs_error_block_count[4]_i_1 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[1]),
        .I3(Q[0]),
        .I4(Q[3]),
        .O(p_0_in__0[4]));
  LUT6 #(
    .INIT(64'h6AAAAAAAAAAAAAAA)) 
    \pcs_error_block_count[5]_i_1 
       (.I0(Q[5]),
        .I1(Q[3]),
        .I2(Q[0]),
        .I3(Q[1]),
        .I4(Q[2]),
        .I5(Q[4]),
        .O(p_0_in__0[5]));
  (* SOFT_HLUTNM = "soft_lutpair52" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \pcs_error_block_count[6]_i_1 
       (.I0(Q[6]),
        .I1(\pcs_error_block_count[7]_i_4_n_0 ),
        .O(p_0_in__0[6]));
  LUT4 #(
    .INIT(16'h2AAA)) 
    \pcs_error_block_count[7]_i_2 
       (.I0(counter_out),
        .I1(Q[6]),
        .I2(\pcs_error_block_count[7]_i_4_n_0 ),
        .I3(Q[7]),
        .O(pcs_error_block_count0));
  (* SOFT_HLUTNM = "soft_lutpair52" *) 
  LUT3 #(
    .INIT(8'h6A)) 
    \pcs_error_block_count[7]_i_3 
       (.I0(Q[7]),
        .I1(\pcs_error_block_count[7]_i_4_n_0 ),
        .I2(Q[6]),
        .O(p_0_in__0[7]));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \pcs_error_block_count[7]_i_4 
       (.I0(Q[5]),
        .I1(Q[3]),
        .I2(Q[0]),
        .I3(Q[1]),
        .I4(Q[2]),
        .I5(Q[4]),
        .O(\pcs_error_block_count[7]_i_4_n_0 ));
  FDRE \pcs_error_block_count_reg[0] 
       (.C(coreclk),
        .CE(pcs_error_block_count0),
        .D(p_0_in__0[0]),
        .Q(Q[0]),
        .R(SR));
  FDRE \pcs_error_block_count_reg[1] 
       (.C(coreclk),
        .CE(pcs_error_block_count0),
        .D(p_0_in__0[1]),
        .Q(Q[1]),
        .R(SR));
  FDRE \pcs_error_block_count_reg[2] 
       (.C(coreclk),
        .CE(pcs_error_block_count0),
        .D(p_0_in__0[2]),
        .Q(Q[2]),
        .R(SR));
  FDRE \pcs_error_block_count_reg[3] 
       (.C(coreclk),
        .CE(pcs_error_block_count0),
        .D(p_0_in__0[3]),
        .Q(Q[3]),
        .R(SR));
  FDRE \pcs_error_block_count_reg[4] 
       (.C(coreclk),
        .CE(pcs_error_block_count0),
        .D(p_0_in__0[4]),
        .Q(Q[4]),
        .R(SR));
  FDRE \pcs_error_block_count_reg[5] 
       (.C(coreclk),
        .CE(pcs_error_block_count0),
        .D(p_0_in__0[5]),
        .Q(Q[5]),
        .R(SR));
  FDRE \pcs_error_block_count_reg[6] 
       (.C(coreclk),
        .CE(pcs_error_block_count0),
        .D(p_0_in__0[6]),
        .Q(Q[6]),
        .R(SR));
  FDRE \pcs_error_block_count_reg[7] 
       (.C(coreclk),
        .CE(pcs_error_block_count0),
        .D(p_0_in__0[7]),
        .Q(Q[7]),
        .R(SR));
  LUT5 #(
    .INIT(32'hAAAAA8AA)) 
    \pcs_test_pattern_error_count[0]_i_2 
       (.I0(\pcs_test_pattern_error_count_reg[0]_1 ),
        .I1(\pcs_test_pattern_error_count[0]_i_4_n_0 ),
        .I2(\pcs_test_pattern_error_count[0]_i_5_n_0 ),
        .I3(\pcs_test_pattern_error_count[0]_i_6_n_0 ),
        .I4(\pcs_test_pattern_error_count[0]_i_7_n_0 ),
        .O(pcs_test_pattern_error_count0));
  LUT4 #(
    .INIT(16'h7FFF)) 
    \pcs_test_pattern_error_count[0]_i_4 
       (.I0(pcs_test_pattern_error_count[4]),
        .I1(pcs_test_pattern_error_count[3]),
        .I2(pcs_test_pattern_error_count[8]),
        .I3(pcs_test_pattern_error_count[2]),
        .O(\pcs_test_pattern_error_count[0]_i_4_n_0 ));
  LUT4 #(
    .INIT(16'h7FFF)) 
    \pcs_test_pattern_error_count[0]_i_5 
       (.I0(pcs_test_pattern_error_count[10]),
        .I1(pcs_test_pattern_error_count[0]),
        .I2(pcs_test_pattern_error_count[9]),
        .I3(pcs_test_pattern_error_count[6]),
        .O(\pcs_test_pattern_error_count[0]_i_5_n_0 ));
  LUT4 #(
    .INIT(16'h8000)) 
    \pcs_test_pattern_error_count[0]_i_6 
       (.I0(pcs_test_pattern_error_count[13]),
        .I1(pcs_test_pattern_error_count[5]),
        .I2(pcs_test_pattern_error_count[11]),
        .I3(pcs_test_pattern_error_count[7]),
        .O(\pcs_test_pattern_error_count[0]_i_6_n_0 ));
  LUT4 #(
    .INIT(16'h7FFF)) 
    \pcs_test_pattern_error_count[0]_i_7 
       (.I0(pcs_test_pattern_error_count[14]),
        .I1(pcs_test_pattern_error_count[1]),
        .I2(pcs_test_pattern_error_count[15]),
        .I3(pcs_test_pattern_error_count[12]),
        .O(\pcs_test_pattern_error_count[0]_i_7_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \pcs_test_pattern_error_count[0]_i_8 
       (.I0(pcs_test_pattern_error_count[0]),
        .O(\pcs_test_pattern_error_count[0]_i_8_n_0 ));
  FDRE \pcs_test_pattern_error_count_reg[0] 
       (.C(coreclk),
        .CE(pcs_test_pattern_error_count0),
        .D(\pcs_test_pattern_error_count_reg[0]_i_3_n_7 ),
        .Q(pcs_test_pattern_error_count[0]),
        .R(\pcs_test_pattern_error_count_reg[0]_0 ));
  CARRY4 \pcs_test_pattern_error_count_reg[0]_i_3 
       (.CI(1'b0),
        .CO({\pcs_test_pattern_error_count_reg[0]_i_3_n_0 ,\pcs_test_pattern_error_count_reg[0]_i_3_n_1 ,\pcs_test_pattern_error_count_reg[0]_i_3_n_2 ,\pcs_test_pattern_error_count_reg[0]_i_3_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b1}),
        .O({\pcs_test_pattern_error_count_reg[0]_i_3_n_4 ,\pcs_test_pattern_error_count_reg[0]_i_3_n_5 ,\pcs_test_pattern_error_count_reg[0]_i_3_n_6 ,\pcs_test_pattern_error_count_reg[0]_i_3_n_7 }),
        .S({pcs_test_pattern_error_count[3:1],\pcs_test_pattern_error_count[0]_i_8_n_0 }));
  FDRE \pcs_test_pattern_error_count_reg[10] 
       (.C(coreclk),
        .CE(pcs_test_pattern_error_count0),
        .D(\pcs_test_pattern_error_count_reg[8]_i_1_n_5 ),
        .Q(pcs_test_pattern_error_count[10]),
        .R(\pcs_test_pattern_error_count_reg[0]_0 ));
  FDRE \pcs_test_pattern_error_count_reg[11] 
       (.C(coreclk),
        .CE(pcs_test_pattern_error_count0),
        .D(\pcs_test_pattern_error_count_reg[8]_i_1_n_4 ),
        .Q(pcs_test_pattern_error_count[11]),
        .R(\pcs_test_pattern_error_count_reg[0]_0 ));
  FDRE \pcs_test_pattern_error_count_reg[12] 
       (.C(coreclk),
        .CE(pcs_test_pattern_error_count0),
        .D(\pcs_test_pattern_error_count_reg[12]_i_1_n_7 ),
        .Q(pcs_test_pattern_error_count[12]),
        .R(\pcs_test_pattern_error_count_reg[0]_0 ));
  CARRY4 \pcs_test_pattern_error_count_reg[12]_i_1 
       (.CI(\pcs_test_pattern_error_count_reg[8]_i_1_n_0 ),
        .CO({\NLW_pcs_test_pattern_error_count_reg[12]_i_1_CO_UNCONNECTED [3],\pcs_test_pattern_error_count_reg[12]_i_1_n_1 ,\pcs_test_pattern_error_count_reg[12]_i_1_n_2 ,\pcs_test_pattern_error_count_reg[12]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\pcs_test_pattern_error_count_reg[12]_i_1_n_4 ,\pcs_test_pattern_error_count_reg[12]_i_1_n_5 ,\pcs_test_pattern_error_count_reg[12]_i_1_n_6 ,\pcs_test_pattern_error_count_reg[12]_i_1_n_7 }),
        .S(pcs_test_pattern_error_count[15:12]));
  FDRE \pcs_test_pattern_error_count_reg[13] 
       (.C(coreclk),
        .CE(pcs_test_pattern_error_count0),
        .D(\pcs_test_pattern_error_count_reg[12]_i_1_n_6 ),
        .Q(pcs_test_pattern_error_count[13]),
        .R(\pcs_test_pattern_error_count_reg[0]_0 ));
  FDRE \pcs_test_pattern_error_count_reg[14] 
       (.C(coreclk),
        .CE(pcs_test_pattern_error_count0),
        .D(\pcs_test_pattern_error_count_reg[12]_i_1_n_5 ),
        .Q(pcs_test_pattern_error_count[14]),
        .R(\pcs_test_pattern_error_count_reg[0]_0 ));
  FDRE \pcs_test_pattern_error_count_reg[15] 
       (.C(coreclk),
        .CE(pcs_test_pattern_error_count0),
        .D(\pcs_test_pattern_error_count_reg[12]_i_1_n_4 ),
        .Q(pcs_test_pattern_error_count[15]),
        .R(\pcs_test_pattern_error_count_reg[0]_0 ));
  FDRE \pcs_test_pattern_error_count_reg[1] 
       (.C(coreclk),
        .CE(pcs_test_pattern_error_count0),
        .D(\pcs_test_pattern_error_count_reg[0]_i_3_n_6 ),
        .Q(pcs_test_pattern_error_count[1]),
        .R(\pcs_test_pattern_error_count_reg[0]_0 ));
  FDRE \pcs_test_pattern_error_count_reg[2] 
       (.C(coreclk),
        .CE(pcs_test_pattern_error_count0),
        .D(\pcs_test_pattern_error_count_reg[0]_i_3_n_5 ),
        .Q(pcs_test_pattern_error_count[2]),
        .R(\pcs_test_pattern_error_count_reg[0]_0 ));
  FDRE \pcs_test_pattern_error_count_reg[3] 
       (.C(coreclk),
        .CE(pcs_test_pattern_error_count0),
        .D(\pcs_test_pattern_error_count_reg[0]_i_3_n_4 ),
        .Q(pcs_test_pattern_error_count[3]),
        .R(\pcs_test_pattern_error_count_reg[0]_0 ));
  FDRE \pcs_test_pattern_error_count_reg[4] 
       (.C(coreclk),
        .CE(pcs_test_pattern_error_count0),
        .D(\pcs_test_pattern_error_count_reg[4]_i_1_n_7 ),
        .Q(pcs_test_pattern_error_count[4]),
        .R(\pcs_test_pattern_error_count_reg[0]_0 ));
  CARRY4 \pcs_test_pattern_error_count_reg[4]_i_1 
       (.CI(\pcs_test_pattern_error_count_reg[0]_i_3_n_0 ),
        .CO({\pcs_test_pattern_error_count_reg[4]_i_1_n_0 ,\pcs_test_pattern_error_count_reg[4]_i_1_n_1 ,\pcs_test_pattern_error_count_reg[4]_i_1_n_2 ,\pcs_test_pattern_error_count_reg[4]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\pcs_test_pattern_error_count_reg[4]_i_1_n_4 ,\pcs_test_pattern_error_count_reg[4]_i_1_n_5 ,\pcs_test_pattern_error_count_reg[4]_i_1_n_6 ,\pcs_test_pattern_error_count_reg[4]_i_1_n_7 }),
        .S(pcs_test_pattern_error_count[7:4]));
  FDRE \pcs_test_pattern_error_count_reg[5] 
       (.C(coreclk),
        .CE(pcs_test_pattern_error_count0),
        .D(\pcs_test_pattern_error_count_reg[4]_i_1_n_6 ),
        .Q(pcs_test_pattern_error_count[5]),
        .R(\pcs_test_pattern_error_count_reg[0]_0 ));
  FDRE \pcs_test_pattern_error_count_reg[6] 
       (.C(coreclk),
        .CE(pcs_test_pattern_error_count0),
        .D(\pcs_test_pattern_error_count_reg[4]_i_1_n_5 ),
        .Q(pcs_test_pattern_error_count[6]),
        .R(\pcs_test_pattern_error_count_reg[0]_0 ));
  FDRE \pcs_test_pattern_error_count_reg[7] 
       (.C(coreclk),
        .CE(pcs_test_pattern_error_count0),
        .D(\pcs_test_pattern_error_count_reg[4]_i_1_n_4 ),
        .Q(pcs_test_pattern_error_count[7]),
        .R(\pcs_test_pattern_error_count_reg[0]_0 ));
  FDRE \pcs_test_pattern_error_count_reg[8] 
       (.C(coreclk),
        .CE(pcs_test_pattern_error_count0),
        .D(\pcs_test_pattern_error_count_reg[8]_i_1_n_7 ),
        .Q(pcs_test_pattern_error_count[8]),
        .R(\pcs_test_pattern_error_count_reg[0]_0 ));
  CARRY4 \pcs_test_pattern_error_count_reg[8]_i_1 
       (.CI(\pcs_test_pattern_error_count_reg[4]_i_1_n_0 ),
        .CO({\pcs_test_pattern_error_count_reg[8]_i_1_n_0 ,\pcs_test_pattern_error_count_reg[8]_i_1_n_1 ,\pcs_test_pattern_error_count_reg[8]_i_1_n_2 ,\pcs_test_pattern_error_count_reg[8]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\pcs_test_pattern_error_count_reg[8]_i_1_n_4 ,\pcs_test_pattern_error_count_reg[8]_i_1_n_5 ,\pcs_test_pattern_error_count_reg[8]_i_1_n_6 ,\pcs_test_pattern_error_count_reg[8]_i_1_n_7 }),
        .S(pcs_test_pattern_error_count[11:8]));
  FDRE \pcs_test_pattern_error_count_reg[9] 
       (.C(coreclk),
        .CE(pcs_test_pattern_error_count0),
        .D(\pcs_test_pattern_error_count_reg[8]_i_1_n_6 ),
        .Q(pcs_test_pattern_error_count[9]),
        .R(\pcs_test_pattern_error_count_reg[0]_0 ));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_15_ieee_registers" *) 
module ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_ieee_registers
   (data_out_reg,
    regs_rdack,
    regs_wrack,
    \q_reg[0] ,
    loopback_ctrl,
    \q_reg[0]_0 ,
    in0,
    Q,
    \q_reg[15] ,
    \addr_reg_reg[9]_0 ,
    pseudo_rand_seeds_int,
    core_in_testmode_wire,
    \q_reg[5] ,
    \q_reg[3] ,
    \q_reg[1] ,
    tx_66_fifo,
    SR,
    clear_test_pattern_err_count,
    pma_resetout,
    D,
    prbs31_rx_enable_core_int,
    prbs31_tx_enable_core_int,
    \rddata_out_reg[15] ,
    core_status,
    coreclk,
    pcs_hi_ber_core_int,
    pcs_rx_link_up_core_sync_int,
    rdack0,
    wrack0,
    reset,
    \q_reg[0]_1 ,
    re_prev_reg,
    re_prev_reg_0,
    fifo_full,
    signal_detect_sync,
    re_prev_reg_1,
    re_prev_reg_2,
    \q_reg[15]_0 ,
    out,
    new_tx_test_seed,
    asynch_fifo_i_i_68,
    \rd_data_reg[1] ,
    pcs_reset_clear_core_intr,
    resetdone,
    \q_reg[0]_2 ,
    re_prev_reg_3,
    \q_reg[0]_3 ,
    pma_pmd_type,
    re_prev_reg_4,
    re_prev_reg_5,
    \prbs_err_count_reg[15] ,
    pcs_test_pattern_error_count,
    \addr_reg_reg[20]_0 ,
    \q_reg[7] ,
    \q_reg[5]_0 ,
    \q_reg[15]_1 ,
    \q_reg[15]_2 );
  output data_out_reg;
  output regs_rdack;
  output regs_wrack;
  output \q_reg[0] ;
  output [0:0]loopback_ctrl;
  output \q_reg[0]_0 ;
  output in0;
  output [1:0]Q;
  output [15:0]\q_reg[15] ;
  output \addr_reg_reg[9]_0 ;
  output [115:0]pseudo_rand_seeds_int;
  output core_in_testmode_wire;
  output [4:0]\q_reg[5] ;
  output \q_reg[3] ;
  output \q_reg[1] ;
  output [0:0]tx_66_fifo;
  output [0:0]SR;
  output clear_test_pattern_err_count;
  output pma_resetout;
  output [15:0]D;
  output prbs31_rx_enable_core_int;
  output prbs31_tx_enable_core_int;
  output [15:0]\rddata_out_reg[15] ;
  input [0:0]core_status;
  input coreclk;
  input pcs_hi_ber_core_int;
  input pcs_rx_link_up_core_sync_int;
  input rdack0;
  input wrack0;
  input reset;
  input \q_reg[0]_1 ;
  input re_prev_reg;
  input re_prev_reg_0;
  input fifo_full;
  input signal_detect_sync;
  input re_prev_reg_1;
  input re_prev_reg_2;
  input [15:0]\q_reg[15]_0 ;
  input out;
  input new_tx_test_seed;
  input [0:0]asynch_fifo_i_i_68;
  input [0:0]\rd_data_reg[1] ;
  input pcs_reset_clear_core_intr;
  input resetdone;
  input \q_reg[0]_2 ;
  input re_prev_reg_3;
  input \q_reg[0]_3 ;
  input [2:0]pma_pmd_type;
  input re_prev_reg_4;
  input re_prev_reg_5;
  input [15:0]\prbs_err_count_reg[15] ;
  input [15:0]pcs_test_pattern_error_count;
  input [20:0]\addr_reg_reg[20]_0 ;
  input [7:0]\q_reg[7] ;
  input [5:0]\q_reg[5]_0 ;
  input [15:0]\q_reg[15]_1 ;
  input [15:0]\q_reg[15]_2 ;

  wire [15:0]D;
  wire [1:0]Q;
  wire [0:0]SR;
  wire [20:1]addr_reg;
  wire [20:0]\addr_reg_reg[20]_0 ;
  wire \addr_reg_reg[9]_0 ;
  wire [0:0]asynch_fifo_i_i_68;
  wire clear_test_pattern_err_count;
  wire core_in_testmode_wire;
  wire [0:0]core_status;
  wire coreclk;
  wire data_out_reg;
  wire fifo_full;
  wire in0;
  wire [0:0]loopback_ctrl;
  wire new_tx_test_seed;
  wire out;
  wire pcs_hi_ber_core_int;
  wire pcs_reset_clear_core_intr;
  wire pcs_rx_link_up_core_sync_int;
  wire [15:0]pcs_test_pattern_error_count;
  wire [2:0]pma_pmd_type;
  wire pma_resetout;
  wire prbs31_rx_enable_core_int;
  wire prbs31_tx_enable_core_int;
  wire [15:0]\prbs_err_count_reg[15] ;
  wire [115:0]pseudo_rand_seeds_int;
  wire \q_reg[0] ;
  wire \q_reg[0]_0 ;
  wire \q_reg[0]_1 ;
  wire \q_reg[0]_2 ;
  wire \q_reg[0]_3 ;
  wire [15:0]\q_reg[15] ;
  wire [15:0]\q_reg[15]_0 ;
  wire [15:0]\q_reg[15]_1 ;
  wire [15:0]\q_reg[15]_2 ;
  wire \q_reg[1] ;
  wire \q_reg[3] ;
  wire [4:0]\q_reg[5] ;
  wire [5:0]\q_reg[5]_0 ;
  wire [7:0]\q_reg[7] ;
  wire [0:0]\rd_data_reg[1] ;
  wire rdack0;
  wire [15:0]\rddata_out_reg[15] ;
  wire re_prev_reg;
  wire re_prev_reg_0;
  wire re_prev_reg_1;
  wire re_prev_reg_2;
  wire re_prev_reg_3;
  wire re_prev_reg_4;
  wire re_prev_reg_5;
  wire regs_rdack;
  wire regs_wrack;
  wire reset;
  wire resetdone;
  wire signal_detect_sync;
  wire [0:0]tx_66_fifo;
  wire wrack0;

  FDRE \addr_reg_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\addr_reg_reg[20]_0 [0]),
        .Q(Q[0]),
        .R(reset));
  FDRE \addr_reg_reg[10] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\addr_reg_reg[20]_0 [10]),
        .Q(addr_reg[10]),
        .R(reset));
  FDRE \addr_reg_reg[11] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\addr_reg_reg[20]_0 [11]),
        .Q(addr_reg[11]),
        .R(reset));
  FDRE \addr_reg_reg[12] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\addr_reg_reg[20]_0 [12]),
        .Q(addr_reg[12]),
        .R(reset));
  FDRE \addr_reg_reg[13] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\addr_reg_reg[20]_0 [13]),
        .Q(addr_reg[13]),
        .R(reset));
  FDRE \addr_reg_reg[14] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\addr_reg_reg[20]_0 [14]),
        .Q(addr_reg[14]),
        .R(reset));
  FDRE \addr_reg_reg[15] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\addr_reg_reg[20]_0 [15]),
        .Q(addr_reg[15]),
        .R(reset));
  FDRE \addr_reg_reg[16] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\addr_reg_reg[20]_0 [16]),
        .Q(addr_reg[16]),
        .R(reset));
  FDRE \addr_reg_reg[17] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\addr_reg_reg[20]_0 [17]),
        .Q(addr_reg[17]),
        .R(reset));
  FDRE \addr_reg_reg[18] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\addr_reg_reg[20]_0 [18]),
        .Q(addr_reg[18]),
        .R(reset));
  FDRE \addr_reg_reg[19] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\addr_reg_reg[20]_0 [19]),
        .Q(Q[1]),
        .R(reset));
  FDRE \addr_reg_reg[1] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\addr_reg_reg[20]_0 [1]),
        .Q(addr_reg[1]),
        .R(reset));
  FDRE \addr_reg_reg[20] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\addr_reg_reg[20]_0 [20]),
        .Q(addr_reg[20]),
        .R(reset));
  FDRE \addr_reg_reg[2] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\addr_reg_reg[20]_0 [2]),
        .Q(addr_reg[2]),
        .R(reset));
  FDRE \addr_reg_reg[3] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\addr_reg_reg[20]_0 [3]),
        .Q(addr_reg[3]),
        .R(reset));
  FDRE \addr_reg_reg[4] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\addr_reg_reg[20]_0 [4]),
        .Q(addr_reg[4]),
        .R(reset));
  FDRE \addr_reg_reg[5] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\addr_reg_reg[20]_0 [5]),
        .Q(addr_reg[5]),
        .R(reset));
  FDRE \addr_reg_reg[6] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\addr_reg_reg[20]_0 [6]),
        .Q(addr_reg[6]),
        .R(reset));
  FDRE \addr_reg_reg[7] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\addr_reg_reg[20]_0 [7]),
        .Q(addr_reg[7]),
        .R(reset));
  FDRE \addr_reg_reg[8] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\addr_reg_reg[20]_0 [8]),
        .Q(addr_reg[8]),
        .R(reset));
  FDRE \addr_reg_reg[9] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\addr_reg_reg[20]_0 [9]),
        .Q(addr_reg[9]),
        .R(reset));
  ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_common_ieee_registers common_reg_block
       (.D(D),
        .Q({addr_reg[20],Q[1],addr_reg[18:1],Q[0]}),
        .SR(data_out_reg),
        .\addr_reg_reg[9] (\addr_reg_reg[9]_0 ),
        .asynch_fifo_i_i_68(asynch_fifo_i_i_68),
        .clear_test_pattern_err_count(clear_test_pattern_err_count),
        .core_in_testmode_wire(core_in_testmode_wire),
        .core_status(core_status),
        .coreclk(coreclk),
        .data_out_reg(SR),
        .fifo_full(fifo_full),
        .in0(in0),
        .loopback_ctrl(loopback_ctrl),
        .new_tx_test_seed(new_tx_test_seed),
        .out(out),
        .pcs_hi_ber_core_int(pcs_hi_ber_core_int),
        .pcs_reset_clear_core_intr(pcs_reset_clear_core_intr),
        .pcs_rx_link_up_core_sync_int(pcs_rx_link_up_core_sync_int),
        .pcs_test_pattern_error_count(pcs_test_pattern_error_count),
        .pma_pmd_type(pma_pmd_type),
        .pma_resetout(pma_resetout),
        .prbs31_rx_enable_core_int(prbs31_rx_enable_core_int),
        .prbs31_tx_enable_core_int(prbs31_tx_enable_core_int),
        .\prbs_err_count_reg[15] (\prbs_err_count_reg[15] ),
        .pseudo_rand_seeds_int(pseudo_rand_seeds_int),
        .\q_reg[0] (\q_reg[0] ),
        .\q_reg[0]_0 (\q_reg[0]_0 ),
        .\q_reg[0]_1 (\q_reg[0]_1 ),
        .\q_reg[0]_2 (\q_reg[0]_2 ),
        .\q_reg[0]_3 (\q_reg[0]_3 ),
        .\q_reg[15] (\q_reg[15] ),
        .\q_reg[15]_0 (\q_reg[15]_0 ),
        .\q_reg[15]_1 (\q_reg[15]_1 ),
        .\q_reg[15]_2 (\q_reg[15]_2 ),
        .\q_reg[1] (\q_reg[1] ),
        .\q_reg[3] (\q_reg[3] ),
        .\q_reg[5] (\q_reg[5] ),
        .\q_reg[5]_0 (\q_reg[5]_0 ),
        .\q_reg[7] (\q_reg[7] ),
        .\rd_data_reg[1] (\rd_data_reg[1] ),
        .rdack0(rdack0),
        .\rddata_out_reg[15]_0 (\rddata_out_reg[15] ),
        .re_prev_reg(re_prev_reg),
        .re_prev_reg_0(re_prev_reg_0),
        .re_prev_reg_1(re_prev_reg_1),
        .re_prev_reg_2(re_prev_reg_2),
        .re_prev_reg_3(re_prev_reg_3),
        .re_prev_reg_4(re_prev_reg_4),
        .re_prev_reg_5(re_prev_reg_5),
        .regs_rdack(regs_rdack),
        .regs_wrack(regs_wrack),
        .reset(reset),
        .resetdone(resetdone),
        .signal_detect_sync(signal_detect_sync),
        .tx_66_fifo(tx_66_fifo),
        .wrack0(wrack0));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_15_ipif_access" *) 
module ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_ipif_access
   (read_reg,
    \state_reg[2]_0 ,
    \state_reg[2]_1 ,
    \state_reg[1]_0 ,
    read_reg_reg_0,
    control_reg_reg,
    D,
    read_reg_reg_1,
    read_reg_reg_2,
    rdack0,
    \addr_reg_reg[0] ,
    read_reg_reg_3,
    wrack0,
    \state_reg[1]_1 ,
    \state_reg[1]_2 ,
    \state_reg[2]_2 ,
    \state_reg[2]_3 ,
    \prbs31_err_count_reg[15]_0 ,
    areset_coreclk,
    p_0_in,
    coreclk,
    regs_wrack,
    mdio_rd,
    drp_ack,
    regs_rdack,
    control_reg,
    in0,
    mdio_we_rising,
    \prbs31_err_count_reg[15]_1 ,
    \prbs31_err_count_reg[15]_2 ,
    \q_reg[0] ,
    \q_reg[0]_0 ,
    SR,
    Q);
  output read_reg;
  output \state_reg[2]_0 ;
  output \state_reg[2]_1 ;
  output \state_reg[1]_0 ;
  output read_reg_reg_0;
  output control_reg_reg;
  output [15:0]D;
  output read_reg_reg_1;
  output read_reg_reg_2;
  output rdack0;
  output \addr_reg_reg[0] ;
  output read_reg_reg_3;
  output wrack0;
  output \state_reg[1]_1 ;
  output [16:0]\state_reg[1]_2 ;
  output \state_reg[2]_2 ;
  output [15:0]\state_reg[2]_3 ;
  output [15:0]\prbs31_err_count_reg[15]_0 ;
  input areset_coreclk;
  input p_0_in;
  input coreclk;
  input regs_wrack;
  input mdio_rd;
  input drp_ack;
  input regs_rdack;
  input control_reg;
  input in0;
  input mdio_we_rising;
  input [15:0]\prbs31_err_count_reg[15]_1 ;
  input [15:0]\prbs31_err_count_reg[15]_2 ;
  input \q_reg[0] ;
  input [1:0]\q_reg[0]_0 ;
  input [0:0]SR;
  input [15:0]Q;

  wire [15:0]D;
  wire [15:0]Q;
  wire [0:0]SR;
  wire \addr_reg_reg[0] ;
  wire areset_coreclk;
  wire control_reg;
  wire control_reg_reg;
  wire coreclk;
  wire drp_ack;
  wire in0;
  wire indirect_read;
  wire mdio_rd;
  wire mdio_we_rising;
  wire p_0_in;
  wire prbs31_err_count0;
  wire [15:0]\prbs31_err_count_reg[15]_0 ;
  wire [15:0]\prbs31_err_count_reg[15]_1 ;
  wire [15:0]\prbs31_err_count_reg[15]_2 ;
  wire \q_reg[0] ;
  wire [1:0]\q_reg[0]_0 ;
  wire rdack0;
  wire read_reg;
  wire read_reg_i_1_n_0;
  wire read_reg_reg_0;
  wire read_reg_reg_1;
  wire read_reg_reg_2;
  wire read_reg_reg_3;
  wire regs_rdack;
  wire regs_wrack;
  wire \state[0]_i_1__0_n_0 ;
  wire \state[0]_i_2_n_0 ;
  wire \state[0]_i_3_n_0 ;
  wire \state[1]_i_1_n_0 ;
  wire \state[2]_i_1_n_0 ;
  wire \state_reg[1]_0 ;
  wire \state_reg[1]_1 ;
  wire [16:0]\state_reg[1]_2 ;
  wire \state_reg[2]_0 ;
  wire \state_reg[2]_1 ;
  wire \state_reg[2]_2 ;
  wire [15:0]\state_reg[2]_3 ;
  wire \state_reg_n_0_[0] ;
  wire wrack0;

  (* SOFT_HLUTNM = "soft_lutpair100" *) 
  LUT4 #(
    .INIT(16'h0014)) 
    control_reg_i_1
       (.I0(read_reg),
        .I1(\state_reg_n_0_[0] ),
        .I2(\state_reg[1]_0 ),
        .I3(\state_reg[2]_1 ),
        .O(read_reg_reg_0));
  (* SOFT_HLUTNM = "soft_lutpair117" *) 
  LUT3 #(
    .INIT(8'h20)) 
    \d_reg[0]_i_1 
       (.I0(Q[0]),
        .I1(\state_reg[1]_0 ),
        .I2(\state_reg[2]_1 ),
        .O(\state_reg[1]_2 [0]));
  (* SOFT_HLUTNM = "soft_lutpair111" *) 
  LUT3 #(
    .INIT(8'h20)) 
    \d_reg[10]_i_1 
       (.I0(Q[10]),
        .I1(\state_reg[1]_0 ),
        .I2(\state_reg[2]_1 ),
        .O(\state_reg[1]_2 [10]));
  (* SOFT_HLUTNM = "soft_lutpair116" *) 
  LUT3 #(
    .INIT(8'h20)) 
    \d_reg[11]_i_1 
       (.I0(Q[11]),
        .I1(\state_reg[1]_0 ),
        .I2(\state_reg[2]_1 ),
        .O(\state_reg[1]_2 [11]));
  (* SOFT_HLUTNM = "soft_lutpair112" *) 
  LUT3 #(
    .INIT(8'h20)) 
    \d_reg[12]_i_1 
       (.I0(Q[12]),
        .I1(\state_reg[1]_0 ),
        .I2(\state_reg[2]_1 ),
        .O(\state_reg[1]_2 [12]));
  (* SOFT_HLUTNM = "soft_lutpair113" *) 
  LUT3 #(
    .INIT(8'h20)) 
    \d_reg[13]_i_1 
       (.I0(Q[13]),
        .I1(\state_reg[1]_0 ),
        .I2(\state_reg[2]_1 ),
        .O(\state_reg[1]_2 [13]));
  (* SOFT_HLUTNM = "soft_lutpair115" *) 
  LUT3 #(
    .INIT(8'h20)) 
    \d_reg[14]_i_1 
       (.I0(Q[14]),
        .I1(\state_reg[1]_0 ),
        .I2(\state_reg[2]_1 ),
        .O(\state_reg[1]_2 [14]));
  (* SOFT_HLUTNM = "soft_lutpair114" *) 
  LUT3 #(
    .INIT(8'h20)) 
    \d_reg[15]_i_1 
       (.I0(Q[15]),
        .I1(\state_reg[1]_0 ),
        .I2(\state_reg[2]_1 ),
        .O(\state_reg[1]_2 [15]));
  (* SOFT_HLUTNM = "soft_lutpair102" *) 
  LUT3 #(
    .INIT(8'h20)) 
    \d_reg[1]_i_1 
       (.I0(Q[1]),
        .I1(\state_reg[1]_0 ),
        .I2(\state_reg[2]_1 ),
        .O(\state_reg[1]_2 [1]));
  (* SOFT_HLUTNM = "soft_lutpair103" *) 
  LUT3 #(
    .INIT(8'h20)) 
    \d_reg[2]_i_1 
       (.I0(Q[2]),
        .I1(\state_reg[1]_0 ),
        .I2(\state_reg[2]_1 ),
        .O(\state_reg[1]_2 [2]));
  LUT2 #(
    .INIT(4'hB)) 
    \d_reg[32]_i_1 
       (.I0(\state_reg[1]_0 ),
        .I1(\state_reg[2]_1 ),
        .O(\state_reg[1]_2 [16]));
  (* SOFT_HLUTNM = "soft_lutpair104" *) 
  LUT3 #(
    .INIT(8'h20)) 
    \d_reg[3]_i_1 
       (.I0(Q[3]),
        .I1(\state_reg[1]_0 ),
        .I2(\state_reg[2]_1 ),
        .O(\state_reg[1]_2 [3]));
  (* SOFT_HLUTNM = "soft_lutpair105" *) 
  LUT3 #(
    .INIT(8'h20)) 
    \d_reg[4]_i_1 
       (.I0(Q[4]),
        .I1(\state_reg[1]_0 ),
        .I2(\state_reg[2]_1 ),
        .O(\state_reg[1]_2 [4]));
  (* SOFT_HLUTNM = "soft_lutpair106" *) 
  LUT3 #(
    .INIT(8'h20)) 
    \d_reg[5]_i_1 
       (.I0(Q[5]),
        .I1(\state_reg[1]_0 ),
        .I2(\state_reg[2]_1 ),
        .O(\state_reg[1]_2 [5]));
  (* SOFT_HLUTNM = "soft_lutpair107" *) 
  LUT3 #(
    .INIT(8'h20)) 
    \d_reg[6]_i_1 
       (.I0(Q[6]),
        .I1(\state_reg[1]_0 ),
        .I2(\state_reg[2]_1 ),
        .O(\state_reg[1]_2 [6]));
  (* SOFT_HLUTNM = "soft_lutpair108" *) 
  LUT3 #(
    .INIT(8'h20)) 
    \d_reg[7]_i_1 
       (.I0(Q[7]),
        .I1(\state_reg[1]_0 ),
        .I2(\state_reg[2]_1 ),
        .O(\state_reg[1]_2 [7]));
  (* SOFT_HLUTNM = "soft_lutpair109" *) 
  LUT3 #(
    .INIT(8'h20)) 
    \d_reg[8]_i_1 
       (.I0(Q[8]),
        .I1(\state_reg[1]_0 ),
        .I2(\state_reg[2]_1 ),
        .O(\state_reg[1]_2 [8]));
  (* SOFT_HLUTNM = "soft_lutpair110" *) 
  LUT3 #(
    .INIT(8'h20)) 
    \d_reg[9]_i_1 
       (.I0(Q[9]),
        .I1(\state_reg[1]_0 ),
        .I2(\state_reg[2]_1 ),
        .O(\state_reg[1]_2 [9]));
  FDRE indirect_read_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(p_0_in),
        .Q(indirect_read),
        .R(areset_coreclk));
  LUT6 #(
    .INIT(64'hFFFFFEEF00000220)) 
    \prbs31_err_count[0]_i_1 
       (.I0(\prbs31_err_count_reg[15]_1 [0]),
        .I1(read_reg),
        .I2(\state_reg_n_0_[0] ),
        .I3(\state_reg[1]_0 ),
        .I4(\state_reg[2]_1 ),
        .I5(\prbs31_err_count_reg[15]_2 [0]),
        .O(D[0]));
  LUT6 #(
    .INIT(64'hFFFFFEEF00000220)) 
    \prbs31_err_count[10]_i_1 
       (.I0(\prbs31_err_count_reg[15]_1 [10]),
        .I1(read_reg),
        .I2(\state_reg_n_0_[0] ),
        .I3(\state_reg[1]_0 ),
        .I4(\state_reg[2]_1 ),
        .I5(\prbs31_err_count_reg[15]_2 [10]),
        .O(D[10]));
  LUT6 #(
    .INIT(64'hFFFFFEEF00000220)) 
    \prbs31_err_count[11]_i_1 
       (.I0(\prbs31_err_count_reg[15]_1 [11]),
        .I1(read_reg),
        .I2(\state_reg_n_0_[0] ),
        .I3(\state_reg[1]_0 ),
        .I4(\state_reg[2]_1 ),
        .I5(\prbs31_err_count_reg[15]_2 [11]),
        .O(D[11]));
  LUT6 #(
    .INIT(64'hFFFFFEEF00000220)) 
    \prbs31_err_count[12]_i_1 
       (.I0(\prbs31_err_count_reg[15]_1 [12]),
        .I1(read_reg),
        .I2(\state_reg_n_0_[0] ),
        .I3(\state_reg[1]_0 ),
        .I4(\state_reg[2]_1 ),
        .I5(\prbs31_err_count_reg[15]_2 [12]),
        .O(D[12]));
  LUT6 #(
    .INIT(64'hFFFFFEEF00000220)) 
    \prbs31_err_count[13]_i_1 
       (.I0(\prbs31_err_count_reg[15]_1 [13]),
        .I1(read_reg),
        .I2(\state_reg_n_0_[0] ),
        .I3(\state_reg[1]_0 ),
        .I4(\state_reg[2]_1 ),
        .I5(\prbs31_err_count_reg[15]_2 [13]),
        .O(D[13]));
  LUT6 #(
    .INIT(64'hFFFFFEEF00000220)) 
    \prbs31_err_count[14]_i_1 
       (.I0(\prbs31_err_count_reg[15]_1 [14]),
        .I1(read_reg),
        .I2(\state_reg_n_0_[0] ),
        .I3(\state_reg[1]_0 ),
        .I4(\state_reg[2]_1 ),
        .I5(\prbs31_err_count_reg[15]_2 [14]),
        .O(D[14]));
  LUT6 #(
    .INIT(64'h0014000000000000)) 
    \prbs31_err_count[15]_i_1 
       (.I0(read_reg),
        .I1(\state_reg_n_0_[0] ),
        .I2(\state_reg[1]_0 ),
        .I3(\state_reg[2]_1 ),
        .I4(drp_ack),
        .I5(p_0_in),
        .O(prbs31_err_count0));
  LUT6 #(
    .INIT(64'hFFFFFEEF00000220)) 
    \prbs31_err_count[15]_i_2 
       (.I0(\prbs31_err_count_reg[15]_1 [15]),
        .I1(read_reg),
        .I2(\state_reg_n_0_[0] ),
        .I3(\state_reg[1]_0 ),
        .I4(\state_reg[2]_1 ),
        .I5(\prbs31_err_count_reg[15]_2 [15]),
        .O(D[15]));
  LUT6 #(
    .INIT(64'hFFFFFEEF00000220)) 
    \prbs31_err_count[1]_i_1 
       (.I0(\prbs31_err_count_reg[15]_1 [1]),
        .I1(read_reg),
        .I2(\state_reg_n_0_[0] ),
        .I3(\state_reg[1]_0 ),
        .I4(\state_reg[2]_1 ),
        .I5(\prbs31_err_count_reg[15]_2 [1]),
        .O(D[1]));
  LUT6 #(
    .INIT(64'hFFFFFEEF00000220)) 
    \prbs31_err_count[2]_i_1 
       (.I0(\prbs31_err_count_reg[15]_1 [2]),
        .I1(read_reg),
        .I2(\state_reg_n_0_[0] ),
        .I3(\state_reg[1]_0 ),
        .I4(\state_reg[2]_1 ),
        .I5(\prbs31_err_count_reg[15]_2 [2]),
        .O(D[2]));
  LUT6 #(
    .INIT(64'hFFFFFEEF00000220)) 
    \prbs31_err_count[3]_i_1 
       (.I0(\prbs31_err_count_reg[15]_1 [3]),
        .I1(read_reg),
        .I2(\state_reg_n_0_[0] ),
        .I3(\state_reg[1]_0 ),
        .I4(\state_reg[2]_1 ),
        .I5(\prbs31_err_count_reg[15]_2 [3]),
        .O(D[3]));
  LUT6 #(
    .INIT(64'hFFFFFEEF00000220)) 
    \prbs31_err_count[4]_i_1 
       (.I0(\prbs31_err_count_reg[15]_1 [4]),
        .I1(read_reg),
        .I2(\state_reg_n_0_[0] ),
        .I3(\state_reg[1]_0 ),
        .I4(\state_reg[2]_1 ),
        .I5(\prbs31_err_count_reg[15]_2 [4]),
        .O(D[4]));
  LUT6 #(
    .INIT(64'hFFFFFEEF00000220)) 
    \prbs31_err_count[5]_i_1 
       (.I0(\prbs31_err_count_reg[15]_1 [5]),
        .I1(read_reg),
        .I2(\state_reg_n_0_[0] ),
        .I3(\state_reg[1]_0 ),
        .I4(\state_reg[2]_1 ),
        .I5(\prbs31_err_count_reg[15]_2 [5]),
        .O(D[5]));
  LUT6 #(
    .INIT(64'hFFFFFEEF00000220)) 
    \prbs31_err_count[6]_i_1 
       (.I0(\prbs31_err_count_reg[15]_1 [6]),
        .I1(read_reg),
        .I2(\state_reg_n_0_[0] ),
        .I3(\state_reg[1]_0 ),
        .I4(\state_reg[2]_1 ),
        .I5(\prbs31_err_count_reg[15]_2 [6]),
        .O(D[6]));
  LUT6 #(
    .INIT(64'hFFFFFEEF00000220)) 
    \prbs31_err_count[7]_i_1 
       (.I0(\prbs31_err_count_reg[15]_1 [7]),
        .I1(read_reg),
        .I2(\state_reg_n_0_[0] ),
        .I3(\state_reg[1]_0 ),
        .I4(\state_reg[2]_1 ),
        .I5(\prbs31_err_count_reg[15]_2 [7]),
        .O(D[7]));
  LUT6 #(
    .INIT(64'hFFFFFEEF00000220)) 
    \prbs31_err_count[8]_i_1 
       (.I0(\prbs31_err_count_reg[15]_1 [8]),
        .I1(read_reg),
        .I2(\state_reg_n_0_[0] ),
        .I3(\state_reg[1]_0 ),
        .I4(\state_reg[2]_1 ),
        .I5(\prbs31_err_count_reg[15]_2 [8]),
        .O(D[8]));
  LUT6 #(
    .INIT(64'hFFFFFEEF00000220)) 
    \prbs31_err_count[9]_i_1 
       (.I0(\prbs31_err_count_reg[15]_1 [9]),
        .I1(read_reg),
        .I2(\state_reg_n_0_[0] ),
        .I3(\state_reg[1]_0 ),
        .I4(\state_reg[2]_1 ),
        .I5(\prbs31_err_count_reg[15]_2 [9]),
        .O(D[9]));
  FDRE \prbs31_err_count_reg[0] 
       (.C(coreclk),
        .CE(prbs31_err_count0),
        .D(D[0]),
        .Q(\prbs31_err_count_reg[15]_0 [0]),
        .R(areset_coreclk));
  FDRE \prbs31_err_count_reg[10] 
       (.C(coreclk),
        .CE(prbs31_err_count0),
        .D(D[10]),
        .Q(\prbs31_err_count_reg[15]_0 [10]),
        .R(areset_coreclk));
  FDRE \prbs31_err_count_reg[11] 
       (.C(coreclk),
        .CE(prbs31_err_count0),
        .D(D[11]),
        .Q(\prbs31_err_count_reg[15]_0 [11]),
        .R(areset_coreclk));
  FDRE \prbs31_err_count_reg[12] 
       (.C(coreclk),
        .CE(prbs31_err_count0),
        .D(D[12]),
        .Q(\prbs31_err_count_reg[15]_0 [12]),
        .R(areset_coreclk));
  FDRE \prbs31_err_count_reg[13] 
       (.C(coreclk),
        .CE(prbs31_err_count0),
        .D(D[13]),
        .Q(\prbs31_err_count_reg[15]_0 [13]),
        .R(areset_coreclk));
  FDRE \prbs31_err_count_reg[14] 
       (.C(coreclk),
        .CE(prbs31_err_count0),
        .D(D[14]),
        .Q(\prbs31_err_count_reg[15]_0 [14]),
        .R(areset_coreclk));
  FDRE \prbs31_err_count_reg[15] 
       (.C(coreclk),
        .CE(prbs31_err_count0),
        .D(D[15]),
        .Q(\prbs31_err_count_reg[15]_0 [15]),
        .R(areset_coreclk));
  FDRE \prbs31_err_count_reg[1] 
       (.C(coreclk),
        .CE(prbs31_err_count0),
        .D(D[1]),
        .Q(\prbs31_err_count_reg[15]_0 [1]),
        .R(areset_coreclk));
  FDRE \prbs31_err_count_reg[2] 
       (.C(coreclk),
        .CE(prbs31_err_count0),
        .D(D[2]),
        .Q(\prbs31_err_count_reg[15]_0 [2]),
        .R(areset_coreclk));
  FDRE \prbs31_err_count_reg[3] 
       (.C(coreclk),
        .CE(prbs31_err_count0),
        .D(D[3]),
        .Q(\prbs31_err_count_reg[15]_0 [3]),
        .R(areset_coreclk));
  FDRE \prbs31_err_count_reg[4] 
       (.C(coreclk),
        .CE(prbs31_err_count0),
        .D(D[4]),
        .Q(\prbs31_err_count_reg[15]_0 [4]),
        .R(areset_coreclk));
  FDRE \prbs31_err_count_reg[5] 
       (.C(coreclk),
        .CE(prbs31_err_count0),
        .D(D[5]),
        .Q(\prbs31_err_count_reg[15]_0 [5]),
        .R(areset_coreclk));
  FDRE \prbs31_err_count_reg[6] 
       (.C(coreclk),
        .CE(prbs31_err_count0),
        .D(D[6]),
        .Q(\prbs31_err_count_reg[15]_0 [6]),
        .R(areset_coreclk));
  FDRE \prbs31_err_count_reg[7] 
       (.C(coreclk),
        .CE(prbs31_err_count0),
        .D(D[7]),
        .Q(\prbs31_err_count_reg[15]_0 [7]),
        .R(areset_coreclk));
  FDRE \prbs31_err_count_reg[8] 
       (.C(coreclk),
        .CE(prbs31_err_count0),
        .D(D[8]),
        .Q(\prbs31_err_count_reg[15]_0 [8]),
        .R(areset_coreclk));
  FDRE \prbs31_err_count_reg[9] 
       (.C(coreclk),
        .CE(prbs31_err_count0),
        .D(D[9]),
        .Q(\prbs31_err_count_reg[15]_0 [9]),
        .R(areset_coreclk));
  (* SOFT_HLUTNM = "soft_lutpair117" *) 
  LUT3 #(
    .INIT(8'h20)) 
    \q[0]_i_1 
       (.I0(\state_reg[2]_1 ),
        .I1(\state_reg[1]_0 ),
        .I2(Q[0]),
        .O(\state_reg[2]_3 [0]));
  (* SOFT_HLUTNM = "soft_lutpair111" *) 
  LUT3 #(
    .INIT(8'h20)) 
    \q[10]_i_1 
       (.I0(\state_reg[2]_1 ),
        .I1(\state_reg[1]_0 ),
        .I2(Q[10]),
        .O(\state_reg[2]_3 [10]));
  (* SOFT_HLUTNM = "soft_lutpair116" *) 
  LUT3 #(
    .INIT(8'h20)) 
    \q[11]_i_1 
       (.I0(\state_reg[2]_1 ),
        .I1(\state_reg[1]_0 ),
        .I2(Q[11]),
        .O(\state_reg[2]_3 [11]));
  (* SOFT_HLUTNM = "soft_lutpair112" *) 
  LUT3 #(
    .INIT(8'h20)) 
    \q[12]_i_1 
       (.I0(\state_reg[2]_1 ),
        .I1(\state_reg[1]_0 ),
        .I2(Q[12]),
        .O(\state_reg[2]_3 [12]));
  (* SOFT_HLUTNM = "soft_lutpair113" *) 
  LUT3 #(
    .INIT(8'h20)) 
    \q[13]_i_1 
       (.I0(\state_reg[2]_1 ),
        .I1(\state_reg[1]_0 ),
        .I2(Q[13]),
        .O(\state_reg[2]_3 [13]));
  (* SOFT_HLUTNM = "soft_lutpair115" *) 
  LUT3 #(
    .INIT(8'h20)) 
    \q[14]_i_1 
       (.I0(\state_reg[2]_1 ),
        .I1(\state_reg[1]_0 ),
        .I2(Q[14]),
        .O(\state_reg[2]_3 [14]));
  LUT6 #(
    .INIT(64'h0000000000000F28)) 
    \q[15]_i_2 
       (.I0(read_reg),
        .I1(\state_reg_n_0_[0] ),
        .I2(\state_reg[1]_0 ),
        .I3(\state_reg[2]_1 ),
        .I4(\q_reg[0] ),
        .I5(\q_reg[0]_0 [0]),
        .O(read_reg_reg_1));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFF0D7)) 
    \q[15]_i_2__1 
       (.I0(read_reg),
        .I1(\state_reg_n_0_[0] ),
        .I2(\state_reg[1]_0 ),
        .I3(\state_reg[2]_1 ),
        .I4(\q_reg[0] ),
        .I5(\q_reg[0]_0 [1]),
        .O(read_reg_reg_2));
  (* SOFT_HLUTNM = "soft_lutpair114" *) 
  LUT3 #(
    .INIT(8'h20)) 
    \q[15]_i_2__5 
       (.I0(\state_reg[2]_1 ),
        .I1(\state_reg[1]_0 ),
        .I2(Q[15]),
        .O(\state_reg[2]_3 [15]));
  (* SOFT_HLUTNM = "soft_lutpair100" *) 
  LUT3 #(
    .INIT(8'hEF)) 
    \q[15]_i_4 
       (.I0(SR),
        .I1(\state_reg[1]_0 ),
        .I2(\state_reg[2]_1 ),
        .O(\state_reg[1]_1 ));
  (* SOFT_HLUTNM = "soft_lutpair102" *) 
  LUT3 #(
    .INIT(8'h20)) 
    \q[1]_i_1 
       (.I0(\state_reg[2]_1 ),
        .I1(\state_reg[1]_0 ),
        .I2(Q[1]),
        .O(\state_reg[2]_3 [1]));
  (* SOFT_HLUTNM = "soft_lutpair103" *) 
  LUT3 #(
    .INIT(8'h20)) 
    \q[2]_i_1 
       (.I0(\state_reg[2]_1 ),
        .I1(\state_reg[1]_0 ),
        .I2(Q[2]),
        .O(\state_reg[2]_3 [2]));
  (* SOFT_HLUTNM = "soft_lutpair104" *) 
  LUT3 #(
    .INIT(8'h20)) 
    \q[3]_i_1 
       (.I0(\state_reg[2]_1 ),
        .I1(\state_reg[1]_0 ),
        .I2(Q[3]),
        .O(\state_reg[2]_3 [3]));
  (* SOFT_HLUTNM = "soft_lutpair105" *) 
  LUT3 #(
    .INIT(8'h20)) 
    \q[4]_i_1 
       (.I0(\state_reg[2]_1 ),
        .I1(\state_reg[1]_0 ),
        .I2(Q[4]),
        .O(\state_reg[2]_3 [4]));
  (* SOFT_HLUTNM = "soft_lutpair106" *) 
  LUT3 #(
    .INIT(8'h20)) 
    \q[5]_i_1__0 
       (.I0(\state_reg[2]_1 ),
        .I1(\state_reg[1]_0 ),
        .I2(Q[5]),
        .O(\state_reg[2]_3 [5]));
  (* SOFT_HLUTNM = "soft_lutpair107" *) 
  LUT3 #(
    .INIT(8'h20)) 
    \q[6]_i_1 
       (.I0(\state_reg[2]_1 ),
        .I1(\state_reg[1]_0 ),
        .I2(Q[6]),
        .O(\state_reg[2]_3 [6]));
  (* SOFT_HLUTNM = "soft_lutpair108" *) 
  LUT3 #(
    .INIT(8'h20)) 
    \q[7]_i_1__0 
       (.I0(\state_reg[2]_1 ),
        .I1(\state_reg[1]_0 ),
        .I2(Q[7]),
        .O(\state_reg[2]_3 [7]));
  (* SOFT_HLUTNM = "soft_lutpair109" *) 
  LUT3 #(
    .INIT(8'h20)) 
    \q[8]_i_1 
       (.I0(\state_reg[2]_1 ),
        .I1(\state_reg[1]_0 ),
        .I2(Q[8]),
        .O(\state_reg[2]_3 [8]));
  (* SOFT_HLUTNM = "soft_lutpair110" *) 
  LUT3 #(
    .INIT(8'h20)) 
    \q[9]_i_1__1 
       (.I0(\state_reg[2]_1 ),
        .I1(\state_reg[1]_0 ),
        .I2(Q[9]),
        .O(\state_reg[2]_3 [9]));
  (* SOFT_HLUTNM = "soft_lutpair98" *) 
  LUT5 #(
    .INIT(32'h00000208)) 
    rdack_i_1
       (.I0(read_reg),
        .I1(\state_reg_n_0_[0] ),
        .I2(\state_reg[2]_1 ),
        .I3(\state_reg[1]_0 ),
        .I4(regs_rdack),
        .O(rdack0));
  (* SOFT_HLUTNM = "soft_lutpair101" *) 
  LUT2 #(
    .INIT(4'h2)) 
    re_prev_i_2
       (.I0(\state_reg[2]_1 ),
        .I1(\state_reg[1]_0 ),
        .O(\state_reg[2]_2 ));
  (* SOFT_HLUTNM = "soft_lutpair98" *) 
  LUT4 #(
    .INIT(16'h0028)) 
    re_prev_i_3
       (.I0(read_reg),
        .I1(\state_reg_n_0_[0] ),
        .I2(\state_reg[1]_0 ),
        .I3(\state_reg[2]_1 ),
        .O(read_reg_reg_3));
  (* SOFT_HLUTNM = "soft_lutpair99" *) 
  LUT5 #(
    .INIT(32'hFDDFFFFF)) 
    re_prev_i_4
       (.I0(\q_reg[0]_0 [0]),
        .I1(\state_reg[2]_1 ),
        .I2(\state_reg[1]_0 ),
        .I3(\state_reg_n_0_[0] ),
        .I4(read_reg),
        .O(\addr_reg_reg[0] ));
  (* SOFT_HLUTNM = "soft_lutpair99" *) 
  LUT4 #(
    .INIT(16'hC9DD)) 
    re_prev_i_4__1
       (.I0(\state_reg[2]_1 ),
        .I1(\state_reg[1]_0 ),
        .I2(\state_reg_n_0_[0] ),
        .I3(read_reg),
        .O(\state_reg[2]_0 ));
  LUT5 #(
    .INIT(32'hBABFAAAA)) 
    read_reg_i_1
       (.I0(mdio_rd),
        .I1(drp_ack),
        .I2(read_reg_reg_0),
        .I3(regs_rdack),
        .I4(read_reg),
        .O(read_reg_i_1_n_0));
  FDRE read_reg_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(read_reg_i_1_n_0),
        .Q(read_reg),
        .R(areset_coreclk));
  LUT6 #(
    .INIT(64'hFDFDFFFF10301F3F)) 
    \state[0]_i_1__0 
       (.I0(\state_reg_n_0_[0] ),
        .I1(\state_reg[1]_0 ),
        .I2(\state_reg[2]_1 ),
        .I3(regs_wrack),
        .I4(\state[0]_i_2_n_0 ),
        .I5(mdio_rd),
        .O(\state[0]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h0FFCFFFD0F0CFF0D)) 
    \state[0]_i_2 
       (.I0(mdio_rd),
        .I1(mdio_we_rising),
        .I2(\state_reg[1]_0 ),
        .I3(\state_reg_n_0_[0] ),
        .I4(indirect_read),
        .I5(\state[0]_i_3_n_0 ),
        .O(\state[0]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h5555544555555775)) 
    \state[0]_i_3 
       (.I0(regs_rdack),
        .I1(read_reg),
        .I2(\state_reg_n_0_[0] ),
        .I3(\state_reg[1]_0 ),
        .I4(\state_reg[2]_1 ),
        .I5(drp_ack),
        .O(\state[0]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000032F00)) 
    \state[1]_i_1 
       (.I0(regs_wrack),
        .I1(mdio_rd),
        .I2(\state_reg[2]_1 ),
        .I3(\state_reg_n_0_[0] ),
        .I4(\state_reg[1]_0 ),
        .I5(areset_coreclk),
        .O(\state[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000003032)) 
    \state[2]_i_1 
       (.I0(mdio_we_rising),
        .I1(mdio_rd),
        .I2(\state_reg[2]_1 ),
        .I3(\state_reg_n_0_[0] ),
        .I4(\state_reg[1]_0 ),
        .I5(areset_coreclk),
        .O(\state[2]_i_1_n_0 ));
  FDRE \state_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\state[0]_i_1__0_n_0 ),
        .Q(\state_reg_n_0_[0] ),
        .R(areset_coreclk));
  FDRE \state_reg[1] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\state[1]_i_1_n_0 ),
        .Q(\state_reg[1]_0 ),
        .R(1'b0));
  FDRE \state_reg[2] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\state[2]_i_1_n_0 ),
        .Q(\state_reg[2]_1 ),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFFFFEEF00000110)) 
    toggle_reg_i_1
       (.I0(control_reg),
        .I1(read_reg),
        .I2(\state_reg_n_0_[0] ),
        .I3(\state_reg[1]_0 ),
        .I4(\state_reg[2]_1 ),
        .I5(in0),
        .O(control_reg_reg));
  (* SOFT_HLUTNM = "soft_lutpair101" *) 
  LUT3 #(
    .INIT(8'h04)) 
    wrack_i_1
       (.I0(\state_reg[1]_0 ),
        .I1(\state_reg[2]_1 ),
        .I2(regs_wrack),
        .O(wrack0));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_15_management_mdio" *) 
module ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_management_mdio
   (mdio_out,
    mdio_tri,
    Q,
    \state_reg[2] ,
    \state_reg[2]_0 ,
    \state_reg[1] ,
    mgmt_drp_cs,
    control_reg_reg,
    \devad_reg_reg[4] ,
    read_reg_reg,
    read_reg_reg_0,
    rdack0,
    \addr_reg_reg[0] ,
    read_reg_reg_1,
    wrack0,
    \state_reg[1]_0 ,
    D,
    \state_reg[2]_1 ,
    \state_reg[2]_2 ,
    \prbs31_err_count_reg[15] ,
    areset_coreclk,
    coreclk,
    mdc,
    mdio_in,
    regs_wrack,
    drp_ack,
    regs_rdack,
    control_reg,
    in0,
    prtad,
    \prbs31_err_count_reg[15]_0 ,
    \prbs31_err_count_reg[15]_1 ,
    \q_reg[0] ,
    \q_reg[0]_0 ,
    SR,
    \addr_reg_reg[8] );
  output mdio_out;
  output mdio_tri;
  output [15:0]Q;
  output \state_reg[2] ;
  output \state_reg[2]_0 ;
  output \state_reg[1] ;
  output mgmt_drp_cs;
  output control_reg_reg;
  output [20:0]\devad_reg_reg[4] ;
  output read_reg_reg;
  output read_reg_reg_0;
  output rdack0;
  output \addr_reg_reg[0] ;
  output read_reg_reg_1;
  output wrack0;
  output \state_reg[1]_0 ;
  output [16:0]D;
  output \state_reg[2]_1 ;
  output [15:0]\state_reg[2]_2 ;
  output [15:0]\prbs31_err_count_reg[15] ;
  input areset_coreclk;
  input coreclk;
  input mdc;
  input mdio_in;
  input regs_wrack;
  input drp_ack;
  input regs_rdack;
  input control_reg;
  input in0;
  input [4:0]prtad;
  input [15:0]\prbs31_err_count_reg[15]_0 ;
  input [15:0]\prbs31_err_count_reg[15]_1 ;
  input \q_reg[0] ;
  input [1:0]\q_reg[0]_0 ;
  input [0:0]SR;
  input [1:0]\addr_reg_reg[8] ;

  wire [16:0]D;
  wire [15:0]Q;
  wire [0:0]SR;
  wire \addr_reg_reg[0] ;
  wire [1:0]\addr_reg_reg[8] ;
  wire areset_coreclk;
  wire control_reg;
  wire control_reg_reg;
  wire coreclk;
  wire [20:0]\devad_reg_reg[4] ;
  wire drp_ack;
  wire in0;
  wire mdc;
  (* async_reg = "true" *) wire mdc_reg1;
  (* async_reg = "true" *) wire mdc_reg2;
  (* async_reg = "true" *) wire mdc_reg3;
  (* async_reg = "true" *) wire mdc_reg4;
  (* async_reg = "true" *) wire mdc_reg5;
  wire mdc_rising;
  wire mdc_rising0;
  wire mdio_in;
  (* async_reg = "true" *) wire mdio_in_reg1;
  (* async_reg = "true" *) wire mdio_in_reg2;
  (* async_reg = "true" *) wire mdio_in_reg3;
  (* async_reg = "true" *) wire mdio_in_reg4;
  (* async_reg = "true" *) wire mdio_in_reg5;
  wire mdio_out;
  wire mdio_rd;
  wire mdio_tri;
  wire mdio_we;
  wire mdio_we_reg;
  wire mdio_we_rising;
  wire mdio_we_rising0;
  wire mgmt_drp_cs;
  wire [15:0]mgmt_rddata;
  wire p_0_in;
  wire [15:0]\prbs31_err_count_reg[15] ;
  wire [15:0]\prbs31_err_count_reg[15]_0 ;
  wire [15:0]\prbs31_err_count_reg[15]_1 ;
  wire [4:0]prtad;
  wire \q_reg[0] ;
  wire [1:0]\q_reg[0]_0 ;
  wire rdack0;
  wire read_reg;
  wire read_reg_reg;
  wire read_reg_reg_0;
  wire read_reg_reg_1;
  wire regs_rdack;
  wire regs_wrack;
  wire \state_reg[1] ;
  wire \state_reg[1]_0 ;
  wire \state_reg[2] ;
  wire \state_reg[2]_0 ;
  wire \state_reg[2]_1 ;
  wire [15:0]\state_reg[2]_2 ;
  wire wrack0;

  ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_ipif_access ipif_access_inst
       (.D(mgmt_rddata),
        .Q(Q),
        .SR(SR),
        .\addr_reg_reg[0] (\addr_reg_reg[0] ),
        .areset_coreclk(areset_coreclk),
        .control_reg(control_reg),
        .control_reg_reg(control_reg_reg),
        .coreclk(coreclk),
        .drp_ack(drp_ack),
        .in0(in0),
        .mdio_rd(mdio_rd),
        .mdio_we_rising(mdio_we_rising),
        .p_0_in(p_0_in),
        .\prbs31_err_count_reg[15]_0 (\prbs31_err_count_reg[15] ),
        .\prbs31_err_count_reg[15]_1 (\prbs31_err_count_reg[15]_0 ),
        .\prbs31_err_count_reg[15]_2 (\prbs31_err_count_reg[15]_1 ),
        .\q_reg[0] (\q_reg[0] ),
        .\q_reg[0]_0 (\q_reg[0]_0 ),
        .rdack0(rdack0),
        .read_reg(read_reg),
        .read_reg_reg_0(mgmt_drp_cs),
        .read_reg_reg_1(read_reg_reg),
        .read_reg_reg_2(read_reg_reg_0),
        .read_reg_reg_3(read_reg_reg_1),
        .regs_rdack(regs_rdack),
        .regs_wrack(regs_wrack),
        .\state_reg[1]_0 (\state_reg[1] ),
        .\state_reg[1]_1 (\state_reg[1]_0 ),
        .\state_reg[1]_2 (D),
        .\state_reg[2]_0 (\state_reg[2] ),
        .\state_reg[2]_1 (\state_reg[2]_0 ),
        .\state_reg[2]_2 (\state_reg[2]_1 ),
        .\state_reg[2]_3 (\state_reg[2]_2 ),
        .wrack0(wrack0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE mdc_reg1_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(mdc),
        .Q(mdc_reg1),
        .R(areset_coreclk));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE mdc_reg2_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(mdc_reg1),
        .Q(mdc_reg2),
        .R(areset_coreclk));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE mdc_reg3_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(mdc_reg2),
        .Q(mdc_reg3),
        .R(areset_coreclk));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE mdc_reg4_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(mdc_reg3),
        .Q(mdc_reg4),
        .R(areset_coreclk));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE mdc_reg5_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(mdc_reg4),
        .Q(mdc_reg5),
        .R(areset_coreclk));
  LUT2 #(
    .INIT(4'h2)) 
    mdc_rising_i_1
       (.I0(mdc_reg4),
        .I1(mdc_reg5),
        .O(mdc_rising0));
  FDRE mdc_rising_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(mdc_rising0),
        .Q(mdc_rising),
        .R(areset_coreclk));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDSE mdio_in_reg1_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(mdio_in),
        .Q(mdio_in_reg1),
        .S(areset_coreclk));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDSE mdio_in_reg2_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(mdio_in_reg1),
        .Q(mdio_in_reg2),
        .S(areset_coreclk));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDSE mdio_in_reg3_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(mdio_in_reg2),
        .Q(mdio_in_reg3),
        .S(areset_coreclk));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDSE mdio_in_reg4_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(mdio_in_reg3),
        .Q(mdio_in_reg4),
        .S(areset_coreclk));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDSE mdio_in_reg5_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(mdio_in_reg4),
        .Q(mdio_in_reg5),
        .S(areset_coreclk));
  ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_mdio_interface mdio_interface_i
       (.D(mgmt_rddata),
        .Q(Q),
        .\addr_reg_reg[8] (\addr_reg_reg[8] ),
        .areset_coreclk(areset_coreclk),
        .coreclk(coreclk),
        .\devad_reg_reg[4]_0 (\devad_reg_reg[4] ),
        .drp_ack(drp_ack),
        .mdc_rising(mdc_rising),
        .mdio_out(mdio_out),
        .mdio_rd(mdio_rd),
        .mdio_tri(mdio_tri),
        .mdio_we(mdio_we),
        .mdio_we_reg(mdio_we_reg),
        .mdio_we_rising0(mdio_we_rising0),
        .mgmt_drp_cs(mgmt_drp_cs),
        .out(mdio_in_reg5),
        .p_0_in(p_0_in),
        .prtad(prtad),
        .read_reg(read_reg),
        .regs_rdack(regs_rdack));
  FDRE mdio_we_reg_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(mdio_we),
        .Q(mdio_we_reg),
        .R(areset_coreclk));
  FDRE mdio_we_rising_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(mdio_we_rising0),
        .Q(mdio_we_rising),
        .R(areset_coreclk));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_15_management_top" *) 
module ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_management_top
   (SR,
    mdio_out,
    mdio_tri,
    pcs_loopback_core_int,
    loopback_ctrl,
    reg_1_0_15__0,
    in0,
    Q,
    drp_den,
    drp_di,
    drp_daddr,
    pseudo_rand_seeds_int,
    core_in_testmode_wire,
    \q_reg[3] ,
    \q_reg[3]_0 ,
    \q_reg[1] ,
    tx_66_fifo,
    drp_req,
    drp_dwe,
    clear_test_pattern_err_count,
    pma_resetout,
    prbs31_rx_enable_core_int,
    prbs31_tx_enable_core_int,
    areset_coreclk,
    coreclk,
    core_status,
    pcs_hi_ber_core_int,
    pcs_rx_link_up_core_sync_int,
    mdc,
    mdio_in,
    dclk,
    drp_drdy,
    reset,
    \q_reg[0] ,
    fifo_full,
    signal_detect_sync,
    out,
    new_tx_test_seed,
    asynch_fifo_i_i_68,
    \rd_data_reg[1] ,
    pcs_reset_clear_core_intr,
    resetdone,
    dclk_reset,
    drp_gnt,
    drp_drpdo,
    prtad,
    pma_pmd_type,
    counter_out,
    \pcs_ber_count_reg[0] ,
    \pcs_test_pattern_error_count_reg[0] );
  output [0:0]SR;
  output mdio_out;
  output mdio_tri;
  output pcs_loopback_core_int;
  output [0:0]loopback_ctrl;
  output reg_1_0_15__0;
  output in0;
  output [15:0]Q;
  output drp_den;
  output [15:0]drp_di;
  output [15:0]drp_daddr;
  output [115:0]pseudo_rand_seeds_int;
  output core_in_testmode_wire;
  output [3:0]\q_reg[3] ;
  output \q_reg[3]_0 ;
  output \q_reg[1] ;
  output [0:0]tx_66_fifo;
  output drp_req;
  output drp_dwe;
  output clear_test_pattern_err_count;
  output pma_resetout;
  output prbs31_rx_enable_core_int;
  output prbs31_tx_enable_core_int;
  input areset_coreclk;
  input coreclk;
  input [0:0]core_status;
  input pcs_hi_ber_core_int;
  input pcs_rx_link_up_core_sync_int;
  input mdc;
  input mdio_in;
  input dclk;
  input drp_drdy;
  input reset;
  input \q_reg[0] ;
  input fifo_full;
  input signal_detect_sync;
  input out;
  input new_tx_test_seed;
  input [0:0]asynch_fifo_i_i_68;
  input [0:0]\rd_data_reg[1] ;
  input pcs_reset_clear_core_intr;
  input resetdone;
  input dclk_reset;
  input drp_gnt;
  input [15:0]drp_drpdo;
  input [4:0]prtad;
  input [2:0]pma_pmd_type;
  input counter_out;
  input \pcs_ber_count_reg[0] ;
  input \pcs_test_pattern_error_count_reg[0] ;

  wire [15:0]Q;
  wire [0:0]SR;
  wire [20:0]addr;
  wire [19:0]addr_reg;
  wire areset_coreclk;
  wire [0:0]asynch_fifo_i_i_68;
  wire clear_test_pattern_err_count;
  wire \common_reg_block/rdack0 ;
  wire \common_reg_block/wrack0 ;
  wire core_in_testmode_wire;
  wire [0:0]core_status;
  wire coreclk;
  wire counter_out;
  wire [15:0]data_wr;
  wire dclk;
  wire dclk_reset;
  wire drp_ack;
  wire [15:0]drp_daddr;
  wire drp_den;
  wire [15:0]drp_di;
  wire drp_drdy;
  wire [15:0]drp_drpdo;
  wire drp_dwe;
  wire drp_gnt;
  wire drp_ipif_i_n_36;
  wire drp_ipif_i_n_37;
  wire drp_ipif_i_n_38;
  wire drp_ipif_i_n_39;
  wire drp_ipif_i_n_40;
  wire drp_ipif_i_n_41;
  wire drp_ipif_i_n_42;
  wire drp_ipif_i_n_43;
  wire drp_ipif_i_n_44;
  wire drp_ipif_i_n_45;
  wire drp_ipif_i_n_46;
  wire drp_ipif_i_n_47;
  wire drp_ipif_i_n_48;
  wire drp_ipif_i_n_49;
  wire drp_ipif_i_n_50;
  wire drp_ipif_i_n_51;
  wire drp_req;
  wire fifo_full;
  wire ieee_registers_i_n_143;
  wire ieee_registers_i_n_151;
  wire ieee_registers_i_n_154;
  wire ieee_registers_i_n_155;
  wire ieee_registers_i_n_156;
  wire ieee_registers_i_n_157;
  wire ieee_registers_i_n_158;
  wire ieee_registers_i_n_159;
  wire ieee_registers_i_n_160;
  wire ieee_registers_i_n_161;
  wire ieee_registers_i_n_162;
  wire ieee_registers_i_n_163;
  wire ieee_registers_i_n_164;
  wire ieee_registers_i_n_165;
  wire ieee_registers_i_n_166;
  wire ieee_registers_i_n_167;
  wire ieee_registers_i_n_168;
  wire ieee_registers_i_n_169;
  wire ieee_registers_i_n_25;
  wire in0;
  wire [0:0]loopback_ctrl;
  wire management_mdio_i_n_10;
  wire management_mdio_i_n_11;
  wire management_mdio_i_n_12;
  wire management_mdio_i_n_13;
  wire management_mdio_i_n_18;
  wire management_mdio_i_n_19;
  wire management_mdio_i_n_20;
  wire management_mdio_i_n_22;
  wire management_mdio_i_n_3;
  wire management_mdio_i_n_4;
  wire management_mdio_i_n_44;
  wire management_mdio_i_n_45;
  wire management_mdio_i_n_47;
  wire management_mdio_i_n_48;
  wire management_mdio_i_n_5;
  wire management_mdio_i_n_50;
  wire management_mdio_i_n_52;
  wire management_mdio_i_n_54;
  wire management_mdio_i_n_55;
  wire management_mdio_i_n_57;
  wire management_mdio_i_n_58;
  wire management_mdio_i_n_59;
  wire management_mdio_i_n_6;
  wire management_mdio_i_n_60;
  wire management_mdio_i_n_61;
  wire management_mdio_i_n_68;
  wire management_mdio_i_n_69;
  wire management_mdio_i_n_7;
  wire management_mdio_i_n_70;
  wire management_mdio_i_n_71;
  wire management_mdio_i_n_72;
  wire management_mdio_i_n_73;
  wire management_mdio_i_n_74;
  wire management_mdio_i_n_75;
  wire management_mdio_i_n_76;
  wire management_mdio_i_n_77;
  wire management_mdio_i_n_78;
  wire management_mdio_i_n_79;
  wire management_mdio_i_n_8;
  wire management_mdio_i_n_80;
  wire management_mdio_i_n_81;
  wire management_mdio_i_n_82;
  wire management_mdio_i_n_83;
  wire management_mdio_i_n_84;
  wire management_mdio_i_n_9;
  wire mdc;
  wire mdio_in;
  wire mdio_out;
  wire mdio_tri;
  wire mgmt_drp_cs;
  wire mgmt_rnw;
  wire [14:0]mgmt_wrdata;
  wire new_tx_test_seed;
  wire out;
  wire [5:0]pcs_ber_count;
  wire \pcs_ber_count_reg[0] ;
  wire [7:0]pcs_error_block_count;
  wire pcs_hi_ber_core_int;
  wire pcs_loopback_core_int;
  wire pcs_reset_clear_core_intr;
  wire pcs_rx_link_up_core_sync_int;
  wire [15:0]pcs_test_pattern_error_count;
  wire \pcs_test_pattern_error_count_reg[0] ;
  wire [2:0]pma_pmd_type;
  wire pma_resetout;
  wire [15:0]prbs31_err_count;
  wire prbs31_rx_enable_core_int;
  wire prbs31_tx_enable_core_int;
  wire [15:0]prbs_err_count;
  wire [4:0]prtad;
  wire [115:0]pseudo_rand_seeds_int;
  wire \q_reg[0] ;
  wire \q_reg[1] ;
  wire [3:0]\q_reg[3] ;
  wire \q_reg[3]_0 ;
  wire [0:0]\rd_data_reg[1] ;
  wire [15:0]rddata_out;
  wire reg_1_0_15__0;
  wire regs_rdack;
  wire regs_wrack;
  wire reset;
  wire resetdone;
  wire signal_detect_sync;
  wire \synch_1/control_reg ;
  wire \synch_1/toggle_reg ;
  wire [0:0]tx_66_fifo;

  ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_drp_ipif drp_ipif_i
       (.D({mgmt_rnw,addr[15:0],management_mdio_i_n_52,mgmt_wrdata[14],management_mdio_i_n_54,management_mdio_i_n_55,mgmt_wrdata[11],management_mdio_i_n_57,management_mdio_i_n_58,management_mdio_i_n_59,management_mdio_i_n_60,management_mdio_i_n_61,mgmt_wrdata[5:0]}),
        .Q({drp_ipif_i_n_36,drp_ipif_i_n_37,drp_ipif_i_n_38,drp_ipif_i_n_39,drp_ipif_i_n_40,drp_ipif_i_n_41,drp_ipif_i_n_42,drp_ipif_i_n_43,drp_ipif_i_n_44,drp_ipif_i_n_45,drp_ipif_i_n_46,drp_ipif_i_n_47,drp_ipif_i_n_48,drp_ipif_i_n_49,drp_ipif_i_n_50,drp_ipif_i_n_51}),
        .control_reg(\synch_1/control_reg ),
        .coreclk(coreclk),
        .dclk(dclk),
        .dclk_reset(dclk_reset),
        .drp_ack(drp_ack),
        .drp_daddr(drp_daddr),
        .drp_den(drp_den),
        .drp_di(drp_di),
        .drp_drdy(drp_drdy),
        .drp_drpdo(drp_drpdo),
        .drp_dwe(drp_dwe),
        .drp_gnt(drp_gnt),
        .drp_req(drp_req),
        .in0(\synch_1/toggle_reg ),
        .mgmt_drp_cs(mgmt_drp_cs),
        .toggle_reg_reg(management_mdio_i_n_22));
  ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_ieee_counters ieee_counters_i
       (.Q(pcs_error_block_count),
        .SR(ieee_registers_i_n_151),
        .coreclk(coreclk),
        .counter_out(counter_out),
        .\pcs_ber_count_reg[0]_0 (\pcs_ber_count_reg[0] ),
        .\pcs_ber_count_reg[5]_0 (pcs_ber_count),
        .pcs_test_pattern_error_count(pcs_test_pattern_error_count),
        .\pcs_test_pattern_error_count_reg[0]_0 (clear_test_pattern_err_count),
        .\pcs_test_pattern_error_count_reg[0]_1 (\pcs_test_pattern_error_count_reg[0] ));
  ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_ieee_registers ieee_registers_i
       (.D({ieee_registers_i_n_154,ieee_registers_i_n_155,ieee_registers_i_n_156,ieee_registers_i_n_157,ieee_registers_i_n_158,ieee_registers_i_n_159,ieee_registers_i_n_160,ieee_registers_i_n_161,ieee_registers_i_n_162,ieee_registers_i_n_163,ieee_registers_i_n_164,ieee_registers_i_n_165,ieee_registers_i_n_166,ieee_registers_i_n_167,ieee_registers_i_n_168,ieee_registers_i_n_169}),
        .Q({addr_reg[19],addr_reg[0]}),
        .SR(ieee_registers_i_n_151),
        .\addr_reg_reg[20]_0 (addr),
        .\addr_reg_reg[9]_0 (ieee_registers_i_n_25),
        .asynch_fifo_i_i_68(asynch_fifo_i_i_68),
        .clear_test_pattern_err_count(clear_test_pattern_err_count),
        .core_in_testmode_wire(core_in_testmode_wire),
        .core_status(core_status),
        .coreclk(coreclk),
        .data_out_reg(SR),
        .fifo_full(fifo_full),
        .in0(in0),
        .loopback_ctrl(loopback_ctrl),
        .new_tx_test_seed(new_tx_test_seed),
        .out(out),
        .pcs_hi_ber_core_int(pcs_hi_ber_core_int),
        .pcs_reset_clear_core_intr(pcs_reset_clear_core_intr),
        .pcs_rx_link_up_core_sync_int(pcs_rx_link_up_core_sync_int),
        .pcs_test_pattern_error_count(pcs_test_pattern_error_count),
        .pma_pmd_type(pma_pmd_type),
        .pma_resetout(pma_resetout),
        .prbs31_rx_enable_core_int(prbs31_rx_enable_core_int),
        .prbs31_tx_enable_core_int(prbs31_tx_enable_core_int),
        .\prbs_err_count_reg[15] (prbs31_err_count),
        .pseudo_rand_seeds_int(pseudo_rand_seeds_int),
        .\q_reg[0] (pcs_loopback_core_int),
        .\q_reg[0]_0 (reg_1_0_15__0),
        .\q_reg[0]_1 (\q_reg[0] ),
        .\q_reg[0]_2 (management_mdio_i_n_50),
        .\q_reg[0]_3 (management_mdio_i_n_45),
        .\q_reg[15] (Q),
        .\q_reg[15]_0 ({data_wr[15],management_mdio_i_n_3,management_mdio_i_n_4,management_mdio_i_n_5,management_mdio_i_n_6,management_mdio_i_n_7,management_mdio_i_n_8,management_mdio_i_n_9,management_mdio_i_n_10,management_mdio_i_n_11,management_mdio_i_n_12,management_mdio_i_n_13,data_wr[3:0]}),
        .\q_reg[15]_1 ({management_mdio_i_n_69,management_mdio_i_n_70,management_mdio_i_n_71,management_mdio_i_n_72,management_mdio_i_n_73,management_mdio_i_n_74,management_mdio_i_n_75,management_mdio_i_n_76,management_mdio_i_n_77,management_mdio_i_n_78,management_mdio_i_n_79,management_mdio_i_n_80,management_mdio_i_n_81,management_mdio_i_n_82,management_mdio_i_n_83,management_mdio_i_n_84}),
        .\q_reg[15]_2 (prbs_err_count),
        .\q_reg[1] (\q_reg[1] ),
        .\q_reg[3] (\q_reg[3]_0 ),
        .\q_reg[5] ({ieee_registers_i_n_143,\q_reg[3] }),
        .\q_reg[5]_0 (pcs_ber_count),
        .\q_reg[7] (pcs_error_block_count),
        .\rd_data_reg[1] (\rd_data_reg[1] ),
        .rdack0(\common_reg_block/rdack0 ),
        .\rddata_out_reg[15] (rddata_out),
        .re_prev_reg(management_mdio_i_n_18),
        .re_prev_reg_0(management_mdio_i_n_68),
        .re_prev_reg_1(management_mdio_i_n_19),
        .re_prev_reg_2(management_mdio_i_n_20),
        .re_prev_reg_3(management_mdio_i_n_44),
        .re_prev_reg_4(management_mdio_i_n_48),
        .re_prev_reg_5(management_mdio_i_n_47),
        .regs_rdack(regs_rdack),
        .regs_wrack(regs_wrack),
        .reset(reset),
        .resetdone(resetdone),
        .signal_detect_sync(signal_detect_sync),
        .tx_66_fifo(tx_66_fifo),
        .wrack0(\common_reg_block/wrack0 ));
  ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_management_mdio management_mdio_i
       (.D({mgmt_rnw,management_mdio_i_n_52,mgmt_wrdata[14],management_mdio_i_n_54,management_mdio_i_n_55,mgmt_wrdata[11],management_mdio_i_n_57,management_mdio_i_n_58,management_mdio_i_n_59,management_mdio_i_n_60,management_mdio_i_n_61,mgmt_wrdata[5:0]}),
        .Q({data_wr[15],management_mdio_i_n_3,management_mdio_i_n_4,management_mdio_i_n_5,management_mdio_i_n_6,management_mdio_i_n_7,management_mdio_i_n_8,management_mdio_i_n_9,management_mdio_i_n_10,management_mdio_i_n_11,management_mdio_i_n_12,management_mdio_i_n_13,data_wr[3:0]}),
        .SR(SR),
        .\addr_reg_reg[0] (management_mdio_i_n_47),
        .\addr_reg_reg[8] ({ieee_registers_i_n_143,\q_reg[3] [2]}),
        .areset_coreclk(areset_coreclk),
        .control_reg(\synch_1/control_reg ),
        .control_reg_reg(management_mdio_i_n_22),
        .coreclk(coreclk),
        .\devad_reg_reg[4] (addr),
        .drp_ack(drp_ack),
        .in0(\synch_1/toggle_reg ),
        .mdc(mdc),
        .mdio_in(mdio_in),
        .mdio_out(mdio_out),
        .mdio_tri(mdio_tri),
        .mgmt_drp_cs(mgmt_drp_cs),
        .\prbs31_err_count_reg[15] (prbs31_err_count),
        .\prbs31_err_count_reg[15]_0 ({drp_ipif_i_n_36,drp_ipif_i_n_37,drp_ipif_i_n_38,drp_ipif_i_n_39,drp_ipif_i_n_40,drp_ipif_i_n_41,drp_ipif_i_n_42,drp_ipif_i_n_43,drp_ipif_i_n_44,drp_ipif_i_n_45,drp_ipif_i_n_46,drp_ipif_i_n_47,drp_ipif_i_n_48,drp_ipif_i_n_49,drp_ipif_i_n_50,drp_ipif_i_n_51}),
        .\prbs31_err_count_reg[15]_1 (rddata_out),
        .prtad(prtad),
        .\q_reg[0] (ieee_registers_i_n_25),
        .\q_reg[0]_0 ({addr_reg[19],addr_reg[0]}),
        .rdack0(\common_reg_block/rdack0 ),
        .read_reg_reg(management_mdio_i_n_44),
        .read_reg_reg_0(management_mdio_i_n_45),
        .read_reg_reg_1(management_mdio_i_n_48),
        .regs_rdack(regs_rdack),
        .regs_wrack(regs_wrack),
        .\state_reg[1] (management_mdio_i_n_20),
        .\state_reg[1]_0 (management_mdio_i_n_50),
        .\state_reg[2] (management_mdio_i_n_18),
        .\state_reg[2]_0 (management_mdio_i_n_19),
        .\state_reg[2]_1 (management_mdio_i_n_68),
        .\state_reg[2]_2 ({management_mdio_i_n_69,management_mdio_i_n_70,management_mdio_i_n_71,management_mdio_i_n_72,management_mdio_i_n_73,management_mdio_i_n_74,management_mdio_i_n_75,management_mdio_i_n_76,management_mdio_i_n_77,management_mdio_i_n_78,management_mdio_i_n_79,management_mdio_i_n_80,management_mdio_i_n_81,management_mdio_i_n_82,management_mdio_i_n_83,management_mdio_i_n_84}),
        .wrack0(\common_reg_block/wrack0 ));
  FDRE \prbs_err_count_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(ieee_registers_i_n_169),
        .Q(prbs_err_count[0]),
        .R(reset));
  FDRE \prbs_err_count_reg[10] 
       (.C(coreclk),
        .CE(1'b1),
        .D(ieee_registers_i_n_159),
        .Q(prbs_err_count[10]),
        .R(reset));
  FDRE \prbs_err_count_reg[11] 
       (.C(coreclk),
        .CE(1'b1),
        .D(ieee_registers_i_n_158),
        .Q(prbs_err_count[11]),
        .R(reset));
  FDRE \prbs_err_count_reg[12] 
       (.C(coreclk),
        .CE(1'b1),
        .D(ieee_registers_i_n_157),
        .Q(prbs_err_count[12]),
        .R(reset));
  FDRE \prbs_err_count_reg[13] 
       (.C(coreclk),
        .CE(1'b1),
        .D(ieee_registers_i_n_156),
        .Q(prbs_err_count[13]),
        .R(reset));
  FDRE \prbs_err_count_reg[14] 
       (.C(coreclk),
        .CE(1'b1),
        .D(ieee_registers_i_n_155),
        .Q(prbs_err_count[14]),
        .R(reset));
  FDRE \prbs_err_count_reg[15] 
       (.C(coreclk),
        .CE(1'b1),
        .D(ieee_registers_i_n_154),
        .Q(prbs_err_count[15]),
        .R(reset));
  FDRE \prbs_err_count_reg[1] 
       (.C(coreclk),
        .CE(1'b1),
        .D(ieee_registers_i_n_168),
        .Q(prbs_err_count[1]),
        .R(reset));
  FDRE \prbs_err_count_reg[2] 
       (.C(coreclk),
        .CE(1'b1),
        .D(ieee_registers_i_n_167),
        .Q(prbs_err_count[2]),
        .R(reset));
  FDRE \prbs_err_count_reg[3] 
       (.C(coreclk),
        .CE(1'b1),
        .D(ieee_registers_i_n_166),
        .Q(prbs_err_count[3]),
        .R(reset));
  FDRE \prbs_err_count_reg[4] 
       (.C(coreclk),
        .CE(1'b1),
        .D(ieee_registers_i_n_165),
        .Q(prbs_err_count[4]),
        .R(reset));
  FDRE \prbs_err_count_reg[5] 
       (.C(coreclk),
        .CE(1'b1),
        .D(ieee_registers_i_n_164),
        .Q(prbs_err_count[5]),
        .R(reset));
  FDRE \prbs_err_count_reg[6] 
       (.C(coreclk),
        .CE(1'b1),
        .D(ieee_registers_i_n_163),
        .Q(prbs_err_count[6]),
        .R(reset));
  FDRE \prbs_err_count_reg[7] 
       (.C(coreclk),
        .CE(1'b1),
        .D(ieee_registers_i_n_162),
        .Q(prbs_err_count[7]),
        .R(reset));
  FDRE \prbs_err_count_reg[8] 
       (.C(coreclk),
        .CE(1'b1),
        .D(ieee_registers_i_n_161),
        .Q(prbs_err_count[8]),
        .R(reset));
  FDRE \prbs_err_count_reg[9] 
       (.C(coreclk),
        .CE(1'b1),
        .D(ieee_registers_i_n_160),
        .Q(prbs_err_count[9]),
        .R(reset));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_15_mdio_interface" *) 
module ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_mdio_interface
   (mdio_out,
    mdio_tri,
    mdio_we,
    mdio_rd,
    Q,
    mdio_we_rising0,
    \devad_reg_reg[4]_0 ,
    p_0_in,
    areset_coreclk,
    mdc_rising,
    out,
    coreclk,
    drp_ack,
    mgmt_drp_cs,
    regs_rdack,
    mdio_we_reg,
    prtad,
    \addr_reg_reg[8] ,
    read_reg,
    D);
  output mdio_out;
  output mdio_tri;
  output mdio_we;
  output mdio_rd;
  output [15:0]Q;
  output mdio_we_rising0;
  output [20:0]\devad_reg_reg[4]_0 ;
  output p_0_in;
  input areset_coreclk;
  input mdc_rising;
  input out;
  input coreclk;
  input drp_ack;
  input mgmt_drp_cs;
  input regs_rdack;
  input mdio_we_reg;
  input [4:0]prtad;
  input [1:0]\addr_reg_reg[8] ;
  input read_reg;
  input [15:0]D;

  wire [15:0]D;
  wire \FSM_onehot_state[0]_i_1_n_0 ;
  wire \FSM_onehot_state[2]_i_1_n_0 ;
  wire \FSM_onehot_state[3]_i_1_n_0 ;
  wire \FSM_onehot_state[4]_i_1_n_0 ;
  wire \FSM_onehot_state[4]_i_2_n_0 ;
  wire \FSM_onehot_state[5]_i_1_n_0 ;
  wire \FSM_onehot_state[6]_i_1_n_0 ;
  wire \FSM_onehot_state[6]_i_2_n_0 ;
  wire \FSM_onehot_state[8]_i_1_n_0 ;
  wire \FSM_onehot_state[8]_i_2_n_0 ;
  wire \FSM_onehot_state[8]_i_3_n_0 ;
  wire \FSM_onehot_state[9]_i_1_n_0 ;
  wire \FSM_onehot_state_reg_n_0_[0] ;
  wire \FSM_onehot_state_reg_n_0_[1] ;
  wire \FSM_onehot_state_reg_n_0_[2] ;
  wire \FSM_onehot_state_reg_n_0_[3] ;
  wire \FSM_onehot_state_reg_n_0_[4] ;
  wire \FSM_onehot_state_reg_n_0_[5] ;
  wire \FSM_onehot_state_reg_n_0_[6] ;
  wire \FSM_onehot_state_reg_n_0_[7] ;
  wire \FSM_onehot_state_reg_n_0_[9] ;
  wire [15:0]Q;
  wire \addr_reg[16]_i_2_n_0 ;
  wire \addr_reg[17]_i_2_n_0 ;
  wire \addr_reg[17]_i_3_n_0 ;
  wire \addr_reg[17]_i_4_n_0 ;
  wire \addr_reg[17]_i_5_n_0 ;
  wire \addr_reg[17]_i_6_n_0 ;
  wire \addr_reg[17]_i_7_n_0 ;
  wire [1:0]\addr_reg_reg[8] ;
  wire [15:0]an_addr_int;
  wire [15:1]an_addr_int0;
  wire an_addr_int0_carry__0_n_0;
  wire an_addr_int0_carry__0_n_1;
  wire an_addr_int0_carry__0_n_2;
  wire an_addr_int0_carry__0_n_3;
  wire an_addr_int0_carry__1_n_0;
  wire an_addr_int0_carry__1_n_1;
  wire an_addr_int0_carry__1_n_2;
  wire an_addr_int0_carry__1_n_3;
  wire an_addr_int0_carry__2_n_2;
  wire an_addr_int0_carry__2_n_3;
  wire an_addr_int0_carry_n_0;
  wire an_addr_int0_carry_n_1;
  wire an_addr_int0_carry_n_2;
  wire an_addr_int0_carry_n_3;
  wire \an_addr_int[0]_i_1_n_0 ;
  wire \an_addr_int[10]_i_1_n_0 ;
  wire \an_addr_int[11]_i_1_n_0 ;
  wire \an_addr_int[12]_i_1_n_0 ;
  wire \an_addr_int[13]_i_1_n_0 ;
  wire \an_addr_int[14]_i_1_n_0 ;
  wire \an_addr_int[15]_i_2_n_0 ;
  wire \an_addr_int[15]_i_3_n_0 ;
  wire \an_addr_int[15]_i_4_n_0 ;
  wire \an_addr_int[15]_i_5_n_0 ;
  wire \an_addr_int[15]_i_6_n_0 ;
  wire \an_addr_int[15]_i_7_n_0 ;
  wire \an_addr_int[1]_i_1_n_0 ;
  wire \an_addr_int[2]_i_1_n_0 ;
  wire \an_addr_int[3]_i_1_n_0 ;
  wire \an_addr_int[4]_i_1_n_0 ;
  wire \an_addr_int[5]_i_1_n_0 ;
  wire \an_addr_int[6]_i_1_n_0 ;
  wire \an_addr_int[7]_i_1_n_0 ;
  wire \an_addr_int[8]_i_1_n_0 ;
  wire \an_addr_int[9]_i_1_n_0 ;
  wire an_addr_int_1;
  wire areset_coreclk;
  wire bit_count;
  wire \bit_count[3]_i_2_n_0 ;
  wire \bit_count[4]_i_3_n_0 ;
  wire \bit_count[4]_i_4_n_0 ;
  wire \bit_count[4]_i_5_n_0 ;
  wire [4:0]bit_count_reg;
  wire coreclk;
  wire [15:0]data_captured;
  wire \data_captured[15]_i_1_n_0 ;
  wire data_captured_0;
  wire devad_match;
  wire devad_match0;
  wire devad_match_i_2_n_0;
  wire devad_match_i_3_n_0;
  wire devad_match_i_4_n_0;
  wire [4:0]devad_reg;
  wire devad_reg0;
  wire [20:0]\devad_reg_reg[4]_0 ;
  wire drp_ack;
  wire indirect_read_i_2_n_0;
  wire indirect_read_i_3_n_0;
  wire indirect_read_i_4_n_0;
  wire mdc_just_rose;
  wire mdc_rising;
  wire mdc_rising_reg__0;
  wire mdio_in_reg;
  wire mdio_out;
  wire mdio_out_i_2_n_0;
  wire mdio_out_int;
  wire mdio_rd;
  wire mdio_tri;
  wire mdio_tri_int;
  wire mdio_we;
  wire mdio_we_reg;
  wire mdio_we_rising0;
  wire mgmt_drp_cs;
  wire [1:0]opcode;
  wire opcode0;
  wire \opcode[0]_i_1_n_0 ;
  wire \opcode[1]_i_1_n_0 ;
  wire out;
  wire p_0_in;
  wire [4:0]p_0_in__0;
  wire p_1_in;
  wire [15:0]pcs_addr;
  wire pcs_addr_int;
  wire [15:1]pcs_addr_int0;
  wire pcs_addr_int0_carry__0_n_0;
  wire pcs_addr_int0_carry__0_n_1;
  wire pcs_addr_int0_carry__0_n_2;
  wire pcs_addr_int0_carry__0_n_3;
  wire pcs_addr_int0_carry__1_n_0;
  wire pcs_addr_int0_carry__1_n_1;
  wire pcs_addr_int0_carry__1_n_2;
  wire pcs_addr_int0_carry__1_n_3;
  wire pcs_addr_int0_carry__2_n_2;
  wire pcs_addr_int0_carry__2_n_3;
  wire pcs_addr_int0_carry_n_0;
  wire pcs_addr_int0_carry_n_1;
  wire pcs_addr_int0_carry_n_2;
  wire pcs_addr_int0_carry_n_3;
  wire \pcs_addr_int[0]_i_1_n_0 ;
  wire \pcs_addr_int[10]_i_1_n_0 ;
  wire \pcs_addr_int[11]_i_1_n_0 ;
  wire \pcs_addr_int[12]_i_1_n_0 ;
  wire \pcs_addr_int[13]_i_1_n_0 ;
  wire \pcs_addr_int[14]_i_1_n_0 ;
  wire \pcs_addr_int[15]_i_2_n_0 ;
  wire \pcs_addr_int[15]_i_3_n_0 ;
  wire \pcs_addr_int[15]_i_4_n_0 ;
  wire \pcs_addr_int[15]_i_5_n_0 ;
  wire \pcs_addr_int[15]_i_6_n_0 ;
  wire \pcs_addr_int[15]_i_7_n_0 ;
  wire \pcs_addr_int[15]_i_8_n_0 ;
  wire \pcs_addr_int[1]_i_1_n_0 ;
  wire \pcs_addr_int[2]_i_1_n_0 ;
  wire \pcs_addr_int[3]_i_1_n_0 ;
  wire \pcs_addr_int[4]_i_1_n_0 ;
  wire \pcs_addr_int[5]_i_1_n_0 ;
  wire \pcs_addr_int[6]_i_1_n_0 ;
  wire \pcs_addr_int[7]_i_1_n_0 ;
  wire \pcs_addr_int[8]_i_1_n_0 ;
  wire \pcs_addr_int[9]_i_1_n_0 ;
  wire [15:0]pma_addr_int;
  wire [15:1]pma_addr_int0;
  wire pma_addr_int0_carry__0_n_0;
  wire pma_addr_int0_carry__0_n_1;
  wire pma_addr_int0_carry__0_n_2;
  wire pma_addr_int0_carry__0_n_3;
  wire pma_addr_int0_carry__1_n_0;
  wire pma_addr_int0_carry__1_n_1;
  wire pma_addr_int0_carry__1_n_2;
  wire pma_addr_int0_carry__1_n_3;
  wire pma_addr_int0_carry__2_n_2;
  wire pma_addr_int0_carry__2_n_3;
  wire pma_addr_int0_carry_n_0;
  wire pma_addr_int0_carry_n_1;
  wire pma_addr_int0_carry_n_2;
  wire pma_addr_int0_carry_n_3;
  wire \pma_addr_int[0]_i_1_n_0 ;
  wire \pma_addr_int[10]_i_1_n_0 ;
  wire \pma_addr_int[11]_i_1_n_0 ;
  wire \pma_addr_int[12]_i_1_n_0 ;
  wire \pma_addr_int[13]_i_1_n_0 ;
  wire \pma_addr_int[14]_i_1_n_0 ;
  wire \pma_addr_int[15]_i_2_n_0 ;
  wire \pma_addr_int[15]_i_3_n_0 ;
  wire \pma_addr_int[15]_i_4_n_0 ;
  wire \pma_addr_int[15]_i_5_n_0 ;
  wire \pma_addr_int[15]_i_6_n_0 ;
  wire \pma_addr_int[1]_i_1_n_0 ;
  wire \pma_addr_int[2]_i_1_n_0 ;
  wire \pma_addr_int[3]_i_1_n_0 ;
  wire \pma_addr_int[4]_i_1_n_0 ;
  wire \pma_addr_int[5]_i_1_n_0 ;
  wire \pma_addr_int[6]_i_1_n_0 ;
  wire \pma_addr_int[7]_i_1_n_0 ;
  wire \pma_addr_int[8]_i_1_n_0 ;
  wire \pma_addr_int[9]_i_1_n_0 ;
  wire pma_addr_int_2;
  wire [4:0]prtad;
  wire rd0;
  wire read_reg;
  wire regs_rdack;
  wire \shift_reg[0]_i_1_n_0 ;
  wire \shift_reg[10]_i_1_n_0 ;
  wire \shift_reg[11]_i_1_n_0 ;
  wire \shift_reg[12]_i_1_n_0 ;
  wire \shift_reg[13]_i_1_n_0 ;
  wire \shift_reg[14]_i_1_n_0 ;
  wire \shift_reg[15]_i_1_n_0 ;
  wire \shift_reg[1]_i_1_n_0 ;
  wire \shift_reg[2]_i_1_n_0 ;
  wire \shift_reg[3]_i_1_n_0 ;
  wire \shift_reg[4]_i_1_n_0 ;
  wire \shift_reg[5]_i_1_n_0 ;
  wire \shift_reg[6]_i_1_n_0 ;
  wire \shift_reg[7]_i_1_n_0 ;
  wire \shift_reg[8]_i_1_n_0 ;
  wire \shift_reg[9]_i_1_n_0 ;
  wire we0_out;
  wire [3:2]NLW_an_addr_int0_carry__2_CO_UNCONNECTED;
  wire [3:3]NLW_an_addr_int0_carry__2_O_UNCONNECTED;
  wire [3:2]NLW_pcs_addr_int0_carry__2_CO_UNCONNECTED;
  wire [3:3]NLW_pcs_addr_int0_carry__2_O_UNCONNECTED;
  wire [3:2]NLW_pma_addr_int0_carry__2_CO_UNCONNECTED;
  wire [3:3]NLW_pma_addr_int0_carry__2_O_UNCONNECTED;

  LUT2 #(
    .INIT(4'h2)) 
    \FSM_onehot_state[0]_i_1 
       (.I0(\FSM_onehot_state_reg_n_0_[3] ),
        .I1(mdio_in_reg),
        .O(\FSM_onehot_state[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair145" *) 
  LUT3 #(
    .INIT(8'hEA)) 
    \FSM_onehot_state[2]_i_1 
       (.I0(\FSM_onehot_state_reg_n_0_[1] ),
        .I1(mdio_out_i_2_n_0),
        .I2(\FSM_onehot_state_reg_n_0_[2] ),
        .O(\FSM_onehot_state[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair151" *) 
  LUT3 #(
    .INIT(8'h04)) 
    \FSM_onehot_state[3]_i_1 
       (.I0(mdio_in_reg),
        .I1(\FSM_onehot_state_reg_n_0_[5] ),
        .I2(mdio_out_i_2_n_0),
        .O(\FSM_onehot_state[3]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hF1)) 
    \FSM_onehot_state[4]_i_1 
       (.I0(\FSM_onehot_state[6]_i_2_n_0 ),
        .I1(\FSM_onehot_state[8]_i_2_n_0 ),
        .I2(\FSM_onehot_state[4]_i_2_n_0 ),
        .O(\FSM_onehot_state[4]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFE0EFE0EFFFFFC0C)) 
    \FSM_onehot_state[4]_i_2 
       (.I0(\FSM_onehot_state_reg_n_0_[5] ),
        .I1(\FSM_onehot_state_reg_n_0_[4] ),
        .I2(mdio_in_reg),
        .I3(\FSM_onehot_state_reg_n_0_[3] ),
        .I4(p_1_in),
        .I5(mdio_out_i_2_n_0),
        .O(\FSM_onehot_state[4]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair151" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    \FSM_onehot_state[5]_i_1 
       (.I0(mdio_in_reg),
        .I1(\FSM_onehot_state_reg_n_0_[5] ),
        .I2(\FSM_onehot_state_reg_n_0_[4] ),
        .O(\FSM_onehot_state[5]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair121" *) 
  LUT3 #(
    .INIT(8'h02)) 
    \FSM_onehot_state[6]_i_1 
       (.I0(\FSM_onehot_state[8]_i_2_n_0 ),
        .I1(\FSM_onehot_state[6]_i_2_n_0 ),
        .I2(opcode[1]),
        .O(\FSM_onehot_state[6]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFEFFFFFFFF)) 
    \FSM_onehot_state[6]_i_2 
       (.I0(bit_count_reg[3]),
        .I1(bit_count_reg[0]),
        .I2(bit_count_reg[1]),
        .I3(bit_count_reg[2]),
        .I4(bit_count_reg[4]),
        .I5(\FSM_onehot_state_reg_n_0_[9] ),
        .O(\FSM_onehot_state[6]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFF80FF00FF80)) 
    \FSM_onehot_state[8]_i_1 
       (.I0(\FSM_onehot_state[8]_i_2_n_0 ),
        .I1(opcode[1]),
        .I2(\FSM_onehot_state_reg_n_0_[9] ),
        .I3(\FSM_onehot_state_reg_n_0_[7] ),
        .I4(mdio_out_i_2_n_0),
        .I5(p_1_in),
        .O(\FSM_onehot_state[8]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0082000000000082)) 
    \FSM_onehot_state[8]_i_2 
       (.I0(devad_match),
        .I1(prtad[4]),
        .I2(Q[8]),
        .I3(\FSM_onehot_state[8]_i_3_n_0 ),
        .I4(Q[7]),
        .I5(prtad[3]),
        .O(\FSM_onehot_state[8]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h6FF6FFFFFFFF6FF6)) 
    \FSM_onehot_state[8]_i_3 
       (.I0(prtad[0]),
        .I1(Q[4]),
        .I2(Q[5]),
        .I3(prtad[1]),
        .I4(Q[6]),
        .I5(prtad[2]),
        .O(\FSM_onehot_state[8]_i_3_n_0 ));
  LUT3 #(
    .INIT(8'hE2)) 
    \FSM_onehot_state[9]_i_1 
       (.I0(\FSM_onehot_state_reg_n_0_[2] ),
        .I1(mdio_out_i_2_n_0),
        .I2(\FSM_onehot_state_reg_n_0_[9] ),
        .O(\FSM_onehot_state[9]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "OPCODE_1:0000000001,OPCODE_2:0000000010,START:0000001000,PREAMBLE:0000100000,IDLE:0000010000,ADDR_DATA:0100000000,TA_1:0001000000,TA_2:0010000000,LD_DEVAD:1000000000,LD_PRTAD:0000000100" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[0] 
       (.C(coreclk),
        .CE(mdc_rising),
        .D(\FSM_onehot_state[0]_i_1_n_0 ),
        .Q(\FSM_onehot_state_reg_n_0_[0] ),
        .R(areset_coreclk));
  (* FSM_ENCODED_STATES = "OPCODE_1:0000000001,OPCODE_2:0000000010,START:0000001000,PREAMBLE:0000100000,IDLE:0000010000,ADDR_DATA:0100000000,TA_1:0001000000,TA_2:0010000000,LD_DEVAD:1000000000,LD_PRTAD:0000000100" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[1] 
       (.C(coreclk),
        .CE(mdc_rising),
        .D(\FSM_onehot_state_reg_n_0_[0] ),
        .Q(\FSM_onehot_state_reg_n_0_[1] ),
        .R(areset_coreclk));
  (* FSM_ENCODED_STATES = "OPCODE_1:0000000001,OPCODE_2:0000000010,START:0000001000,PREAMBLE:0000100000,IDLE:0000010000,ADDR_DATA:0100000000,TA_1:0001000000,TA_2:0010000000,LD_DEVAD:1000000000,LD_PRTAD:0000000100" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[2] 
       (.C(coreclk),
        .CE(mdc_rising),
        .D(\FSM_onehot_state[2]_i_1_n_0 ),
        .Q(\FSM_onehot_state_reg_n_0_[2] ),
        .R(areset_coreclk));
  (* FSM_ENCODED_STATES = "OPCODE_1:0000000001,OPCODE_2:0000000010,START:0000001000,PREAMBLE:0000100000,IDLE:0000010000,ADDR_DATA:0100000000,TA_1:0001000000,TA_2:0010000000,LD_DEVAD:1000000000,LD_PRTAD:0000000100" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[3] 
       (.C(coreclk),
        .CE(mdc_rising),
        .D(\FSM_onehot_state[3]_i_1_n_0 ),
        .Q(\FSM_onehot_state_reg_n_0_[3] ),
        .R(areset_coreclk));
  (* FSM_ENCODED_STATES = "OPCODE_1:0000000001,OPCODE_2:0000000010,START:0000001000,PREAMBLE:0000100000,IDLE:0000010000,ADDR_DATA:0100000000,TA_1:0001000000,TA_2:0010000000,LD_DEVAD:1000000000,LD_PRTAD:0000000100" *) 
  FDSE #(
    .INIT(1'b1)) 
    \FSM_onehot_state_reg[4] 
       (.C(coreclk),
        .CE(mdc_rising),
        .D(\FSM_onehot_state[4]_i_1_n_0 ),
        .Q(\FSM_onehot_state_reg_n_0_[4] ),
        .S(areset_coreclk));
  (* FSM_ENCODED_STATES = "OPCODE_1:0000000001,OPCODE_2:0000000010,START:0000001000,PREAMBLE:0000100000,IDLE:0000010000,ADDR_DATA:0100000000,TA_1:0001000000,TA_2:0010000000,LD_DEVAD:1000000000,LD_PRTAD:0000000100" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[5] 
       (.C(coreclk),
        .CE(mdc_rising),
        .D(\FSM_onehot_state[5]_i_1_n_0 ),
        .Q(\FSM_onehot_state_reg_n_0_[5] ),
        .R(areset_coreclk));
  (* FSM_ENCODED_STATES = "OPCODE_1:0000000001,OPCODE_2:0000000010,START:0000001000,PREAMBLE:0000100000,IDLE:0000010000,ADDR_DATA:0100000000,TA_1:0001000000,TA_2:0010000000,LD_DEVAD:1000000000,LD_PRTAD:0000000100" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[6] 
       (.C(coreclk),
        .CE(mdc_rising),
        .D(\FSM_onehot_state[6]_i_1_n_0 ),
        .Q(\FSM_onehot_state_reg_n_0_[6] ),
        .R(areset_coreclk));
  (* FSM_ENCODED_STATES = "OPCODE_1:0000000001,OPCODE_2:0000000010,START:0000001000,PREAMBLE:0000100000,IDLE:0000010000,ADDR_DATA:0100000000,TA_1:0001000000,TA_2:0010000000,LD_DEVAD:1000000000,LD_PRTAD:0000000100" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[7] 
       (.C(coreclk),
        .CE(mdc_rising),
        .D(\FSM_onehot_state_reg_n_0_[6] ),
        .Q(\FSM_onehot_state_reg_n_0_[7] ),
        .R(areset_coreclk));
  (* FSM_ENCODED_STATES = "OPCODE_1:0000000001,OPCODE_2:0000000010,START:0000001000,PREAMBLE:0000100000,IDLE:0000010000,ADDR_DATA:0100000000,TA_1:0001000000,TA_2:0010000000,LD_DEVAD:1000000000,LD_PRTAD:0000000100" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[8] 
       (.C(coreclk),
        .CE(mdc_rising),
        .D(\FSM_onehot_state[8]_i_1_n_0 ),
        .Q(p_1_in),
        .R(areset_coreclk));
  (* FSM_ENCODED_STATES = "OPCODE_1:0000000001,OPCODE_2:0000000010,START:0000001000,PREAMBLE:0000100000,IDLE:0000010000,ADDR_DATA:0100000000,TA_1:0001000000,TA_2:0010000000,LD_DEVAD:1000000000,LD_PRTAD:0000000100" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[9] 
       (.C(coreclk),
        .CE(mdc_rising),
        .D(\FSM_onehot_state[9]_i_1_n_0 ),
        .Q(\FSM_onehot_state_reg_n_0_[9] ),
        .R(areset_coreclk));
  LUT6 #(
    .INIT(64'h2F20FFFF2F200000)) 
    \addr_reg[0]_i_1 
       (.I0(pcs_addr[0]),
        .I1(\addr_reg[17]_i_2_n_0 ),
        .I2(devad_match_i_2_n_0),
        .I3(pma_addr_int[0]),
        .I4(\addr_reg[17]_i_3_n_0 ),
        .I5(an_addr_int[0]),
        .O(\devad_reg_reg[4]_0 [0]));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \addr_reg[10]_i_1 
       (.I0(pcs_addr[10]),
        .I1(devad_match_i_2_n_0),
        .I2(pma_addr_int[10]),
        .I3(\addr_reg[17]_i_3_n_0 ),
        .I4(an_addr_int[10]),
        .O(\devad_reg_reg[4]_0 [10]));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \addr_reg[11]_i_1 
       (.I0(pcs_addr[11]),
        .I1(devad_match_i_2_n_0),
        .I2(pma_addr_int[11]),
        .I3(\addr_reg[17]_i_3_n_0 ),
        .I4(an_addr_int[11]),
        .O(\devad_reg_reg[4]_0 [11]));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \addr_reg[12]_i_1 
       (.I0(pcs_addr[12]),
        .I1(devad_match_i_2_n_0),
        .I2(pma_addr_int[12]),
        .I3(\addr_reg[17]_i_3_n_0 ),
        .I4(an_addr_int[12]),
        .O(\devad_reg_reg[4]_0 [12]));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \addr_reg[13]_i_1 
       (.I0(pcs_addr[13]),
        .I1(devad_match_i_2_n_0),
        .I2(pma_addr_int[13]),
        .I3(\addr_reg[17]_i_3_n_0 ),
        .I4(an_addr_int[13]),
        .O(\devad_reg_reg[4]_0 [13]));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \addr_reg[14]_i_1 
       (.I0(pcs_addr[14]),
        .I1(devad_match_i_2_n_0),
        .I2(pma_addr_int[14]),
        .I3(\addr_reg[17]_i_3_n_0 ),
        .I4(an_addr_int[14]),
        .O(\devad_reg_reg[4]_0 [14]));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \addr_reg[15]_i_1 
       (.I0(pcs_addr[15]),
        .I1(devad_match_i_2_n_0),
        .I2(pma_addr_int[15]),
        .I3(\addr_reg[17]_i_3_n_0 ),
        .I4(an_addr_int[15]),
        .O(\devad_reg_reg[4]_0 [15]));
  LUT6 #(
    .INIT(64'h7F007F7F7F000000)) 
    \addr_reg[16]_i_1 
       (.I0(\addr_reg[17]_i_2_n_0 ),
        .I1(devad_match_i_2_n_0),
        .I2(\addr_reg[16]_i_2_n_0 ),
        .I3(devad_reg[0]),
        .I4(\FSM_onehot_state[6]_i_2_n_0 ),
        .I5(mdio_in_reg),
        .O(\devad_reg_reg[4]_0 [16]));
  LUT6 #(
    .INIT(64'h0000101000051015)) 
    \addr_reg[16]_i_2 
       (.I0(\devad_reg_reg[4]_0 [18]),
        .I1(devad_reg[3]),
        .I2(\FSM_onehot_state[6]_i_2_n_0 ),
        .I3(Q[2]),
        .I4(devad_reg[4]),
        .I5(Q[3]),
        .O(\addr_reg[16]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'h70)) 
    \addr_reg[17]_i_1 
       (.I0(\addr_reg[17]_i_2_n_0 ),
        .I1(\addr_reg[17]_i_3_n_0 ),
        .I2(devad_match_i_2_n_0),
        .O(\devad_reg_reg[4]_0 [17]));
  LUT6 #(
    .INIT(64'h0000000000010000)) 
    \addr_reg[17]_i_2 
       (.I0(read_reg),
        .I1(mdio_rd),
        .I2(\addr_reg[17]_i_4_n_0 ),
        .I3(\addr_reg[17]_i_5_n_0 ),
        .I4(\addr_reg_reg[8] [1]),
        .I5(\addr_reg_reg[8] [0]),
        .O(\addr_reg[17]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h1111050000000500)) 
    \addr_reg[17]_i_3 
       (.I0(devad_match_i_4_n_0),
        .I1(devad_reg[2]),
        .I2(Q[1]),
        .I3(mdio_in_reg),
        .I4(\FSM_onehot_state[6]_i_2_n_0 ),
        .I5(devad_reg[0]),
        .O(\addr_reg[17]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \addr_reg[17]_i_4 
       (.I0(\addr_reg[17]_i_6_n_0 ),
        .I1(pcs_addr[6]),
        .I2(pcs_addr[7]),
        .I3(pcs_addr[4]),
        .I4(pcs_addr[2]),
        .O(\addr_reg[17]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \addr_reg[17]_i_5 
       (.I0(pcs_addr[10]),
        .I1(pcs_addr[11]),
        .I2(pcs_addr[8]),
        .I3(pcs_addr[9]),
        .I4(\addr_reg[17]_i_7_n_0 ),
        .O(\addr_reg[17]_i_5_n_0 ));
  LUT4 #(
    .INIT(16'h7FFF)) 
    \addr_reg[17]_i_6 
       (.I0(pcs_addr[5]),
        .I1(pcs_addr[3]),
        .I2(pcs_addr[1]),
        .I3(pcs_addr[0]),
        .O(\addr_reg[17]_i_6_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \addr_reg[17]_i_7 
       (.I0(pcs_addr[13]),
        .I1(pcs_addr[12]),
        .I2(pcs_addr[14]),
        .I3(pcs_addr[15]),
        .O(\addr_reg[17]_i_7_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair123" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \addr_reg[18]_i_1 
       (.I0(devad_reg[2]),
        .I1(\FSM_onehot_state[6]_i_2_n_0 ),
        .I2(Q[1]),
        .O(\devad_reg_reg[4]_0 [18]));
  (* SOFT_HLUTNM = "soft_lutpair122" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \addr_reg[19]_i_1 
       (.I0(devad_reg[3]),
        .I1(\FSM_onehot_state[6]_i_2_n_0 ),
        .I2(Q[2]),
        .O(\devad_reg_reg[4]_0 [19]));
  LUT6 #(
    .INIT(64'h2F20FFFF2F200000)) 
    \addr_reg[1]_i_1 
       (.I0(pcs_addr[1]),
        .I1(\addr_reg[17]_i_2_n_0 ),
        .I2(devad_match_i_2_n_0),
        .I3(pma_addr_int[1]),
        .I4(\addr_reg[17]_i_3_n_0 ),
        .I5(an_addr_int[1]),
        .O(\devad_reg_reg[4]_0 [1]));
  (* SOFT_HLUTNM = "soft_lutpair120" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \addr_reg[20]_i_1 
       (.I0(devad_reg[4]),
        .I1(\FSM_onehot_state[6]_i_2_n_0 ),
        .I2(Q[3]),
        .O(\devad_reg_reg[4]_0 [20]));
  LUT6 #(
    .INIT(64'hEFE0FFFFEFE00000)) 
    \addr_reg[2]_i_1 
       (.I0(pcs_addr[2]),
        .I1(\addr_reg[17]_i_2_n_0 ),
        .I2(devad_match_i_2_n_0),
        .I3(pma_addr_int[2]),
        .I4(\addr_reg[17]_i_3_n_0 ),
        .I5(an_addr_int[2]),
        .O(\devad_reg_reg[4]_0 [2]));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \addr_reg[3]_i_1 
       (.I0(pcs_addr[3]),
        .I1(devad_match_i_2_n_0),
        .I2(pma_addr_int[3]),
        .I3(\addr_reg[17]_i_3_n_0 ),
        .I4(an_addr_int[3]),
        .O(\devad_reg_reg[4]_0 [3]));
  LUT6 #(
    .INIT(64'hEFE0FFFFEFE00000)) 
    \addr_reg[4]_i_1 
       (.I0(pcs_addr[4]),
        .I1(\addr_reg[17]_i_2_n_0 ),
        .I2(devad_match_i_2_n_0),
        .I3(pma_addr_int[4]),
        .I4(\addr_reg[17]_i_3_n_0 ),
        .I5(an_addr_int[4]),
        .O(\devad_reg_reg[4]_0 [4]));
  LUT6 #(
    .INIT(64'h2F20FFFF2F200000)) 
    \addr_reg[5]_i_1 
       (.I0(pcs_addr[5]),
        .I1(\addr_reg[17]_i_2_n_0 ),
        .I2(devad_match_i_2_n_0),
        .I3(pma_addr_int[5]),
        .I4(\addr_reg[17]_i_3_n_0 ),
        .I5(an_addr_int[5]),
        .O(\devad_reg_reg[4]_0 [5]));
  LUT6 #(
    .INIT(64'hEFE0FFFFEFE00000)) 
    \addr_reg[6]_i_1 
       (.I0(pcs_addr[6]),
        .I1(\addr_reg[17]_i_2_n_0 ),
        .I2(devad_match_i_2_n_0),
        .I3(pma_addr_int[6]),
        .I4(\addr_reg[17]_i_3_n_0 ),
        .I5(an_addr_int[6]),
        .O(\devad_reg_reg[4]_0 [6]));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \addr_reg[7]_i_1 
       (.I0(pcs_addr[7]),
        .I1(devad_match_i_2_n_0),
        .I2(pma_addr_int[7]),
        .I3(\addr_reg[17]_i_3_n_0 ),
        .I4(an_addr_int[7]),
        .O(\devad_reg_reg[4]_0 [7]));
  LUT6 #(
    .INIT(64'hEFE0FFFFEFE00000)) 
    \addr_reg[8]_i_1 
       (.I0(pcs_addr[8]),
        .I1(\addr_reg[17]_i_2_n_0 ),
        .I2(devad_match_i_2_n_0),
        .I3(pma_addr_int[8]),
        .I4(\addr_reg[17]_i_3_n_0 ),
        .I5(an_addr_int[8]),
        .O(\devad_reg_reg[4]_0 [8]));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \addr_reg[9]_i_1 
       (.I0(pcs_addr[9]),
        .I1(devad_match_i_2_n_0),
        .I2(pma_addr_int[9]),
        .I3(\addr_reg[17]_i_3_n_0 ),
        .I4(an_addr_int[9]),
        .O(\devad_reg_reg[4]_0 [9]));
  CARRY4 an_addr_int0_carry
       (.CI(1'b0),
        .CO({an_addr_int0_carry_n_0,an_addr_int0_carry_n_1,an_addr_int0_carry_n_2,an_addr_int0_carry_n_3}),
        .CYINIT(an_addr_int[0]),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(an_addr_int0[4:1]),
        .S(an_addr_int[4:1]));
  CARRY4 an_addr_int0_carry__0
       (.CI(an_addr_int0_carry_n_0),
        .CO({an_addr_int0_carry__0_n_0,an_addr_int0_carry__0_n_1,an_addr_int0_carry__0_n_2,an_addr_int0_carry__0_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(an_addr_int0[8:5]),
        .S(an_addr_int[8:5]));
  CARRY4 an_addr_int0_carry__1
       (.CI(an_addr_int0_carry__0_n_0),
        .CO({an_addr_int0_carry__1_n_0,an_addr_int0_carry__1_n_1,an_addr_int0_carry__1_n_2,an_addr_int0_carry__1_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(an_addr_int0[12:9]),
        .S(an_addr_int[12:9]));
  CARRY4 an_addr_int0_carry__2
       (.CI(an_addr_int0_carry__1_n_0),
        .CO({NLW_an_addr_int0_carry__2_CO_UNCONNECTED[3:2],an_addr_int0_carry__2_n_2,an_addr_int0_carry__2_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({NLW_an_addr_int0_carry__2_O_UNCONNECTED[3],an_addr_int0[15:13]}),
        .S({1'b0,an_addr_int[15:13]}));
  (* SOFT_HLUTNM = "soft_lutpair150" *) 
  LUT3 #(
    .INIT(8'h74)) 
    \an_addr_int[0]_i_1 
       (.I0(an_addr_int[0]),
        .I1(opcode[1]),
        .I2(mdio_in_reg),
        .O(\an_addr_int[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair127" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \an_addr_int[10]_i_1 
       (.I0(an_addr_int0[10]),
        .I1(opcode[1]),
        .I2(Q[9]),
        .O(\an_addr_int[10]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair142" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \an_addr_int[11]_i_1 
       (.I0(an_addr_int0[11]),
        .I1(opcode[1]),
        .I2(Q[10]),
        .O(\an_addr_int[11]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair133" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \an_addr_int[12]_i_1 
       (.I0(an_addr_int0[12]),
        .I1(opcode[1]),
        .I2(Q[11]),
        .O(\an_addr_int[12]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair126" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \an_addr_int[13]_i_1 
       (.I0(an_addr_int0[13]),
        .I1(opcode[1]),
        .I2(Q[12]),
        .O(\an_addr_int[13]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair126" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \an_addr_int[14]_i_1 
       (.I0(an_addr_int0[14]),
        .I1(opcode[1]),
        .I2(Q[13]),
        .O(\an_addr_int[14]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00000020)) 
    \an_addr_int[15]_i_1 
       (.I0(p_1_in),
        .I1(mdio_out_i_2_n_0),
        .I2(mdc_rising),
        .I3(\an_addr_int[15]_i_3_n_0 ),
        .I4(\an_addr_int[15]_i_4_n_0 ),
        .O(an_addr_int_1));
  (* SOFT_HLUTNM = "soft_lutpair133" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \an_addr_int[15]_i_2 
       (.I0(an_addr_int0[15]),
        .I1(opcode[1]),
        .I2(Q[14]),
        .O(\an_addr_int[15]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFEFFFFFFFFFFFFFF)) 
    \an_addr_int[15]_i_3 
       (.I0(devad_reg[4]),
        .I1(devad_reg[3]),
        .I2(opcode[0]),
        .I3(devad_reg[2]),
        .I4(devad_reg[0]),
        .I5(devad_reg[1]),
        .O(\an_addr_int[15]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h0200000000000000)) 
    \an_addr_int[15]_i_4 
       (.I0(\an_addr_int[15]_i_5_n_0 ),
        .I1(\an_addr_int[15]_i_6_n_0 ),
        .I2(\an_addr_int[15]_i_7_n_0 ),
        .I3(an_addr_int[6]),
        .I4(an_addr_int[12]),
        .I5(opcode[1]),
        .O(\an_addr_int[15]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \an_addr_int[15]_i_5 
       (.I0(an_addr_int[15]),
        .I1(an_addr_int[11]),
        .I2(an_addr_int[8]),
        .I3(an_addr_int[10]),
        .I4(an_addr_int[7]),
        .I5(an_addr_int[14]),
        .O(\an_addr_int[15]_i_5_n_0 ));
  LUT4 #(
    .INIT(16'h7FFF)) 
    \an_addr_int[15]_i_6 
       (.I0(an_addr_int[5]),
        .I1(an_addr_int[1]),
        .I2(an_addr_int[13]),
        .I3(an_addr_int[3]),
        .O(\an_addr_int[15]_i_6_n_0 ));
  LUT4 #(
    .INIT(16'h7FFF)) 
    \an_addr_int[15]_i_7 
       (.I0(an_addr_int[9]),
        .I1(an_addr_int[0]),
        .I2(an_addr_int[4]),
        .I3(an_addr_int[2]),
        .O(\an_addr_int[15]_i_7_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair142" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \an_addr_int[1]_i_1 
       (.I0(an_addr_int0[1]),
        .I1(opcode[1]),
        .I2(Q[0]),
        .O(\an_addr_int[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair150" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \an_addr_int[2]_i_1 
       (.I0(an_addr_int0[2]),
        .I1(opcode[1]),
        .I2(Q[1]),
        .O(\an_addr_int[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair139" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \an_addr_int[3]_i_1 
       (.I0(an_addr_int0[3]),
        .I1(opcode[1]),
        .I2(Q[2]),
        .O(\an_addr_int[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair127" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \an_addr_int[4]_i_1 
       (.I0(an_addr_int0[4]),
        .I1(opcode[1]),
        .I2(Q[3]),
        .O(\an_addr_int[4]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair149" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \an_addr_int[5]_i_1 
       (.I0(an_addr_int0[5]),
        .I1(opcode[1]),
        .I2(Q[4]),
        .O(\an_addr_int[5]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair139" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \an_addr_int[6]_i_1 
       (.I0(an_addr_int0[6]),
        .I1(opcode[1]),
        .I2(Q[5]),
        .O(\an_addr_int[6]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair148" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \an_addr_int[7]_i_1 
       (.I0(an_addr_int0[7]),
        .I1(opcode[1]),
        .I2(Q[6]),
        .O(\an_addr_int[7]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair149" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \an_addr_int[8]_i_1 
       (.I0(an_addr_int0[8]),
        .I1(opcode[1]),
        .I2(Q[7]),
        .O(\an_addr_int[8]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair148" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \an_addr_int[9]_i_1 
       (.I0(an_addr_int0[9]),
        .I1(opcode[1]),
        .I2(Q[8]),
        .O(\an_addr_int[9]_i_1_n_0 ));
  FDRE \an_addr_int_reg[0] 
       (.C(coreclk),
        .CE(an_addr_int_1),
        .D(\an_addr_int[0]_i_1_n_0 ),
        .Q(an_addr_int[0]),
        .R(areset_coreclk));
  FDRE \an_addr_int_reg[10] 
       (.C(coreclk),
        .CE(an_addr_int_1),
        .D(\an_addr_int[10]_i_1_n_0 ),
        .Q(an_addr_int[10]),
        .R(areset_coreclk));
  FDRE \an_addr_int_reg[11] 
       (.C(coreclk),
        .CE(an_addr_int_1),
        .D(\an_addr_int[11]_i_1_n_0 ),
        .Q(an_addr_int[11]),
        .R(areset_coreclk));
  FDRE \an_addr_int_reg[12] 
       (.C(coreclk),
        .CE(an_addr_int_1),
        .D(\an_addr_int[12]_i_1_n_0 ),
        .Q(an_addr_int[12]),
        .R(areset_coreclk));
  FDRE \an_addr_int_reg[13] 
       (.C(coreclk),
        .CE(an_addr_int_1),
        .D(\an_addr_int[13]_i_1_n_0 ),
        .Q(an_addr_int[13]),
        .R(areset_coreclk));
  FDRE \an_addr_int_reg[14] 
       (.C(coreclk),
        .CE(an_addr_int_1),
        .D(\an_addr_int[14]_i_1_n_0 ),
        .Q(an_addr_int[14]),
        .R(areset_coreclk));
  FDRE \an_addr_int_reg[15] 
       (.C(coreclk),
        .CE(an_addr_int_1),
        .D(\an_addr_int[15]_i_2_n_0 ),
        .Q(an_addr_int[15]),
        .R(areset_coreclk));
  FDRE \an_addr_int_reg[1] 
       (.C(coreclk),
        .CE(an_addr_int_1),
        .D(\an_addr_int[1]_i_1_n_0 ),
        .Q(an_addr_int[1]),
        .R(areset_coreclk));
  FDRE \an_addr_int_reg[2] 
       (.C(coreclk),
        .CE(an_addr_int_1),
        .D(\an_addr_int[2]_i_1_n_0 ),
        .Q(an_addr_int[2]),
        .R(areset_coreclk));
  FDRE \an_addr_int_reg[3] 
       (.C(coreclk),
        .CE(an_addr_int_1),
        .D(\an_addr_int[3]_i_1_n_0 ),
        .Q(an_addr_int[3]),
        .R(areset_coreclk));
  FDRE \an_addr_int_reg[4] 
       (.C(coreclk),
        .CE(an_addr_int_1),
        .D(\an_addr_int[4]_i_1_n_0 ),
        .Q(an_addr_int[4]),
        .R(areset_coreclk));
  FDRE \an_addr_int_reg[5] 
       (.C(coreclk),
        .CE(an_addr_int_1),
        .D(\an_addr_int[5]_i_1_n_0 ),
        .Q(an_addr_int[5]),
        .R(areset_coreclk));
  FDRE \an_addr_int_reg[6] 
       (.C(coreclk),
        .CE(an_addr_int_1),
        .D(\an_addr_int[6]_i_1_n_0 ),
        .Q(an_addr_int[6]),
        .R(areset_coreclk));
  FDRE \an_addr_int_reg[7] 
       (.C(coreclk),
        .CE(an_addr_int_1),
        .D(\an_addr_int[7]_i_1_n_0 ),
        .Q(an_addr_int[7]),
        .R(areset_coreclk));
  FDRE \an_addr_int_reg[8] 
       (.C(coreclk),
        .CE(an_addr_int_1),
        .D(\an_addr_int[8]_i_1_n_0 ),
        .Q(an_addr_int[8]),
        .R(areset_coreclk));
  FDRE \an_addr_int_reg[9] 
       (.C(coreclk),
        .CE(an_addr_int_1),
        .D(\an_addr_int[9]_i_1_n_0 ),
        .Q(an_addr_int[9]),
        .R(areset_coreclk));
  (* SOFT_HLUTNM = "soft_lutpair119" *) 
  LUT5 #(
    .INIT(32'hABAAABAB)) 
    \bit_count[0]_i_1 
       (.I0(\bit_count[4]_i_3_n_0 ),
        .I1(bit_count_reg[0]),
        .I2(\FSM_onehot_state_reg_n_0_[1] ),
        .I3(mdio_out_i_2_n_0),
        .I4(\FSM_onehot_state_reg_n_0_[2] ),
        .O(p_0_in__0[0]));
  LUT6 #(
    .INIT(64'hAAEBAAAAAAEBAAEB)) 
    \bit_count[1]_i_1 
       (.I0(\bit_count[4]_i_3_n_0 ),
        .I1(bit_count_reg[0]),
        .I2(bit_count_reg[1]),
        .I3(\FSM_onehot_state_reg_n_0_[1] ),
        .I4(mdio_out_i_2_n_0),
        .I5(\FSM_onehot_state_reg_n_0_[2] ),
        .O(p_0_in__0[1]));
  LUT4 #(
    .INIT(16'hFEAB)) 
    \bit_count[2]_i_1 
       (.I0(\bit_count[4]_i_5_n_0 ),
        .I1(bit_count_reg[0]),
        .I2(bit_count_reg[1]),
        .I3(bit_count_reg[2]),
        .O(p_0_in__0[2]));
  LUT6 #(
    .INIT(64'hEEEEEEEBAAAAAAAA)) 
    \bit_count[3]_i_1 
       (.I0(\bit_count[4]_i_3_n_0 ),
        .I1(bit_count_reg[3]),
        .I2(bit_count_reg[0]),
        .I3(bit_count_reg[1]),
        .I4(bit_count_reg[2]),
        .I5(\bit_count[3]_i_2_n_0 ),
        .O(p_0_in__0[3]));
  (* SOFT_HLUTNM = "soft_lutpair145" *) 
  LUT3 #(
    .INIT(8'h45)) 
    \bit_count[3]_i_2 
       (.I0(\FSM_onehot_state_reg_n_0_[1] ),
        .I1(mdio_out_i_2_n_0),
        .I2(\FSM_onehot_state_reg_n_0_[2] ),
        .O(\bit_count[3]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hAAAAAAA8)) 
    \bit_count[4]_i_1 
       (.I0(mdc_rising),
        .I1(\bit_count[4]_i_3_n_0 ),
        .I2(\FSM_onehot_state_reg_n_0_[2] ),
        .I3(mdio_out_i_2_n_0),
        .I4(\FSM_onehot_state_reg_n_0_[1] ),
        .O(bit_count));
  LUT6 #(
    .INIT(64'hAAAAAAAAEEEEEEEB)) 
    \bit_count[4]_i_2 
       (.I0(\FSM_onehot_state_reg_n_0_[4] ),
        .I1(bit_count_reg[4]),
        .I2(bit_count_reg[2]),
        .I3(\bit_count[4]_i_4_n_0 ),
        .I4(bit_count_reg[3]),
        .I5(\bit_count[4]_i_5_n_0 ),
        .O(p_0_in__0[4]));
  (* SOFT_HLUTNM = "soft_lutpair121" *) 
  LUT5 #(
    .INIT(32'hFFFFF4F0)) 
    \bit_count[4]_i_3 
       (.I0(\FSM_onehot_state[6]_i_2_n_0 ),
        .I1(opcode[1]),
        .I2(\FSM_onehot_state_reg_n_0_[4] ),
        .I3(\FSM_onehot_state[8]_i_2_n_0 ),
        .I4(\FSM_onehot_state_reg_n_0_[7] ),
        .O(\bit_count[4]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair118" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \bit_count[4]_i_4 
       (.I0(bit_count_reg[0]),
        .I1(bit_count_reg[1]),
        .O(\bit_count[4]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair119" *) 
  LUT4 #(
    .INIT(16'hFFAE)) 
    \bit_count[4]_i_5 
       (.I0(\bit_count[4]_i_3_n_0 ),
        .I1(\FSM_onehot_state_reg_n_0_[2] ),
        .I2(mdio_out_i_2_n_0),
        .I3(\FSM_onehot_state_reg_n_0_[1] ),
        .O(\bit_count[4]_i_5_n_0 ));
  FDRE \bit_count_reg[0] 
       (.C(coreclk),
        .CE(bit_count),
        .D(p_0_in__0[0]),
        .Q(bit_count_reg[0]),
        .R(1'b0));
  FDRE \bit_count_reg[1] 
       (.C(coreclk),
        .CE(bit_count),
        .D(p_0_in__0[1]),
        .Q(bit_count_reg[1]),
        .R(1'b0));
  FDRE \bit_count_reg[2] 
       (.C(coreclk),
        .CE(bit_count),
        .D(p_0_in__0[2]),
        .Q(bit_count_reg[2]),
        .R(1'b0));
  FDRE \bit_count_reg[3] 
       (.C(coreclk),
        .CE(bit_count),
        .D(p_0_in__0[3]),
        .Q(bit_count_reg[3]),
        .R(1'b0));
  FDRE \bit_count_reg[4] 
       (.C(coreclk),
        .CE(bit_count),
        .D(p_0_in__0[4]),
        .Q(bit_count_reg[4]),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h0000000040444000)) 
    \data_captured[15]_i_1 
       (.I0(\FSM_onehot_state[6]_i_2_n_0 ),
        .I1(opcode[1]),
        .I2(drp_ack),
        .I3(mgmt_drp_cs),
        .I4(regs_rdack),
        .I5(devad_match),
        .O(\data_captured[15]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h40444000)) 
    \data_captured[15]_i_2 
       (.I0(\FSM_onehot_state[6]_i_2_n_0 ),
        .I1(opcode[1]),
        .I2(drp_ack),
        .I3(mgmt_drp_cs),
        .I4(regs_rdack),
        .O(data_captured_0));
  FDRE #(
    .INIT(1'b0)) 
    \data_captured_reg[0] 
       (.C(coreclk),
        .CE(data_captured_0),
        .D(D[0]),
        .Q(data_captured[0]),
        .R(\data_captured[15]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \data_captured_reg[10] 
       (.C(coreclk),
        .CE(data_captured_0),
        .D(D[10]),
        .Q(data_captured[10]),
        .R(\data_captured[15]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \data_captured_reg[11] 
       (.C(coreclk),
        .CE(data_captured_0),
        .D(D[11]),
        .Q(data_captured[11]),
        .R(\data_captured[15]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \data_captured_reg[12] 
       (.C(coreclk),
        .CE(data_captured_0),
        .D(D[12]),
        .Q(data_captured[12]),
        .R(\data_captured[15]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \data_captured_reg[13] 
       (.C(coreclk),
        .CE(data_captured_0),
        .D(D[13]),
        .Q(data_captured[13]),
        .R(\data_captured[15]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \data_captured_reg[14] 
       (.C(coreclk),
        .CE(data_captured_0),
        .D(D[14]),
        .Q(data_captured[14]),
        .R(\data_captured[15]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \data_captured_reg[15] 
       (.C(coreclk),
        .CE(data_captured_0),
        .D(D[15]),
        .Q(data_captured[15]),
        .R(\data_captured[15]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \data_captured_reg[1] 
       (.C(coreclk),
        .CE(data_captured_0),
        .D(D[1]),
        .Q(data_captured[1]),
        .R(\data_captured[15]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \data_captured_reg[2] 
       (.C(coreclk),
        .CE(data_captured_0),
        .D(D[2]),
        .Q(data_captured[2]),
        .R(\data_captured[15]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \data_captured_reg[3] 
       (.C(coreclk),
        .CE(data_captured_0),
        .D(D[3]),
        .Q(data_captured[3]),
        .R(\data_captured[15]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \data_captured_reg[4] 
       (.C(coreclk),
        .CE(data_captured_0),
        .D(D[4]),
        .Q(data_captured[4]),
        .R(\data_captured[15]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \data_captured_reg[5] 
       (.C(coreclk),
        .CE(data_captured_0),
        .D(D[5]),
        .Q(data_captured[5]),
        .R(\data_captured[15]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \data_captured_reg[6] 
       (.C(coreclk),
        .CE(data_captured_0),
        .D(D[6]),
        .Q(data_captured[6]),
        .R(\data_captured[15]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \data_captured_reg[7] 
       (.C(coreclk),
        .CE(data_captured_0),
        .D(D[7]),
        .Q(data_captured[7]),
        .R(\data_captured[15]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \data_captured_reg[8] 
       (.C(coreclk),
        .CE(data_captured_0),
        .D(D[8]),
        .Q(data_captured[8]),
        .R(\data_captured[15]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \data_captured_reg[9] 
       (.C(coreclk),
        .CE(data_captured_0),
        .D(D[9]),
        .Q(data_captured[9]),
        .R(\data_captured[15]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h00000000FF470000)) 
    devad_match_i_1
       (.I0(devad_reg[2]),
        .I1(\FSM_onehot_state[6]_i_2_n_0 ),
        .I2(Q[1]),
        .I3(devad_match_i_2_n_0),
        .I4(devad_match_i_3_n_0),
        .I5(devad_match_i_4_n_0),
        .O(devad_match0));
  (* SOFT_HLUTNM = "soft_lutpair124" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    devad_match_i_2
       (.I0(devad_reg[1]),
        .I1(\FSM_onehot_state[6]_i_2_n_0 ),
        .I2(Q[0]),
        .O(devad_match_i_2_n_0));
  (* SOFT_HLUTNM = "soft_lutpair125" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    devad_match_i_3
       (.I0(devad_reg[0]),
        .I1(\FSM_onehot_state[6]_i_2_n_0 ),
        .I2(mdio_in_reg),
        .O(devad_match_i_3_n_0));
  (* SOFT_HLUTNM = "soft_lutpair120" *) 
  LUT5 #(
    .INIT(32'hFFFACCFA)) 
    devad_match_i_4
       (.I0(Q[3]),
        .I1(devad_reg[4]),
        .I2(Q[2]),
        .I3(\FSM_onehot_state[6]_i_2_n_0 ),
        .I4(devad_reg[3]),
        .O(devad_match_i_4_n_0));
  FDRE devad_match_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(devad_match0),
        .Q(devad_match),
        .R(areset_coreclk));
  LUT2 #(
    .INIT(4'h2)) 
    \devad_reg[4]_i_1 
       (.I0(mdc_rising),
        .I1(\FSM_onehot_state[6]_i_2_n_0 ),
        .O(devad_reg0));
  FDRE \devad_reg_reg[0] 
       (.C(coreclk),
        .CE(devad_reg0),
        .D(mdio_in_reg),
        .Q(devad_reg[0]),
        .R(areset_coreclk));
  FDRE \devad_reg_reg[1] 
       (.C(coreclk),
        .CE(devad_reg0),
        .D(Q[0]),
        .Q(devad_reg[1]),
        .R(areset_coreclk));
  FDRE \devad_reg_reg[2] 
       (.C(coreclk),
        .CE(devad_reg0),
        .D(Q[1]),
        .Q(devad_reg[2]),
        .R(areset_coreclk));
  FDRE \devad_reg_reg[3] 
       (.C(coreclk),
        .CE(devad_reg0),
        .D(Q[2]),
        .Q(devad_reg[3]),
        .R(areset_coreclk));
  FDRE \devad_reg_reg[4] 
       (.C(coreclk),
        .CE(devad_reg0),
        .D(Q[3]),
        .Q(devad_reg[4]),
        .R(areset_coreclk));
  LUT6 #(
    .INIT(64'h0000000000000002)) 
    indirect_read_i_1
       (.I0(indirect_read_i_2_n_0),
        .I1(indirect_read_i_3_n_0),
        .I2(pcs_addr[10]),
        .I3(pcs_addr[6]),
        .I4(pcs_addr[8]),
        .I5(pcs_addr[4]),
        .O(p_0_in));
  LUT6 #(
    .INIT(64'h4000000000000000)) 
    indirect_read_i_2
       (.I0(\addr_reg_reg[8] [0]),
        .I1(\addr_reg_reg[8] [1]),
        .I2(pcs_addr[0]),
        .I3(pcs_addr[1]),
        .I4(pcs_addr[3]),
        .I5(pcs_addr[5]),
        .O(indirect_read_i_2_n_0));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    indirect_read_i_3
       (.I0(pcs_addr[2]),
        .I1(pcs_addr[12]),
        .I2(pcs_addr[11]),
        .I3(pcs_addr[14]),
        .I4(indirect_read_i_4_n_0),
        .O(indirect_read_i_3_n_0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    indirect_read_i_4
       (.I0(pcs_addr[13]),
        .I1(pcs_addr[7]),
        .I2(pcs_addr[15]),
        .I3(pcs_addr[9]),
        .O(indirect_read_i_4_n_0));
  FDRE mdc_just_rose_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(mdc_rising_reg__0),
        .Q(mdc_just_rose),
        .R(areset_coreclk));
  FDRE mdc_rising_reg_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(mdc_rising),
        .Q(mdc_rising_reg__0),
        .R(1'b0));
  FDRE mdio_in_reg_reg
       (.C(coreclk),
        .CE(mdc_rising),
        .D(out),
        .Q(mdio_in_reg),
        .R(areset_coreclk));
  LUT5 #(
    .INIT(32'hFFB3F7F7)) 
    mdio_out_i_1
       (.I0(\FSM_onehot_state_reg_n_0_[9] ),
        .I1(opcode[1]),
        .I2(mdio_out_i_2_n_0),
        .I3(Q[15]),
        .I4(p_1_in),
        .O(mdio_out_int));
  (* SOFT_HLUTNM = "soft_lutpair118" *) 
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    mdio_out_i_2
       (.I0(bit_count_reg[4]),
        .I1(bit_count_reg[2]),
        .I2(bit_count_reg[1]),
        .I3(bit_count_reg[0]),
        .I4(bit_count_reg[3]),
        .O(mdio_out_i_2_n_0));
  FDRE mdio_out_reg
       (.C(coreclk),
        .CE(mdc_rising),
        .D(mdio_out_int),
        .Q(mdio_out),
        .R(areset_coreclk));
  LUT4 #(
    .INIT(16'hB3BF)) 
    mdio_tri_i_1
       (.I0(mdio_out_i_2_n_0),
        .I1(opcode[1]),
        .I2(\FSM_onehot_state_reg_n_0_[9] ),
        .I3(p_1_in),
        .O(mdio_tri_int));
  FDSE mdio_tri_reg
       (.C(coreclk),
        .CE(mdc_rising),
        .D(mdio_tri_int),
        .Q(mdio_tri),
        .S(areset_coreclk));
  LUT2 #(
    .INIT(4'h2)) 
    mdio_we_rising_i_1
       (.I0(mdio_we),
        .I1(mdio_we_reg),
        .O(mdio_we_rising0));
  (* SOFT_HLUTNM = "soft_lutpair152" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \opcode[0]_i_1 
       (.I0(Q[0]),
        .I1(opcode0),
        .I2(opcode[0]),
        .O(\opcode[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair152" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \opcode[1]_i_1 
       (.I0(Q[1]),
        .I1(opcode0),
        .I2(opcode[1]),
        .O(\opcode[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000400000)) 
    \opcode[1]_i_2 
       (.I0(bit_count_reg[3]),
        .I1(mdc_rising),
        .I2(bit_count_reg[2]),
        .I3(bit_count_reg[4]),
        .I4(\FSM_onehot_state_reg_n_0_[2] ),
        .I5(\bit_count[4]_i_4_n_0 ),
        .O(opcode0));
  FDRE \opcode_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\opcode[0]_i_1_n_0 ),
        .Q(opcode[0]),
        .R(areset_coreclk));
  FDRE \opcode_reg[1] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\opcode[1]_i_1_n_0 ),
        .Q(opcode[1]),
        .R(areset_coreclk));
  CARRY4 pcs_addr_int0_carry
       (.CI(1'b0),
        .CO({pcs_addr_int0_carry_n_0,pcs_addr_int0_carry_n_1,pcs_addr_int0_carry_n_2,pcs_addr_int0_carry_n_3}),
        .CYINIT(pcs_addr[0]),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(pcs_addr_int0[4:1]),
        .S(pcs_addr[4:1]));
  CARRY4 pcs_addr_int0_carry__0
       (.CI(pcs_addr_int0_carry_n_0),
        .CO({pcs_addr_int0_carry__0_n_0,pcs_addr_int0_carry__0_n_1,pcs_addr_int0_carry__0_n_2,pcs_addr_int0_carry__0_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(pcs_addr_int0[8:5]),
        .S(pcs_addr[8:5]));
  CARRY4 pcs_addr_int0_carry__1
       (.CI(pcs_addr_int0_carry__0_n_0),
        .CO({pcs_addr_int0_carry__1_n_0,pcs_addr_int0_carry__1_n_1,pcs_addr_int0_carry__1_n_2,pcs_addr_int0_carry__1_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(pcs_addr_int0[12:9]),
        .S(pcs_addr[12:9]));
  CARRY4 pcs_addr_int0_carry__2
       (.CI(pcs_addr_int0_carry__1_n_0),
        .CO({NLW_pcs_addr_int0_carry__2_CO_UNCONNECTED[3:2],pcs_addr_int0_carry__2_n_2,pcs_addr_int0_carry__2_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({NLW_pcs_addr_int0_carry__2_O_UNCONNECTED[3],pcs_addr_int0[15:13]}),
        .S({1'b0,pcs_addr[15:13]}));
  (* SOFT_HLUTNM = "soft_lutpair147" *) 
  LUT3 #(
    .INIT(8'h74)) 
    \pcs_addr_int[0]_i_1 
       (.I0(pcs_addr[0]),
        .I1(opcode[1]),
        .I2(mdio_in_reg),
        .O(\pcs_addr_int[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair130" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pcs_addr_int[10]_i_1 
       (.I0(pcs_addr_int0[10]),
        .I1(opcode[1]),
        .I2(Q[9]),
        .O(\pcs_addr_int[10]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair140" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pcs_addr_int[11]_i_1 
       (.I0(pcs_addr_int0[11]),
        .I1(opcode[1]),
        .I2(Q[10]),
        .O(\pcs_addr_int[11]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair132" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pcs_addr_int[12]_i_1 
       (.I0(pcs_addr_int0[12]),
        .I1(opcode[1]),
        .I2(Q[11]),
        .O(\pcs_addr_int[12]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair130" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pcs_addr_int[13]_i_1 
       (.I0(pcs_addr_int0[13]),
        .I1(opcode[1]),
        .I2(Q[12]),
        .O(\pcs_addr_int[13]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair129" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pcs_addr_int[14]_i_1 
       (.I0(pcs_addr_int0[14]),
        .I1(opcode[1]),
        .I2(Q[13]),
        .O(\pcs_addr_int[14]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000008000000)) 
    \pcs_addr_int[15]_i_1 
       (.I0(\pcs_addr_int[15]_i_3_n_0 ),
        .I1(mdc_rising),
        .I2(\pcs_addr_int[15]_i_4_n_0 ),
        .I3(devad_reg[1]),
        .I4(devad_reg[0]),
        .I5(\pcs_addr_int[15]_i_5_n_0 ),
        .O(pcs_addr_int));
  (* SOFT_HLUTNM = "soft_lutpair132" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pcs_addr_int[15]_i_2 
       (.I0(pcs_addr_int0[15]),
        .I1(opcode[1]),
        .I2(Q[14]),
        .O(\pcs_addr_int[15]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000002)) 
    \pcs_addr_int[15]_i_3 
       (.I0(p_1_in),
        .I1(bit_count_reg[3]),
        .I2(bit_count_reg[0]),
        .I3(bit_count_reg[1]),
        .I4(bit_count_reg[2]),
        .I5(bit_count_reg[4]),
        .O(\pcs_addr_int[15]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \pcs_addr_int[15]_i_4 
       (.I0(devad_reg[4]),
        .I1(devad_reg[3]),
        .I2(devad_reg[2]),
        .I3(opcode[0]),
        .O(\pcs_addr_int[15]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h0200000000000000)) 
    \pcs_addr_int[15]_i_5 
       (.I0(\pcs_addr_int[15]_i_6_n_0 ),
        .I1(\pcs_addr_int[15]_i_7_n_0 ),
        .I2(\pcs_addr_int[15]_i_8_n_0 ),
        .I3(pcs_addr[7]),
        .I4(pcs_addr[6]),
        .I5(pcs_addr[4]),
        .O(\pcs_addr_int[15]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \pcs_addr_int[15]_i_6 
       (.I0(pcs_addr[1]),
        .I1(pcs_addr[0]),
        .I2(pcs_addr[2]),
        .I3(pcs_addr[8]),
        .I4(pcs_addr[3]),
        .I5(pcs_addr[5]),
        .O(\pcs_addr_int[15]_i_6_n_0 ));
  LUT4 #(
    .INIT(16'h7FFF)) 
    \pcs_addr_int[15]_i_7 
       (.I0(pcs_addr[12]),
        .I1(pcs_addr[9]),
        .I2(pcs_addr[15]),
        .I3(opcode[1]),
        .O(\pcs_addr_int[15]_i_7_n_0 ));
  LUT4 #(
    .INIT(16'h7FFF)) 
    \pcs_addr_int[15]_i_8 
       (.I0(pcs_addr[14]),
        .I1(pcs_addr[11]),
        .I2(pcs_addr[13]),
        .I3(pcs_addr[10]),
        .O(\pcs_addr_int[15]_i_8_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair143" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pcs_addr_int[1]_i_1 
       (.I0(pcs_addr_int0[1]),
        .I1(opcode[1]),
        .I2(Q[0]),
        .O(\pcs_addr_int[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair137" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pcs_addr_int[2]_i_1 
       (.I0(pcs_addr_int0[2]),
        .I1(opcode[1]),
        .I2(Q[1]),
        .O(\pcs_addr_int[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair140" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pcs_addr_int[3]_i_1 
       (.I0(pcs_addr_int0[3]),
        .I1(opcode[1]),
        .I2(Q[2]),
        .O(\pcs_addr_int[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair129" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pcs_addr_int[4]_i_1 
       (.I0(pcs_addr_int0[4]),
        .I1(opcode[1]),
        .I2(Q[3]),
        .O(\pcs_addr_int[4]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair146" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pcs_addr_int[5]_i_1 
       (.I0(pcs_addr_int0[5]),
        .I1(opcode[1]),
        .I2(Q[4]),
        .O(\pcs_addr_int[5]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair137" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pcs_addr_int[6]_i_1 
       (.I0(pcs_addr_int0[6]),
        .I1(opcode[1]),
        .I2(Q[5]),
        .O(\pcs_addr_int[6]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair147" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pcs_addr_int[7]_i_1 
       (.I0(pcs_addr_int0[7]),
        .I1(opcode[1]),
        .I2(Q[6]),
        .O(\pcs_addr_int[7]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair146" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pcs_addr_int[8]_i_1 
       (.I0(pcs_addr_int0[8]),
        .I1(opcode[1]),
        .I2(Q[7]),
        .O(\pcs_addr_int[8]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair143" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pcs_addr_int[9]_i_1 
       (.I0(pcs_addr_int0[9]),
        .I1(opcode[1]),
        .I2(Q[8]),
        .O(\pcs_addr_int[9]_i_1_n_0 ));
  FDRE \pcs_addr_int_reg[0] 
       (.C(coreclk),
        .CE(pcs_addr_int),
        .D(\pcs_addr_int[0]_i_1_n_0 ),
        .Q(pcs_addr[0]),
        .R(areset_coreclk));
  FDRE \pcs_addr_int_reg[10] 
       (.C(coreclk),
        .CE(pcs_addr_int),
        .D(\pcs_addr_int[10]_i_1_n_0 ),
        .Q(pcs_addr[10]),
        .R(areset_coreclk));
  FDRE \pcs_addr_int_reg[11] 
       (.C(coreclk),
        .CE(pcs_addr_int),
        .D(\pcs_addr_int[11]_i_1_n_0 ),
        .Q(pcs_addr[11]),
        .R(areset_coreclk));
  FDRE \pcs_addr_int_reg[12] 
       (.C(coreclk),
        .CE(pcs_addr_int),
        .D(\pcs_addr_int[12]_i_1_n_0 ),
        .Q(pcs_addr[12]),
        .R(areset_coreclk));
  FDRE \pcs_addr_int_reg[13] 
       (.C(coreclk),
        .CE(pcs_addr_int),
        .D(\pcs_addr_int[13]_i_1_n_0 ),
        .Q(pcs_addr[13]),
        .R(areset_coreclk));
  FDRE \pcs_addr_int_reg[14] 
       (.C(coreclk),
        .CE(pcs_addr_int),
        .D(\pcs_addr_int[14]_i_1_n_0 ),
        .Q(pcs_addr[14]),
        .R(areset_coreclk));
  FDRE \pcs_addr_int_reg[15] 
       (.C(coreclk),
        .CE(pcs_addr_int),
        .D(\pcs_addr_int[15]_i_2_n_0 ),
        .Q(pcs_addr[15]),
        .R(areset_coreclk));
  FDRE \pcs_addr_int_reg[1] 
       (.C(coreclk),
        .CE(pcs_addr_int),
        .D(\pcs_addr_int[1]_i_1_n_0 ),
        .Q(pcs_addr[1]),
        .R(areset_coreclk));
  FDRE \pcs_addr_int_reg[2] 
       (.C(coreclk),
        .CE(pcs_addr_int),
        .D(\pcs_addr_int[2]_i_1_n_0 ),
        .Q(pcs_addr[2]),
        .R(areset_coreclk));
  FDRE \pcs_addr_int_reg[3] 
       (.C(coreclk),
        .CE(pcs_addr_int),
        .D(\pcs_addr_int[3]_i_1_n_0 ),
        .Q(pcs_addr[3]),
        .R(areset_coreclk));
  FDRE \pcs_addr_int_reg[4] 
       (.C(coreclk),
        .CE(pcs_addr_int),
        .D(\pcs_addr_int[4]_i_1_n_0 ),
        .Q(pcs_addr[4]),
        .R(areset_coreclk));
  FDRE \pcs_addr_int_reg[5] 
       (.C(coreclk),
        .CE(pcs_addr_int),
        .D(\pcs_addr_int[5]_i_1_n_0 ),
        .Q(pcs_addr[5]),
        .R(areset_coreclk));
  FDRE \pcs_addr_int_reg[6] 
       (.C(coreclk),
        .CE(pcs_addr_int),
        .D(\pcs_addr_int[6]_i_1_n_0 ),
        .Q(pcs_addr[6]),
        .R(areset_coreclk));
  FDRE \pcs_addr_int_reg[7] 
       (.C(coreclk),
        .CE(pcs_addr_int),
        .D(\pcs_addr_int[7]_i_1_n_0 ),
        .Q(pcs_addr[7]),
        .R(areset_coreclk));
  FDRE \pcs_addr_int_reg[8] 
       (.C(coreclk),
        .CE(pcs_addr_int),
        .D(\pcs_addr_int[8]_i_1_n_0 ),
        .Q(pcs_addr[8]),
        .R(areset_coreclk));
  FDRE \pcs_addr_int_reg[9] 
       (.C(coreclk),
        .CE(pcs_addr_int),
        .D(\pcs_addr_int[9]_i_1_n_0 ),
        .Q(pcs_addr[9]),
        .R(areset_coreclk));
  CARRY4 pma_addr_int0_carry
       (.CI(1'b0),
        .CO({pma_addr_int0_carry_n_0,pma_addr_int0_carry_n_1,pma_addr_int0_carry_n_2,pma_addr_int0_carry_n_3}),
        .CYINIT(pma_addr_int[0]),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(pma_addr_int0[4:1]),
        .S(pma_addr_int[4:1]));
  CARRY4 pma_addr_int0_carry__0
       (.CI(pma_addr_int0_carry_n_0),
        .CO({pma_addr_int0_carry__0_n_0,pma_addr_int0_carry__0_n_1,pma_addr_int0_carry__0_n_2,pma_addr_int0_carry__0_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(pma_addr_int0[8:5]),
        .S(pma_addr_int[8:5]));
  CARRY4 pma_addr_int0_carry__1
       (.CI(pma_addr_int0_carry__0_n_0),
        .CO({pma_addr_int0_carry__1_n_0,pma_addr_int0_carry__1_n_1,pma_addr_int0_carry__1_n_2,pma_addr_int0_carry__1_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(pma_addr_int0[12:9]),
        .S(pma_addr_int[12:9]));
  CARRY4 pma_addr_int0_carry__2
       (.CI(pma_addr_int0_carry__1_n_0),
        .CO({NLW_pma_addr_int0_carry__2_CO_UNCONNECTED[3:2],pma_addr_int0_carry__2_n_2,pma_addr_int0_carry__2_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({NLW_pma_addr_int0_carry__2_O_UNCONNECTED[3],pma_addr_int0[15:13]}),
        .S({1'b0,pma_addr_int[15:13]}));
  (* SOFT_HLUTNM = "soft_lutpair144" *) 
  LUT3 #(
    .INIT(8'h74)) 
    \pma_addr_int[0]_i_1 
       (.I0(pma_addr_int[0]),
        .I1(opcode[1]),
        .I2(mdio_in_reg),
        .O(\pma_addr_int[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair131" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pma_addr_int[10]_i_1 
       (.I0(pma_addr_int0[10]),
        .I1(opcode[1]),
        .I2(Q[9]),
        .O(\pma_addr_int[10]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair136" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pma_addr_int[11]_i_1 
       (.I0(pma_addr_int0[11]),
        .I1(opcode[1]),
        .I2(Q[10]),
        .O(\pma_addr_int[11]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair134" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pma_addr_int[12]_i_1 
       (.I0(pma_addr_int0[12]),
        .I1(opcode[1]),
        .I2(Q[11]),
        .O(\pma_addr_int[12]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair134" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pma_addr_int[13]_i_1 
       (.I0(pma_addr_int0[13]),
        .I1(opcode[1]),
        .I2(Q[12]),
        .O(\pma_addr_int[13]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair128" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pma_addr_int[14]_i_1 
       (.I0(pma_addr_int0[14]),
        .I1(opcode[1]),
        .I2(Q[13]),
        .O(\pma_addr_int[14]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000800)) 
    \pma_addr_int[15]_i_1 
       (.I0(\pcs_addr_int[15]_i_3_n_0 ),
        .I1(mdc_rising),
        .I2(\pcs_addr_int[15]_i_4_n_0 ),
        .I3(devad_reg[0]),
        .I4(devad_reg[1]),
        .I5(\pma_addr_int[15]_i_3_n_0 ),
        .O(pma_addr_int_2));
  (* SOFT_HLUTNM = "soft_lutpair131" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pma_addr_int[15]_i_2 
       (.I0(pma_addr_int0[15]),
        .I1(opcode[1]),
        .I2(Q[14]),
        .O(\pma_addr_int[15]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0200000000000000)) 
    \pma_addr_int[15]_i_3 
       (.I0(\pma_addr_int[15]_i_4_n_0 ),
        .I1(\pma_addr_int[15]_i_5_n_0 ),
        .I2(\pma_addr_int[15]_i_6_n_0 ),
        .I3(pma_addr_int[4]),
        .I4(pma_addr_int[9]),
        .I5(pma_addr_int[0]),
        .O(\pma_addr_int[15]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \pma_addr_int[15]_i_4 
       (.I0(pma_addr_int[15]),
        .I1(pma_addr_int[11]),
        .I2(opcode[1]),
        .I3(pma_addr_int[12]),
        .I4(pma_addr_int[2]),
        .I5(pma_addr_int[5]),
        .O(\pma_addr_int[15]_i_4_n_0 ));
  LUT4 #(
    .INIT(16'h7FFF)) 
    \pma_addr_int[15]_i_5 
       (.I0(pma_addr_int[14]),
        .I1(pma_addr_int[7]),
        .I2(pma_addr_int[10]),
        .I3(pma_addr_int[8]),
        .O(\pma_addr_int[15]_i_5_n_0 ));
  LUT4 #(
    .INIT(16'h7FFF)) 
    \pma_addr_int[15]_i_6 
       (.I0(pma_addr_int[13]),
        .I1(pma_addr_int[6]),
        .I2(pma_addr_int[3]),
        .I3(pma_addr_int[1]),
        .O(\pma_addr_int[15]_i_6_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair144" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pma_addr_int[1]_i_1 
       (.I0(pma_addr_int0[1]),
        .I1(opcode[1]),
        .I2(Q[0]),
        .O(\pma_addr_int[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair138" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pma_addr_int[2]_i_1 
       (.I0(pma_addr_int0[2]),
        .I1(opcode[1]),
        .I2(Q[1]),
        .O(\pma_addr_int[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair141" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pma_addr_int[3]_i_1 
       (.I0(pma_addr_int0[3]),
        .I1(opcode[1]),
        .I2(Q[2]),
        .O(\pma_addr_int[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair128" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pma_addr_int[4]_i_1 
       (.I0(pma_addr_int0[4]),
        .I1(opcode[1]),
        .I2(Q[3]),
        .O(\pma_addr_int[4]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair135" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pma_addr_int[5]_i_1 
       (.I0(pma_addr_int0[5]),
        .I1(opcode[1]),
        .I2(Q[4]),
        .O(\pma_addr_int[5]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair135" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pma_addr_int[6]_i_1 
       (.I0(pma_addr_int0[6]),
        .I1(opcode[1]),
        .I2(Q[5]),
        .O(\pma_addr_int[6]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair141" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pma_addr_int[7]_i_1 
       (.I0(pma_addr_int0[7]),
        .I1(opcode[1]),
        .I2(Q[6]),
        .O(\pma_addr_int[7]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair136" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pma_addr_int[8]_i_1 
       (.I0(pma_addr_int0[8]),
        .I1(opcode[1]),
        .I2(Q[7]),
        .O(\pma_addr_int[8]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair138" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pma_addr_int[9]_i_1 
       (.I0(pma_addr_int0[9]),
        .I1(opcode[1]),
        .I2(Q[8]),
        .O(\pma_addr_int[9]_i_1_n_0 ));
  FDRE \pma_addr_int_reg[0] 
       (.C(coreclk),
        .CE(pma_addr_int_2),
        .D(\pma_addr_int[0]_i_1_n_0 ),
        .Q(pma_addr_int[0]),
        .R(areset_coreclk));
  FDRE \pma_addr_int_reg[10] 
       (.C(coreclk),
        .CE(pma_addr_int_2),
        .D(\pma_addr_int[10]_i_1_n_0 ),
        .Q(pma_addr_int[10]),
        .R(areset_coreclk));
  FDRE \pma_addr_int_reg[11] 
       (.C(coreclk),
        .CE(pma_addr_int_2),
        .D(\pma_addr_int[11]_i_1_n_0 ),
        .Q(pma_addr_int[11]),
        .R(areset_coreclk));
  FDRE \pma_addr_int_reg[12] 
       (.C(coreclk),
        .CE(pma_addr_int_2),
        .D(\pma_addr_int[12]_i_1_n_0 ),
        .Q(pma_addr_int[12]),
        .R(areset_coreclk));
  FDRE \pma_addr_int_reg[13] 
       (.C(coreclk),
        .CE(pma_addr_int_2),
        .D(\pma_addr_int[13]_i_1_n_0 ),
        .Q(pma_addr_int[13]),
        .R(areset_coreclk));
  FDRE \pma_addr_int_reg[14] 
       (.C(coreclk),
        .CE(pma_addr_int_2),
        .D(\pma_addr_int[14]_i_1_n_0 ),
        .Q(pma_addr_int[14]),
        .R(areset_coreclk));
  FDRE \pma_addr_int_reg[15] 
       (.C(coreclk),
        .CE(pma_addr_int_2),
        .D(\pma_addr_int[15]_i_2_n_0 ),
        .Q(pma_addr_int[15]),
        .R(areset_coreclk));
  FDRE \pma_addr_int_reg[1] 
       (.C(coreclk),
        .CE(pma_addr_int_2),
        .D(\pma_addr_int[1]_i_1_n_0 ),
        .Q(pma_addr_int[1]),
        .R(areset_coreclk));
  FDRE \pma_addr_int_reg[2] 
       (.C(coreclk),
        .CE(pma_addr_int_2),
        .D(\pma_addr_int[2]_i_1_n_0 ),
        .Q(pma_addr_int[2]),
        .R(areset_coreclk));
  FDRE \pma_addr_int_reg[3] 
       (.C(coreclk),
        .CE(pma_addr_int_2),
        .D(\pma_addr_int[3]_i_1_n_0 ),
        .Q(pma_addr_int[3]),
        .R(areset_coreclk));
  FDRE \pma_addr_int_reg[4] 
       (.C(coreclk),
        .CE(pma_addr_int_2),
        .D(\pma_addr_int[4]_i_1_n_0 ),
        .Q(pma_addr_int[4]),
        .R(areset_coreclk));
  FDRE \pma_addr_int_reg[5] 
       (.C(coreclk),
        .CE(pma_addr_int_2),
        .D(\pma_addr_int[5]_i_1_n_0 ),
        .Q(pma_addr_int[5]),
        .R(areset_coreclk));
  FDRE \pma_addr_int_reg[6] 
       (.C(coreclk),
        .CE(pma_addr_int_2),
        .D(\pma_addr_int[6]_i_1_n_0 ),
        .Q(pma_addr_int[6]),
        .R(areset_coreclk));
  FDRE \pma_addr_int_reg[7] 
       (.C(coreclk),
        .CE(pma_addr_int_2),
        .D(\pma_addr_int[7]_i_1_n_0 ),
        .Q(pma_addr_int[7]),
        .R(areset_coreclk));
  FDRE \pma_addr_int_reg[8] 
       (.C(coreclk),
        .CE(pma_addr_int_2),
        .D(\pma_addr_int[8]_i_1_n_0 ),
        .Q(pma_addr_int[8]),
        .R(areset_coreclk));
  FDRE \pma_addr_int_reg[9] 
       (.C(coreclk),
        .CE(pma_addr_int_2),
        .D(\pma_addr_int[9]_i_1_n_0 ),
        .Q(pma_addr_int[9]),
        .R(areset_coreclk));
  LUT4 #(
    .INIT(16'h4000)) 
    rd_i_1
       (.I0(\FSM_onehot_state[6]_i_2_n_0 ),
        .I1(opcode[1]),
        .I2(mdc_just_rose),
        .I3(\FSM_onehot_state[8]_i_2_n_0 ),
        .O(rd0));
  FDRE rd_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(rd0),
        .Q(mdio_rd),
        .R(areset_coreclk));
  (* SOFT_HLUTNM = "soft_lutpair125" *) 
  LUT4 #(
    .INIT(16'hF4B0)) 
    \shift_reg[0]_i_1 
       (.I0(\FSM_onehot_state[6]_i_2_n_0 ),
        .I1(opcode[1]),
        .I2(mdio_in_reg),
        .I3(data_captured[0]),
        .O(\shift_reg[0]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hF4B0)) 
    \shift_reg[10]_i_1 
       (.I0(\FSM_onehot_state[6]_i_2_n_0 ),
        .I1(opcode[1]),
        .I2(Q[9]),
        .I3(data_captured[10]),
        .O(\shift_reg[10]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hF4B0)) 
    \shift_reg[11]_i_1 
       (.I0(\FSM_onehot_state[6]_i_2_n_0 ),
        .I1(opcode[1]),
        .I2(Q[10]),
        .I3(data_captured[11]),
        .O(\shift_reg[11]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hF4B0)) 
    \shift_reg[12]_i_1 
       (.I0(\FSM_onehot_state[6]_i_2_n_0 ),
        .I1(opcode[1]),
        .I2(Q[11]),
        .I3(data_captured[12]),
        .O(\shift_reg[12]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hF4B0)) 
    \shift_reg[13]_i_1 
       (.I0(\FSM_onehot_state[6]_i_2_n_0 ),
        .I1(opcode[1]),
        .I2(Q[12]),
        .I3(data_captured[13]),
        .O(\shift_reg[13]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hF4B0)) 
    \shift_reg[14]_i_1 
       (.I0(\FSM_onehot_state[6]_i_2_n_0 ),
        .I1(opcode[1]),
        .I2(Q[13]),
        .I3(data_captured[14]),
        .O(\shift_reg[14]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hF4B0)) 
    \shift_reg[15]_i_1 
       (.I0(\FSM_onehot_state[6]_i_2_n_0 ),
        .I1(opcode[1]),
        .I2(Q[14]),
        .I3(data_captured[15]),
        .O(\shift_reg[15]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair124" *) 
  LUT4 #(
    .INIT(16'hF4B0)) 
    \shift_reg[1]_i_1 
       (.I0(\FSM_onehot_state[6]_i_2_n_0 ),
        .I1(opcode[1]),
        .I2(Q[0]),
        .I3(data_captured[1]),
        .O(\shift_reg[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair123" *) 
  LUT4 #(
    .INIT(16'hF4B0)) 
    \shift_reg[2]_i_1 
       (.I0(\FSM_onehot_state[6]_i_2_n_0 ),
        .I1(opcode[1]),
        .I2(Q[1]),
        .I3(data_captured[2]),
        .O(\shift_reg[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair122" *) 
  LUT4 #(
    .INIT(16'hF4B0)) 
    \shift_reg[3]_i_1 
       (.I0(\FSM_onehot_state[6]_i_2_n_0 ),
        .I1(opcode[1]),
        .I2(Q[2]),
        .I3(data_captured[3]),
        .O(\shift_reg[3]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hF4B0)) 
    \shift_reg[4]_i_1 
       (.I0(\FSM_onehot_state[6]_i_2_n_0 ),
        .I1(opcode[1]),
        .I2(Q[3]),
        .I3(data_captured[4]),
        .O(\shift_reg[4]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hF4B0)) 
    \shift_reg[5]_i_1 
       (.I0(\FSM_onehot_state[6]_i_2_n_0 ),
        .I1(opcode[1]),
        .I2(Q[4]),
        .I3(data_captured[5]),
        .O(\shift_reg[5]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hF4B0)) 
    \shift_reg[6]_i_1 
       (.I0(\FSM_onehot_state[6]_i_2_n_0 ),
        .I1(opcode[1]),
        .I2(Q[5]),
        .I3(data_captured[6]),
        .O(\shift_reg[6]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hF4B0)) 
    \shift_reg[7]_i_1 
       (.I0(\FSM_onehot_state[6]_i_2_n_0 ),
        .I1(opcode[1]),
        .I2(Q[6]),
        .I3(data_captured[7]),
        .O(\shift_reg[7]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hF4B0)) 
    \shift_reg[8]_i_1 
       (.I0(\FSM_onehot_state[6]_i_2_n_0 ),
        .I1(opcode[1]),
        .I2(Q[7]),
        .I3(data_captured[8]),
        .O(\shift_reg[8]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hF4B0)) 
    \shift_reg[9]_i_1 
       (.I0(\FSM_onehot_state[6]_i_2_n_0 ),
        .I1(opcode[1]),
        .I2(Q[8]),
        .I3(data_captured[9]),
        .O(\shift_reg[9]_i_1_n_0 ));
  FDRE \shift_reg_reg[0] 
       (.C(coreclk),
        .CE(mdc_rising),
        .D(\shift_reg[0]_i_1_n_0 ),
        .Q(Q[0]),
        .R(1'b0));
  FDRE \shift_reg_reg[10] 
       (.C(coreclk),
        .CE(mdc_rising),
        .D(\shift_reg[10]_i_1_n_0 ),
        .Q(Q[10]),
        .R(1'b0));
  FDRE \shift_reg_reg[11] 
       (.C(coreclk),
        .CE(mdc_rising),
        .D(\shift_reg[11]_i_1_n_0 ),
        .Q(Q[11]),
        .R(1'b0));
  FDRE \shift_reg_reg[12] 
       (.C(coreclk),
        .CE(mdc_rising),
        .D(\shift_reg[12]_i_1_n_0 ),
        .Q(Q[12]),
        .R(1'b0));
  FDRE \shift_reg_reg[13] 
       (.C(coreclk),
        .CE(mdc_rising),
        .D(\shift_reg[13]_i_1_n_0 ),
        .Q(Q[13]),
        .R(1'b0));
  FDRE \shift_reg_reg[14] 
       (.C(coreclk),
        .CE(mdc_rising),
        .D(\shift_reg[14]_i_1_n_0 ),
        .Q(Q[14]),
        .R(1'b0));
  FDRE \shift_reg_reg[15] 
       (.C(coreclk),
        .CE(mdc_rising),
        .D(\shift_reg[15]_i_1_n_0 ),
        .Q(Q[15]),
        .R(1'b0));
  FDRE \shift_reg_reg[1] 
       (.C(coreclk),
        .CE(mdc_rising),
        .D(\shift_reg[1]_i_1_n_0 ),
        .Q(Q[1]),
        .R(1'b0));
  FDRE \shift_reg_reg[2] 
       (.C(coreclk),
        .CE(mdc_rising),
        .D(\shift_reg[2]_i_1_n_0 ),
        .Q(Q[2]),
        .R(1'b0));
  FDRE \shift_reg_reg[3] 
       (.C(coreclk),
        .CE(mdc_rising),
        .D(\shift_reg[3]_i_1_n_0 ),
        .Q(Q[3]),
        .R(1'b0));
  FDRE \shift_reg_reg[4] 
       (.C(coreclk),
        .CE(mdc_rising),
        .D(\shift_reg[4]_i_1_n_0 ),
        .Q(Q[4]),
        .R(1'b0));
  FDRE \shift_reg_reg[5] 
       (.C(coreclk),
        .CE(mdc_rising),
        .D(\shift_reg[5]_i_1_n_0 ),
        .Q(Q[5]),
        .R(1'b0));
  FDRE \shift_reg_reg[6] 
       (.C(coreclk),
        .CE(mdc_rising),
        .D(\shift_reg[6]_i_1_n_0 ),
        .Q(Q[6]),
        .R(1'b0));
  FDRE \shift_reg_reg[7] 
       (.C(coreclk),
        .CE(mdc_rising),
        .D(\shift_reg[7]_i_1_n_0 ),
        .Q(Q[7]),
        .R(1'b0));
  FDRE \shift_reg_reg[8] 
       (.C(coreclk),
        .CE(mdc_rising),
        .D(\shift_reg[8]_i_1_n_0 ),
        .Q(Q[8]),
        .R(1'b0));
  FDRE \shift_reg_reg[9] 
       (.C(coreclk),
        .CE(mdc_rising),
        .D(\shift_reg[9]_i_1_n_0 ),
        .Q(Q[9]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h0040)) 
    we_i_1
       (.I0(mdio_out_i_2_n_0),
        .I1(p_1_in),
        .I2(opcode[0]),
        .I3(opcode[1]),
        .O(we0_out));
  FDRE we_reg
       (.C(coreclk),
        .CE(mdc_rising),
        .D(we0_out),
        .Q(mdio_we),
        .R(areset_coreclk));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_15_pcs_descramble" *) 
module ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_pcs_descramble
   (rx_66_enc,
    \mcp1_descr_reg_reg[0]_0 ,
    SR,
    \mcp1_descr_reg_reg[31]_0 ,
    rxusrclk2);
  output [57:0]rx_66_enc;
  input [63:0]\mcp1_descr_reg_reg[0]_0 ;
  input [0:0]SR;
  input [2:0]\mcp1_descr_reg_reg[31]_0 ;
  input rxusrclk2;

  wire [0:0]SR;
  wire [63:0]\mcp1_descr_reg_reg[0]_0 ;
  wire [2:0]\mcp1_descr_reg_reg[31]_0 ;
  wire \mcp1_descr_reg_reg_n_0_[0] ;
  wire p_0_in;
  wire p_0_in102_in;
  wire p_0_in105_in;
  wire p_0_in108_in;
  wire p_0_in111_in;
  wire p_0_in114_in;
  wire p_0_in117_in;
  wire p_0_in120_in;
  wire p_0_in123_in;
  wire p_0_in126_in;
  wire p_0_in12_in;
  wire p_0_in16_in;
  wire p_0_in1_in;
  wire p_0_in20_in;
  wire p_0_in24_in;
  wire p_0_in28_in;
  wire p_0_in32_in;
  wire p_0_in36_in;
  wire p_0_in40_in;
  wire p_0_in44_in;
  wire p_0_in48_in;
  wire p_0_in4_in;
  wire p_0_in52_in;
  wire p_0_in56_in;
  wire p_0_in60_in;
  wire p_0_in64_in;
  wire p_0_in68_in;
  wire p_0_in72_in;
  wire p_0_in75_in;
  wire p_0_in78_in;
  wire p_0_in81_in;
  wire p_0_in84_in;
  wire p_0_in87_in;
  wire p_0_in8_in;
  wire p_0_in90_in;
  wire p_0_in93_in;
  wire p_0_in96_in;
  wire p_0_in99_in;
  wire p_2_in;
  wire p_2_in13_in;
  wire p_2_in17_in;
  wire p_2_in21_in;
  wire p_2_in25_in;
  wire p_2_in29_in;
  wire p_2_in2_in;
  wire p_2_in33_in;
  wire p_2_in37_in;
  wire p_2_in41_in;
  wire p_2_in45_in;
  wire p_2_in49_in;
  wire p_2_in53_in;
  wire p_2_in57_in;
  wire p_2_in5_in;
  wire p_2_in61_in;
  wire p_2_in65_in;
  wire p_2_in69_in;
  wire p_2_in9_in;
  wire [57:0]rx_66_enc;
  wire rxusrclk2;

  FDRE \mcp1_descr_reg_reg[0] 
       (.C(rxusrclk2),
        .CE(\mcp1_descr_reg_reg[31]_0 [0]),
        .D(\mcp1_descr_reg_reg[0]_0 [63]),
        .Q(\mcp1_descr_reg_reg_n_0_[0] ),
        .R(SR));
  FDRE \mcp1_descr_reg_reg[10] 
       (.C(rxusrclk2),
        .CE(\mcp1_descr_reg_reg[31]_0 [1]),
        .D(\mcp1_descr_reg_reg[0]_0 [53]),
        .Q(p_0_in99_in),
        .R(SR));
  FDRE \mcp1_descr_reg_reg[11] 
       (.C(rxusrclk2),
        .CE(\mcp1_descr_reg_reg[31]_0 [1]),
        .D(\mcp1_descr_reg_reg[0]_0 [52]),
        .Q(p_0_in96_in),
        .R(SR));
  FDRE \mcp1_descr_reg_reg[12] 
       (.C(rxusrclk2),
        .CE(\mcp1_descr_reg_reg[31]_0 [1]),
        .D(\mcp1_descr_reg_reg[0]_0 [51]),
        .Q(p_0_in93_in),
        .R(SR));
  FDRE \mcp1_descr_reg_reg[13] 
       (.C(rxusrclk2),
        .CE(\mcp1_descr_reg_reg[31]_0 [1]),
        .D(\mcp1_descr_reg_reg[0]_0 [50]),
        .Q(p_0_in90_in),
        .R(SR));
  FDRE \mcp1_descr_reg_reg[14] 
       (.C(rxusrclk2),
        .CE(\mcp1_descr_reg_reg[31]_0 [1]),
        .D(\mcp1_descr_reg_reg[0]_0 [49]),
        .Q(p_0_in87_in),
        .R(SR));
  FDRE \mcp1_descr_reg_reg[15] 
       (.C(rxusrclk2),
        .CE(\mcp1_descr_reg_reg[31]_0 [1]),
        .D(\mcp1_descr_reg_reg[0]_0 [48]),
        .Q(p_0_in84_in),
        .R(SR));
  FDRE \mcp1_descr_reg_reg[16] 
       (.C(rxusrclk2),
        .CE(\mcp1_descr_reg_reg[31]_0 [1]),
        .D(\mcp1_descr_reg_reg[0]_0 [47]),
        .Q(p_0_in81_in),
        .R(SR));
  FDRE \mcp1_descr_reg_reg[17] 
       (.C(rxusrclk2),
        .CE(\mcp1_descr_reg_reg[31]_0 [1]),
        .D(\mcp1_descr_reg_reg[0]_0 [46]),
        .Q(p_0_in78_in),
        .R(SR));
  FDRE \mcp1_descr_reg_reg[18] 
       (.C(rxusrclk2),
        .CE(\mcp1_descr_reg_reg[31]_0 [1]),
        .D(\mcp1_descr_reg_reg[0]_0 [45]),
        .Q(p_0_in75_in),
        .R(SR));
  FDRE \mcp1_descr_reg_reg[19] 
       (.C(rxusrclk2),
        .CE(\mcp1_descr_reg_reg[31]_0 [1]),
        .D(\mcp1_descr_reg_reg[0]_0 [44]),
        .Q(p_0_in72_in),
        .R(SR));
  FDRE \mcp1_descr_reg_reg[1] 
       (.C(rxusrclk2),
        .CE(\mcp1_descr_reg_reg[31]_0 [1]),
        .D(\mcp1_descr_reg_reg[0]_0 [62]),
        .Q(p_0_in126_in),
        .R(SR));
  FDRE \mcp1_descr_reg_reg[20] 
       (.C(rxusrclk2),
        .CE(\mcp1_descr_reg_reg[31]_0 [1]),
        .D(\mcp1_descr_reg_reg[0]_0 [43]),
        .Q(p_0_in68_in),
        .R(SR));
  FDRE \mcp1_descr_reg_reg[21] 
       (.C(rxusrclk2),
        .CE(\mcp1_descr_reg_reg[31]_0 [1]),
        .D(\mcp1_descr_reg_reg[0]_0 [42]),
        .Q(p_0_in64_in),
        .R(SR));
  FDRE \mcp1_descr_reg_reg[22] 
       (.C(rxusrclk2),
        .CE(\mcp1_descr_reg_reg[31]_0 [1]),
        .D(\mcp1_descr_reg_reg[0]_0 [41]),
        .Q(p_0_in60_in),
        .R(SR));
  FDRE \mcp1_descr_reg_reg[23] 
       (.C(rxusrclk2),
        .CE(\mcp1_descr_reg_reg[31]_0 [1]),
        .D(\mcp1_descr_reg_reg[0]_0 [40]),
        .Q(p_0_in56_in),
        .R(SR));
  FDRE \mcp1_descr_reg_reg[24] 
       (.C(rxusrclk2),
        .CE(\mcp1_descr_reg_reg[31]_0 [1]),
        .D(\mcp1_descr_reg_reg[0]_0 [39]),
        .Q(p_0_in52_in),
        .R(SR));
  FDRE \mcp1_descr_reg_reg[25] 
       (.C(rxusrclk2),
        .CE(\mcp1_descr_reg_reg[31]_0 [1]),
        .D(\mcp1_descr_reg_reg[0]_0 [38]),
        .Q(p_0_in48_in),
        .R(SR));
  FDRE \mcp1_descr_reg_reg[26] 
       (.C(rxusrclk2),
        .CE(\mcp1_descr_reg_reg[31]_0 [1]),
        .D(\mcp1_descr_reg_reg[0]_0 [37]),
        .Q(p_0_in44_in),
        .R(SR));
  FDRE \mcp1_descr_reg_reg[27] 
       (.C(rxusrclk2),
        .CE(\mcp1_descr_reg_reg[31]_0 [1]),
        .D(\mcp1_descr_reg_reg[0]_0 [36]),
        .Q(p_0_in40_in),
        .R(SR));
  FDRE \mcp1_descr_reg_reg[28] 
       (.C(rxusrclk2),
        .CE(\mcp1_descr_reg_reg[31]_0 [1]),
        .D(\mcp1_descr_reg_reg[0]_0 [35]),
        .Q(p_0_in36_in),
        .R(SR));
  FDRE \mcp1_descr_reg_reg[29] 
       (.C(rxusrclk2),
        .CE(\mcp1_descr_reg_reg[31]_0 [1]),
        .D(\mcp1_descr_reg_reg[0]_0 [34]),
        .Q(p_0_in32_in),
        .R(SR));
  FDRE \mcp1_descr_reg_reg[2] 
       (.C(rxusrclk2),
        .CE(\mcp1_descr_reg_reg[31]_0 [1]),
        .D(\mcp1_descr_reg_reg[0]_0 [61]),
        .Q(p_0_in123_in),
        .R(SR));
  FDRE \mcp1_descr_reg_reg[30] 
       (.C(rxusrclk2),
        .CE(\mcp1_descr_reg_reg[31]_0 [1]),
        .D(\mcp1_descr_reg_reg[0]_0 [33]),
        .Q(p_0_in28_in),
        .R(SR));
  FDRE \mcp1_descr_reg_reg[31] 
       (.C(rxusrclk2),
        .CE(\mcp1_descr_reg_reg[31]_0 [2]),
        .D(\mcp1_descr_reg_reg[0]_0 [32]),
        .Q(p_0_in24_in),
        .R(SR));
  FDRE \mcp1_descr_reg_reg[32] 
       (.C(rxusrclk2),
        .CE(\mcp1_descr_reg_reg[31]_0 [2]),
        .D(\mcp1_descr_reg_reg[0]_0 [31]),
        .Q(p_0_in20_in),
        .R(SR));
  FDRE \mcp1_descr_reg_reg[33] 
       (.C(rxusrclk2),
        .CE(\mcp1_descr_reg_reg[31]_0 [2]),
        .D(\mcp1_descr_reg_reg[0]_0 [30]),
        .Q(p_0_in16_in),
        .R(SR));
  FDRE \mcp1_descr_reg_reg[34] 
       (.C(rxusrclk2),
        .CE(\mcp1_descr_reg_reg[31]_0 [2]),
        .D(\mcp1_descr_reg_reg[0]_0 [29]),
        .Q(p_0_in12_in),
        .R(SR));
  FDRE \mcp1_descr_reg_reg[35] 
       (.C(rxusrclk2),
        .CE(\mcp1_descr_reg_reg[31]_0 [2]),
        .D(\mcp1_descr_reg_reg[0]_0 [28]),
        .Q(p_0_in8_in),
        .R(SR));
  FDRE \mcp1_descr_reg_reg[36] 
       (.C(rxusrclk2),
        .CE(\mcp1_descr_reg_reg[31]_0 [2]),
        .D(\mcp1_descr_reg_reg[0]_0 [27]),
        .Q(p_0_in4_in),
        .R(SR));
  FDRE \mcp1_descr_reg_reg[37] 
       (.C(rxusrclk2),
        .CE(\mcp1_descr_reg_reg[31]_0 [2]),
        .D(\mcp1_descr_reg_reg[0]_0 [26]),
        .Q(p_0_in1_in),
        .R(SR));
  FDRE \mcp1_descr_reg_reg[38] 
       (.C(rxusrclk2),
        .CE(\mcp1_descr_reg_reg[31]_0 [2]),
        .D(\mcp1_descr_reg_reg[0]_0 [25]),
        .Q(p_0_in),
        .R(SR));
  FDRE \mcp1_descr_reg_reg[39] 
       (.C(rxusrclk2),
        .CE(\mcp1_descr_reg_reg[31]_0 [2]),
        .D(\mcp1_descr_reg_reg[0]_0 [24]),
        .Q(p_2_in69_in),
        .R(SR));
  FDRE \mcp1_descr_reg_reg[3] 
       (.C(rxusrclk2),
        .CE(\mcp1_descr_reg_reg[31]_0 [1]),
        .D(\mcp1_descr_reg_reg[0]_0 [60]),
        .Q(p_0_in120_in),
        .R(SR));
  FDRE \mcp1_descr_reg_reg[40] 
       (.C(rxusrclk2),
        .CE(\mcp1_descr_reg_reg[31]_0 [2]),
        .D(\mcp1_descr_reg_reg[0]_0 [23]),
        .Q(p_2_in65_in),
        .R(SR));
  FDRE \mcp1_descr_reg_reg[41] 
       (.C(rxusrclk2),
        .CE(\mcp1_descr_reg_reg[31]_0 [2]),
        .D(\mcp1_descr_reg_reg[0]_0 [22]),
        .Q(p_2_in61_in),
        .R(SR));
  FDRE \mcp1_descr_reg_reg[42] 
       (.C(rxusrclk2),
        .CE(\mcp1_descr_reg_reg[31]_0 [2]),
        .D(\mcp1_descr_reg_reg[0]_0 [21]),
        .Q(p_2_in57_in),
        .R(SR));
  FDRE \mcp1_descr_reg_reg[43] 
       (.C(rxusrclk2),
        .CE(\mcp1_descr_reg_reg[31]_0 [2]),
        .D(\mcp1_descr_reg_reg[0]_0 [20]),
        .Q(p_2_in53_in),
        .R(SR));
  FDRE \mcp1_descr_reg_reg[44] 
       (.C(rxusrclk2),
        .CE(\mcp1_descr_reg_reg[31]_0 [2]),
        .D(\mcp1_descr_reg_reg[0]_0 [19]),
        .Q(p_2_in49_in),
        .R(SR));
  FDRE \mcp1_descr_reg_reg[45] 
       (.C(rxusrclk2),
        .CE(\mcp1_descr_reg_reg[31]_0 [2]),
        .D(\mcp1_descr_reg_reg[0]_0 [18]),
        .Q(p_2_in45_in),
        .R(SR));
  FDRE \mcp1_descr_reg_reg[46] 
       (.C(rxusrclk2),
        .CE(\mcp1_descr_reg_reg[31]_0 [2]),
        .D(\mcp1_descr_reg_reg[0]_0 [17]),
        .Q(p_2_in41_in),
        .R(SR));
  FDRE \mcp1_descr_reg_reg[47] 
       (.C(rxusrclk2),
        .CE(\mcp1_descr_reg_reg[31]_0 [2]),
        .D(\mcp1_descr_reg_reg[0]_0 [16]),
        .Q(p_2_in37_in),
        .R(SR));
  FDRE \mcp1_descr_reg_reg[48] 
       (.C(rxusrclk2),
        .CE(\mcp1_descr_reg_reg[31]_0 [2]),
        .D(\mcp1_descr_reg_reg[0]_0 [15]),
        .Q(p_2_in33_in),
        .R(SR));
  FDRE \mcp1_descr_reg_reg[49] 
       (.C(rxusrclk2),
        .CE(\mcp1_descr_reg_reg[31]_0 [2]),
        .D(\mcp1_descr_reg_reg[0]_0 [14]),
        .Q(p_2_in29_in),
        .R(SR));
  FDRE \mcp1_descr_reg_reg[4] 
       (.C(rxusrclk2),
        .CE(\mcp1_descr_reg_reg[31]_0 [1]),
        .D(\mcp1_descr_reg_reg[0]_0 [59]),
        .Q(p_0_in117_in),
        .R(SR));
  FDRE \mcp1_descr_reg_reg[50] 
       (.C(rxusrclk2),
        .CE(\mcp1_descr_reg_reg[31]_0 [2]),
        .D(\mcp1_descr_reg_reg[0]_0 [13]),
        .Q(p_2_in25_in),
        .R(SR));
  FDRE \mcp1_descr_reg_reg[51] 
       (.C(rxusrclk2),
        .CE(\mcp1_descr_reg_reg[31]_0 [2]),
        .D(\mcp1_descr_reg_reg[0]_0 [12]),
        .Q(p_2_in21_in),
        .R(SR));
  FDRE \mcp1_descr_reg_reg[52] 
       (.C(rxusrclk2),
        .CE(\mcp1_descr_reg_reg[31]_0 [2]),
        .D(\mcp1_descr_reg_reg[0]_0 [11]),
        .Q(p_2_in17_in),
        .R(SR));
  FDRE \mcp1_descr_reg_reg[53] 
       (.C(rxusrclk2),
        .CE(\mcp1_descr_reg_reg[31]_0 [2]),
        .D(\mcp1_descr_reg_reg[0]_0 [10]),
        .Q(p_2_in13_in),
        .R(SR));
  FDRE \mcp1_descr_reg_reg[54] 
       (.C(rxusrclk2),
        .CE(\mcp1_descr_reg_reg[31]_0 [2]),
        .D(\mcp1_descr_reg_reg[0]_0 [9]),
        .Q(p_2_in9_in),
        .R(SR));
  FDRE \mcp1_descr_reg_reg[55] 
       (.C(rxusrclk2),
        .CE(\mcp1_descr_reg_reg[31]_0 [2]),
        .D(\mcp1_descr_reg_reg[0]_0 [8]),
        .Q(p_2_in5_in),
        .R(SR));
  FDRE \mcp1_descr_reg_reg[56] 
       (.C(rxusrclk2),
        .CE(\mcp1_descr_reg_reg[31]_0 [2]),
        .D(\mcp1_descr_reg_reg[0]_0 [7]),
        .Q(p_2_in2_in),
        .R(SR));
  FDRE \mcp1_descr_reg_reg[57] 
       (.C(rxusrclk2),
        .CE(\mcp1_descr_reg_reg[31]_0 [2]),
        .D(\mcp1_descr_reg_reg[0]_0 [6]),
        .Q(p_2_in),
        .R(SR));
  FDRE \mcp1_descr_reg_reg[5] 
       (.C(rxusrclk2),
        .CE(\mcp1_descr_reg_reg[31]_0 [1]),
        .D(\mcp1_descr_reg_reg[0]_0 [58]),
        .Q(p_0_in114_in),
        .R(SR));
  FDRE \mcp1_descr_reg_reg[6] 
       (.C(rxusrclk2),
        .CE(\mcp1_descr_reg_reg[31]_0 [1]),
        .D(\mcp1_descr_reg_reg[0]_0 [57]),
        .Q(p_0_in111_in),
        .R(SR));
  FDRE \mcp1_descr_reg_reg[7] 
       (.C(rxusrclk2),
        .CE(\mcp1_descr_reg_reg[31]_0 [1]),
        .D(\mcp1_descr_reg_reg[0]_0 [56]),
        .Q(p_0_in108_in),
        .R(SR));
  FDRE \mcp1_descr_reg_reg[8] 
       (.C(rxusrclk2),
        .CE(\mcp1_descr_reg_reg[31]_0 [1]),
        .D(\mcp1_descr_reg_reg[0]_0 [55]),
        .Q(p_0_in105_in),
        .R(SR));
  FDRE \mcp1_descr_reg_reg[9] 
       (.C(rxusrclk2),
        .CE(\mcp1_descr_reg_reg[31]_0 [1]),
        .D(\mcp1_descr_reg_reg[0]_0 [54]),
        .Q(p_0_in102_in),
        .R(SR));
  (* SOFT_HLUTNM = "soft_lutpair163" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[10]_i_1 
       (.I0(p_0_in28_in),
        .I1(\mcp1_descr_reg_reg[0]_0 [8]),
        .I2(p_2_in29_in),
        .O(rx_66_enc[8]));
  (* SOFT_HLUTNM = "soft_lutpair164" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[11]_i_1 
       (.I0(p_0_in32_in),
        .I1(\mcp1_descr_reg_reg[0]_0 [9]),
        .I2(p_2_in33_in),
        .O(rx_66_enc[9]));
  (* SOFT_HLUTNM = "soft_lutpair165" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[12]_i_1 
       (.I0(p_0_in36_in),
        .I1(\mcp1_descr_reg_reg[0]_0 [10]),
        .I2(p_2_in37_in),
        .O(rx_66_enc[10]));
  (* SOFT_HLUTNM = "soft_lutpair166" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[13]_i_1 
       (.I0(p_0_in40_in),
        .I1(\mcp1_descr_reg_reg[0]_0 [11]),
        .I2(p_2_in41_in),
        .O(rx_66_enc[11]));
  (* SOFT_HLUTNM = "soft_lutpair167" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[14]_i_1 
       (.I0(p_0_in44_in),
        .I1(\mcp1_descr_reg_reg[0]_0 [12]),
        .I2(p_2_in45_in),
        .O(rx_66_enc[12]));
  (* SOFT_HLUTNM = "soft_lutpair168" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[15]_i_1 
       (.I0(p_0_in48_in),
        .I1(\mcp1_descr_reg_reg[0]_0 [13]),
        .I2(p_2_in49_in),
        .O(rx_66_enc[13]));
  (* SOFT_HLUTNM = "soft_lutpair169" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[16]_i_1 
       (.I0(p_0_in52_in),
        .I1(\mcp1_descr_reg_reg[0]_0 [14]),
        .I2(p_2_in53_in),
        .O(rx_66_enc[14]));
  (* SOFT_HLUTNM = "soft_lutpair170" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[17]_i_1 
       (.I0(p_0_in56_in),
        .I1(\mcp1_descr_reg_reg[0]_0 [15]),
        .I2(p_2_in57_in),
        .O(rx_66_enc[15]));
  (* SOFT_HLUTNM = "soft_lutpair171" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[18]_i_1 
       (.I0(p_0_in60_in),
        .I1(\mcp1_descr_reg_reg[0]_0 [16]),
        .I2(p_2_in61_in),
        .O(rx_66_enc[16]));
  (* SOFT_HLUTNM = "soft_lutpair172" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[19]_i_1 
       (.I0(p_0_in64_in),
        .I1(\mcp1_descr_reg_reg[0]_0 [17]),
        .I2(p_2_in65_in),
        .O(rx_66_enc[17]));
  (* SOFT_HLUTNM = "soft_lutpair173" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[20]_i_1 
       (.I0(p_0_in68_in),
        .I1(\mcp1_descr_reg_reg[0]_0 [18]),
        .I2(p_2_in69_in),
        .O(rx_66_enc[18]));
  (* SOFT_HLUTNM = "soft_lutpair155" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[21]_i_1 
       (.I0(p_0_in72_in),
        .I1(\mcp1_descr_reg_reg[0]_0 [19]),
        .I2(p_0_in),
        .O(rx_66_enc[19]));
  (* SOFT_HLUTNM = "soft_lutpair156" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[22]_i_1 
       (.I0(p_0_in75_in),
        .I1(\mcp1_descr_reg_reg[0]_0 [20]),
        .I2(p_0_in1_in),
        .O(rx_66_enc[20]));
  (* SOFT_HLUTNM = "soft_lutpair157" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[23]_i_1 
       (.I0(p_0_in78_in),
        .I1(\mcp1_descr_reg_reg[0]_0 [21]),
        .I2(p_0_in4_in),
        .O(rx_66_enc[21]));
  (* SOFT_HLUTNM = "soft_lutpair158" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[24]_i_1 
       (.I0(p_0_in81_in),
        .I1(\mcp1_descr_reg_reg[0]_0 [22]),
        .I2(p_0_in8_in),
        .O(rx_66_enc[22]));
  (* SOFT_HLUTNM = "soft_lutpair159" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[25]_i_1 
       (.I0(p_0_in84_in),
        .I1(\mcp1_descr_reg_reg[0]_0 [23]),
        .I2(p_0_in12_in),
        .O(rx_66_enc[23]));
  (* SOFT_HLUTNM = "soft_lutpair160" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[26]_i_1 
       (.I0(p_0_in87_in),
        .I1(\mcp1_descr_reg_reg[0]_0 [24]),
        .I2(p_0_in16_in),
        .O(rx_66_enc[24]));
  (* SOFT_HLUTNM = "soft_lutpair161" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[27]_i_1 
       (.I0(p_0_in90_in),
        .I1(\mcp1_descr_reg_reg[0]_0 [25]),
        .I2(p_0_in20_in),
        .O(rx_66_enc[25]));
  (* SOFT_HLUTNM = "soft_lutpair162" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[28]_i_1 
       (.I0(p_0_in93_in),
        .I1(\mcp1_descr_reg_reg[0]_0 [26]),
        .I2(p_0_in24_in),
        .O(rx_66_enc[26]));
  (* SOFT_HLUTNM = "soft_lutpair163" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[29]_i_1 
       (.I0(p_0_in96_in),
        .I1(\mcp1_descr_reg_reg[0]_0 [27]),
        .I2(p_0_in28_in),
        .O(rx_66_enc[27]));
  (* SOFT_HLUTNM = "soft_lutpair155" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[2]_i_1 
       (.I0(p_0_in),
        .I1(\mcp1_descr_reg_reg[0]_0 [0]),
        .I2(p_2_in),
        .O(rx_66_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair164" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[30]_i_1 
       (.I0(p_0_in99_in),
        .I1(\mcp1_descr_reg_reg[0]_0 [28]),
        .I2(p_0_in32_in),
        .O(rx_66_enc[28]));
  (* SOFT_HLUTNM = "soft_lutpair165" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[31]_i_1 
       (.I0(p_0_in102_in),
        .I1(\mcp1_descr_reg_reg[0]_0 [29]),
        .I2(p_0_in36_in),
        .O(rx_66_enc[29]));
  (* SOFT_HLUTNM = "soft_lutpair166" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[32]_i_1 
       (.I0(p_0_in105_in),
        .I1(\mcp1_descr_reg_reg[0]_0 [30]),
        .I2(p_0_in40_in),
        .O(rx_66_enc[30]));
  (* SOFT_HLUTNM = "soft_lutpair167" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[33]_i_1 
       (.I0(p_0_in108_in),
        .I1(\mcp1_descr_reg_reg[0]_0 [31]),
        .I2(p_0_in44_in),
        .O(rx_66_enc[31]));
  (* SOFT_HLUTNM = "soft_lutpair168" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[34]_i_1 
       (.I0(p_0_in111_in),
        .I1(\mcp1_descr_reg_reg[0]_0 [32]),
        .I2(p_0_in48_in),
        .O(rx_66_enc[32]));
  (* SOFT_HLUTNM = "soft_lutpair169" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[35]_i_1 
       (.I0(p_0_in114_in),
        .I1(\mcp1_descr_reg_reg[0]_0 [33]),
        .I2(p_0_in52_in),
        .O(rx_66_enc[33]));
  (* SOFT_HLUTNM = "soft_lutpair170" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[36]_i_1 
       (.I0(p_0_in117_in),
        .I1(\mcp1_descr_reg_reg[0]_0 [34]),
        .I2(p_0_in56_in),
        .O(rx_66_enc[34]));
  (* SOFT_HLUTNM = "soft_lutpair171" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[37]_i_1 
       (.I0(p_0_in120_in),
        .I1(\mcp1_descr_reg_reg[0]_0 [35]),
        .I2(p_0_in60_in),
        .O(rx_66_enc[35]));
  (* SOFT_HLUTNM = "soft_lutpair172" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[38]_i_1 
       (.I0(p_0_in123_in),
        .I1(\mcp1_descr_reg_reg[0]_0 [36]),
        .I2(p_0_in64_in),
        .O(rx_66_enc[36]));
  (* SOFT_HLUTNM = "soft_lutpair173" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[39]_i_1 
       (.I0(p_0_in126_in),
        .I1(\mcp1_descr_reg_reg[0]_0 [37]),
        .I2(p_0_in68_in),
        .O(rx_66_enc[37]));
  (* SOFT_HLUTNM = "soft_lutpair156" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[3]_i_1 
       (.I0(p_0_in1_in),
        .I1(\mcp1_descr_reg_reg[0]_0 [1]),
        .I2(p_2_in2_in),
        .O(rx_66_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair174" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[40]_i_1 
       (.I0(\mcp1_descr_reg_reg_n_0_[0] ),
        .I1(\mcp1_descr_reg_reg[0]_0 [38]),
        .I2(p_0_in72_in),
        .O(rx_66_enc[38]));
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[41]_i_1 
       (.I0(\mcp1_descr_reg_reg[0]_0 [0]),
        .I1(\mcp1_descr_reg_reg[0]_0 [39]),
        .I2(p_0_in75_in),
        .O(rx_66_enc[39]));
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[42]_i_1 
       (.I0(\mcp1_descr_reg_reg[0]_0 [1]),
        .I1(\mcp1_descr_reg_reg[0]_0 [40]),
        .I2(p_0_in78_in),
        .O(rx_66_enc[40]));
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[43]_i_1 
       (.I0(\mcp1_descr_reg_reg[0]_0 [2]),
        .I1(\mcp1_descr_reg_reg[0]_0 [41]),
        .I2(p_0_in81_in),
        .O(rx_66_enc[41]));
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[44]_i_1 
       (.I0(\mcp1_descr_reg_reg[0]_0 [3]),
        .I1(\mcp1_descr_reg_reg[0]_0 [42]),
        .I2(p_0_in84_in),
        .O(rx_66_enc[42]));
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[45]_i_1 
       (.I0(\mcp1_descr_reg_reg[0]_0 [4]),
        .I1(\mcp1_descr_reg_reg[0]_0 [43]),
        .I2(p_0_in87_in),
        .O(rx_66_enc[43]));
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[46]_i_1 
       (.I0(\mcp1_descr_reg_reg[0]_0 [5]),
        .I1(\mcp1_descr_reg_reg[0]_0 [44]),
        .I2(p_0_in90_in),
        .O(rx_66_enc[44]));
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[47]_i_1 
       (.I0(\mcp1_descr_reg_reg[0]_0 [6]),
        .I1(\mcp1_descr_reg_reg[0]_0 [45]),
        .I2(p_0_in93_in),
        .O(rx_66_enc[45]));
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[48]_i_1 
       (.I0(\mcp1_descr_reg_reg[0]_0 [7]),
        .I1(\mcp1_descr_reg_reg[0]_0 [46]),
        .I2(p_0_in96_in),
        .O(rx_66_enc[46]));
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[49]_i_1 
       (.I0(\mcp1_descr_reg_reg[0]_0 [8]),
        .I1(\mcp1_descr_reg_reg[0]_0 [47]),
        .I2(p_0_in99_in),
        .O(rx_66_enc[47]));
  (* SOFT_HLUTNM = "soft_lutpair157" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[4]_i_1 
       (.I0(p_0_in4_in),
        .I1(\mcp1_descr_reg_reg[0]_0 [2]),
        .I2(p_2_in5_in),
        .O(rx_66_enc[2]));
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[50]_i_1 
       (.I0(\mcp1_descr_reg_reg[0]_0 [9]),
        .I1(\mcp1_descr_reg_reg[0]_0 [48]),
        .I2(p_0_in102_in),
        .O(rx_66_enc[48]));
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[51]_i_1 
       (.I0(\mcp1_descr_reg_reg[0]_0 [10]),
        .I1(\mcp1_descr_reg_reg[0]_0 [49]),
        .I2(p_0_in105_in),
        .O(rx_66_enc[49]));
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[52]_i_1 
       (.I0(\mcp1_descr_reg_reg[0]_0 [11]),
        .I1(\mcp1_descr_reg_reg[0]_0 [50]),
        .I2(p_0_in108_in),
        .O(rx_66_enc[50]));
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[53]_i_1 
       (.I0(\mcp1_descr_reg_reg[0]_0 [12]),
        .I1(\mcp1_descr_reg_reg[0]_0 [51]),
        .I2(p_0_in111_in),
        .O(rx_66_enc[51]));
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[54]_i_1 
       (.I0(\mcp1_descr_reg_reg[0]_0 [13]),
        .I1(\mcp1_descr_reg_reg[0]_0 [52]),
        .I2(p_0_in114_in),
        .O(rx_66_enc[52]));
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[55]_i_1 
       (.I0(\mcp1_descr_reg_reg[0]_0 [14]),
        .I1(\mcp1_descr_reg_reg[0]_0 [53]),
        .I2(p_0_in117_in),
        .O(rx_66_enc[53]));
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[56]_i_1 
       (.I0(\mcp1_descr_reg_reg[0]_0 [15]),
        .I1(\mcp1_descr_reg_reg[0]_0 [54]),
        .I2(p_0_in120_in),
        .O(rx_66_enc[54]));
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[57]_i_1 
       (.I0(\mcp1_descr_reg_reg[0]_0 [16]),
        .I1(\mcp1_descr_reg_reg[0]_0 [55]),
        .I2(p_0_in123_in),
        .O(rx_66_enc[55]));
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[58]_i_1 
       (.I0(\mcp1_descr_reg_reg[0]_0 [17]),
        .I1(\mcp1_descr_reg_reg[0]_0 [56]),
        .I2(p_0_in126_in),
        .O(rx_66_enc[56]));
  (* SOFT_HLUTNM = "soft_lutpair174" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[59]_i_1 
       (.I0(\mcp1_descr_reg_reg[0]_0 [18]),
        .I1(\mcp1_descr_reg_reg[0]_0 [57]),
        .I2(\mcp1_descr_reg_reg_n_0_[0] ),
        .O(rx_66_enc[57]));
  (* SOFT_HLUTNM = "soft_lutpair158" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[5]_i_1 
       (.I0(p_0_in8_in),
        .I1(\mcp1_descr_reg_reg[0]_0 [3]),
        .I2(p_2_in9_in),
        .O(rx_66_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair159" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[6]_i_1 
       (.I0(p_0_in12_in),
        .I1(\mcp1_descr_reg_reg[0]_0 [4]),
        .I2(p_2_in13_in),
        .O(rx_66_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair160" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[7]_i_1 
       (.I0(p_0_in16_in),
        .I1(\mcp1_descr_reg_reg[0]_0 [5]),
        .I2(p_2_in17_in),
        .O(rx_66_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair161" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[8]_i_1 
       (.I0(p_0_in20_in),
        .I1(\mcp1_descr_reg_reg[0]_0 [6]),
        .I2(p_2_in21_in),
        .O(rx_66_enc[6]));
  (* SOFT_HLUTNM = "soft_lutpair162" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[9]_i_1 
       (.I0(p_0_in24_in),
        .I1(\mcp1_descr_reg_reg[0]_0 [7]),
        .I2(p_2_in25_in),
        .O(rx_66_enc[7]));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_15_pcs_scramble" *) 
module ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_pcs_scramble
   (new_tx_test_seed,
    Q,
    tx_66_fifo,
    coreclk,
    out,
    new_tx_test_seed_reg_0,
    pseudo_rand_seeds_int,
    \scr_reg_reg[56]_0 ,
    \rd_data_reg[7] ,
    \rd_data_reg[61] );
  output new_tx_test_seed;
  output [0:0]Q;
  output [63:0]tx_66_fifo;
  input coreclk;
  input out;
  input [1:0]new_tx_test_seed_reg_0;
  input [115:0]pseudo_rand_seeds_int;
  input \scr_reg_reg[56]_0 ;
  input \rd_data_reg[7] ;
  input [63:0]\rd_data_reg[61] ;

  wire [0:0]Q;
  wire asynch_fifo_i_i_67_n_0;
  wire asynch_fifo_i_i_68_n_0;
  wire asynch_fifo_i_i_69_n_0;
  wire asynch_fifo_i_i_70_n_0;
  wire asynch_fifo_i_i_71_n_0;
  wire asynch_fifo_i_i_72_n_0;
  wire asynch_fifo_i_i_73_n_0;
  wire asynch_fifo_i_i_74_n_0;
  wire asynch_fifo_i_i_75_n_0;
  wire asynch_fifo_i_i_76_n_0;
  wire asynch_fifo_i_i_77_n_0;
  wire asynch_fifo_i_i_78_n_0;
  wire asynch_fifo_i_i_79_n_0;
  wire asynch_fifo_i_i_81_n_0;
  wire asynch_fifo_i_i_82_n_0;
  wire asynch_fifo_i_i_83_n_0;
  wire asynch_fifo_i_i_84_n_0;
  wire asynch_fifo_i_i_85_n_0;
  wire asynch_fifo_i_i_86_n_0;
  wire asynch_fifo_i_i_87_n_0;
  wire asynch_fifo_i_i_88_n_0;
  wire asynch_fifo_i_i_89_n_0;
  wire asynch_fifo_i_i_90_n_0;
  wire asynch_fifo_i_i_91_n_0;
  wire asynch_fifo_i_i_92_n_0;
  wire [6:0]block_count_reg;
  wire coreclk;
  wire new_tx_test_seed;
  wire new_tx_test_seed_i_1_n_0;
  wire [1:0]new_tx_test_seed_reg_0;
  wire out;
  wire [6:0]p_0_in;
  wire p_0_in0_in;
  wire p_0_in12_in;
  wire p_0_in151_in;
  wire p_0_in160_in;
  wire p_0_in16_in;
  wire p_0_in170_in;
  wire p_0_in180_in;
  wire p_0_in190_in;
  wire p_0_in200_in;
  wire p_0_in20_in;
  wire p_0_in24_in;
  wire p_0_in28_in;
  wire p_0_in32_in;
  wire p_0_in36_in;
  wire p_0_in40_in;
  wire p_0_in44_in;
  wire p_0_in4_in;
  wire p_0_in8_in;
  wire p_0_in_0;
  wire [1:0]p_1_in__0;
  wire p_2_in;
  wire p_2_in103_in;
  wire p_2_in109_in;
  wire p_2_in115_in;
  wire p_2_in121_in;
  wire p_2_in127_in;
  wire p_2_in133_in;
  wire p_2_in139_in;
  wire p_2_in13_in;
  wire p_2_in145_in;
  wire p_2_in152_in;
  wire p_2_in161_in;
  wire p_2_in171_in;
  wire p_2_in17_in;
  wire p_2_in181_in;
  wire p_2_in191_in;
  wire p_2_in1_in;
  wire p_2_in201_in;
  wire p_2_in21_in;
  wire p_2_in25_in;
  wire p_2_in29_in;
  wire p_2_in33_in;
  wire p_2_in37_in;
  wire p_2_in41_in;
  wire p_2_in45_in;
  wire p_2_in48_in;
  wire p_2_in52_in;
  wire p_2_in56_in;
  wire p_2_in5_in;
  wire p_2_in60_in;
  wire p_2_in64_in;
  wire p_2_in68_in;
  wire p_2_in74_in;
  wire p_2_in79_in;
  wire p_2_in85_in;
  wire p_2_in91_in;
  wire p_2_in97_in;
  wire p_2_in9_in;
  wire [115:0]pseudo_rand_seeds_int;
  wire [63:0]\rd_data_reg[61] ;
  wire \rd_data_reg[7] ;
  wire \scr_reg[0]_i_1_n_0 ;
  wire \scr_reg[0]_i_2_n_0 ;
  wire \scr_reg[10]_i_1_n_0 ;
  wire \scr_reg[10]_i_2_n_0 ;
  wire \scr_reg[11]_i_1_n_0 ;
  wire \scr_reg[11]_i_2_n_0 ;
  wire \scr_reg[12]_i_1_n_0 ;
  wire \scr_reg[12]_i_2_n_0 ;
  wire \scr_reg[13]_i_1_n_0 ;
  wire \scr_reg[13]_i_2_n_0 ;
  wire \scr_reg[14]_i_1_n_0 ;
  wire \scr_reg[14]_i_2_n_0 ;
  wire \scr_reg[15]_i_1_n_0 ;
  wire \scr_reg[15]_i_2_n_0 ;
  wire \scr_reg[16]_i_1_n_0 ;
  wire \scr_reg[16]_i_2_n_0 ;
  wire \scr_reg[17]_i_1_n_0 ;
  wire \scr_reg[17]_i_2_n_0 ;
  wire \scr_reg[18]_i_1_n_0 ;
  wire \scr_reg[18]_i_2_n_0 ;
  wire \scr_reg[19]_i_1_n_0 ;
  wire \scr_reg[19]_i_2_n_0 ;
  wire \scr_reg[1]_i_1_n_0 ;
  wire \scr_reg[1]_i_2_n_0 ;
  wire \scr_reg[20]_i_1_n_0 ;
  wire \scr_reg[20]_i_2_n_0 ;
  wire \scr_reg[21]_i_1_n_0 ;
  wire \scr_reg[21]_i_2_n_0 ;
  wire \scr_reg[22]_i_1_n_0 ;
  wire \scr_reg[22]_i_2_n_0 ;
  wire \scr_reg[23]_i_1_n_0 ;
  wire \scr_reg[23]_i_2_n_0 ;
  wire \scr_reg[24]_i_1_n_0 ;
  wire \scr_reg[24]_i_2_n_0 ;
  wire \scr_reg[25]_i_1_n_0 ;
  wire \scr_reg[25]_i_2_n_0 ;
  wire \scr_reg[26]_i_1_n_0 ;
  wire \scr_reg[26]_i_2_n_0 ;
  wire \scr_reg[27]_i_1_n_0 ;
  wire \scr_reg[27]_i_2_n_0 ;
  wire \scr_reg[28]_i_1_n_0 ;
  wire \scr_reg[28]_i_2_n_0 ;
  wire \scr_reg[29]_i_1_n_0 ;
  wire \scr_reg[29]_i_2_n_0 ;
  wire \scr_reg[2]_i_1_n_0 ;
  wire \scr_reg[2]_i_2_n_0 ;
  wire \scr_reg[30]_i_1_n_0 ;
  wire \scr_reg[30]_i_2_n_0 ;
  wire \scr_reg[31]_i_1_n_0 ;
  wire \scr_reg[31]_i_2_n_0 ;
  wire \scr_reg[32]_i_1_n_0 ;
  wire \scr_reg[32]_i_2_n_0 ;
  wire \scr_reg[33]_i_1_n_0 ;
  wire \scr_reg[33]_i_2_n_0 ;
  wire \scr_reg[34]_i_1_n_0 ;
  wire \scr_reg[34]_i_2_n_0 ;
  wire \scr_reg[35]_i_1_n_0 ;
  wire \scr_reg[35]_i_2_n_0 ;
  wire \scr_reg[36]_i_1_n_0 ;
  wire \scr_reg[36]_i_2_n_0 ;
  wire \scr_reg[37]_i_1_n_0 ;
  wire \scr_reg[37]_i_2_n_0 ;
  wire \scr_reg[38]_i_1_n_0 ;
  wire \scr_reg[38]_i_2_n_0 ;
  wire \scr_reg[39]_i_1_n_0 ;
  wire \scr_reg[3]_i_1_n_0 ;
  wire \scr_reg[3]_i_2_n_0 ;
  wire \scr_reg[40]_i_1_n_0 ;
  wire \scr_reg[41]_i_1_n_0 ;
  wire \scr_reg[42]_i_1_n_0 ;
  wire \scr_reg[43]_i_1_n_0 ;
  wire \scr_reg[44]_i_1_n_0 ;
  wire \scr_reg[45]_i_1_n_0 ;
  wire \scr_reg[46]_i_1_n_0 ;
  wire \scr_reg[47]_i_1_n_0 ;
  wire \scr_reg[48]_i_1_n_0 ;
  wire \scr_reg[49]_i_1_n_0 ;
  wire \scr_reg[4]_i_1_n_0 ;
  wire \scr_reg[4]_i_2_n_0 ;
  wire \scr_reg[50]_i_1_n_0 ;
  wire \scr_reg[51]_i_1_n_0 ;
  wire \scr_reg[52]_i_1_n_0 ;
  wire \scr_reg[53]_i_1_n_0 ;
  wire \scr_reg[54]_i_1_n_0 ;
  wire \scr_reg[55]_i_1_n_0 ;
  wire \scr_reg[56]_i_1_n_0 ;
  wire \scr_reg[57]_i_1_n_0 ;
  wire \scr_reg[5]_i_1_n_0 ;
  wire \scr_reg[5]_i_2_n_0 ;
  wire \scr_reg[6]_i_1_n_0 ;
  wire \scr_reg[6]_i_2_n_0 ;
  wire \scr_reg[7]_i_1_n_0 ;
  wire \scr_reg[7]_i_2_n_0 ;
  wire \scr_reg[8]_i_1_n_0 ;
  wire \scr_reg[8]_i_2_n_0 ;
  wire \scr_reg[9]_i_1_n_0 ;
  wire \scr_reg[9]_i_2_n_0 ;
  wire \scr_reg_reg[56]_0 ;
  wire \scr_reg_reg_n_0_[0] ;
  wire [63:0]tx_66_fifo;
  wire [1:1]tx_test_patt_seed_sel;
  wire \tx_test_patt_seed_sel[1]_i_1_n_0 ;
  wire \tx_test_patt_seed_sel[1]_i_3_n_0 ;

  LUT6 #(
    .INIT(64'hFFFF9966A55A9966)) 
    asynch_fifo_i_i_10
       (.I0(p_0_in36_in),
        .I1(\rd_data_reg[61] [54]),
        .I2(Q),
        .I3(asynch_fifo_i_i_83_n_0),
        .I4(new_tx_test_seed_reg_0[1]),
        .I5(new_tx_test_seed_reg_0[0]),
        .O(tx_66_fifo[54]));
  LUT6 #(
    .INIT(64'hFFFF9966A55A9966)) 
    asynch_fifo_i_i_11
       (.I0(p_0_in32_in),
        .I1(\rd_data_reg[61] [53]),
        .I2(Q),
        .I3(asynch_fifo_i_i_84_n_0),
        .I4(new_tx_test_seed_reg_0[1]),
        .I5(new_tx_test_seed_reg_0[0]),
        .O(tx_66_fifo[53]));
  LUT6 #(
    .INIT(64'h00009966A55A9966)) 
    asynch_fifo_i_i_12
       (.I0(p_0_in28_in),
        .I1(\rd_data_reg[61] [52]),
        .I2(Q),
        .I3(asynch_fifo_i_i_85_n_0),
        .I4(new_tx_test_seed_reg_0[1]),
        .I5(new_tx_test_seed_reg_0[0]),
        .O(tx_66_fifo[52]));
  LUT6 #(
    .INIT(64'h00009966A55A9966)) 
    asynch_fifo_i_i_13
       (.I0(p_0_in24_in),
        .I1(\rd_data_reg[61] [51]),
        .I2(Q),
        .I3(asynch_fifo_i_i_86_n_0),
        .I4(new_tx_test_seed_reg_0[1]),
        .I5(new_tx_test_seed_reg_0[0]),
        .O(tx_66_fifo[51]));
  LUT6 #(
    .INIT(64'h00009966A55A9966)) 
    asynch_fifo_i_i_14
       (.I0(p_0_in20_in),
        .I1(\rd_data_reg[61] [50]),
        .I2(Q),
        .I3(asynch_fifo_i_i_87_n_0),
        .I4(new_tx_test_seed_reg_0[1]),
        .I5(new_tx_test_seed_reg_0[0]),
        .O(tx_66_fifo[50]));
  LUT6 #(
    .INIT(64'h00009966A55A9966)) 
    asynch_fifo_i_i_15
       (.I0(p_0_in16_in),
        .I1(\rd_data_reg[61] [49]),
        .I2(Q),
        .I3(asynch_fifo_i_i_88_n_0),
        .I4(new_tx_test_seed_reg_0[1]),
        .I5(new_tx_test_seed_reg_0[0]),
        .O(tx_66_fifo[49]));
  LUT6 #(
    .INIT(64'h00009966A55A9966)) 
    asynch_fifo_i_i_16
       (.I0(p_0_in12_in),
        .I1(\rd_data_reg[61] [48]),
        .I2(Q),
        .I3(asynch_fifo_i_i_89_n_0),
        .I4(new_tx_test_seed_reg_0[1]),
        .I5(new_tx_test_seed_reg_0[0]),
        .O(tx_66_fifo[48]));
  LUT6 #(
    .INIT(64'h00009966A55A9966)) 
    asynch_fifo_i_i_17
       (.I0(p_0_in8_in),
        .I1(\rd_data_reg[61] [47]),
        .I2(Q),
        .I3(asynch_fifo_i_i_90_n_0),
        .I4(new_tx_test_seed_reg_0[1]),
        .I5(new_tx_test_seed_reg_0[0]),
        .O(tx_66_fifo[47]));
  LUT6 #(
    .INIT(64'h00009966A55A9966)) 
    asynch_fifo_i_i_18
       (.I0(p_0_in4_in),
        .I1(\rd_data_reg[61] [46]),
        .I2(Q),
        .I3(asynch_fifo_i_i_91_n_0),
        .I4(new_tx_test_seed_reg_0[1]),
        .I5(new_tx_test_seed_reg_0[0]),
        .O(tx_66_fifo[46]));
  LUT6 #(
    .INIT(64'h00009966A55A9966)) 
    asynch_fifo_i_i_19
       (.I0(p_0_in0_in),
        .I1(\rd_data_reg[61] [45]),
        .I2(Q),
        .I3(asynch_fifo_i_i_92_n_0),
        .I4(new_tx_test_seed_reg_0[1]),
        .I5(new_tx_test_seed_reg_0[0]),
        .O(tx_66_fifo[45]));
  LUT6 #(
    .INIT(64'hFFFF66995AA56699)) 
    asynch_fifo_i_i_1__0
       (.I0(asynch_fifo_i_i_67_n_0),
        .I1(\rd_data_reg[61] [63]),
        .I2(Q),
        .I3(asynch_fifo_i_i_68_n_0),
        .I4(new_tx_test_seed_reg_0[1]),
        .I5(new_tx_test_seed_reg_0[0]),
        .O(tx_66_fifo[63]));
  LUT6 #(
    .INIT(64'h000066995AA56699)) 
    asynch_fifo_i_i_20
       (.I0(p_0_in_0),
        .I1(\rd_data_reg[61] [44]),
        .I2(Q),
        .I3(asynch_fifo_i_i_67_n_0),
        .I4(new_tx_test_seed_reg_0[1]),
        .I5(new_tx_test_seed_reg_0[0]),
        .O(tx_66_fifo[44]));
  LUT6 #(
    .INIT(64'h00009966A55A9966)) 
    asynch_fifo_i_i_21
       (.I0(p_2_in68_in),
        .I1(\rd_data_reg[61] [43]),
        .I2(Q),
        .I3(asynch_fifo_i_i_70_n_0),
        .I4(new_tx_test_seed_reg_0[1]),
        .I5(new_tx_test_seed_reg_0[0]),
        .O(tx_66_fifo[43]));
  LUT6 #(
    .INIT(64'h0000969699669696)) 
    asynch_fifo_i_i_22
       (.I0(asynch_fifo_i_i_71_n_0),
        .I1(p_2_in64_in),
        .I2(\rd_data_reg[61] [42]),
        .I3(Q),
        .I4(new_tx_test_seed_reg_0[1]),
        .I5(new_tx_test_seed_reg_0[0]),
        .O(tx_66_fifo[42]));
  LUT6 #(
    .INIT(64'hFFFF9966A55A9966)) 
    asynch_fifo_i_i_23
       (.I0(p_2_in60_in),
        .I1(\rd_data_reg[61] [41]),
        .I2(Q),
        .I3(asynch_fifo_i_i_74_n_0),
        .I4(new_tx_test_seed_reg_0[1]),
        .I5(new_tx_test_seed_reg_0[0]),
        .O(tx_66_fifo[41]));
  LUT6 #(
    .INIT(64'hFFFF969699669696)) 
    asynch_fifo_i_i_24
       (.I0(asynch_fifo_i_i_75_n_0),
        .I1(p_2_in56_in),
        .I2(\rd_data_reg[61] [40]),
        .I3(Q),
        .I4(new_tx_test_seed_reg_0[1]),
        .I5(new_tx_test_seed_reg_0[0]),
        .O(tx_66_fifo[40]));
  LUT6 #(
    .INIT(64'hFFFF9966A55A9966)) 
    asynch_fifo_i_i_25
       (.I0(p_2_in52_in),
        .I1(\rd_data_reg[61] [39]),
        .I2(Q),
        .I3(asynch_fifo_i_i_78_n_0),
        .I4(new_tx_test_seed_reg_0[1]),
        .I5(new_tx_test_seed_reg_0[0]),
        .O(tx_66_fifo[39]));
  LUT6 #(
    .INIT(64'hFFFF996696969966)) 
    asynch_fifo_i_i_26
       (.I0(p_2_in48_in),
        .I1(\scr_reg_reg_n_0_[0] ),
        .I2(Q),
        .I3(\rd_data_reg[61] [38]),
        .I4(new_tx_test_seed_reg_0[1]),
        .I5(new_tx_test_seed_reg_0[0]),
        .O(tx_66_fifo[38]));
  LUT6 #(
    .INIT(64'hFFFF996696969966)) 
    asynch_fifo_i_i_27
       (.I0(p_2_in45_in),
        .I1(p_0_in44_in),
        .I2(Q),
        .I3(\rd_data_reg[61] [37]),
        .I4(new_tx_test_seed_reg_0[1]),
        .I5(new_tx_test_seed_reg_0[0]),
        .O(tx_66_fifo[37]));
  LUT6 #(
    .INIT(64'hFFFF996696969966)) 
    asynch_fifo_i_i_28
       (.I0(p_2_in41_in),
        .I1(p_0_in40_in),
        .I2(Q),
        .I3(\rd_data_reg[61] [36]),
        .I4(new_tx_test_seed_reg_0[1]),
        .I5(new_tx_test_seed_reg_0[0]),
        .O(tx_66_fifo[36]));
  LUT6 #(
    .INIT(64'hFFFF996696969966)) 
    asynch_fifo_i_i_29
       (.I0(p_2_in37_in),
        .I1(p_0_in36_in),
        .I2(Q),
        .I3(\rd_data_reg[61] [35]),
        .I4(new_tx_test_seed_reg_0[1]),
        .I5(new_tx_test_seed_reg_0[0]),
        .O(tx_66_fifo[35]));
  LUT6 #(
    .INIT(64'hFFFF9966A55A9966)) 
    asynch_fifo_i_i_2__0
       (.I0(asynch_fifo_i_i_69_n_0),
        .I1(\rd_data_reg[61] [62]),
        .I2(Q),
        .I3(asynch_fifo_i_i_70_n_0),
        .I4(new_tx_test_seed_reg_0[1]),
        .I5(new_tx_test_seed_reg_0[0]),
        .O(tx_66_fifo[62]));
  LUT6 #(
    .INIT(64'hFFFF996696969966)) 
    asynch_fifo_i_i_30
       (.I0(p_2_in33_in),
        .I1(p_0_in32_in),
        .I2(Q),
        .I3(\rd_data_reg[61] [34]),
        .I4(new_tx_test_seed_reg_0[1]),
        .I5(new_tx_test_seed_reg_0[0]),
        .O(tx_66_fifo[34]));
  LUT6 #(
    .INIT(64'hFFFF996696969966)) 
    asynch_fifo_i_i_31
       (.I0(p_2_in29_in),
        .I1(p_0_in28_in),
        .I2(Q),
        .I3(\rd_data_reg[61] [33]),
        .I4(new_tx_test_seed_reg_0[1]),
        .I5(new_tx_test_seed_reg_0[0]),
        .O(tx_66_fifo[33]));
  LUT6 #(
    .INIT(64'hFFFF996696969966)) 
    asynch_fifo_i_i_32
       (.I0(p_2_in25_in),
        .I1(p_0_in24_in),
        .I2(Q),
        .I3(\rd_data_reg[61] [32]),
        .I4(new_tx_test_seed_reg_0[1]),
        .I5(new_tx_test_seed_reg_0[0]),
        .O(tx_66_fifo[32]));
  LUT6 #(
    .INIT(64'hFFFF996696969966)) 
    asynch_fifo_i_i_33
       (.I0(p_2_in21_in),
        .I1(p_0_in20_in),
        .I2(Q),
        .I3(\rd_data_reg[61] [31]),
        .I4(new_tx_test_seed_reg_0[1]),
        .I5(new_tx_test_seed_reg_0[0]),
        .O(tx_66_fifo[31]));
  LUT6 #(
    .INIT(64'h0000996696969966)) 
    asynch_fifo_i_i_34
       (.I0(p_2_in17_in),
        .I1(p_0_in16_in),
        .I2(Q),
        .I3(\rd_data_reg[61] [30]),
        .I4(new_tx_test_seed_reg_0[1]),
        .I5(new_tx_test_seed_reg_0[0]),
        .O(tx_66_fifo[30]));
  LUT6 #(
    .INIT(64'h0000996696969966)) 
    asynch_fifo_i_i_35
       (.I0(p_2_in13_in),
        .I1(p_0_in12_in),
        .I2(Q),
        .I3(\rd_data_reg[61] [29]),
        .I4(new_tx_test_seed_reg_0[1]),
        .I5(new_tx_test_seed_reg_0[0]),
        .O(tx_66_fifo[29]));
  LUT6 #(
    .INIT(64'h0000996696969966)) 
    asynch_fifo_i_i_36
       (.I0(p_2_in9_in),
        .I1(p_0_in8_in),
        .I2(Q),
        .I3(\rd_data_reg[61] [28]),
        .I4(new_tx_test_seed_reg_0[1]),
        .I5(new_tx_test_seed_reg_0[0]),
        .O(tx_66_fifo[28]));
  LUT6 #(
    .INIT(64'h0000996696969966)) 
    asynch_fifo_i_i_37
       (.I0(p_2_in5_in),
        .I1(p_0_in4_in),
        .I2(Q),
        .I3(\rd_data_reg[61] [27]),
        .I4(new_tx_test_seed_reg_0[1]),
        .I5(new_tx_test_seed_reg_0[0]),
        .O(tx_66_fifo[27]));
  LUT6 #(
    .INIT(64'h0000996696969966)) 
    asynch_fifo_i_i_38
       (.I0(p_2_in1_in),
        .I1(p_0_in0_in),
        .I2(Q),
        .I3(\rd_data_reg[61] [26]),
        .I4(new_tx_test_seed_reg_0[1]),
        .I5(new_tx_test_seed_reg_0[0]),
        .O(tx_66_fifo[26]));
  LUT6 #(
    .INIT(64'h0000996696969966)) 
    asynch_fifo_i_i_39
       (.I0(p_2_in),
        .I1(p_0_in_0),
        .I2(Q),
        .I3(\rd_data_reg[61] [25]),
        .I4(new_tx_test_seed_reg_0[1]),
        .I5(new_tx_test_seed_reg_0[0]),
        .O(tx_66_fifo[25]));
  LUT6 #(
    .INIT(64'hFFFF66995AA56699)) 
    asynch_fifo_i_i_3__0
       (.I0(asynch_fifo_i_i_71_n_0),
        .I1(\rd_data_reg[61] [61]),
        .I2(Q),
        .I3(asynch_fifo_i_i_72_n_0),
        .I4(new_tx_test_seed_reg_0[1]),
        .I5(new_tx_test_seed_reg_0[0]),
        .O(tx_66_fifo[61]));
  LUT6 #(
    .INIT(64'hFFFF9966A55A9966)) 
    asynch_fifo_i_i_4
       (.I0(asynch_fifo_i_i_73_n_0),
        .I1(\rd_data_reg[61] [60]),
        .I2(Q),
        .I3(asynch_fifo_i_i_74_n_0),
        .I4(new_tx_test_seed_reg_0[1]),
        .I5(new_tx_test_seed_reg_0[0]),
        .O(tx_66_fifo[60]));
  LUT6 #(
    .INIT(64'h0000999696969996)) 
    asynch_fifo_i_i_40
       (.I0(p_0_in200_in),
        .I1(p_2_in68_in),
        .I2(\rd_data_reg[7] ),
        .I3(\rd_data_reg[61] [24]),
        .I4(new_tx_test_seed_reg_0[1]),
        .I5(new_tx_test_seed_reg_0[0]),
        .O(tx_66_fifo[24]));
  LUT6 #(
    .INIT(64'h0000996696969966)) 
    asynch_fifo_i_i_41
       (.I0(p_0_in190_in),
        .I1(p_2_in64_in),
        .I2(Q),
        .I3(\rd_data_reg[61] [23]),
        .I4(new_tx_test_seed_reg_0[1]),
        .I5(new_tx_test_seed_reg_0[0]),
        .O(tx_66_fifo[23]));
  LUT6 #(
    .INIT(64'h00009966A55A9966)) 
    asynch_fifo_i_i_42
       (.I0(p_0_in180_in),
        .I1(\rd_data_reg[61] [22]),
        .I2(Q),
        .I3(p_2_in60_in),
        .I4(new_tx_test_seed_reg_0[1]),
        .I5(new_tx_test_seed_reg_0[0]),
        .O(tx_66_fifo[22]));
  LUT6 #(
    .INIT(64'h0000996696969966)) 
    asynch_fifo_i_i_43
       (.I0(p_0_in170_in),
        .I1(p_2_in56_in),
        .I2(Q),
        .I3(\rd_data_reg[61] [21]),
        .I4(new_tx_test_seed_reg_0[1]),
        .I5(new_tx_test_seed_reg_0[0]),
        .O(tx_66_fifo[21]));
  LUT6 #(
    .INIT(64'h0000996696969966)) 
    asynch_fifo_i_i_44
       (.I0(p_0_in160_in),
        .I1(p_2_in52_in),
        .I2(Q),
        .I3(\rd_data_reg[61] [20]),
        .I4(new_tx_test_seed_reg_0[1]),
        .I5(new_tx_test_seed_reg_0[0]),
        .O(tx_66_fifo[20]));
  LUT6 #(
    .INIT(64'hFFFF996696969966)) 
    asynch_fifo_i_i_45
       (.I0(p_0_in151_in),
        .I1(p_2_in48_in),
        .I2(Q),
        .I3(\rd_data_reg[61] [19]),
        .I4(new_tx_test_seed_reg_0[1]),
        .I5(new_tx_test_seed_reg_0[0]),
        .O(tx_66_fifo[19]));
  LUT6 #(
    .INIT(64'hFFFF996696969966)) 
    asynch_fifo_i_i_46
       (.I0(p_2_in145_in),
        .I1(p_2_in45_in),
        .I2(Q),
        .I3(\rd_data_reg[61] [18]),
        .I4(new_tx_test_seed_reg_0[1]),
        .I5(new_tx_test_seed_reg_0[0]),
        .O(tx_66_fifo[18]));
  LUT6 #(
    .INIT(64'hFFFF996696969966)) 
    asynch_fifo_i_i_47
       (.I0(p_2_in139_in),
        .I1(p_2_in41_in),
        .I2(Q),
        .I3(\rd_data_reg[61] [17]),
        .I4(new_tx_test_seed_reg_0[1]),
        .I5(new_tx_test_seed_reg_0[0]),
        .O(tx_66_fifo[17]));
  LUT6 #(
    .INIT(64'hFFFF996696969966)) 
    asynch_fifo_i_i_48
       (.I0(p_2_in133_in),
        .I1(p_2_in37_in),
        .I2(Q),
        .I3(\rd_data_reg[61] [16]),
        .I4(new_tx_test_seed_reg_0[1]),
        .I5(new_tx_test_seed_reg_0[0]),
        .O(tx_66_fifo[16]));
  LUT6 #(
    .INIT(64'hFFFF996696969966)) 
    asynch_fifo_i_i_49
       (.I0(p_2_in127_in),
        .I1(p_2_in33_in),
        .I2(Q),
        .I3(\rd_data_reg[61] [15]),
        .I4(new_tx_test_seed_reg_0[1]),
        .I5(new_tx_test_seed_reg_0[0]),
        .O(tx_66_fifo[15]));
  LUT6 #(
    .INIT(64'hFFFF9966A55A9966)) 
    asynch_fifo_i_i_5
       (.I0(asynch_fifo_i_i_75_n_0),
        .I1(\rd_data_reg[61] [59]),
        .I2(Q),
        .I3(asynch_fifo_i_i_76_n_0),
        .I4(new_tx_test_seed_reg_0[1]),
        .I5(new_tx_test_seed_reg_0[0]),
        .O(tx_66_fifo[59]));
  LUT6 #(
    .INIT(64'hFFFF996696969966)) 
    asynch_fifo_i_i_50
       (.I0(p_2_in121_in),
        .I1(p_2_in29_in),
        .I2(Q),
        .I3(\rd_data_reg[61] [14]),
        .I4(new_tx_test_seed_reg_0[1]),
        .I5(new_tx_test_seed_reg_0[0]),
        .O(tx_66_fifo[14]));
  LUT6 #(
    .INIT(64'hFFFF996696969966)) 
    asynch_fifo_i_i_51
       (.I0(p_2_in115_in),
        .I1(p_2_in25_in),
        .I2(Q),
        .I3(\rd_data_reg[61] [13]),
        .I4(new_tx_test_seed_reg_0[1]),
        .I5(new_tx_test_seed_reg_0[0]),
        .O(tx_66_fifo[13]));
  LUT6 #(
    .INIT(64'hFFFF996696969966)) 
    asynch_fifo_i_i_52
       (.I0(p_2_in109_in),
        .I1(p_2_in21_in),
        .I2(Q),
        .I3(\rd_data_reg[61] [12]),
        .I4(new_tx_test_seed_reg_0[1]),
        .I5(new_tx_test_seed_reg_0[0]),
        .O(tx_66_fifo[12]));
  LUT6 #(
    .INIT(64'hFFFF996696969966)) 
    asynch_fifo_i_i_53
       (.I0(p_2_in103_in),
        .I1(p_2_in17_in),
        .I2(Q),
        .I3(\rd_data_reg[61] [11]),
        .I4(new_tx_test_seed_reg_0[1]),
        .I5(new_tx_test_seed_reg_0[0]),
        .O(tx_66_fifo[11]));
  LUT6 #(
    .INIT(64'hFFFF996696969966)) 
    asynch_fifo_i_i_54
       (.I0(p_2_in97_in),
        .I1(p_2_in13_in),
        .I2(Q),
        .I3(\rd_data_reg[61] [10]),
        .I4(new_tx_test_seed_reg_0[1]),
        .I5(new_tx_test_seed_reg_0[0]),
        .O(tx_66_fifo[10]));
  LUT6 #(
    .INIT(64'hFFFF996696969966)) 
    asynch_fifo_i_i_55
       (.I0(p_2_in91_in),
        .I1(p_2_in9_in),
        .I2(Q),
        .I3(\rd_data_reg[61] [9]),
        .I4(new_tx_test_seed_reg_0[1]),
        .I5(new_tx_test_seed_reg_0[0]),
        .O(tx_66_fifo[9]));
  LUT6 #(
    .INIT(64'h0000996696969966)) 
    asynch_fifo_i_i_56
       (.I0(p_2_in85_in),
        .I1(p_2_in5_in),
        .I2(Q),
        .I3(\rd_data_reg[61] [8]),
        .I4(new_tx_test_seed_reg_0[1]),
        .I5(new_tx_test_seed_reg_0[0]),
        .O(tx_66_fifo[8]));
  LUT6 #(
    .INIT(64'h0000996696969966)) 
    asynch_fifo_i_i_57
       (.I0(p_2_in79_in),
        .I1(p_2_in1_in),
        .I2(Q),
        .I3(\rd_data_reg[61] [7]),
        .I4(new_tx_test_seed_reg_0[1]),
        .I5(new_tx_test_seed_reg_0[0]),
        .O(tx_66_fifo[7]));
  LUT6 #(
    .INIT(64'h0000999696969996)) 
    asynch_fifo_i_i_58
       (.I0(p_2_in74_in),
        .I1(p_2_in),
        .I2(\rd_data_reg[7] ),
        .I3(\rd_data_reg[61] [6]),
        .I4(new_tx_test_seed_reg_0[1]),
        .I5(new_tx_test_seed_reg_0[0]),
        .O(tx_66_fifo[6]));
  LUT6 #(
    .INIT(64'h0000996696969966)) 
    asynch_fifo_i_i_59
       (.I0(p_2_in201_in),
        .I1(p_0_in200_in),
        .I2(Q),
        .I3(\rd_data_reg[61] [5]),
        .I4(new_tx_test_seed_reg_0[1]),
        .I5(new_tx_test_seed_reg_0[0]),
        .O(tx_66_fifo[5]));
  LUT6 #(
    .INIT(64'hFFFF9966A55A9966)) 
    asynch_fifo_i_i_6
       (.I0(asynch_fifo_i_i_77_n_0),
        .I1(\rd_data_reg[61] [58]),
        .I2(Q),
        .I3(asynch_fifo_i_i_78_n_0),
        .I4(new_tx_test_seed_reg_0[1]),
        .I5(new_tx_test_seed_reg_0[0]),
        .O(tx_66_fifo[58]));
  LUT6 #(
    .INIT(64'h0000999696969996)) 
    asynch_fifo_i_i_60
       (.I0(p_2_in191_in),
        .I1(p_0_in190_in),
        .I2(\rd_data_reg[7] ),
        .I3(\rd_data_reg[61] [4]),
        .I4(new_tx_test_seed_reg_0[1]),
        .I5(new_tx_test_seed_reg_0[0]),
        .O(tx_66_fifo[4]));
  LUT6 #(
    .INIT(64'h0000996696969966)) 
    asynch_fifo_i_i_61
       (.I0(p_2_in181_in),
        .I1(p_0_in180_in),
        .I2(Q),
        .I3(\rd_data_reg[61] [3]),
        .I4(new_tx_test_seed_reg_0[1]),
        .I5(new_tx_test_seed_reg_0[0]),
        .O(tx_66_fifo[3]));
  LUT6 #(
    .INIT(64'h0000A956A55AA956)) 
    asynch_fifo_i_i_62
       (.I0(p_2_in171_in),
        .I1(\rd_data_reg[61] [2]),
        .I2(\rd_data_reg[7] ),
        .I3(p_0_in170_in),
        .I4(new_tx_test_seed_reg_0[1]),
        .I5(new_tx_test_seed_reg_0[0]),
        .O(tx_66_fifo[2]));
  LUT6 #(
    .INIT(64'h0000996696969966)) 
    asynch_fifo_i_i_63
       (.I0(p_2_in161_in),
        .I1(p_0_in160_in),
        .I2(Q),
        .I3(\rd_data_reg[61] [1]),
        .I4(new_tx_test_seed_reg_0[1]),
        .I5(new_tx_test_seed_reg_0[0]),
        .O(tx_66_fifo[1]));
  LUT6 #(
    .INIT(64'h0000999696969996)) 
    asynch_fifo_i_i_64
       (.I0(p_0_in151_in),
        .I1(p_2_in152_in),
        .I2(\rd_data_reg[7] ),
        .I3(\rd_data_reg[61] [0]),
        .I4(new_tx_test_seed_reg_0[1]),
        .I5(new_tx_test_seed_reg_0[0]),
        .O(tx_66_fifo[0]));
  LUT6 #(
    .INIT(64'hD1DD2E222E22D1DD)) 
    asynch_fifo_i_i_67
       (.I0(\rd_data_reg[61] [5]),
        .I1(new_tx_test_seed_reg_0[1]),
        .I2(new_tx_test_seed_reg_0[0]),
        .I3(Q),
        .I4(p_0_in200_in),
        .I5(p_2_in201_in),
        .O(asynch_fifo_i_i_67_n_0));
  LUT5 #(
    .INIT(32'hF20D0DF2)) 
    asynch_fifo_i_i_68
       (.I0(\rd_data_reg[61] [24]),
        .I1(new_tx_test_seed_reg_0[1]),
        .I2(\rd_data_reg[7] ),
        .I3(p_2_in68_in),
        .I4(p_0_in200_in),
        .O(asynch_fifo_i_i_68_n_0));
  LUT6 #(
    .INIT(64'h2E22D1DDD1DD2E22)) 
    asynch_fifo_i_i_69
       (.I0(\rd_data_reg[61] [23]),
        .I1(new_tx_test_seed_reg_0[1]),
        .I2(new_tx_test_seed_reg_0[0]),
        .I3(Q),
        .I4(p_2_in64_in),
        .I5(p_0_in190_in),
        .O(asynch_fifo_i_i_69_n_0));
  LUT6 #(
    .INIT(64'hFFFF9966A55A9966)) 
    asynch_fifo_i_i_7
       (.I0(\scr_reg_reg_n_0_[0] ),
        .I1(\rd_data_reg[61] [57]),
        .I2(Q),
        .I3(asynch_fifo_i_i_79_n_0),
        .I4(new_tx_test_seed_reg_0[1]),
        .I5(new_tx_test_seed_reg_0[0]),
        .O(tx_66_fifo[57]));
  LUT5 #(
    .INIT(32'hF20D0DF2)) 
    asynch_fifo_i_i_70
       (.I0(\rd_data_reg[61] [4]),
        .I1(new_tx_test_seed_reg_0[1]),
        .I2(\rd_data_reg[7] ),
        .I3(p_0_in190_in),
        .I4(p_2_in191_in),
        .O(asynch_fifo_i_i_70_n_0));
  LUT6 #(
    .INIT(64'h2E22D1DDD1DD2E22)) 
    asynch_fifo_i_i_71
       (.I0(\rd_data_reg[61] [3]),
        .I1(new_tx_test_seed_reg_0[1]),
        .I2(new_tx_test_seed_reg_0[0]),
        .I3(Q),
        .I4(p_0_in180_in),
        .I5(p_2_in181_in),
        .O(asynch_fifo_i_i_71_n_0));
  LUT6 #(
    .INIT(64'hA655A6AA59AA5955)) 
    asynch_fifo_i_i_72
       (.I0(p_2_in60_in),
        .I1(Q),
        .I2(new_tx_test_seed_reg_0[0]),
        .I3(new_tx_test_seed_reg_0[1]),
        .I4(\rd_data_reg[61] [22]),
        .I5(p_0_in180_in),
        .O(asynch_fifo_i_i_72_n_0));
  LUT6 #(
    .INIT(64'h2E22D1DDD1DD2E22)) 
    asynch_fifo_i_i_73
       (.I0(\rd_data_reg[61] [21]),
        .I1(new_tx_test_seed_reg_0[1]),
        .I2(new_tx_test_seed_reg_0[0]),
        .I3(Q),
        .I4(p_2_in56_in),
        .I5(p_0_in170_in),
        .O(asynch_fifo_i_i_73_n_0));
  LUT5 #(
    .INIT(32'h9A996566)) 
    asynch_fifo_i_i_74
       (.I0(p_0_in170_in),
        .I1(\rd_data_reg[7] ),
        .I2(new_tx_test_seed_reg_0[1]),
        .I3(\rd_data_reg[61] [2]),
        .I4(p_2_in171_in),
        .O(asynch_fifo_i_i_74_n_0));
  LUT6 #(
    .INIT(64'h2E22D1DDD1DD2E22)) 
    asynch_fifo_i_i_75
       (.I0(\rd_data_reg[61] [1]),
        .I1(new_tx_test_seed_reg_0[1]),
        .I2(new_tx_test_seed_reg_0[0]),
        .I3(Q),
        .I4(p_0_in160_in),
        .I5(p_2_in161_in),
        .O(asynch_fifo_i_i_75_n_0));
  LUT6 #(
    .INIT(64'h2E22D1DDD1DD2E22)) 
    asynch_fifo_i_i_76
       (.I0(\rd_data_reg[61] [20]),
        .I1(new_tx_test_seed_reg_0[1]),
        .I2(new_tx_test_seed_reg_0[0]),
        .I3(Q),
        .I4(p_2_in52_in),
        .I5(p_0_in160_in),
        .O(asynch_fifo_i_i_76_n_0));
  LUT6 #(
    .INIT(64'h2E22D1DDD1DD2E22)) 
    asynch_fifo_i_i_77
       (.I0(\rd_data_reg[61] [19]),
        .I1(new_tx_test_seed_reg_0[1]),
        .I2(new_tx_test_seed_reg_0[0]),
        .I3(Q),
        .I4(p_2_in48_in),
        .I5(p_0_in151_in),
        .O(asynch_fifo_i_i_77_n_0));
  LUT5 #(
    .INIT(32'hF20D0DF2)) 
    asynch_fifo_i_i_78
       (.I0(\rd_data_reg[61] [0]),
        .I1(new_tx_test_seed_reg_0[1]),
        .I2(\rd_data_reg[7] ),
        .I3(p_2_in152_in),
        .I4(p_0_in151_in),
        .O(asynch_fifo_i_i_78_n_0));
  LUT6 #(
    .INIT(64'h2E22D1DDD1DD2E22)) 
    asynch_fifo_i_i_79
       (.I0(\rd_data_reg[61] [18]),
        .I1(new_tx_test_seed_reg_0[1]),
        .I2(new_tx_test_seed_reg_0[0]),
        .I3(Q),
        .I4(p_2_in45_in),
        .I5(p_2_in145_in),
        .O(asynch_fifo_i_i_79_n_0));
  LUT6 #(
    .INIT(64'hFFFFA956A55AA956)) 
    asynch_fifo_i_i_8
       (.I0(p_0_in44_in),
        .I1(\rd_data_reg[61] [56]),
        .I2(\rd_data_reg[7] ),
        .I3(asynch_fifo_i_i_81_n_0),
        .I4(new_tx_test_seed_reg_0[1]),
        .I5(new_tx_test_seed_reg_0[0]),
        .O(tx_66_fifo[56]));
  LUT6 #(
    .INIT(64'h2E22D1DDD1DD2E22)) 
    asynch_fifo_i_i_81
       (.I0(\rd_data_reg[61] [17]),
        .I1(new_tx_test_seed_reg_0[1]),
        .I2(new_tx_test_seed_reg_0[0]),
        .I3(Q),
        .I4(p_2_in41_in),
        .I5(p_2_in139_in),
        .O(asynch_fifo_i_i_81_n_0));
  LUT6 #(
    .INIT(64'h2E22D1DDD1DD2E22)) 
    asynch_fifo_i_i_82
       (.I0(\rd_data_reg[61] [16]),
        .I1(new_tx_test_seed_reg_0[1]),
        .I2(new_tx_test_seed_reg_0[0]),
        .I3(Q),
        .I4(p_2_in37_in),
        .I5(p_2_in133_in),
        .O(asynch_fifo_i_i_82_n_0));
  LUT6 #(
    .INIT(64'h2E22D1DDD1DD2E22)) 
    asynch_fifo_i_i_83
       (.I0(\rd_data_reg[61] [15]),
        .I1(new_tx_test_seed_reg_0[1]),
        .I2(new_tx_test_seed_reg_0[0]),
        .I3(Q),
        .I4(p_2_in33_in),
        .I5(p_2_in127_in),
        .O(asynch_fifo_i_i_83_n_0));
  LUT6 #(
    .INIT(64'h2E22D1DDD1DD2E22)) 
    asynch_fifo_i_i_84
       (.I0(\rd_data_reg[61] [14]),
        .I1(new_tx_test_seed_reg_0[1]),
        .I2(new_tx_test_seed_reg_0[0]),
        .I3(Q),
        .I4(p_2_in29_in),
        .I5(p_2_in121_in),
        .O(asynch_fifo_i_i_84_n_0));
  LUT6 #(
    .INIT(64'h2E22D1DDD1DD2E22)) 
    asynch_fifo_i_i_85
       (.I0(\rd_data_reg[61] [13]),
        .I1(new_tx_test_seed_reg_0[1]),
        .I2(new_tx_test_seed_reg_0[0]),
        .I3(Q),
        .I4(p_2_in25_in),
        .I5(p_2_in115_in),
        .O(asynch_fifo_i_i_85_n_0));
  LUT6 #(
    .INIT(64'h2E22D1DDD1DD2E22)) 
    asynch_fifo_i_i_86
       (.I0(\rd_data_reg[61] [12]),
        .I1(new_tx_test_seed_reg_0[1]),
        .I2(new_tx_test_seed_reg_0[0]),
        .I3(Q),
        .I4(p_2_in21_in),
        .I5(p_2_in109_in),
        .O(asynch_fifo_i_i_86_n_0));
  LUT6 #(
    .INIT(64'h2E22D1DDD1DD2E22)) 
    asynch_fifo_i_i_87
       (.I0(\rd_data_reg[61] [11]),
        .I1(new_tx_test_seed_reg_0[1]),
        .I2(new_tx_test_seed_reg_0[0]),
        .I3(Q),
        .I4(p_2_in17_in),
        .I5(p_2_in103_in),
        .O(asynch_fifo_i_i_87_n_0));
  LUT6 #(
    .INIT(64'h2E22D1DDD1DD2E22)) 
    asynch_fifo_i_i_88
       (.I0(\rd_data_reg[61] [10]),
        .I1(new_tx_test_seed_reg_0[1]),
        .I2(new_tx_test_seed_reg_0[0]),
        .I3(Q),
        .I4(p_2_in13_in),
        .I5(p_2_in97_in),
        .O(asynch_fifo_i_i_88_n_0));
  LUT6 #(
    .INIT(64'h2E22D1DDD1DD2E22)) 
    asynch_fifo_i_i_89
       (.I0(\rd_data_reg[61] [9]),
        .I1(new_tx_test_seed_reg_0[1]),
        .I2(new_tx_test_seed_reg_0[0]),
        .I3(Q),
        .I4(p_2_in9_in),
        .I5(p_2_in91_in),
        .O(asynch_fifo_i_i_89_n_0));
  LUT6 #(
    .INIT(64'hFFFF9966A55A9966)) 
    asynch_fifo_i_i_9
       (.I0(p_0_in40_in),
        .I1(\rd_data_reg[61] [55]),
        .I2(Q),
        .I3(asynch_fifo_i_i_82_n_0),
        .I4(new_tx_test_seed_reg_0[1]),
        .I5(new_tx_test_seed_reg_0[0]),
        .O(tx_66_fifo[55]));
  LUT6 #(
    .INIT(64'h2E22D1DDD1DD2E22)) 
    asynch_fifo_i_i_90
       (.I0(\rd_data_reg[61] [8]),
        .I1(new_tx_test_seed_reg_0[1]),
        .I2(new_tx_test_seed_reg_0[0]),
        .I3(Q),
        .I4(p_2_in5_in),
        .I5(p_2_in85_in),
        .O(asynch_fifo_i_i_90_n_0));
  LUT6 #(
    .INIT(64'h2E22D1DDD1DD2E22)) 
    asynch_fifo_i_i_91
       (.I0(\rd_data_reg[61] [7]),
        .I1(new_tx_test_seed_reg_0[1]),
        .I2(new_tx_test_seed_reg_0[0]),
        .I3(Q),
        .I4(p_2_in1_in),
        .I5(p_2_in79_in),
        .O(asynch_fifo_i_i_91_n_0));
  LUT5 #(
    .INIT(32'hF40B0BF4)) 
    asynch_fifo_i_i_92
       (.I0(new_tx_test_seed_reg_0[1]),
        .I1(\rd_data_reg[61] [6]),
        .I2(\rd_data_reg[7] ),
        .I3(p_2_in),
        .I4(p_2_in74_in),
        .O(asynch_fifo_i_i_92_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    \block_count[0]_i_1 
       (.I0(block_count_reg[0]),
        .O(p_0_in[0]));
  (* SOFT_HLUTNM = "soft_lutpair228" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \block_count[1]_i_1 
       (.I0(block_count_reg[0]),
        .I1(block_count_reg[1]),
        .O(p_0_in[1]));
  (* SOFT_HLUTNM = "soft_lutpair228" *) 
  LUT3 #(
    .INIT(8'h6A)) 
    \block_count[2]_i_1 
       (.I0(block_count_reg[2]),
        .I1(block_count_reg[1]),
        .I2(block_count_reg[0]),
        .O(p_0_in[2]));
  (* SOFT_HLUTNM = "soft_lutpair226" *) 
  LUT4 #(
    .INIT(16'h6AAA)) 
    \block_count[3]_i_1 
       (.I0(block_count_reg[3]),
        .I1(block_count_reg[0]),
        .I2(block_count_reg[1]),
        .I3(block_count_reg[2]),
        .O(p_0_in[3]));
  (* SOFT_HLUTNM = "soft_lutpair226" *) 
  LUT5 #(
    .INIT(32'h6AAAAAAA)) 
    \block_count[4]_i_1 
       (.I0(block_count_reg[4]),
        .I1(block_count_reg[2]),
        .I2(block_count_reg[1]),
        .I3(block_count_reg[0]),
        .I4(block_count_reg[3]),
        .O(p_0_in[4]));
  LUT6 #(
    .INIT(64'h6AAAAAAAAAAAAAAA)) 
    \block_count[5]_i_1 
       (.I0(block_count_reg[5]),
        .I1(block_count_reg[3]),
        .I2(block_count_reg[0]),
        .I3(block_count_reg[1]),
        .I4(block_count_reg[2]),
        .I5(block_count_reg[4]),
        .O(p_0_in[5]));
  (* SOFT_HLUTNM = "soft_lutpair229" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \block_count[6]_i_1 
       (.I0(block_count_reg[6]),
        .I1(\tx_test_patt_seed_sel[1]_i_3_n_0 ),
        .O(p_0_in[6]));
  FDRE \block_count_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(p_0_in[0]),
        .Q(block_count_reg[0]),
        .R(\tx_test_patt_seed_sel[1]_i_1_n_0 ));
  FDRE \block_count_reg[1] 
       (.C(coreclk),
        .CE(1'b1),
        .D(p_0_in[1]),
        .Q(block_count_reg[1]),
        .R(\tx_test_patt_seed_sel[1]_i_1_n_0 ));
  FDRE \block_count_reg[2] 
       (.C(coreclk),
        .CE(1'b1),
        .D(p_0_in[2]),
        .Q(block_count_reg[2]),
        .R(\tx_test_patt_seed_sel[1]_i_1_n_0 ));
  FDRE \block_count_reg[3] 
       (.C(coreclk),
        .CE(1'b1),
        .D(p_0_in[3]),
        .Q(block_count_reg[3]),
        .R(\tx_test_patt_seed_sel[1]_i_1_n_0 ));
  FDRE \block_count_reg[4] 
       (.C(coreclk),
        .CE(1'b1),
        .D(p_0_in[4]),
        .Q(block_count_reg[4]),
        .R(\tx_test_patt_seed_sel[1]_i_1_n_0 ));
  FDRE \block_count_reg[5] 
       (.C(coreclk),
        .CE(1'b1),
        .D(p_0_in[5]),
        .Q(block_count_reg[5]),
        .R(\tx_test_patt_seed_sel[1]_i_1_n_0 ));
  FDRE \block_count_reg[6] 
       (.C(coreclk),
        .CE(1'b1),
        .D(p_0_in[6]),
        .Q(block_count_reg[6]),
        .R(\tx_test_patt_seed_sel[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair229" *) 
  LUT2 #(
    .INIT(4'h8)) 
    new_tx_test_seed_i_1
       (.I0(block_count_reg[6]),
        .I1(\tx_test_patt_seed_sel[1]_i_3_n_0 ),
        .O(new_tx_test_seed_i_1_n_0));
  FDRE new_tx_test_seed_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(new_tx_test_seed_i_1_n_0),
        .Q(new_tx_test_seed),
        .R(\tx_test_patt_seed_sel[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h56A6FFFF56A60000)) 
    \scr_reg[0]_i_1 
       (.I0(Q),
        .I1(pseudo_rand_seeds_int[0]),
        .I2(tx_test_patt_seed_sel),
        .I3(pseudo_rand_seeds_int[58]),
        .I4(\scr_reg_reg[56]_0 ),
        .I5(\scr_reg[0]_i_2_n_0 ),
        .O(\scr_reg[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hA655A6AA59AA5955)) 
    \scr_reg[0]_i_2 
       (.I0(asynch_fifo_i_i_68_n_0),
        .I1(Q),
        .I2(new_tx_test_seed_reg_0[0]),
        .I3(new_tx_test_seed_reg_0[1]),
        .I4(\rd_data_reg[61] [63]),
        .I5(asynch_fifo_i_i_67_n_0),
        .O(\scr_reg[0]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h56A6FFFF56A60000)) 
    \scr_reg[10]_i_1 
       (.I0(Q),
        .I1(pseudo_rand_seeds_int[10]),
        .I2(tx_test_patt_seed_sel),
        .I3(pseudo_rand_seeds_int[68]),
        .I4(\scr_reg_reg[56]_0 ),
        .I5(\scr_reg[10]_i_2_n_0 ),
        .O(\scr_reg[10]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h59AA5955A655A6AA)) 
    \scr_reg[10]_i_2 
       (.I0(asynch_fifo_i_i_84_n_0),
        .I1(Q),
        .I2(new_tx_test_seed_reg_0[0]),
        .I3(new_tx_test_seed_reg_0[1]),
        .I4(\rd_data_reg[61] [53]),
        .I5(p_0_in32_in),
        .O(\scr_reg[10]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h56A6FFFF56A60000)) 
    \scr_reg[11]_i_1 
       (.I0(Q),
        .I1(pseudo_rand_seeds_int[11]),
        .I2(tx_test_patt_seed_sel),
        .I3(pseudo_rand_seeds_int[69]),
        .I4(\scr_reg_reg[56]_0 ),
        .I5(\scr_reg[11]_i_2_n_0 ),
        .O(\scr_reg[11]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h59AA5955A655A6AA)) 
    \scr_reg[11]_i_2 
       (.I0(asynch_fifo_i_i_85_n_0),
        .I1(Q),
        .I2(new_tx_test_seed_reg_0[0]),
        .I3(new_tx_test_seed_reg_0[1]),
        .I4(\rd_data_reg[61] [52]),
        .I5(p_0_in28_in),
        .O(\scr_reg[11]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h56A6FFFF56A60000)) 
    \scr_reg[12]_i_1 
       (.I0(Q),
        .I1(pseudo_rand_seeds_int[12]),
        .I2(tx_test_patt_seed_sel),
        .I3(pseudo_rand_seeds_int[70]),
        .I4(\scr_reg_reg[56]_0 ),
        .I5(\scr_reg[12]_i_2_n_0 ),
        .O(\scr_reg[12]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h59AA5955A655A6AA)) 
    \scr_reg[12]_i_2 
       (.I0(asynch_fifo_i_i_86_n_0),
        .I1(Q),
        .I2(new_tx_test_seed_reg_0[0]),
        .I3(new_tx_test_seed_reg_0[1]),
        .I4(\rd_data_reg[61] [51]),
        .I5(p_0_in24_in),
        .O(\scr_reg[12]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h56A6FFFF56A60000)) 
    \scr_reg[13]_i_1 
       (.I0(Q),
        .I1(pseudo_rand_seeds_int[13]),
        .I2(tx_test_patt_seed_sel),
        .I3(pseudo_rand_seeds_int[71]),
        .I4(\scr_reg_reg[56]_0 ),
        .I5(\scr_reg[13]_i_2_n_0 ),
        .O(\scr_reg[13]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h59AA5955A655A6AA)) 
    \scr_reg[13]_i_2 
       (.I0(asynch_fifo_i_i_87_n_0),
        .I1(Q),
        .I2(new_tx_test_seed_reg_0[0]),
        .I3(new_tx_test_seed_reg_0[1]),
        .I4(\rd_data_reg[61] [50]),
        .I5(p_0_in20_in),
        .O(\scr_reg[13]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h56A6FFFF56A60000)) 
    \scr_reg[14]_i_1 
       (.I0(Q),
        .I1(pseudo_rand_seeds_int[14]),
        .I2(tx_test_patt_seed_sel),
        .I3(pseudo_rand_seeds_int[72]),
        .I4(\scr_reg_reg[56]_0 ),
        .I5(\scr_reg[14]_i_2_n_0 ),
        .O(\scr_reg[14]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h59AA5955A655A6AA)) 
    \scr_reg[14]_i_2 
       (.I0(asynch_fifo_i_i_88_n_0),
        .I1(Q),
        .I2(new_tx_test_seed_reg_0[0]),
        .I3(new_tx_test_seed_reg_0[1]),
        .I4(\rd_data_reg[61] [49]),
        .I5(p_0_in16_in),
        .O(\scr_reg[14]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h56A6FFFF56A60000)) 
    \scr_reg[15]_i_1 
       (.I0(Q),
        .I1(pseudo_rand_seeds_int[15]),
        .I2(tx_test_patt_seed_sel),
        .I3(pseudo_rand_seeds_int[73]),
        .I4(\scr_reg_reg[56]_0 ),
        .I5(\scr_reg[15]_i_2_n_0 ),
        .O(\scr_reg[15]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h59AA5955A655A6AA)) 
    \scr_reg[15]_i_2 
       (.I0(asynch_fifo_i_i_89_n_0),
        .I1(Q),
        .I2(new_tx_test_seed_reg_0[0]),
        .I3(new_tx_test_seed_reg_0[1]),
        .I4(\rd_data_reg[61] [48]),
        .I5(p_0_in12_in),
        .O(\scr_reg[15]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h56A6FFFF56A60000)) 
    \scr_reg[16]_i_1 
       (.I0(Q),
        .I1(pseudo_rand_seeds_int[16]),
        .I2(tx_test_patt_seed_sel),
        .I3(pseudo_rand_seeds_int[74]),
        .I4(\scr_reg_reg[56]_0 ),
        .I5(\scr_reg[16]_i_2_n_0 ),
        .O(\scr_reg[16]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h59AA5955A655A6AA)) 
    \scr_reg[16]_i_2 
       (.I0(asynch_fifo_i_i_90_n_0),
        .I1(Q),
        .I2(new_tx_test_seed_reg_0[0]),
        .I3(new_tx_test_seed_reg_0[1]),
        .I4(\rd_data_reg[61] [47]),
        .I5(p_0_in8_in),
        .O(\scr_reg[16]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h56A6FFFF56A60000)) 
    \scr_reg[17]_i_1 
       (.I0(Q),
        .I1(pseudo_rand_seeds_int[17]),
        .I2(tx_test_patt_seed_sel),
        .I3(pseudo_rand_seeds_int[75]),
        .I4(\scr_reg_reg[56]_0 ),
        .I5(\scr_reg[17]_i_2_n_0 ),
        .O(\scr_reg[17]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h59AA5955A655A6AA)) 
    \scr_reg[17]_i_2 
       (.I0(asynch_fifo_i_i_91_n_0),
        .I1(Q),
        .I2(new_tx_test_seed_reg_0[0]),
        .I3(new_tx_test_seed_reg_0[1]),
        .I4(\rd_data_reg[61] [46]),
        .I5(p_0_in4_in),
        .O(\scr_reg[17]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h56A6FFFF56A60000)) 
    \scr_reg[18]_i_1 
       (.I0(Q),
        .I1(pseudo_rand_seeds_int[18]),
        .I2(tx_test_patt_seed_sel),
        .I3(pseudo_rand_seeds_int[76]),
        .I4(\scr_reg_reg[56]_0 ),
        .I5(\scr_reg[18]_i_2_n_0 ),
        .O(\scr_reg[18]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h59AA5955A655A6AA)) 
    \scr_reg[18]_i_2 
       (.I0(asynch_fifo_i_i_92_n_0),
        .I1(Q),
        .I2(new_tx_test_seed_reg_0[0]),
        .I3(new_tx_test_seed_reg_0[1]),
        .I4(\rd_data_reg[61] [45]),
        .I5(p_0_in0_in),
        .O(\scr_reg[18]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h56A6FFFF56A60000)) 
    \scr_reg[19]_i_1 
       (.I0(Q),
        .I1(pseudo_rand_seeds_int[19]),
        .I2(tx_test_patt_seed_sel),
        .I3(pseudo_rand_seeds_int[77]),
        .I4(\scr_reg_reg[56]_0 ),
        .I5(\scr_reg[19]_i_2_n_0 ),
        .O(\scr_reg[19]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hA655A6AA59AA5955)) 
    \scr_reg[19]_i_2 
       (.I0(asynch_fifo_i_i_67_n_0),
        .I1(Q),
        .I2(new_tx_test_seed_reg_0[0]),
        .I3(new_tx_test_seed_reg_0[1]),
        .I4(\rd_data_reg[61] [44]),
        .I5(p_0_in_0),
        .O(\scr_reg[19]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h56A6FFFF56A60000)) 
    \scr_reg[1]_i_1 
       (.I0(Q),
        .I1(pseudo_rand_seeds_int[1]),
        .I2(tx_test_patt_seed_sel),
        .I3(pseudo_rand_seeds_int[59]),
        .I4(\scr_reg_reg[56]_0 ),
        .I5(\scr_reg[1]_i_2_n_0 ),
        .O(\scr_reg[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h59AA5955A655A6AA)) 
    \scr_reg[1]_i_2 
       (.I0(asynch_fifo_i_i_70_n_0),
        .I1(Q),
        .I2(new_tx_test_seed_reg_0[0]),
        .I3(new_tx_test_seed_reg_0[1]),
        .I4(\rd_data_reg[61] [62]),
        .I5(asynch_fifo_i_i_69_n_0),
        .O(\scr_reg[1]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h56A6FFFF56A60000)) 
    \scr_reg[20]_i_1 
       (.I0(Q),
        .I1(pseudo_rand_seeds_int[20]),
        .I2(tx_test_patt_seed_sel),
        .I3(pseudo_rand_seeds_int[78]),
        .I4(\scr_reg_reg[56]_0 ),
        .I5(\scr_reg[20]_i_2_n_0 ),
        .O(\scr_reg[20]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h59AA5955A655A6AA)) 
    \scr_reg[20]_i_2 
       (.I0(asynch_fifo_i_i_70_n_0),
        .I1(Q),
        .I2(new_tx_test_seed_reg_0[0]),
        .I3(new_tx_test_seed_reg_0[1]),
        .I4(\rd_data_reg[61] [43]),
        .I5(p_2_in68_in),
        .O(\scr_reg[20]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h56A6FFFF56A60000)) 
    \scr_reg[21]_i_1 
       (.I0(Q),
        .I1(pseudo_rand_seeds_int[21]),
        .I2(tx_test_patt_seed_sel),
        .I3(pseudo_rand_seeds_int[79]),
        .I4(\scr_reg_reg[56]_0 ),
        .I5(\scr_reg[21]_i_2_n_0 ),
        .O(\scr_reg[21]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h2F20D0DFD0DF2F20)) 
    \scr_reg[21]_i_2 
       (.I0(Q),
        .I1(new_tx_test_seed_reg_0[0]),
        .I2(new_tx_test_seed_reg_0[1]),
        .I3(\rd_data_reg[61] [42]),
        .I4(p_2_in64_in),
        .I5(asynch_fifo_i_i_71_n_0),
        .O(\scr_reg[21]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h56A6FFFF56A60000)) 
    \scr_reg[22]_i_1 
       (.I0(Q),
        .I1(pseudo_rand_seeds_int[22]),
        .I2(tx_test_patt_seed_sel),
        .I3(pseudo_rand_seeds_int[80]),
        .I4(\scr_reg_reg[56]_0 ),
        .I5(\scr_reg[22]_i_2_n_0 ),
        .O(\scr_reg[22]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h59AA5955A655A6AA)) 
    \scr_reg[22]_i_2 
       (.I0(asynch_fifo_i_i_74_n_0),
        .I1(Q),
        .I2(new_tx_test_seed_reg_0[0]),
        .I3(new_tx_test_seed_reg_0[1]),
        .I4(\rd_data_reg[61] [41]),
        .I5(p_2_in60_in),
        .O(\scr_reg[22]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h56A6FFFF56A60000)) 
    \scr_reg[23]_i_1 
       (.I0(Q),
        .I1(pseudo_rand_seeds_int[23]),
        .I2(tx_test_patt_seed_sel),
        .I3(pseudo_rand_seeds_int[81]),
        .I4(\scr_reg_reg[56]_0 ),
        .I5(\scr_reg[23]_i_2_n_0 ),
        .O(\scr_reg[23]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h2F20D0DFD0DF2F20)) 
    \scr_reg[23]_i_2 
       (.I0(Q),
        .I1(new_tx_test_seed_reg_0[0]),
        .I2(new_tx_test_seed_reg_0[1]),
        .I3(\rd_data_reg[61] [40]),
        .I4(p_2_in56_in),
        .I5(asynch_fifo_i_i_75_n_0),
        .O(\scr_reg[23]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h56A6FFFF56A60000)) 
    \scr_reg[24]_i_1 
       (.I0(Q),
        .I1(pseudo_rand_seeds_int[24]),
        .I2(tx_test_patt_seed_sel),
        .I3(pseudo_rand_seeds_int[82]),
        .I4(\scr_reg_reg[56]_0 ),
        .I5(\scr_reg[24]_i_2_n_0 ),
        .O(\scr_reg[24]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h59AA5955A655A6AA)) 
    \scr_reg[24]_i_2 
       (.I0(asynch_fifo_i_i_78_n_0),
        .I1(Q),
        .I2(new_tx_test_seed_reg_0[0]),
        .I3(new_tx_test_seed_reg_0[1]),
        .I4(\rd_data_reg[61] [39]),
        .I5(p_2_in52_in),
        .O(\scr_reg[24]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h56A6FFFF56A60000)) 
    \scr_reg[25]_i_1 
       (.I0(Q),
        .I1(pseudo_rand_seeds_int[25]),
        .I2(tx_test_patt_seed_sel),
        .I3(pseudo_rand_seeds_int[83]),
        .I4(\scr_reg_reg[56]_0 ),
        .I5(\scr_reg[25]_i_2_n_0 ),
        .O(\scr_reg[25]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h2E22D1DDD1DD2E22)) 
    \scr_reg[25]_i_2 
       (.I0(\rd_data_reg[61] [38]),
        .I1(new_tx_test_seed_reg_0[1]),
        .I2(new_tx_test_seed_reg_0[0]),
        .I3(Q),
        .I4(\scr_reg_reg_n_0_[0] ),
        .I5(p_2_in48_in),
        .O(\scr_reg[25]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h56A6FFFF56A60000)) 
    \scr_reg[26]_i_1 
       (.I0(Q),
        .I1(pseudo_rand_seeds_int[26]),
        .I2(tx_test_patt_seed_sel),
        .I3(pseudo_rand_seeds_int[84]),
        .I4(\scr_reg_reg[56]_0 ),
        .I5(\scr_reg[26]_i_2_n_0 ),
        .O(\scr_reg[26]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h2E22D1DDD1DD2E22)) 
    \scr_reg[26]_i_2 
       (.I0(\rd_data_reg[61] [37]),
        .I1(new_tx_test_seed_reg_0[1]),
        .I2(new_tx_test_seed_reg_0[0]),
        .I3(Q),
        .I4(p_0_in44_in),
        .I5(p_2_in45_in),
        .O(\scr_reg[26]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h56A6FFFF56A60000)) 
    \scr_reg[27]_i_1 
       (.I0(Q),
        .I1(pseudo_rand_seeds_int[27]),
        .I2(tx_test_patt_seed_sel),
        .I3(pseudo_rand_seeds_int[85]),
        .I4(\scr_reg_reg[56]_0 ),
        .I5(\scr_reg[27]_i_2_n_0 ),
        .O(\scr_reg[27]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h2E22D1DDD1DD2E22)) 
    \scr_reg[27]_i_2 
       (.I0(\rd_data_reg[61] [36]),
        .I1(new_tx_test_seed_reg_0[1]),
        .I2(new_tx_test_seed_reg_0[0]),
        .I3(Q),
        .I4(p_0_in40_in),
        .I5(p_2_in41_in),
        .O(\scr_reg[27]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h56A6FFFF56A60000)) 
    \scr_reg[28]_i_1 
       (.I0(Q),
        .I1(pseudo_rand_seeds_int[28]),
        .I2(tx_test_patt_seed_sel),
        .I3(pseudo_rand_seeds_int[86]),
        .I4(\scr_reg_reg[56]_0 ),
        .I5(\scr_reg[28]_i_2_n_0 ),
        .O(\scr_reg[28]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h2E22D1DDD1DD2E22)) 
    \scr_reg[28]_i_2 
       (.I0(\rd_data_reg[61] [35]),
        .I1(new_tx_test_seed_reg_0[1]),
        .I2(new_tx_test_seed_reg_0[0]),
        .I3(Q),
        .I4(p_0_in36_in),
        .I5(p_2_in37_in),
        .O(\scr_reg[28]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h56A6FFFF56A60000)) 
    \scr_reg[29]_i_1 
       (.I0(Q),
        .I1(pseudo_rand_seeds_int[29]),
        .I2(tx_test_patt_seed_sel),
        .I3(pseudo_rand_seeds_int[87]),
        .I4(\scr_reg_reg[56]_0 ),
        .I5(\scr_reg[29]_i_2_n_0 ),
        .O(\scr_reg[29]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h2E22D1DDD1DD2E22)) 
    \scr_reg[29]_i_2 
       (.I0(\rd_data_reg[61] [34]),
        .I1(new_tx_test_seed_reg_0[1]),
        .I2(new_tx_test_seed_reg_0[0]),
        .I3(Q),
        .I4(p_0_in32_in),
        .I5(p_2_in33_in),
        .O(\scr_reg[29]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h56A6FFFF56A60000)) 
    \scr_reg[2]_i_1 
       (.I0(Q),
        .I1(pseudo_rand_seeds_int[2]),
        .I2(tx_test_patt_seed_sel),
        .I3(pseudo_rand_seeds_int[60]),
        .I4(\scr_reg_reg[56]_0 ),
        .I5(\scr_reg[2]_i_2_n_0 ),
        .O(\scr_reg[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hA655A6AA59AA5955)) 
    \scr_reg[2]_i_2 
       (.I0(asynch_fifo_i_i_72_n_0),
        .I1(Q),
        .I2(new_tx_test_seed_reg_0[0]),
        .I3(new_tx_test_seed_reg_0[1]),
        .I4(\rd_data_reg[61] [61]),
        .I5(asynch_fifo_i_i_71_n_0),
        .O(\scr_reg[2]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h56A6FFFF56A60000)) 
    \scr_reg[30]_i_1 
       (.I0(Q),
        .I1(pseudo_rand_seeds_int[30]),
        .I2(tx_test_patt_seed_sel),
        .I3(pseudo_rand_seeds_int[88]),
        .I4(\scr_reg_reg[56]_0 ),
        .I5(\scr_reg[30]_i_2_n_0 ),
        .O(\scr_reg[30]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h2E22D1DDD1DD2E22)) 
    \scr_reg[30]_i_2 
       (.I0(\rd_data_reg[61] [33]),
        .I1(new_tx_test_seed_reg_0[1]),
        .I2(new_tx_test_seed_reg_0[0]),
        .I3(Q),
        .I4(p_0_in28_in),
        .I5(p_2_in29_in),
        .O(\scr_reg[30]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h56A6FFFF56A60000)) 
    \scr_reg[31]_i_1 
       (.I0(Q),
        .I1(pseudo_rand_seeds_int[31]),
        .I2(tx_test_patt_seed_sel),
        .I3(pseudo_rand_seeds_int[89]),
        .I4(\scr_reg_reg[56]_0 ),
        .I5(\scr_reg[31]_i_2_n_0 ),
        .O(\scr_reg[31]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h2E22D1DDD1DD2E22)) 
    \scr_reg[31]_i_2 
       (.I0(\rd_data_reg[61] [32]),
        .I1(new_tx_test_seed_reg_0[1]),
        .I2(new_tx_test_seed_reg_0[0]),
        .I3(Q),
        .I4(p_0_in24_in),
        .I5(p_2_in25_in),
        .O(\scr_reg[31]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h56A6FFFF56A60000)) 
    \scr_reg[32]_i_1 
       (.I0(Q),
        .I1(pseudo_rand_seeds_int[32]),
        .I2(tx_test_patt_seed_sel),
        .I3(pseudo_rand_seeds_int[90]),
        .I4(\scr_reg_reg[56]_0 ),
        .I5(\scr_reg[32]_i_2_n_0 ),
        .O(\scr_reg[32]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h2E22D1DDD1DD2E22)) 
    \scr_reg[32]_i_2 
       (.I0(\rd_data_reg[61] [31]),
        .I1(new_tx_test_seed_reg_0[1]),
        .I2(new_tx_test_seed_reg_0[0]),
        .I3(Q),
        .I4(p_0_in20_in),
        .I5(p_2_in21_in),
        .O(\scr_reg[32]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h56A6FFFF56A60000)) 
    \scr_reg[33]_i_1 
       (.I0(Q),
        .I1(pseudo_rand_seeds_int[33]),
        .I2(tx_test_patt_seed_sel),
        .I3(pseudo_rand_seeds_int[91]),
        .I4(\scr_reg_reg[56]_0 ),
        .I5(\scr_reg[33]_i_2_n_0 ),
        .O(\scr_reg[33]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h2E22D1DDD1DD2E22)) 
    \scr_reg[33]_i_2 
       (.I0(\rd_data_reg[61] [30]),
        .I1(new_tx_test_seed_reg_0[1]),
        .I2(new_tx_test_seed_reg_0[0]),
        .I3(Q),
        .I4(p_0_in16_in),
        .I5(p_2_in17_in),
        .O(\scr_reg[33]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h56A6FFFF56A60000)) 
    \scr_reg[34]_i_1 
       (.I0(Q),
        .I1(pseudo_rand_seeds_int[34]),
        .I2(tx_test_patt_seed_sel),
        .I3(pseudo_rand_seeds_int[92]),
        .I4(\scr_reg_reg[56]_0 ),
        .I5(\scr_reg[34]_i_2_n_0 ),
        .O(\scr_reg[34]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h2E22D1DDD1DD2E22)) 
    \scr_reg[34]_i_2 
       (.I0(\rd_data_reg[61] [29]),
        .I1(new_tx_test_seed_reg_0[1]),
        .I2(new_tx_test_seed_reg_0[0]),
        .I3(Q),
        .I4(p_0_in12_in),
        .I5(p_2_in13_in),
        .O(\scr_reg[34]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h56A6FFFF56A60000)) 
    \scr_reg[35]_i_1 
       (.I0(Q),
        .I1(pseudo_rand_seeds_int[35]),
        .I2(tx_test_patt_seed_sel),
        .I3(pseudo_rand_seeds_int[93]),
        .I4(\scr_reg_reg[56]_0 ),
        .I5(\scr_reg[35]_i_2_n_0 ),
        .O(\scr_reg[35]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h2E22D1DDD1DD2E22)) 
    \scr_reg[35]_i_2 
       (.I0(\rd_data_reg[61] [28]),
        .I1(new_tx_test_seed_reg_0[1]),
        .I2(new_tx_test_seed_reg_0[0]),
        .I3(Q),
        .I4(p_0_in8_in),
        .I5(p_2_in9_in),
        .O(\scr_reg[35]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h56A6FFFF56A60000)) 
    \scr_reg[36]_i_1 
       (.I0(Q),
        .I1(pseudo_rand_seeds_int[36]),
        .I2(tx_test_patt_seed_sel),
        .I3(pseudo_rand_seeds_int[94]),
        .I4(\scr_reg_reg[56]_0 ),
        .I5(\scr_reg[36]_i_2_n_0 ),
        .O(\scr_reg[36]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h2E22D1DDD1DD2E22)) 
    \scr_reg[36]_i_2 
       (.I0(\rd_data_reg[61] [27]),
        .I1(new_tx_test_seed_reg_0[1]),
        .I2(new_tx_test_seed_reg_0[0]),
        .I3(Q),
        .I4(p_0_in4_in),
        .I5(p_2_in5_in),
        .O(\scr_reg[36]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h56A6FFFF56A60000)) 
    \scr_reg[37]_i_1 
       (.I0(Q),
        .I1(pseudo_rand_seeds_int[37]),
        .I2(tx_test_patt_seed_sel),
        .I3(pseudo_rand_seeds_int[95]),
        .I4(\scr_reg_reg[56]_0 ),
        .I5(\scr_reg[37]_i_2_n_0 ),
        .O(\scr_reg[37]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h2E22D1DDD1DD2E22)) 
    \scr_reg[37]_i_2 
       (.I0(\rd_data_reg[61] [26]),
        .I1(new_tx_test_seed_reg_0[1]),
        .I2(new_tx_test_seed_reg_0[0]),
        .I3(Q),
        .I4(p_0_in0_in),
        .I5(p_2_in1_in),
        .O(\scr_reg[37]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h56A6FFFF56A60000)) 
    \scr_reg[38]_i_1 
       (.I0(Q),
        .I1(pseudo_rand_seeds_int[38]),
        .I2(tx_test_patt_seed_sel),
        .I3(pseudo_rand_seeds_int[96]),
        .I4(\scr_reg_reg[56]_0 ),
        .I5(\scr_reg[38]_i_2_n_0 ),
        .O(\scr_reg[38]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h2E22D1DDD1DD2E22)) 
    \scr_reg[38]_i_2 
       (.I0(\rd_data_reg[61] [25]),
        .I1(new_tx_test_seed_reg_0[1]),
        .I2(new_tx_test_seed_reg_0[0]),
        .I3(Q),
        .I4(p_0_in_0),
        .I5(p_2_in),
        .O(\scr_reg[38]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h56A6FFFF56A60000)) 
    \scr_reg[39]_i_1 
       (.I0(Q),
        .I1(pseudo_rand_seeds_int[39]),
        .I2(tx_test_patt_seed_sel),
        .I3(pseudo_rand_seeds_int[97]),
        .I4(\scr_reg_reg[56]_0 ),
        .I5(asynch_fifo_i_i_68_n_0),
        .O(\scr_reg[39]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h56A6FFFF56A60000)) 
    \scr_reg[3]_i_1 
       (.I0(Q),
        .I1(pseudo_rand_seeds_int[3]),
        .I2(tx_test_patt_seed_sel),
        .I3(pseudo_rand_seeds_int[61]),
        .I4(\scr_reg_reg[56]_0 ),
        .I5(\scr_reg[3]_i_2_n_0 ),
        .O(\scr_reg[3]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h59AA5955A655A6AA)) 
    \scr_reg[3]_i_2 
       (.I0(asynch_fifo_i_i_74_n_0),
        .I1(Q),
        .I2(new_tx_test_seed_reg_0[0]),
        .I3(new_tx_test_seed_reg_0[1]),
        .I4(\rd_data_reg[61] [60]),
        .I5(asynch_fifo_i_i_73_n_0),
        .O(\scr_reg[3]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h56A6FFFF56A60000)) 
    \scr_reg[40]_i_1 
       (.I0(Q),
        .I1(pseudo_rand_seeds_int[40]),
        .I2(tx_test_patt_seed_sel),
        .I3(pseudo_rand_seeds_int[98]),
        .I4(\scr_reg_reg[56]_0 ),
        .I5(asynch_fifo_i_i_69_n_0),
        .O(\scr_reg[40]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h56A656A60000FFFF)) 
    \scr_reg[41]_i_1 
       (.I0(Q),
        .I1(pseudo_rand_seeds_int[41]),
        .I2(tx_test_patt_seed_sel),
        .I3(pseudo_rand_seeds_int[99]),
        .I4(asynch_fifo_i_i_72_n_0),
        .I5(\scr_reg_reg[56]_0 ),
        .O(\scr_reg[41]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h56A6FFFF56A60000)) 
    \scr_reg[42]_i_1 
       (.I0(Q),
        .I1(pseudo_rand_seeds_int[42]),
        .I2(tx_test_patt_seed_sel),
        .I3(pseudo_rand_seeds_int[100]),
        .I4(\scr_reg_reg[56]_0 ),
        .I5(asynch_fifo_i_i_73_n_0),
        .O(\scr_reg[42]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h56A6FFFF56A60000)) 
    \scr_reg[43]_i_1 
       (.I0(Q),
        .I1(pseudo_rand_seeds_int[43]),
        .I2(tx_test_patt_seed_sel),
        .I3(pseudo_rand_seeds_int[101]),
        .I4(\scr_reg_reg[56]_0 ),
        .I5(asynch_fifo_i_i_76_n_0),
        .O(\scr_reg[43]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h56A6FFFF56A60000)) 
    \scr_reg[44]_i_1 
       (.I0(Q),
        .I1(pseudo_rand_seeds_int[44]),
        .I2(tx_test_patt_seed_sel),
        .I3(pseudo_rand_seeds_int[102]),
        .I4(\scr_reg_reg[56]_0 ),
        .I5(asynch_fifo_i_i_77_n_0),
        .O(\scr_reg[44]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h56A6FFFF56A60000)) 
    \scr_reg[45]_i_1 
       (.I0(Q),
        .I1(pseudo_rand_seeds_int[45]),
        .I2(tx_test_patt_seed_sel),
        .I3(pseudo_rand_seeds_int[103]),
        .I4(\scr_reg_reg[56]_0 ),
        .I5(asynch_fifo_i_i_79_n_0),
        .O(\scr_reg[45]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h56A6FFFF56A60000)) 
    \scr_reg[46]_i_1 
       (.I0(Q),
        .I1(pseudo_rand_seeds_int[46]),
        .I2(tx_test_patt_seed_sel),
        .I3(pseudo_rand_seeds_int[104]),
        .I4(\scr_reg_reg[56]_0 ),
        .I5(asynch_fifo_i_i_81_n_0),
        .O(\scr_reg[46]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h56A6FFFF56A60000)) 
    \scr_reg[47]_i_1 
       (.I0(Q),
        .I1(pseudo_rand_seeds_int[47]),
        .I2(tx_test_patt_seed_sel),
        .I3(pseudo_rand_seeds_int[105]),
        .I4(\scr_reg_reg[56]_0 ),
        .I5(asynch_fifo_i_i_82_n_0),
        .O(\scr_reg[47]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h56A6FFFF56A60000)) 
    \scr_reg[48]_i_1 
       (.I0(Q),
        .I1(pseudo_rand_seeds_int[48]),
        .I2(tx_test_patt_seed_sel),
        .I3(pseudo_rand_seeds_int[106]),
        .I4(\scr_reg_reg[56]_0 ),
        .I5(asynch_fifo_i_i_83_n_0),
        .O(\scr_reg[48]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h56A6FFFF56A60000)) 
    \scr_reg[49]_i_1 
       (.I0(Q),
        .I1(pseudo_rand_seeds_int[49]),
        .I2(tx_test_patt_seed_sel),
        .I3(pseudo_rand_seeds_int[107]),
        .I4(\scr_reg_reg[56]_0 ),
        .I5(asynch_fifo_i_i_84_n_0),
        .O(\scr_reg[49]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h56A6FFFF56A60000)) 
    \scr_reg[4]_i_1 
       (.I0(Q),
        .I1(pseudo_rand_seeds_int[4]),
        .I2(tx_test_patt_seed_sel),
        .I3(pseudo_rand_seeds_int[62]),
        .I4(\scr_reg_reg[56]_0 ),
        .I5(\scr_reg[4]_i_2_n_0 ),
        .O(\scr_reg[4]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h59AA5955A655A6AA)) 
    \scr_reg[4]_i_2 
       (.I0(asynch_fifo_i_i_76_n_0),
        .I1(Q),
        .I2(new_tx_test_seed_reg_0[0]),
        .I3(new_tx_test_seed_reg_0[1]),
        .I4(\rd_data_reg[61] [59]),
        .I5(asynch_fifo_i_i_75_n_0),
        .O(\scr_reg[4]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h56A6FFFF56A60000)) 
    \scr_reg[50]_i_1 
       (.I0(Q),
        .I1(pseudo_rand_seeds_int[50]),
        .I2(tx_test_patt_seed_sel),
        .I3(pseudo_rand_seeds_int[108]),
        .I4(\scr_reg_reg[56]_0 ),
        .I5(asynch_fifo_i_i_85_n_0),
        .O(\scr_reg[50]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h56A6FFFF56A60000)) 
    \scr_reg[51]_i_1 
       (.I0(Q),
        .I1(pseudo_rand_seeds_int[51]),
        .I2(tx_test_patt_seed_sel),
        .I3(pseudo_rand_seeds_int[109]),
        .I4(\scr_reg_reg[56]_0 ),
        .I5(asynch_fifo_i_i_86_n_0),
        .O(\scr_reg[51]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h56A6FFFF56A60000)) 
    \scr_reg[52]_i_1 
       (.I0(Q),
        .I1(pseudo_rand_seeds_int[52]),
        .I2(tx_test_patt_seed_sel),
        .I3(pseudo_rand_seeds_int[110]),
        .I4(\scr_reg_reg[56]_0 ),
        .I5(asynch_fifo_i_i_87_n_0),
        .O(\scr_reg[52]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h56A6FFFF56A60000)) 
    \scr_reg[53]_i_1 
       (.I0(Q),
        .I1(pseudo_rand_seeds_int[53]),
        .I2(tx_test_patt_seed_sel),
        .I3(pseudo_rand_seeds_int[111]),
        .I4(\scr_reg_reg[56]_0 ),
        .I5(asynch_fifo_i_i_88_n_0),
        .O(\scr_reg[53]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h56A6FFFF56A60000)) 
    \scr_reg[54]_i_1 
       (.I0(Q),
        .I1(pseudo_rand_seeds_int[54]),
        .I2(tx_test_patt_seed_sel),
        .I3(pseudo_rand_seeds_int[112]),
        .I4(\scr_reg_reg[56]_0 ),
        .I5(asynch_fifo_i_i_89_n_0),
        .O(\scr_reg[54]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h56A6FFFF56A60000)) 
    \scr_reg[55]_i_1 
       (.I0(Q),
        .I1(pseudo_rand_seeds_int[55]),
        .I2(tx_test_patt_seed_sel),
        .I3(pseudo_rand_seeds_int[113]),
        .I4(\scr_reg_reg[56]_0 ),
        .I5(asynch_fifo_i_i_90_n_0),
        .O(\scr_reg[55]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h56A6FFFF56A60000)) 
    \scr_reg[56]_i_1 
       (.I0(Q),
        .I1(pseudo_rand_seeds_int[56]),
        .I2(tx_test_patt_seed_sel),
        .I3(pseudo_rand_seeds_int[114]),
        .I4(\scr_reg_reg[56]_0 ),
        .I5(asynch_fifo_i_i_91_n_0),
        .O(\scr_reg[56]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h56A6FFFF56A60000)) 
    \scr_reg[57]_i_1 
       (.I0(Q),
        .I1(pseudo_rand_seeds_int[57]),
        .I2(tx_test_patt_seed_sel),
        .I3(pseudo_rand_seeds_int[115]),
        .I4(\scr_reg_reg[56]_0 ),
        .I5(asynch_fifo_i_i_92_n_0),
        .O(\scr_reg[57]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h56A6FFFF56A60000)) 
    \scr_reg[5]_i_1 
       (.I0(Q),
        .I1(pseudo_rand_seeds_int[5]),
        .I2(tx_test_patt_seed_sel),
        .I3(pseudo_rand_seeds_int[63]),
        .I4(\scr_reg_reg[56]_0 ),
        .I5(\scr_reg[5]_i_2_n_0 ),
        .O(\scr_reg[5]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h59AA5955A655A6AA)) 
    \scr_reg[5]_i_2 
       (.I0(asynch_fifo_i_i_78_n_0),
        .I1(Q),
        .I2(new_tx_test_seed_reg_0[0]),
        .I3(new_tx_test_seed_reg_0[1]),
        .I4(\rd_data_reg[61] [58]),
        .I5(asynch_fifo_i_i_77_n_0),
        .O(\scr_reg[5]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h56A6FFFF56A60000)) 
    \scr_reg[6]_i_1 
       (.I0(Q),
        .I1(pseudo_rand_seeds_int[6]),
        .I2(tx_test_patt_seed_sel),
        .I3(pseudo_rand_seeds_int[64]),
        .I4(\scr_reg_reg[56]_0 ),
        .I5(\scr_reg[6]_i_2_n_0 ),
        .O(\scr_reg[6]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h59AA5955A655A6AA)) 
    \scr_reg[6]_i_2 
       (.I0(asynch_fifo_i_i_79_n_0),
        .I1(Q),
        .I2(new_tx_test_seed_reg_0[0]),
        .I3(new_tx_test_seed_reg_0[1]),
        .I4(\rd_data_reg[61] [57]),
        .I5(\scr_reg_reg_n_0_[0] ),
        .O(\scr_reg[6]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h56A6FFFF56A60000)) 
    \scr_reg[7]_i_1 
       (.I0(Q),
        .I1(pseudo_rand_seeds_int[7]),
        .I2(tx_test_patt_seed_sel),
        .I3(pseudo_rand_seeds_int[65]),
        .I4(\scr_reg_reg[56]_0 ),
        .I5(\scr_reg[7]_i_2_n_0 ),
        .O(\scr_reg[7]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h9A996566)) 
    \scr_reg[7]_i_2 
       (.I0(asynch_fifo_i_i_81_n_0),
        .I1(\rd_data_reg[7] ),
        .I2(new_tx_test_seed_reg_0[1]),
        .I3(\rd_data_reg[61] [56]),
        .I4(p_0_in44_in),
        .O(\scr_reg[7]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h56A6FFFF56A60000)) 
    \scr_reg[8]_i_1 
       (.I0(Q),
        .I1(pseudo_rand_seeds_int[8]),
        .I2(tx_test_patt_seed_sel),
        .I3(pseudo_rand_seeds_int[66]),
        .I4(\scr_reg_reg[56]_0 ),
        .I5(\scr_reg[8]_i_2_n_0 ),
        .O(\scr_reg[8]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h59AA5955A655A6AA)) 
    \scr_reg[8]_i_2 
       (.I0(asynch_fifo_i_i_82_n_0),
        .I1(Q),
        .I2(new_tx_test_seed_reg_0[0]),
        .I3(new_tx_test_seed_reg_0[1]),
        .I4(\rd_data_reg[61] [55]),
        .I5(p_0_in40_in),
        .O(\scr_reg[8]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h56A6FFFF56A60000)) 
    \scr_reg[9]_i_1 
       (.I0(Q),
        .I1(pseudo_rand_seeds_int[9]),
        .I2(tx_test_patt_seed_sel),
        .I3(pseudo_rand_seeds_int[67]),
        .I4(\scr_reg_reg[56]_0 ),
        .I5(\scr_reg[9]_i_2_n_0 ),
        .O(\scr_reg[9]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h59AA5955A655A6AA)) 
    \scr_reg[9]_i_2 
       (.I0(asynch_fifo_i_i_83_n_0),
        .I1(Q),
        .I2(new_tx_test_seed_reg_0[0]),
        .I3(new_tx_test_seed_reg_0[1]),
        .I4(\rd_data_reg[61] [54]),
        .I5(p_0_in36_in),
        .O(\scr_reg[9]_i_2_n_0 ));
  FDRE \scr_reg_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[0]_i_1_n_0 ),
        .Q(\scr_reg_reg_n_0_[0] ),
        .R(out));
  FDRE \scr_reg_reg[10] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[10]_i_1_n_0 ),
        .Q(p_0_in8_in),
        .R(out));
  FDRE \scr_reg_reg[11] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[11]_i_1_n_0 ),
        .Q(p_0_in4_in),
        .R(out));
  FDRE \scr_reg_reg[12] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[12]_i_1_n_0 ),
        .Q(p_0_in0_in),
        .R(out));
  FDRE \scr_reg_reg[13] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[13]_i_1_n_0 ),
        .Q(p_0_in_0),
        .R(out));
  FDRE \scr_reg_reg[14] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[14]_i_1_n_0 ),
        .Q(p_2_in68_in),
        .R(out));
  FDRE \scr_reg_reg[15] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[15]_i_1_n_0 ),
        .Q(p_2_in64_in),
        .R(out));
  FDRE \scr_reg_reg[16] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[16]_i_1_n_0 ),
        .Q(p_2_in60_in),
        .R(out));
  FDRE \scr_reg_reg[17] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[17]_i_1_n_0 ),
        .Q(p_2_in56_in),
        .R(out));
  FDRE \scr_reg_reg[18] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[18]_i_1_n_0 ),
        .Q(p_2_in52_in),
        .R(out));
  FDRE \scr_reg_reg[19] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[19]_i_1_n_0 ),
        .Q(p_2_in48_in),
        .R(out));
  FDRE \scr_reg_reg[1] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[1]_i_1_n_0 ),
        .Q(p_0_in44_in),
        .R(out));
  FDRE \scr_reg_reg[20] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[20]_i_1_n_0 ),
        .Q(p_2_in45_in),
        .R(out));
  FDRE \scr_reg_reg[21] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[21]_i_1_n_0 ),
        .Q(p_2_in41_in),
        .R(out));
  FDRE \scr_reg_reg[22] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[22]_i_1_n_0 ),
        .Q(p_2_in37_in),
        .R(out));
  FDRE \scr_reg_reg[23] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[23]_i_1_n_0 ),
        .Q(p_2_in33_in),
        .R(out));
  FDRE \scr_reg_reg[24] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[24]_i_1_n_0 ),
        .Q(p_2_in29_in),
        .R(out));
  FDRE \scr_reg_reg[25] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[25]_i_1_n_0 ),
        .Q(p_2_in25_in),
        .R(out));
  FDRE \scr_reg_reg[26] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[26]_i_1_n_0 ),
        .Q(p_2_in21_in),
        .R(out));
  FDRE \scr_reg_reg[27] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[27]_i_1_n_0 ),
        .Q(p_2_in17_in),
        .R(out));
  FDRE \scr_reg_reg[28] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[28]_i_1_n_0 ),
        .Q(p_2_in13_in),
        .R(out));
  FDRE \scr_reg_reg[29] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[29]_i_1_n_0 ),
        .Q(p_2_in9_in),
        .R(out));
  FDRE \scr_reg_reg[2] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[2]_i_1_n_0 ),
        .Q(p_0_in40_in),
        .R(out));
  FDRE \scr_reg_reg[30] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[30]_i_1_n_0 ),
        .Q(p_2_in5_in),
        .R(out));
  FDRE \scr_reg_reg[31] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[31]_i_1_n_0 ),
        .Q(p_2_in1_in),
        .R(out));
  FDRE \scr_reg_reg[32] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[32]_i_1_n_0 ),
        .Q(p_2_in),
        .R(out));
  FDRE \scr_reg_reg[33] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[33]_i_1_n_0 ),
        .Q(p_0_in200_in),
        .R(out));
  FDRE \scr_reg_reg[34] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[34]_i_1_n_0 ),
        .Q(p_0_in190_in),
        .R(out));
  FDRE \scr_reg_reg[35] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[35]_i_1_n_0 ),
        .Q(p_0_in180_in),
        .R(out));
  FDRE \scr_reg_reg[36] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[36]_i_1_n_0 ),
        .Q(p_0_in170_in),
        .R(out));
  FDRE \scr_reg_reg[37] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[37]_i_1_n_0 ),
        .Q(p_0_in160_in),
        .R(out));
  FDRE \scr_reg_reg[38] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[38]_i_1_n_0 ),
        .Q(p_0_in151_in),
        .R(out));
  FDRE \scr_reg_reg[39] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[39]_i_1_n_0 ),
        .Q(p_2_in145_in),
        .R(out));
  FDRE \scr_reg_reg[3] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[3]_i_1_n_0 ),
        .Q(p_0_in36_in),
        .R(out));
  FDRE \scr_reg_reg[40] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[40]_i_1_n_0 ),
        .Q(p_2_in139_in),
        .R(out));
  FDRE \scr_reg_reg[41] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[41]_i_1_n_0 ),
        .Q(p_2_in133_in),
        .R(out));
  FDRE \scr_reg_reg[42] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[42]_i_1_n_0 ),
        .Q(p_2_in127_in),
        .R(out));
  FDRE \scr_reg_reg[43] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[43]_i_1_n_0 ),
        .Q(p_2_in121_in),
        .R(out));
  FDRE \scr_reg_reg[44] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[44]_i_1_n_0 ),
        .Q(p_2_in115_in),
        .R(out));
  FDRE \scr_reg_reg[45] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[45]_i_1_n_0 ),
        .Q(p_2_in109_in),
        .R(out));
  FDRE \scr_reg_reg[46] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[46]_i_1_n_0 ),
        .Q(p_2_in103_in),
        .R(out));
  FDRE \scr_reg_reg[47] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[47]_i_1_n_0 ),
        .Q(p_2_in97_in),
        .R(out));
  FDRE \scr_reg_reg[48] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[48]_i_1_n_0 ),
        .Q(p_2_in91_in),
        .R(out));
  FDRE \scr_reg_reg[49] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[49]_i_1_n_0 ),
        .Q(p_2_in85_in),
        .R(out));
  FDRE \scr_reg_reg[4] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[4]_i_1_n_0 ),
        .Q(p_0_in32_in),
        .R(out));
  FDRE \scr_reg_reg[50] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[50]_i_1_n_0 ),
        .Q(p_2_in79_in),
        .R(out));
  FDRE \scr_reg_reg[51] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[51]_i_1_n_0 ),
        .Q(p_2_in74_in),
        .R(out));
  FDRE \scr_reg_reg[52] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[52]_i_1_n_0 ),
        .Q(p_2_in201_in),
        .R(out));
  FDRE \scr_reg_reg[53] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[53]_i_1_n_0 ),
        .Q(p_2_in191_in),
        .R(out));
  FDRE \scr_reg_reg[54] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[54]_i_1_n_0 ),
        .Q(p_2_in181_in),
        .R(out));
  FDRE \scr_reg_reg[55] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[55]_i_1_n_0 ),
        .Q(p_2_in171_in),
        .R(out));
  FDRE \scr_reg_reg[56] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[56]_i_1_n_0 ),
        .Q(p_2_in161_in),
        .R(out));
  FDRE \scr_reg_reg[57] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[57]_i_1_n_0 ),
        .Q(p_2_in152_in),
        .R(out));
  FDRE \scr_reg_reg[5] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[5]_i_1_n_0 ),
        .Q(p_0_in28_in),
        .R(out));
  FDRE \scr_reg_reg[6] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[6]_i_1_n_0 ),
        .Q(p_0_in24_in),
        .R(out));
  FDRE \scr_reg_reg[7] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[7]_i_1_n_0 ),
        .Q(p_0_in20_in),
        .R(out));
  FDRE \scr_reg_reg[8] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[8]_i_1_n_0 ),
        .Q(p_0_in16_in),
        .R(out));
  FDRE \scr_reg_reg[9] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[9]_i_1_n_0 ),
        .Q(p_0_in12_in),
        .R(out));
  (* SOFT_HLUTNM = "soft_lutpair227" *) 
  LUT3 #(
    .INIT(8'h6A)) 
    \tx_test_patt_seed_sel[0]_i_1 
       (.I0(Q),
        .I1(\tx_test_patt_seed_sel[1]_i_3_n_0 ),
        .I2(block_count_reg[6]),
        .O(p_1_in__0[0]));
  LUT2 #(
    .INIT(4'hB)) 
    \tx_test_patt_seed_sel[1]_i_1 
       (.I0(out),
        .I1(new_tx_test_seed_reg_0[1]),
        .O(\tx_test_patt_seed_sel[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair227" *) 
  LUT4 #(
    .INIT(16'h6AAA)) 
    \tx_test_patt_seed_sel[1]_i_2 
       (.I0(tx_test_patt_seed_sel),
        .I1(block_count_reg[6]),
        .I2(\tx_test_patt_seed_sel[1]_i_3_n_0 ),
        .I3(Q),
        .O(p_1_in__0[1]));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \tx_test_patt_seed_sel[1]_i_3 
       (.I0(block_count_reg[5]),
        .I1(block_count_reg[3]),
        .I2(block_count_reg[0]),
        .I3(block_count_reg[1]),
        .I4(block_count_reg[2]),
        .I5(block_count_reg[4]),
        .O(\tx_test_patt_seed_sel[1]_i_3_n_0 ));
  FDRE \tx_test_patt_seed_sel_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(p_1_in__0[0]),
        .Q(Q),
        .R(\tx_test_patt_seed_sel[1]_i_1_n_0 ));
  FDRE \tx_test_patt_seed_sel_reg[1] 
       (.C(coreclk),
        .CE(1'b1),
        .D(p_1_in__0[1]),
        .Q(tx_test_patt_seed_sel),
        .R(\tx_test_patt_seed_sel[1]_i_1_n_0 ));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_15_pcs_top" *) 
module ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_pcs_top
   (new_tx_test_seed,
    out,
    in0,
    gt_slip_int,
    ber_count_inc,
    mcp1_hiber_reg,
    err_block_count_inc,
    cable_pull,
    \rx_66_enc_reg_reg[11] ,
    \rx_66_enc_reg_reg[17] ,
    \rx_66_enc_reg_reg[29] ,
    \rx_66_enc_reg_reg[31] ,
    \rx_66_enc_reg_reg[39] ,
    \rx_66_enc_reg_reg[47] ,
    \rx_66_enc_reg_reg[53] ,
    \rx_66_enc_reg_reg[61] ,
    \tx_test_patt_seed_sel_reg[0] ,
    tx_66_fifo,
    tx_66_enc_out,
    \mcp1_rx_ebuff_ctrl_reg[7] ,
    \mcp1_rx_ebuff_data_reg[63] ,
    comp_8,
    comp_2,
    comp_1,
    comp_1_0,
    comp_0,
    comp_0_1,
    comp_8_2,
    comp_2_3,
    comp_1_4,
    comp_1_5,
    comp_0_6,
    comp_0_7,
    rxusrclk2,
    Q,
    E,
    coreclk,
    signal_detect,
    \mcp1_rx_ebuff_data_reg[0] ,
    reset_local_reg_0,
    reset,
    rxreset_rxusrclk2,
    pcs_rxreset_int,
    \mcp1_descr_reg_reg[0] ,
    \FSM_sequential_mcp1_state_reg[0] ,
    new_tx_test_seed_reg,
    pseudo_rand_seeds_int,
    \scr_reg_reg[56] ,
    \rd_data_reg[7] ,
    mcp1_err_block_count_inc_out_reg,
    mcp1_err_block_count_inc_out_reg_0,
    D,
    \tx_xgmii_data_reg2_reg[63] ,
    \mcp1_dec_c0_reg[7] ,
    \mcp1_rx_66_enc_reg_reg[65] ,
    \mcp1_r_type_next_reg_reg[2] ,
    \mcp1_rx_66_enc_reg_reg[22] ,
    SR,
    \mcp1_dec_c1_reg[7] ,
    \mcp1_dec_c2_reg[6] ,
    \mcp1_dec_c3_reg[5] ,
    \mcp1_dec_c4_reg[7] ,
    \mcp1_dec_c5_reg[5] ,
    SS,
    \mcp1_dec_c7_reg[7] );
  output new_tx_test_seed;
  output out;
  output in0;
  output gt_slip_int;
  output ber_count_inc;
  output mcp1_hiber_reg;
  output err_block_count_inc;
  output cable_pull;
  output [0:0]\rx_66_enc_reg_reg[11] ;
  output [0:0]\rx_66_enc_reg_reg[17] ;
  output [0:0]\rx_66_enc_reg_reg[29] ;
  output [0:0]\rx_66_enc_reg_reg[31] ;
  output [0:0]\rx_66_enc_reg_reg[39] ;
  output [0:0]\rx_66_enc_reg_reg[47] ;
  output [0:0]\rx_66_enc_reg_reg[53] ;
  output \rx_66_enc_reg_reg[61] ;
  output [0:0]\tx_test_patt_seed_sel_reg[0] ;
  output [64:0]tx_66_fifo;
  output [0:0]tx_66_enc_out;
  output [7:0]\mcp1_rx_ebuff_ctrl_reg[7] ;
  output [63:0]\mcp1_rx_ebuff_data_reg[63] ;
  output comp_8;
  output comp_2;
  output comp_1;
  output comp_1_0;
  output comp_0;
  output comp_0_1;
  output comp_8_2;
  output comp_2_3;
  output comp_1_4;
  output comp_1_5;
  output comp_0_6;
  output comp_0_7;
  input rxusrclk2;
  input [15:0]Q;
  input [0:0]E;
  input coreclk;
  input signal_detect;
  input [2:0]\mcp1_rx_ebuff_data_reg[0] ;
  input reset_local_reg_0;
  input reset;
  input rxreset_rxusrclk2;
  input pcs_rxreset_int;
  input [65:0]\mcp1_descr_reg_reg[0] ;
  input [2:0]\FSM_sequential_mcp1_state_reg[0] ;
  input [1:0]new_tx_test_seed_reg;
  input [115:0]pseudo_rand_seeds_int;
  input \scr_reg_reg[56] ;
  input \rd_data_reg[7] ;
  input mcp1_err_block_count_inc_out_reg;
  input mcp1_err_block_count_inc_out_reg_0;
  input [7:0]D;
  input [63:0]\tx_xgmii_data_reg2_reg[63] ;
  input [0:0]\mcp1_dec_c0_reg[7] ;
  input [2:0]\mcp1_rx_66_enc_reg_reg[65] ;
  input \mcp1_r_type_next_reg_reg[2] ;
  input [1:0]\mcp1_rx_66_enc_reg_reg[22] ;
  input [0:0]SR;
  input [0:0]\mcp1_dec_c1_reg[7] ;
  input [0:0]\mcp1_dec_c2_reg[6] ;
  input [0:0]\mcp1_dec_c3_reg[5] ;
  input [0:0]\mcp1_dec_c4_reg[7] ;
  input [0:0]\mcp1_dec_c5_reg[5] ;
  input [0:0]SS;
  input [0:0]\mcp1_dec_c7_reg[7] ;

  wire [7:0]D;
  wire [0:0]E;
  wire [2:0]\FSM_sequential_mcp1_state_reg[0] ;
  wire [15:0]Q;
  wire [0:0]SR;
  wire [0:0]SS;
  wire ber_count_inc;
  wire cable_pull;
  wire comp_0;
  wire comp_0_1;
  wire comp_0_6;
  wire comp_0_7;
  wire comp_1;
  wire comp_1_0;
  wire comp_1_4;
  wire comp_1_5;
  wire comp_2;
  wire comp_2_3;
  wire comp_8;
  wire comp_8_2;
  wire coreclk;
  wire err_block_count_inc;
  wire gt_slip_int;
  wire in0;
  wire [0:0]\mcp1_dec_c0_reg[7] ;
  wire [0:0]\mcp1_dec_c1_reg[7] ;
  wire [0:0]\mcp1_dec_c2_reg[6] ;
  wire [0:0]\mcp1_dec_c3_reg[5] ;
  wire [0:0]\mcp1_dec_c4_reg[7] ;
  wire [0:0]\mcp1_dec_c5_reg[5] ;
  wire [0:0]\mcp1_dec_c7_reg[7] ;
  wire [65:0]\mcp1_descr_reg_reg[0] ;
  wire mcp1_err_block_count_inc_out_reg;
  wire mcp1_err_block_count_inc_out_reg_0;
  wire mcp1_hiber_reg;
  wire \mcp1_r_type_next_reg_reg[2] ;
  wire [1:0]\mcp1_rx_66_enc_reg_reg[22] ;
  wire [2:0]\mcp1_rx_66_enc_reg_reg[65] ;
  wire [7:0]\mcp1_rx_ebuff_ctrl_reg[7] ;
  wire [2:0]\mcp1_rx_ebuff_data_reg[0] ;
  wire [63:0]\mcp1_rx_ebuff_data_reg[63] ;
  wire [15:0]mcp1_timer_125us_cycles_sync;
  wire new_tx_test_seed;
  wire [1:0]new_tx_test_seed_reg;
  wire out;
  wire pcs_rxreset_int;
  wire [115:0]pseudo_rand_seeds_int;
  wire \rd_data_reg[7] ;
  wire reset;
  (* DONT_TOUCH *) (* equivalent_register_removal = "no" *) wire reset_local;
  wire reset_local_reg_0;
  wire [0:0]\rx_66_enc_reg_reg[11] ;
  wire [0:0]\rx_66_enc_reg_reg[17] ;
  wire [0:0]\rx_66_enc_reg_reg[29] ;
  wire [0:0]\rx_66_enc_reg_reg[31] ;
  wire [0:0]\rx_66_enc_reg_reg[39] ;
  wire [0:0]\rx_66_enc_reg_reg[47] ;
  wire [0:0]\rx_66_enc_reg_reg[53] ;
  wire \rx_66_enc_reg_reg[61] ;
  (* DONT_TOUCH *) (* equivalent_register_removal = "no" *) wire rxreset_local;
  wire rxreset_rxusrclk2;
  wire rxusrclk2;
  wire \scr_reg_reg[56] ;
  wire signal_detect;
  wire [0:0]tx_66_enc_out;
  wire [64:0]tx_66_fifo;
  wire [0:0]\tx_test_patt_seed_sel_reg[0] ;
  wire [63:0]\tx_xgmii_data_reg2_reg[63] ;

  ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_coherent_resyncs_en coreclk_rxusrclk2_timer_125us_resync
       (.E(E),
        .Q(Q),
        .\comp_res_reg[0]_0 (\mcp1_rx_ebuff_data_reg[0] [0]),
        .\d5_reg[15]_0 (\mcp1_dec_c0_reg[7] ),
        .out(mcp1_timer_125us_cycles_sync),
        .rxusrclk2(rxusrclk2));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDSE reset_local_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(reset),
        .Q(reset_local),
        .S(reset_local_reg_0));
  ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_rx_pcs rx_pcs_i
       (.D(\rx_66_enc_reg_reg[11] ),
        .E(E),
        .\FSM_sequential_mcp1_state_reg[0] (\FSM_sequential_mcp1_state_reg[0] ),
        .SR(out),
        .SS(SS),
        .b_lock_mod_reg(in0),
        .ber_count_inc(ber_count_inc),
        .cable_pull(cable_pull),
        .comp_0(comp_0),
        .comp_0_1(comp_0_1),
        .comp_0_6(comp_0_6),
        .comp_0_7(comp_0_7),
        .comp_1(comp_1),
        .comp_1_0(comp_1_0),
        .comp_1_4(comp_1_4),
        .comp_1_5(comp_1_5),
        .comp_2(comp_2),
        .comp_2_3(comp_2_3),
        .comp_8(comp_8),
        .comp_8_2(comp_8_2),
        .err_block_count_inc(err_block_count_inc),
        .gt_slip_int(gt_slip_int),
        .\mcp1_dec_c0_reg[6] (SR),
        .\mcp1_dec_c0_reg[7] (\mcp1_dec_c0_reg[7] ),
        .\mcp1_dec_c1_reg[7] (\mcp1_dec_c1_reg[7] ),
        .\mcp1_dec_c2_reg[6] (\mcp1_dec_c2_reg[6] ),
        .\mcp1_dec_c3_reg[5] (\mcp1_dec_c3_reg[5] ),
        .\mcp1_dec_c4_reg[7] (\mcp1_dec_c4_reg[7] ),
        .\mcp1_dec_c5_reg[5] (\mcp1_dec_c5_reg[5] ),
        .\mcp1_dec_c7_reg[7] (\mcp1_dec_c7_reg[7] ),
        .\mcp1_descr_reg_reg[0] (\mcp1_descr_reg_reg[0] ),
        .mcp1_err_block_count_inc_out_reg(mcp1_err_block_count_inc_out_reg),
        .mcp1_err_block_count_inc_out_reg_0(mcp1_err_block_count_inc_out_reg_0),
        .mcp1_hiber_reg(mcp1_hiber_reg),
        .\mcp1_r_type_next_reg_reg[2] (\mcp1_r_type_next_reg_reg[2] ),
        .\mcp1_rx_66_enc_reg_reg[22] (\mcp1_rx_66_enc_reg_reg[22] ),
        .\mcp1_rx_66_enc_reg_reg[65] (\mcp1_rx_66_enc_reg_reg[65] ),
        .\mcp1_rx_ebuff_ctrl_reg[7] (\mcp1_rx_ebuff_ctrl_reg[7] ),
        .\mcp1_rx_ebuff_data_reg[0] (\mcp1_rx_ebuff_data_reg[0] ),
        .\mcp1_rx_ebuff_data_reg[63] (\mcp1_rx_ebuff_data_reg[63] ),
        .\mcp1_timer_125us_reg[15] (mcp1_timer_125us_cycles_sync),
        .out(rxreset_local),
        .\rx_66_enc_reg_reg[17]_0 (\rx_66_enc_reg_reg[17] ),
        .\rx_66_enc_reg_reg[29]_0 (\rx_66_enc_reg_reg[29] ),
        .\rx_66_enc_reg_reg[31]_0 (\rx_66_enc_reg_reg[31] ),
        .\rx_66_enc_reg_reg[39]_0 (\rx_66_enc_reg_reg[39] ),
        .\rx_66_enc_reg_reg[47]_0 (\rx_66_enc_reg_reg[47] ),
        .\rx_66_enc_reg_reg[53]_0 (\rx_66_enc_reg_reg[53] ),
        .\rx_66_enc_reg_reg[61]_0 (\rx_66_enc_reg_reg[61] ),
        .rxusrclk2(rxusrclk2),
        .signal_detect(signal_detect));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDSE rxreset_local_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(pcs_rxreset_int),
        .Q(rxreset_local),
        .S(rxreset_rxusrclk2));
  ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_tx_pcs tx_pcs_i
       (.D(D),
        .Q(\tx_test_patt_seed_sel_reg[0] ),
        .coreclk(coreclk),
        .new_tx_test_seed(new_tx_test_seed),
        .new_tx_test_seed_reg(new_tx_test_seed_reg),
        .out(reset_local),
        .pseudo_rand_seeds_int(pseudo_rand_seeds_int),
        .\rd_data_reg[7] (\rd_data_reg[7] ),
        .\scr_reg_reg[56] (\scr_reg_reg[56] ),
        .tx_66_enc_out(tx_66_enc_out),
        .tx_66_fifo(tx_66_fifo),
        .\tx_xgmii_data_reg2_reg[63] (\tx_xgmii_data_reg2_reg[63] ));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_15_pulse_synchronizer" *) 
module ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_pulse_synchronizer
   (counter_sync_1,
    counter_sync_extra_reg,
    dcapture_reg_0,
    rxusrclk2,
    coreclk,
    counter_sync_extra,
    counter_sync_3,
    counter_sync_2);
  output counter_sync_1;
  output counter_sync_extra_reg;
  input dcapture_reg_0;
  input rxusrclk2;
  input coreclk;
  input counter_sync_extra;
  input counter_sync_3;
  input counter_sync_2;

  wire coreclk;
  wire counter_sync_1;
  wire counter_sync_2;
  wire counter_sync_3;
  wire counter_sync_extra;
  wire counter_sync_extra_reg;
  wire dcapture;
  wire dcapture_reg_0;
  wire newedge;
  wire newedge_i_1__5_n_0;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire newedge_reg1;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire newedge_reg2;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire newedge_reg3;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire newedge_reg4;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire newedge_reg__0;
  wire out_comb;
  wire rxusrclk2;

  LUT4 #(
    .INIT(16'hFEE8)) 
    counter_sync_extra_i_1__1
       (.I0(counter_sync_extra),
        .I1(counter_sync_1),
        .I2(counter_sync_3),
        .I3(counter_sync_2),
        .O(counter_sync_extra_reg));
  FDRE #(
    .INIT(1'b0)) 
    dcapture_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(dcapture_reg_0),
        .Q(dcapture),
        .R(1'b0));
  LUT4 #(
    .INIT(16'hF704)) 
    newedge_i_1__5
       (.I0(newedge),
        .I1(dcapture_reg_0),
        .I2(dcapture),
        .I3(newedge),
        .O(newedge_i_1__5_n_0));
  FDRE #(
    .INIT(1'b0)) 
    newedge_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(newedge_i_1__5_n_0),
        .Q(newedge),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    newedge_reg1_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(newedge_reg__0),
        .Q(newedge_reg1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    newedge_reg2_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(newedge_reg1),
        .Q(newedge_reg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    newedge_reg3_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(newedge_reg2),
        .Q(newedge_reg3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    newedge_reg4_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(newedge_reg3),
        .Q(newedge_reg4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    newedge_reg_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(newedge),
        .Q(newedge_reg__0),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h6)) 
    q_i_1__5
       (.I0(newedge_reg3),
        .I1(newedge_reg4),
        .O(out_comb));
  FDRE #(
    .INIT(1'b0)) 
    q_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(out_comb),
        .Q(counter_sync_1),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_15_pulse_synchronizer" *) 
module ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_pulse_synchronizer_27
   (counter_sync_2,
    dcapture_reg_0,
    rxusrclk2,
    coreclk);
  output counter_sync_2;
  input dcapture_reg_0;
  input rxusrclk2;
  input coreclk;

  wire coreclk;
  wire counter_sync_2;
  wire dcapture;
  wire dcapture_reg_0;
  wire newedge;
  wire newedge_i_1__6_n_0;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire newedge_reg1;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire newedge_reg2;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire newedge_reg3;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire newedge_reg4;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire newedge_reg__0;
  wire out_comb;
  wire rxusrclk2;

  FDRE #(
    .INIT(1'b0)) 
    dcapture_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(dcapture_reg_0),
        .Q(dcapture),
        .R(1'b0));
  LUT4 #(
    .INIT(16'hF704)) 
    newedge_i_1__6
       (.I0(newedge),
        .I1(dcapture_reg_0),
        .I2(dcapture),
        .I3(newedge),
        .O(newedge_i_1__6_n_0));
  FDRE #(
    .INIT(1'b0)) 
    newedge_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(newedge_i_1__6_n_0),
        .Q(newedge),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    newedge_reg1_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(newedge_reg__0),
        .Q(newedge_reg1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    newedge_reg2_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(newedge_reg1),
        .Q(newedge_reg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    newedge_reg3_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(newedge_reg2),
        .Q(newedge_reg3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    newedge_reg4_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(newedge_reg3),
        .Q(newedge_reg4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    newedge_reg_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(newedge),
        .Q(newedge_reg__0),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h6)) 
    q_i_1__6
       (.I0(newedge_reg3),
        .I1(newedge_reg4),
        .O(out_comb));
  FDRE #(
    .INIT(1'b0)) 
    q_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(out_comb),
        .Q(counter_sync_2),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_15_pulse_synchronizer" *) 
module ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_pulse_synchronizer_28
   (counter_sync_3,
    counter_out0,
    dcapture_reg_0,
    rxusrclk2,
    coreclk,
    counter_sync_2,
    counter_sync_1,
    counter_sync_extra);
  output counter_sync_3;
  output counter_out0;
  input dcapture_reg_0;
  input rxusrclk2;
  input coreclk;
  input counter_sync_2;
  input counter_sync_1;
  input counter_sync_extra;

  wire coreclk;
  wire counter_out0;
  wire counter_sync_1;
  wire counter_sync_2;
  wire counter_sync_3;
  wire counter_sync_extra;
  wire dcapture;
  wire dcapture_reg_0;
  wire newedge;
  wire newedge_i_1__7_n_0;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire newedge_reg1;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire newedge_reg2;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire newedge_reg3;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire newedge_reg4;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire newedge_reg__0;
  wire out_comb;
  wire rxusrclk2;

  LUT4 #(
    .INIT(16'hFFFE)) 
    counter_out_i_1__1
       (.I0(counter_sync_3),
        .I1(counter_sync_2),
        .I2(counter_sync_1),
        .I3(counter_sync_extra),
        .O(counter_out0));
  FDRE #(
    .INIT(1'b0)) 
    dcapture_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(dcapture_reg_0),
        .Q(dcapture),
        .R(1'b0));
  LUT4 #(
    .INIT(16'hF704)) 
    newedge_i_1__7
       (.I0(newedge),
        .I1(dcapture_reg_0),
        .I2(dcapture),
        .I3(newedge),
        .O(newedge_i_1__7_n_0));
  FDRE #(
    .INIT(1'b0)) 
    newedge_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(newedge_i_1__7_n_0),
        .Q(newedge),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    newedge_reg1_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(newedge_reg__0),
        .Q(newedge_reg1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    newedge_reg2_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(newedge_reg1),
        .Q(newedge_reg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    newedge_reg3_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(newedge_reg2),
        .Q(newedge_reg3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    newedge_reg4_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(newedge_reg3),
        .Q(newedge_reg4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    newedge_reg_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(newedge),
        .Q(newedge_reg__0),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h6)) 
    q_i_1__7
       (.I0(newedge_reg3),
        .I1(newedge_reg4),
        .O(out_comb));
  FDRE #(
    .INIT(1'b0)) 
    q_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(out_comb),
        .Q(counter_sync_3),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_15_pulse_synchronizer" *) 
module ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_pulse_synchronizer_33
   (counter_sync_1,
    counter_sync_extra_reg,
    dcapture_reg_0,
    rxusrclk2,
    coreclk,
    counter_sync_extra,
    counter_sync_3,
    counter_sync_2);
  output counter_sync_1;
  output counter_sync_extra_reg;
  input dcapture_reg_0;
  input rxusrclk2;
  input coreclk;
  input counter_sync_extra;
  input counter_sync_3;
  input counter_sync_2;

  wire coreclk;
  wire counter_sync_1;
  wire counter_sync_2;
  wire counter_sync_3;
  wire counter_sync_extra;
  wire counter_sync_extra_reg;
  wire dcapture;
  wire dcapture_reg_0;
  wire newedge;
  wire newedge_i_1_n_0;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire newedge_reg1;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire newedge_reg2;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire newedge_reg3;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire newedge_reg4;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire newedge_reg__0;
  wire out_comb;
  wire rxusrclk2;

  LUT4 #(
    .INIT(16'hFEE8)) 
    counter_sync_extra_i_1
       (.I0(counter_sync_extra),
        .I1(counter_sync_1),
        .I2(counter_sync_3),
        .I3(counter_sync_2),
        .O(counter_sync_extra_reg));
  FDRE #(
    .INIT(1'b0)) 
    dcapture_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(dcapture_reg_0),
        .Q(dcapture),
        .R(1'b0));
  LUT4 #(
    .INIT(16'hF704)) 
    newedge_i_1
       (.I0(newedge),
        .I1(dcapture_reg_0),
        .I2(dcapture),
        .I3(newedge),
        .O(newedge_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    newedge_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(newedge_i_1_n_0),
        .Q(newedge),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    newedge_reg1_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(newedge_reg__0),
        .Q(newedge_reg1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    newedge_reg2_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(newedge_reg1),
        .Q(newedge_reg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    newedge_reg3_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(newedge_reg2),
        .Q(newedge_reg3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    newedge_reg4_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(newedge_reg3),
        .Q(newedge_reg4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    newedge_reg_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(newedge),
        .Q(newedge_reg__0),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h6)) 
    q_i_1
       (.I0(newedge_reg3),
        .I1(newedge_reg4),
        .O(out_comb));
  FDRE #(
    .INIT(1'b0)) 
    q_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(out_comb),
        .Q(counter_sync_1),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_15_pulse_synchronizer" *) 
module ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_pulse_synchronizer_34
   (counter_sync_2,
    dcapture_reg_0,
    rxusrclk2,
    coreclk);
  output counter_sync_2;
  input dcapture_reg_0;
  input rxusrclk2;
  input coreclk;

  wire coreclk;
  wire counter_sync_2;
  wire dcapture;
  wire dcapture_reg_0;
  wire newedge;
  wire newedge_i_1__0_n_0;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire newedge_reg1;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire newedge_reg2;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire newedge_reg3;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire newedge_reg4;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire newedge_reg__0;
  wire out_comb;
  wire rxusrclk2;

  FDRE #(
    .INIT(1'b0)) 
    dcapture_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(dcapture_reg_0),
        .Q(dcapture),
        .R(1'b0));
  LUT4 #(
    .INIT(16'hF704)) 
    newedge_i_1__0
       (.I0(newedge),
        .I1(dcapture_reg_0),
        .I2(dcapture),
        .I3(newedge),
        .O(newedge_i_1__0_n_0));
  FDRE #(
    .INIT(1'b0)) 
    newedge_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(newedge_i_1__0_n_0),
        .Q(newedge),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    newedge_reg1_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(newedge_reg__0),
        .Q(newedge_reg1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    newedge_reg2_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(newedge_reg1),
        .Q(newedge_reg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    newedge_reg3_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(newedge_reg2),
        .Q(newedge_reg3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    newedge_reg4_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(newedge_reg3),
        .Q(newedge_reg4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    newedge_reg_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(newedge),
        .Q(newedge_reg__0),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h6)) 
    q_i_1__0
       (.I0(newedge_reg3),
        .I1(newedge_reg4),
        .O(out_comb));
  FDRE #(
    .INIT(1'b0)) 
    q_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(out_comb),
        .Q(counter_sync_2),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_15_pulse_synchronizer" *) 
module ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_pulse_synchronizer_35
   (counter_sync_3,
    counter_out0,
    dcapture_reg_0,
    rxusrclk2,
    coreclk,
    counter_sync_2,
    counter_sync_1,
    counter_sync_extra);
  output counter_sync_3;
  output counter_out0;
  input dcapture_reg_0;
  input rxusrclk2;
  input coreclk;
  input counter_sync_2;
  input counter_sync_1;
  input counter_sync_extra;

  wire coreclk;
  wire counter_out0;
  wire counter_sync_1;
  wire counter_sync_2;
  wire counter_sync_3;
  wire counter_sync_extra;
  wire dcapture;
  wire dcapture_reg_0;
  wire newedge;
  wire newedge_i_1__1_n_0;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire newedge_reg1;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire newedge_reg2;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire newedge_reg3;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire newedge_reg4;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire newedge_reg__0;
  wire out_comb;
  wire rxusrclk2;

  LUT4 #(
    .INIT(16'hFFFE)) 
    counter_out_i_1
       (.I0(counter_sync_3),
        .I1(counter_sync_2),
        .I2(counter_sync_1),
        .I3(counter_sync_extra),
        .O(counter_out0));
  FDRE #(
    .INIT(1'b0)) 
    dcapture_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(dcapture_reg_0),
        .Q(dcapture),
        .R(1'b0));
  LUT4 #(
    .INIT(16'hF704)) 
    newedge_i_1__1
       (.I0(newedge),
        .I1(dcapture_reg_0),
        .I2(dcapture),
        .I3(newedge),
        .O(newedge_i_1__1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    newedge_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(newedge_i_1__1_n_0),
        .Q(newedge),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    newedge_reg1_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(newedge_reg__0),
        .Q(newedge_reg1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    newedge_reg2_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(newedge_reg1),
        .Q(newedge_reg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    newedge_reg3_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(newedge_reg2),
        .Q(newedge_reg3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    newedge_reg4_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(newedge_reg3),
        .Q(newedge_reg4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    newedge_reg_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(newedge),
        .Q(newedge_reg__0),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h6)) 
    q_i_1__1
       (.I0(newedge_reg3),
        .I1(newedge_reg4),
        .O(out_comb));
  FDRE #(
    .INIT(1'b0)) 
    q_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(out_comb),
        .Q(counter_sync_3),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_15_pulse_synchronizer" *) 
module ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_pulse_synchronizer_36
   (counter_sync_1,
    counter_sync_extra_reg,
    dcapture_reg_0,
    rxusrclk2,
    coreclk,
    counter_sync_extra,
    counter_sync_3,
    counter_sync_2);
  output counter_sync_1;
  output counter_sync_extra_reg;
  input dcapture_reg_0;
  input rxusrclk2;
  input coreclk;
  input counter_sync_extra;
  input counter_sync_3;
  input counter_sync_2;

  wire coreclk;
  wire counter_sync_1;
  wire counter_sync_2;
  wire counter_sync_3;
  wire counter_sync_extra;
  wire counter_sync_extra_reg;
  wire dcapture;
  wire dcapture_reg_0;
  wire newedge;
  wire newedge_i_1__2_n_0;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire newedge_reg1;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire newedge_reg2;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire newedge_reg3;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire newedge_reg4;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire newedge_reg__0;
  wire out_comb;
  wire rxusrclk2;

  LUT4 #(
    .INIT(16'hFEE8)) 
    counter_sync_extra_i_1__0
       (.I0(counter_sync_extra),
        .I1(counter_sync_1),
        .I2(counter_sync_3),
        .I3(counter_sync_2),
        .O(counter_sync_extra_reg));
  FDRE #(
    .INIT(1'b0)) 
    dcapture_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(dcapture_reg_0),
        .Q(dcapture),
        .R(1'b0));
  LUT4 #(
    .INIT(16'hF704)) 
    newedge_i_1__2
       (.I0(newedge),
        .I1(dcapture_reg_0),
        .I2(dcapture),
        .I3(newedge),
        .O(newedge_i_1__2_n_0));
  FDRE #(
    .INIT(1'b0)) 
    newedge_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(newedge_i_1__2_n_0),
        .Q(newedge),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    newedge_reg1_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(newedge_reg__0),
        .Q(newedge_reg1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    newedge_reg2_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(newedge_reg1),
        .Q(newedge_reg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    newedge_reg3_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(newedge_reg2),
        .Q(newedge_reg3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    newedge_reg4_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(newedge_reg3),
        .Q(newedge_reg4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    newedge_reg_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(newedge),
        .Q(newedge_reg__0),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h6)) 
    q_i_1__2
       (.I0(newedge_reg3),
        .I1(newedge_reg4),
        .O(out_comb));
  FDRE #(
    .INIT(1'b0)) 
    q_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(out_comb),
        .Q(counter_sync_1),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_15_pulse_synchronizer" *) 
module ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_pulse_synchronizer_37
   (counter_sync_2,
    dcapture_reg_0,
    rxusrclk2,
    coreclk);
  output counter_sync_2;
  input dcapture_reg_0;
  input rxusrclk2;
  input coreclk;

  wire coreclk;
  wire counter_sync_2;
  wire dcapture;
  wire dcapture_reg_0;
  wire newedge;
  wire newedge_i_1__3_n_0;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire newedge_reg1;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire newedge_reg2;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire newedge_reg3;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire newedge_reg4;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire newedge_reg__0;
  wire out_comb;
  wire rxusrclk2;

  FDRE #(
    .INIT(1'b0)) 
    dcapture_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(dcapture_reg_0),
        .Q(dcapture),
        .R(1'b0));
  LUT4 #(
    .INIT(16'hF704)) 
    newedge_i_1__3
       (.I0(newedge),
        .I1(dcapture_reg_0),
        .I2(dcapture),
        .I3(newedge),
        .O(newedge_i_1__3_n_0));
  FDRE #(
    .INIT(1'b0)) 
    newedge_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(newedge_i_1__3_n_0),
        .Q(newedge),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    newedge_reg1_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(newedge_reg__0),
        .Q(newedge_reg1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    newedge_reg2_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(newedge_reg1),
        .Q(newedge_reg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    newedge_reg3_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(newedge_reg2),
        .Q(newedge_reg3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    newedge_reg4_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(newedge_reg3),
        .Q(newedge_reg4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    newedge_reg_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(newedge),
        .Q(newedge_reg__0),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h6)) 
    q_i_1__3
       (.I0(newedge_reg3),
        .I1(newedge_reg4),
        .O(out_comb));
  FDRE #(
    .INIT(1'b0)) 
    q_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(out_comb),
        .Q(counter_sync_2),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_15_pulse_synchronizer" *) 
module ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_pulse_synchronizer_38
   (counter_sync_3,
    counter_out0,
    dcapture_reg_0,
    rxusrclk2,
    coreclk,
    counter_sync_2,
    counter_sync_1,
    counter_sync_extra);
  output counter_sync_3;
  output counter_out0;
  input dcapture_reg_0;
  input rxusrclk2;
  input coreclk;
  input counter_sync_2;
  input counter_sync_1;
  input counter_sync_extra;

  wire coreclk;
  wire counter_out0;
  wire counter_sync_1;
  wire counter_sync_2;
  wire counter_sync_3;
  wire counter_sync_extra;
  wire dcapture;
  wire dcapture_reg_0;
  wire newedge;
  wire newedge_i_1__4_n_0;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire newedge_reg1;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire newedge_reg2;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire newedge_reg3;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire newedge_reg4;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire newedge_reg__0;
  wire out_comb;
  wire rxusrclk2;

  LUT4 #(
    .INIT(16'hFFFE)) 
    counter_out_i_1__0
       (.I0(counter_sync_3),
        .I1(counter_sync_2),
        .I2(counter_sync_1),
        .I3(counter_sync_extra),
        .O(counter_out0));
  FDRE #(
    .INIT(1'b0)) 
    dcapture_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(dcapture_reg_0),
        .Q(dcapture),
        .R(1'b0));
  LUT4 #(
    .INIT(16'hF704)) 
    newedge_i_1__4
       (.I0(newedge),
        .I1(dcapture_reg_0),
        .I2(dcapture),
        .I3(newedge),
        .O(newedge_i_1__4_n_0));
  FDRE #(
    .INIT(1'b0)) 
    newedge_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(newedge_i_1__4_n_0),
        .Q(newedge),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    newedge_reg1_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(newedge_reg__0),
        .Q(newedge_reg1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    newedge_reg2_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(newedge_reg1),
        .Q(newedge_reg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    newedge_reg3_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(newedge_reg2),
        .Q(newedge_reg3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    newedge_reg4_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(newedge_reg3),
        .Q(newedge_reg4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    newedge_reg_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(newedge),
        .Q(newedge_reg__0),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h6)) 
    q_i_1__4
       (.I0(newedge_reg3),
        .I1(newedge_reg4),
        .O(out_comb));
  FDRE #(
    .INIT(1'b0)) 
    q_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(out_comb),
        .Q(counter_sync_3),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_15_rx_ber_mon_fsm" *) 
module ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_rx_ber_mon_fsm
   (ber_count_inc,
    mcp1_hiber_reg_0,
    rxreset_6_reg,
    out,
    rxusrclk2,
    \FSM_sequential_mcp1_state_reg[1]_0 ,
    mcp1_ber_count_inc_reg_0,
    \mcp1_timer_125us_reg[15]_0 ,
    \FSM_sequential_mcp1_state_reg[2]_0 ,
    b_lock_mod,
    \FSM_sequential_mcp1_state_reg[2]_1 ,
    \FSM_sequential_mcp1_state_reg[2]_2 );
  output ber_count_inc;
  output mcp1_hiber_reg_0;
  output rxreset_6_reg;
  input out;
  input rxusrclk2;
  input [1:0]\FSM_sequential_mcp1_state_reg[1]_0 ;
  input mcp1_ber_count_inc_reg_0;
  input [15:0]\mcp1_timer_125us_reg[15]_0 ;
  input \FSM_sequential_mcp1_state_reg[2]_0 ;
  input b_lock_mod;
  input [0:0]\FSM_sequential_mcp1_state_reg[2]_1 ;
  input \FSM_sequential_mcp1_state_reg[2]_2 ;

  wire \FSM_sequential_mcp1_state[0]_i_1__1_n_0 ;
  wire \FSM_sequential_mcp1_state[0]_i_2__1_n_0 ;
  wire \FSM_sequential_mcp1_state[0]_i_3__1_n_0 ;
  wire \FSM_sequential_mcp1_state[1]_i_1__0_n_0 ;
  wire \FSM_sequential_mcp1_state[2]_i_1__0_n_0 ;
  wire \FSM_sequential_mcp1_state[2]_i_3_n_0 ;
  wire \FSM_sequential_mcp1_state[2]_i_4_n_0 ;
  wire \FSM_sequential_mcp1_state[2]_i_6_n_0 ;
  wire \FSM_sequential_mcp1_state[2]_i_7_n_0 ;
  wire \FSM_sequential_mcp1_state[2]_i_8_n_0 ;
  wire \FSM_sequential_mcp1_state[2]_i_9_n_0 ;
  wire [1:0]\FSM_sequential_mcp1_state_reg[1]_0 ;
  wire \FSM_sequential_mcp1_state_reg[2]_0 ;
  wire [0:0]\FSM_sequential_mcp1_state_reg[2]_1 ;
  wire \FSM_sequential_mcp1_state_reg[2]_2 ;
  wire b_lock_mod;
  wire ber_count_inc;
  wire [15:1]in9;
  wire \mcp1_ber_cnt[0]_i_1_n_0 ;
  wire \mcp1_ber_cnt[1]_i_1_n_0 ;
  wire \mcp1_ber_cnt[2]_i_1_n_0 ;
  wire \mcp1_ber_cnt[3]_i_1_n_0 ;
  wire \mcp1_ber_cnt[4]_i_1_n_0 ;
  wire \mcp1_ber_cnt[4]_i_2_n_0 ;
  wire \mcp1_ber_cnt_reg_n_0_[0] ;
  wire \mcp1_ber_cnt_reg_n_0_[1] ;
  wire \mcp1_ber_cnt_reg_n_0_[2] ;
  wire \mcp1_ber_cnt_reg_n_0_[3] ;
  wire \mcp1_ber_cnt_reg_n_0_[4] ;
  wire mcp1_ber_count_inc_i_1_n_0;
  wire mcp1_ber_count_inc_reg_0;
  wire mcp1_ber_test_sh_i_1_n_0;
  wire mcp1_ber_test_sh_reg_n_0;
  wire mcp1_hiber_i_1_n_0;
  wire mcp1_hiber_reg_0;
  wire mcp1_state;
  wire [2:0]mcp1_state__0;
  wire [15:0]mcp1_timer_125us;
  wire mcp1_timer_125us0_carry__0_i_1_n_0;
  wire mcp1_timer_125us0_carry__0_i_2_n_0;
  wire mcp1_timer_125us0_carry__0_i_3_n_0;
  wire mcp1_timer_125us0_carry__0_i_4_n_0;
  wire mcp1_timer_125us0_carry__0_n_0;
  wire mcp1_timer_125us0_carry__0_n_1;
  wire mcp1_timer_125us0_carry__0_n_2;
  wire mcp1_timer_125us0_carry__0_n_3;
  wire mcp1_timer_125us0_carry__1_i_1_n_0;
  wire mcp1_timer_125us0_carry__1_i_2_n_0;
  wire mcp1_timer_125us0_carry__1_i_3_n_0;
  wire mcp1_timer_125us0_carry__1_i_4_n_0;
  wire mcp1_timer_125us0_carry__1_n_0;
  wire mcp1_timer_125us0_carry__1_n_1;
  wire mcp1_timer_125us0_carry__1_n_2;
  wire mcp1_timer_125us0_carry__1_n_3;
  wire mcp1_timer_125us0_carry__2_i_1_n_0;
  wire mcp1_timer_125us0_carry__2_i_2_n_0;
  wire mcp1_timer_125us0_carry__2_i_3_n_0;
  wire mcp1_timer_125us0_carry__2_n_2;
  wire mcp1_timer_125us0_carry__2_n_3;
  wire mcp1_timer_125us0_carry_i_1_n_0;
  wire mcp1_timer_125us0_carry_i_2_n_0;
  wire mcp1_timer_125us0_carry_i_3_n_0;
  wire mcp1_timer_125us0_carry_i_4_n_0;
  wire mcp1_timer_125us0_carry_n_0;
  wire mcp1_timer_125us0_carry_n_1;
  wire mcp1_timer_125us0_carry_n_2;
  wire mcp1_timer_125us0_carry_n_3;
  wire \mcp1_timer_125us[0]_i_1_n_0 ;
  wire \mcp1_timer_125us[10]_i_1_n_0 ;
  wire \mcp1_timer_125us[11]_i_1_n_0 ;
  wire \mcp1_timer_125us[12]_i_1_n_0 ;
  wire \mcp1_timer_125us[13]_i_1_n_0 ;
  wire \mcp1_timer_125us[14]_i_1_n_0 ;
  wire \mcp1_timer_125us[15]_i_1_n_0 ;
  wire \mcp1_timer_125us[15]_i_2_n_0 ;
  wire \mcp1_timer_125us[15]_i_3_n_0 ;
  wire \mcp1_timer_125us[15]_i_4_n_0 ;
  wire \mcp1_timer_125us[15]_i_5_n_0 ;
  wire \mcp1_timer_125us[15]_i_6_n_0 ;
  wire \mcp1_timer_125us[1]_i_1_n_0 ;
  wire \mcp1_timer_125us[2]_i_1_n_0 ;
  wire \mcp1_timer_125us[3]_i_1_n_0 ;
  wire \mcp1_timer_125us[4]_i_1_n_0 ;
  wire \mcp1_timer_125us[5]_i_1_n_0 ;
  wire \mcp1_timer_125us[6]_i_1_n_0 ;
  wire \mcp1_timer_125us[7]_i_1_n_0 ;
  wire \mcp1_timer_125us[8]_i_1_n_0 ;
  wire \mcp1_timer_125us[9]_i_1_n_0 ;
  wire [15:0]\mcp1_timer_125us_reg[15]_0 ;
  wire [1:1]next_state__0;
  wire out;
  wire rxreset_6_reg;
  wire rxusrclk2;
  wire [3:2]NLW_mcp1_timer_125us0_carry__2_CO_UNCONNECTED;
  wire [3:3]NLW_mcp1_timer_125us0_carry__2_O_UNCONNECTED;

  LUT6 #(
    .INIT(64'h000000002EEE26E6)) 
    \FSM_sequential_mcp1_state[0]_i_1__1 
       (.I0(mcp1_state__0[0]),
        .I1(mcp1_state),
        .I2(mcp1_state__0[2]),
        .I3(mcp1_state__0[1]),
        .I4(\FSM_sequential_mcp1_state[0]_i_2__1_n_0 ),
        .I5(\FSM_sequential_mcp1_state_reg[2]_2 ),
        .O(\FSM_sequential_mcp1_state[0]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'h0888888888888888)) 
    \FSM_sequential_mcp1_state[0]_i_2__1 
       (.I0(\FSM_sequential_mcp1_state[0]_i_3__1_n_0 ),
        .I1(mcp1_state__0[1]),
        .I2(\mcp1_ber_cnt_reg_n_0_[2] ),
        .I3(\mcp1_ber_cnt_reg_n_0_[1] ),
        .I4(\mcp1_ber_cnt_reg_n_0_[0] ),
        .I5(\mcp1_ber_cnt_reg_n_0_[3] ),
        .O(\FSM_sequential_mcp1_state[0]_i_2__1_n_0 ));
  LUT3 #(
    .INIT(8'hEB)) 
    \FSM_sequential_mcp1_state[0]_i_3__1 
       (.I0(\mcp1_timer_125us[15]_i_3_n_0 ),
        .I1(\FSM_sequential_mcp1_state_reg[1]_0 [0]),
        .I2(\FSM_sequential_mcp1_state_reg[1]_0 [1]),
        .O(\FSM_sequential_mcp1_state[0]_i_3__1_n_0 ));
  LUT4 #(
    .INIT(16'h00E2)) 
    \FSM_sequential_mcp1_state[1]_i_1__0 
       (.I0(mcp1_state__0[1]),
        .I1(mcp1_state),
        .I2(next_state__0),
        .I3(\FSM_sequential_mcp1_state_reg[2]_2 ),
        .O(\FSM_sequential_mcp1_state[1]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h1515151510000010)) 
    \FSM_sequential_mcp1_state[1]_i_2__1 
       (.I0(mcp1_state__0[2]),
        .I1(\FSM_sequential_mcp1_state[2]_i_4_n_0 ),
        .I2(mcp1_state__0[1]),
        .I3(\FSM_sequential_mcp1_state_reg[1]_0 [0]),
        .I4(\FSM_sequential_mcp1_state_reg[1]_0 [1]),
        .I5(mcp1_state__0[0]),
        .O(next_state__0));
  LUT6 #(
    .INIT(64'h0000000066622222)) 
    \FSM_sequential_mcp1_state[2]_i_1__0 
       (.I0(mcp1_state__0[2]),
        .I1(mcp1_state),
        .I2(\FSM_sequential_mcp1_state[2]_i_3_n_0 ),
        .I3(\FSM_sequential_mcp1_state[2]_i_4_n_0 ),
        .I4(mcp1_state__0[1]),
        .I5(\FSM_sequential_mcp1_state_reg[2]_2 ),
        .O(\FSM_sequential_mcp1_state[2]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h000002A2AAAA02A2)) 
    \FSM_sequential_mcp1_state[2]_i_2__0 
       (.I0(mcp1_ber_count_inc_reg_0),
        .I1(\FSM_sequential_mcp1_state[2]_i_6_n_0 ),
        .I2(mcp1_state__0[1]),
        .I3(\FSM_sequential_mcp1_state[2]_i_7_n_0 ),
        .I4(mcp1_state__0[2]),
        .I5(\FSM_sequential_mcp1_state[2]_i_8_n_0 ),
        .O(mcp1_state));
  LUT3 #(
    .INIT(8'h06)) 
    \FSM_sequential_mcp1_state[2]_i_3 
       (.I0(\FSM_sequential_mcp1_state_reg[1]_0 [0]),
        .I1(\FSM_sequential_mcp1_state_reg[1]_0 [1]),
        .I2(mcp1_state__0[0]),
        .O(\FSM_sequential_mcp1_state[2]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hFFEFAAAA)) 
    \FSM_sequential_mcp1_state[2]_i_3__0 
       (.I0(\FSM_sequential_mcp1_state_reg[2]_0 ),
        .I1(mcp1_hiber_reg_0),
        .I2(b_lock_mod),
        .I3(\FSM_sequential_mcp1_state_reg[2]_1 ),
        .I4(mcp1_ber_count_inc_reg_0),
        .O(rxreset_6_reg));
  LUT6 #(
    .INIT(64'hAAAAAAAA80000000)) 
    \FSM_sequential_mcp1_state[2]_i_4 
       (.I0(mcp1_state__0[0]),
        .I1(\mcp1_ber_cnt_reg_n_0_[2] ),
        .I2(\mcp1_ber_cnt_reg_n_0_[1] ),
        .I3(\mcp1_ber_cnt_reg_n_0_[0] ),
        .I4(\mcp1_ber_cnt_reg_n_0_[3] ),
        .I5(\mcp1_timer_125us[15]_i_3_n_0 ),
        .O(\FSM_sequential_mcp1_state[2]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \FSM_sequential_mcp1_state[2]_i_6 
       (.I0(mcp1_state__0[0]),
        .I1(mcp1_ber_test_sh_reg_n_0),
        .O(\FSM_sequential_mcp1_state[2]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000575700)) 
    \FSM_sequential_mcp1_state[2]_i_7 
       (.I0(mcp1_state__0[0]),
        .I1(mcp1_ber_test_sh_reg_n_0),
        .I2(\FSM_sequential_mcp1_state[2]_i_9_n_0 ),
        .I3(\FSM_sequential_mcp1_state_reg[1]_0 [1]),
        .I4(\FSM_sequential_mcp1_state_reg[1]_0 [0]),
        .I5(\mcp1_timer_125us[15]_i_3_n_0 ),
        .O(\FSM_sequential_mcp1_state[2]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \FSM_sequential_mcp1_state[2]_i_8 
       (.I0(mcp1_state__0[0]),
        .I1(\mcp1_timer_125us[15]_i_3_n_0 ),
        .O(\FSM_sequential_mcp1_state[2]_i_8_n_0 ));
  LUT4 #(
    .INIT(16'h8000)) 
    \FSM_sequential_mcp1_state[2]_i_9 
       (.I0(\mcp1_ber_cnt_reg_n_0_[2] ),
        .I1(\mcp1_ber_cnt_reg_n_0_[1] ),
        .I2(\mcp1_ber_cnt_reg_n_0_[0] ),
        .I3(\mcp1_ber_cnt_reg_n_0_[3] ),
        .O(\FSM_sequential_mcp1_state[2]_i_9_n_0 ));
  (* FSM_ENCODED_STATES = "BER_MT_INIT:000,START_TIMER:001,HI_BER:100,GOOD_BER:101,BER_TEST_SH:010,BER_BAD_SH:011" *) 
  FDRE \FSM_sequential_mcp1_state_reg[0] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(\FSM_sequential_mcp1_state[0]_i_1__1_n_0 ),
        .Q(mcp1_state__0[0]),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "BER_MT_INIT:000,START_TIMER:001,HI_BER:100,GOOD_BER:101,BER_TEST_SH:010,BER_BAD_SH:011" *) 
  FDRE \FSM_sequential_mcp1_state_reg[1] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(\FSM_sequential_mcp1_state[1]_i_1__0_n_0 ),
        .Q(mcp1_state__0[1]),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "BER_MT_INIT:000,START_TIMER:001,HI_BER:100,GOOD_BER:101,BER_TEST_SH:010,BER_BAD_SH:011" *) 
  FDRE \FSM_sequential_mcp1_state_reg[2] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(\FSM_sequential_mcp1_state[2]_i_1__0_n_0 ),
        .Q(mcp1_state__0[2]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h0F40)) 
    \mcp1_ber_cnt[0]_i_1 
       (.I0(mcp1_state__0[2]),
        .I1(mcp1_state__0[1]),
        .I2(\mcp1_ber_cnt[4]_i_1_n_0 ),
        .I3(\mcp1_ber_cnt_reg_n_0_[0] ),
        .O(\mcp1_ber_cnt[0]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h28)) 
    \mcp1_ber_cnt[1]_i_1 
       (.I0(mcp1_state__0[1]),
        .I1(\mcp1_ber_cnt_reg_n_0_[0] ),
        .I2(\mcp1_ber_cnt_reg_n_0_[1] ),
        .O(\mcp1_ber_cnt[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair175" *) 
  LUT4 #(
    .INIT(16'h2A80)) 
    \mcp1_ber_cnt[2]_i_1 
       (.I0(mcp1_state__0[1]),
        .I1(\mcp1_ber_cnt_reg_n_0_[1] ),
        .I2(\mcp1_ber_cnt_reg_n_0_[0] ),
        .I3(\mcp1_ber_cnt_reg_n_0_[2] ),
        .O(\mcp1_ber_cnt[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair175" *) 
  LUT5 #(
    .INIT(32'h2AAA8000)) 
    \mcp1_ber_cnt[3]_i_1 
       (.I0(mcp1_state__0[1]),
        .I1(\mcp1_ber_cnt_reg_n_0_[0] ),
        .I2(\mcp1_ber_cnt_reg_n_0_[1] ),
        .I3(\mcp1_ber_cnt_reg_n_0_[2] ),
        .I4(\mcp1_ber_cnt_reg_n_0_[3] ),
        .O(\mcp1_ber_cnt[3]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000040004000400)) 
    \mcp1_ber_cnt[4]_i_1 
       (.I0(mcp1_state__0[2]),
        .I1(mcp1_state__0[0]),
        .I2(out),
        .I3(mcp1_ber_count_inc_reg_0),
        .I4(\mcp1_ber_cnt_reg_n_0_[4] ),
        .I5(mcp1_state__0[1]),
        .O(\mcp1_ber_cnt[4]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h2AAAAAAA80000000)) 
    \mcp1_ber_cnt[4]_i_2 
       (.I0(mcp1_state__0[1]),
        .I1(\mcp1_ber_cnt_reg_n_0_[2] ),
        .I2(\mcp1_ber_cnt_reg_n_0_[1] ),
        .I3(\mcp1_ber_cnt_reg_n_0_[0] ),
        .I4(\mcp1_ber_cnt_reg_n_0_[3] ),
        .I5(\mcp1_ber_cnt_reg_n_0_[4] ),
        .O(\mcp1_ber_cnt[4]_i_2_n_0 ));
  FDRE \mcp1_ber_cnt_reg[0] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(\mcp1_ber_cnt[0]_i_1_n_0 ),
        .Q(\mcp1_ber_cnt_reg_n_0_[0] ),
        .R(1'b0));
  FDRE \mcp1_ber_cnt_reg[1] 
       (.C(rxusrclk2),
        .CE(\mcp1_ber_cnt[4]_i_1_n_0 ),
        .D(\mcp1_ber_cnt[1]_i_1_n_0 ),
        .Q(\mcp1_ber_cnt_reg_n_0_[1] ),
        .R(1'b0));
  FDRE \mcp1_ber_cnt_reg[2] 
       (.C(rxusrclk2),
        .CE(\mcp1_ber_cnt[4]_i_1_n_0 ),
        .D(\mcp1_ber_cnt[2]_i_1_n_0 ),
        .Q(\mcp1_ber_cnt_reg_n_0_[2] ),
        .R(1'b0));
  FDRE \mcp1_ber_cnt_reg[3] 
       (.C(rxusrclk2),
        .CE(\mcp1_ber_cnt[4]_i_1_n_0 ),
        .D(\mcp1_ber_cnt[3]_i_1_n_0 ),
        .Q(\mcp1_ber_cnt_reg_n_0_[3] ),
        .R(1'b0));
  FDRE \mcp1_ber_cnt_reg[4] 
       (.C(rxusrclk2),
        .CE(\mcp1_ber_cnt[4]_i_1_n_0 ),
        .D(\mcp1_ber_cnt[4]_i_2_n_0 ),
        .Q(\mcp1_ber_cnt_reg_n_0_[4] ),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h40FF4000)) 
    mcp1_ber_count_inc_i_1
       (.I0(mcp1_state__0[2]),
        .I1(mcp1_state__0[1]),
        .I2(mcp1_state__0[0]),
        .I3(mcp1_ber_count_inc_reg_0),
        .I4(ber_count_inc),
        .O(mcp1_ber_count_inc_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    mcp1_ber_count_inc_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(mcp1_ber_count_inc_i_1_n_0),
        .Q(ber_count_inc),
        .R(out));
  LUT5 #(
    .INIT(32'h76FF7600)) 
    mcp1_ber_test_sh_i_1
       (.I0(mcp1_state__0[1]),
        .I1(mcp1_state__0[2]),
        .I2(mcp1_state__0[0]),
        .I3(mcp1_ber_count_inc_reg_0),
        .I4(mcp1_ber_test_sh_reg_n_0),
        .O(mcp1_ber_test_sh_i_1_n_0));
  FDRE mcp1_ber_test_sh_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(mcp1_ber_test_sh_i_1_n_0),
        .Q(mcp1_ber_test_sh_reg_n_0),
        .R(out));
  LUT5 #(
    .INIT(32'hBFFB0040)) 
    mcp1_hiber_i_1
       (.I0(mcp1_state__0[1]),
        .I1(mcp1_ber_count_inc_reg_0),
        .I2(mcp1_state__0[2]),
        .I3(mcp1_state__0[0]),
        .I4(mcp1_hiber_reg_0),
        .O(mcp1_hiber_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    mcp1_hiber_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(mcp1_hiber_i_1_n_0),
        .Q(mcp1_hiber_reg_0),
        .R(out));
  CARRY4 mcp1_timer_125us0_carry
       (.CI(1'b0),
        .CO({mcp1_timer_125us0_carry_n_0,mcp1_timer_125us0_carry_n_1,mcp1_timer_125us0_carry_n_2,mcp1_timer_125us0_carry_n_3}),
        .CYINIT(mcp1_timer_125us[0]),
        .DI(mcp1_timer_125us[4:1]),
        .O(in9[4:1]),
        .S({mcp1_timer_125us0_carry_i_1_n_0,mcp1_timer_125us0_carry_i_2_n_0,mcp1_timer_125us0_carry_i_3_n_0,mcp1_timer_125us0_carry_i_4_n_0}));
  CARRY4 mcp1_timer_125us0_carry__0
       (.CI(mcp1_timer_125us0_carry_n_0),
        .CO({mcp1_timer_125us0_carry__0_n_0,mcp1_timer_125us0_carry__0_n_1,mcp1_timer_125us0_carry__0_n_2,mcp1_timer_125us0_carry__0_n_3}),
        .CYINIT(1'b0),
        .DI(mcp1_timer_125us[8:5]),
        .O(in9[8:5]),
        .S({mcp1_timer_125us0_carry__0_i_1_n_0,mcp1_timer_125us0_carry__0_i_2_n_0,mcp1_timer_125us0_carry__0_i_3_n_0,mcp1_timer_125us0_carry__0_i_4_n_0}));
  LUT1 #(
    .INIT(2'h1)) 
    mcp1_timer_125us0_carry__0_i_1
       (.I0(mcp1_timer_125us[8]),
        .O(mcp1_timer_125us0_carry__0_i_1_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    mcp1_timer_125us0_carry__0_i_2
       (.I0(mcp1_timer_125us[7]),
        .O(mcp1_timer_125us0_carry__0_i_2_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    mcp1_timer_125us0_carry__0_i_3
       (.I0(mcp1_timer_125us[6]),
        .O(mcp1_timer_125us0_carry__0_i_3_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    mcp1_timer_125us0_carry__0_i_4
       (.I0(mcp1_timer_125us[5]),
        .O(mcp1_timer_125us0_carry__0_i_4_n_0));
  CARRY4 mcp1_timer_125us0_carry__1
       (.CI(mcp1_timer_125us0_carry__0_n_0),
        .CO({mcp1_timer_125us0_carry__1_n_0,mcp1_timer_125us0_carry__1_n_1,mcp1_timer_125us0_carry__1_n_2,mcp1_timer_125us0_carry__1_n_3}),
        .CYINIT(1'b0),
        .DI(mcp1_timer_125us[12:9]),
        .O(in9[12:9]),
        .S({mcp1_timer_125us0_carry__1_i_1_n_0,mcp1_timer_125us0_carry__1_i_2_n_0,mcp1_timer_125us0_carry__1_i_3_n_0,mcp1_timer_125us0_carry__1_i_4_n_0}));
  LUT1 #(
    .INIT(2'h1)) 
    mcp1_timer_125us0_carry__1_i_1
       (.I0(mcp1_timer_125us[12]),
        .O(mcp1_timer_125us0_carry__1_i_1_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    mcp1_timer_125us0_carry__1_i_2
       (.I0(mcp1_timer_125us[11]),
        .O(mcp1_timer_125us0_carry__1_i_2_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    mcp1_timer_125us0_carry__1_i_3
       (.I0(mcp1_timer_125us[10]),
        .O(mcp1_timer_125us0_carry__1_i_3_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    mcp1_timer_125us0_carry__1_i_4
       (.I0(mcp1_timer_125us[9]),
        .O(mcp1_timer_125us0_carry__1_i_4_n_0));
  CARRY4 mcp1_timer_125us0_carry__2
       (.CI(mcp1_timer_125us0_carry__1_n_0),
        .CO({NLW_mcp1_timer_125us0_carry__2_CO_UNCONNECTED[3:2],mcp1_timer_125us0_carry__2_n_2,mcp1_timer_125us0_carry__2_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,mcp1_timer_125us[14:13]}),
        .O({NLW_mcp1_timer_125us0_carry__2_O_UNCONNECTED[3],in9[15:13]}),
        .S({1'b0,mcp1_timer_125us0_carry__2_i_1_n_0,mcp1_timer_125us0_carry__2_i_2_n_0,mcp1_timer_125us0_carry__2_i_3_n_0}));
  LUT1 #(
    .INIT(2'h1)) 
    mcp1_timer_125us0_carry__2_i_1
       (.I0(mcp1_timer_125us[15]),
        .O(mcp1_timer_125us0_carry__2_i_1_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    mcp1_timer_125us0_carry__2_i_2
       (.I0(mcp1_timer_125us[14]),
        .O(mcp1_timer_125us0_carry__2_i_2_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    mcp1_timer_125us0_carry__2_i_3
       (.I0(mcp1_timer_125us[13]),
        .O(mcp1_timer_125us0_carry__2_i_3_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    mcp1_timer_125us0_carry_i_1
       (.I0(mcp1_timer_125us[4]),
        .O(mcp1_timer_125us0_carry_i_1_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    mcp1_timer_125us0_carry_i_2
       (.I0(mcp1_timer_125us[3]),
        .O(mcp1_timer_125us0_carry_i_2_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    mcp1_timer_125us0_carry_i_3
       (.I0(mcp1_timer_125us[2]),
        .O(mcp1_timer_125us0_carry_i_3_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    mcp1_timer_125us0_carry_i_4
       (.I0(mcp1_timer_125us[1]),
        .O(mcp1_timer_125us0_carry_i_4_n_0));
  LUT6 #(
    .INIT(64'h88888A888B8BBABB)) 
    \mcp1_timer_125us[0]_i_1 
       (.I0(\mcp1_timer_125us_reg[15]_0 [0]),
        .I1(out),
        .I2(mcp1_state__0[1]),
        .I3(mcp1_state__0[0]),
        .I4(mcp1_state__0[2]),
        .I5(mcp1_timer_125us[0]),
        .O(\mcp1_timer_125us[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h8B8BBABB88888A88)) 
    \mcp1_timer_125us[10]_i_1 
       (.I0(\mcp1_timer_125us_reg[15]_0 [10]),
        .I1(out),
        .I2(mcp1_state__0[1]),
        .I3(mcp1_state__0[0]),
        .I4(mcp1_state__0[2]),
        .I5(in9[10]),
        .O(\mcp1_timer_125us[10]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h8B8BBABB88888A88)) 
    \mcp1_timer_125us[11]_i_1 
       (.I0(\mcp1_timer_125us_reg[15]_0 [11]),
        .I1(out),
        .I2(mcp1_state__0[1]),
        .I3(mcp1_state__0[0]),
        .I4(mcp1_state__0[2]),
        .I5(in9[11]),
        .O(\mcp1_timer_125us[11]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h8B8BBABB88888A88)) 
    \mcp1_timer_125us[12]_i_1 
       (.I0(\mcp1_timer_125us_reg[15]_0 [12]),
        .I1(out),
        .I2(mcp1_state__0[1]),
        .I3(mcp1_state__0[0]),
        .I4(mcp1_state__0[2]),
        .I5(in9[12]),
        .O(\mcp1_timer_125us[12]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h8B8BBABB88888A88)) 
    \mcp1_timer_125us[13]_i_1 
       (.I0(\mcp1_timer_125us_reg[15]_0 [13]),
        .I1(out),
        .I2(mcp1_state__0[1]),
        .I3(mcp1_state__0[0]),
        .I4(mcp1_state__0[2]),
        .I5(in9[13]),
        .O(\mcp1_timer_125us[13]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h8B8BBABB88888A88)) 
    \mcp1_timer_125us[14]_i_1 
       (.I0(\mcp1_timer_125us_reg[15]_0 [14]),
        .I1(out),
        .I2(mcp1_state__0[1]),
        .I3(mcp1_state__0[0]),
        .I4(mcp1_state__0[2]),
        .I5(in9[14]),
        .O(\mcp1_timer_125us[14]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hCCCCCECCCECEEEEE)) 
    \mcp1_timer_125us[15]_i_1 
       (.I0(mcp1_ber_count_inc_reg_0),
        .I1(out),
        .I2(mcp1_state__0[1]),
        .I3(mcp1_state__0[0]),
        .I4(mcp1_state__0[2]),
        .I5(\mcp1_timer_125us[15]_i_3_n_0 ),
        .O(\mcp1_timer_125us[15]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h8B8BBABB88888A88)) 
    \mcp1_timer_125us[15]_i_2 
       (.I0(\mcp1_timer_125us_reg[15]_0 [15]),
        .I1(out),
        .I2(mcp1_state__0[1]),
        .I3(mcp1_state__0[0]),
        .I4(mcp1_state__0[2]),
        .I5(in9[15]),
        .O(\mcp1_timer_125us[15]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    \mcp1_timer_125us[15]_i_3 
       (.I0(\mcp1_timer_125us[15]_i_4_n_0 ),
        .I1(mcp1_timer_125us[2]),
        .I2(mcp1_timer_125us[3]),
        .I3(mcp1_timer_125us[1]),
        .I4(mcp1_timer_125us[5]),
        .I5(\mcp1_timer_125us[15]_i_5_n_0 ),
        .O(\mcp1_timer_125us[15]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \mcp1_timer_125us[15]_i_4 
       (.I0(mcp1_timer_125us[6]),
        .I1(mcp1_timer_125us[13]),
        .I2(mcp1_timer_125us[4]),
        .I3(mcp1_timer_125us[10]),
        .O(\mcp1_timer_125us[15]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \mcp1_timer_125us[15]_i_5 
       (.I0(mcp1_timer_125us[11]),
        .I1(mcp1_timer_125us[9]),
        .I2(mcp1_timer_125us[15]),
        .I3(mcp1_timer_125us[8]),
        .I4(\mcp1_timer_125us[15]_i_6_n_0 ),
        .O(\mcp1_timer_125us[15]_i_5_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \mcp1_timer_125us[15]_i_6 
       (.I0(mcp1_timer_125us[0]),
        .I1(mcp1_timer_125us[14]),
        .I2(mcp1_timer_125us[7]),
        .I3(mcp1_timer_125us[12]),
        .O(\mcp1_timer_125us[15]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h8B8BBABB88888A88)) 
    \mcp1_timer_125us[1]_i_1 
       (.I0(\mcp1_timer_125us_reg[15]_0 [1]),
        .I1(out),
        .I2(mcp1_state__0[1]),
        .I3(mcp1_state__0[0]),
        .I4(mcp1_state__0[2]),
        .I5(in9[1]),
        .O(\mcp1_timer_125us[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h8B8BBABB88888A88)) 
    \mcp1_timer_125us[2]_i_1 
       (.I0(\mcp1_timer_125us_reg[15]_0 [2]),
        .I1(out),
        .I2(mcp1_state__0[1]),
        .I3(mcp1_state__0[0]),
        .I4(mcp1_state__0[2]),
        .I5(in9[2]),
        .O(\mcp1_timer_125us[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h8B8BBABB88888A88)) 
    \mcp1_timer_125us[3]_i_1 
       (.I0(\mcp1_timer_125us_reg[15]_0 [3]),
        .I1(out),
        .I2(mcp1_state__0[1]),
        .I3(mcp1_state__0[0]),
        .I4(mcp1_state__0[2]),
        .I5(in9[3]),
        .O(\mcp1_timer_125us[3]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h8B8BBABB88888A88)) 
    \mcp1_timer_125us[4]_i_1 
       (.I0(\mcp1_timer_125us_reg[15]_0 [4]),
        .I1(out),
        .I2(mcp1_state__0[1]),
        .I3(mcp1_state__0[0]),
        .I4(mcp1_state__0[2]),
        .I5(in9[4]),
        .O(\mcp1_timer_125us[4]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h8B8BBABB88888A88)) 
    \mcp1_timer_125us[5]_i_1 
       (.I0(\mcp1_timer_125us_reg[15]_0 [5]),
        .I1(out),
        .I2(mcp1_state__0[1]),
        .I3(mcp1_state__0[0]),
        .I4(mcp1_state__0[2]),
        .I5(in9[5]),
        .O(\mcp1_timer_125us[5]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h8B8BBABB88888A88)) 
    \mcp1_timer_125us[6]_i_1 
       (.I0(\mcp1_timer_125us_reg[15]_0 [6]),
        .I1(out),
        .I2(mcp1_state__0[1]),
        .I3(mcp1_state__0[0]),
        .I4(mcp1_state__0[2]),
        .I5(in9[6]),
        .O(\mcp1_timer_125us[6]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h8B8BBABB88888A88)) 
    \mcp1_timer_125us[7]_i_1 
       (.I0(\mcp1_timer_125us_reg[15]_0 [7]),
        .I1(out),
        .I2(mcp1_state__0[1]),
        .I3(mcp1_state__0[0]),
        .I4(mcp1_state__0[2]),
        .I5(in9[7]),
        .O(\mcp1_timer_125us[7]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h8B8BBABB88888A88)) 
    \mcp1_timer_125us[8]_i_1 
       (.I0(\mcp1_timer_125us_reg[15]_0 [8]),
        .I1(out),
        .I2(mcp1_state__0[1]),
        .I3(mcp1_state__0[0]),
        .I4(mcp1_state__0[2]),
        .I5(in9[8]),
        .O(\mcp1_timer_125us[8]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h8B8BBABB88888A88)) 
    \mcp1_timer_125us[9]_i_1 
       (.I0(\mcp1_timer_125us_reg[15]_0 [9]),
        .I1(out),
        .I2(mcp1_state__0[1]),
        .I3(mcp1_state__0[0]),
        .I4(mcp1_state__0[2]),
        .I5(in9[9]),
        .O(\mcp1_timer_125us[9]_i_1_n_0 ));
  FDRE \mcp1_timer_125us_reg[0] 
       (.C(rxusrclk2),
        .CE(\mcp1_timer_125us[15]_i_1_n_0 ),
        .D(\mcp1_timer_125us[0]_i_1_n_0 ),
        .Q(mcp1_timer_125us[0]),
        .R(1'b0));
  FDRE \mcp1_timer_125us_reg[10] 
       (.C(rxusrclk2),
        .CE(\mcp1_timer_125us[15]_i_1_n_0 ),
        .D(\mcp1_timer_125us[10]_i_1_n_0 ),
        .Q(mcp1_timer_125us[10]),
        .R(1'b0));
  FDRE \mcp1_timer_125us_reg[11] 
       (.C(rxusrclk2),
        .CE(\mcp1_timer_125us[15]_i_1_n_0 ),
        .D(\mcp1_timer_125us[11]_i_1_n_0 ),
        .Q(mcp1_timer_125us[11]),
        .R(1'b0));
  FDRE \mcp1_timer_125us_reg[12] 
       (.C(rxusrclk2),
        .CE(\mcp1_timer_125us[15]_i_1_n_0 ),
        .D(\mcp1_timer_125us[12]_i_1_n_0 ),
        .Q(mcp1_timer_125us[12]),
        .R(1'b0));
  FDRE \mcp1_timer_125us_reg[13] 
       (.C(rxusrclk2),
        .CE(\mcp1_timer_125us[15]_i_1_n_0 ),
        .D(\mcp1_timer_125us[13]_i_1_n_0 ),
        .Q(mcp1_timer_125us[13]),
        .R(1'b0));
  FDRE \mcp1_timer_125us_reg[14] 
       (.C(rxusrclk2),
        .CE(\mcp1_timer_125us[15]_i_1_n_0 ),
        .D(\mcp1_timer_125us[14]_i_1_n_0 ),
        .Q(mcp1_timer_125us[14]),
        .R(1'b0));
  FDRE \mcp1_timer_125us_reg[15] 
       (.C(rxusrclk2),
        .CE(\mcp1_timer_125us[15]_i_1_n_0 ),
        .D(\mcp1_timer_125us[15]_i_2_n_0 ),
        .Q(mcp1_timer_125us[15]),
        .R(1'b0));
  FDRE \mcp1_timer_125us_reg[1] 
       (.C(rxusrclk2),
        .CE(\mcp1_timer_125us[15]_i_1_n_0 ),
        .D(\mcp1_timer_125us[1]_i_1_n_0 ),
        .Q(mcp1_timer_125us[1]),
        .R(1'b0));
  FDRE \mcp1_timer_125us_reg[2] 
       (.C(rxusrclk2),
        .CE(\mcp1_timer_125us[15]_i_1_n_0 ),
        .D(\mcp1_timer_125us[2]_i_1_n_0 ),
        .Q(mcp1_timer_125us[2]),
        .R(1'b0));
  FDRE \mcp1_timer_125us_reg[3] 
       (.C(rxusrclk2),
        .CE(\mcp1_timer_125us[15]_i_1_n_0 ),
        .D(\mcp1_timer_125us[3]_i_1_n_0 ),
        .Q(mcp1_timer_125us[3]),
        .R(1'b0));
  FDRE \mcp1_timer_125us_reg[4] 
       (.C(rxusrclk2),
        .CE(\mcp1_timer_125us[15]_i_1_n_0 ),
        .D(\mcp1_timer_125us[4]_i_1_n_0 ),
        .Q(mcp1_timer_125us[4]),
        .R(1'b0));
  FDRE \mcp1_timer_125us_reg[5] 
       (.C(rxusrclk2),
        .CE(\mcp1_timer_125us[15]_i_1_n_0 ),
        .D(\mcp1_timer_125us[5]_i_1_n_0 ),
        .Q(mcp1_timer_125us[5]),
        .R(1'b0));
  FDRE \mcp1_timer_125us_reg[6] 
       (.C(rxusrclk2),
        .CE(\mcp1_timer_125us[15]_i_1_n_0 ),
        .D(\mcp1_timer_125us[6]_i_1_n_0 ),
        .Q(mcp1_timer_125us[6]),
        .R(1'b0));
  FDRE \mcp1_timer_125us_reg[7] 
       (.C(rxusrclk2),
        .CE(\mcp1_timer_125us[15]_i_1_n_0 ),
        .D(\mcp1_timer_125us[7]_i_1_n_0 ),
        .Q(mcp1_timer_125us[7]),
        .R(1'b0));
  FDRE \mcp1_timer_125us_reg[8] 
       (.C(rxusrclk2),
        .CE(\mcp1_timer_125us[15]_i_1_n_0 ),
        .D(\mcp1_timer_125us[8]_i_1_n_0 ),
        .Q(mcp1_timer_125us[8]),
        .R(1'b0));
  FDRE \mcp1_timer_125us_reg[9] 
       (.C(rxusrclk2),
        .CE(\mcp1_timer_125us[15]_i_1_n_0 ),
        .D(\mcp1_timer_125us[9]_i_1_n_0 ),
        .Q(mcp1_timer_125us[9]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_15_rx_block_lock_fsm" *) 
module ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_rx_block_lock_fsm
   (b_lock_mod,
    gt_slip_int,
    S,
    mcp1_state0,
    rxusrclk2,
    \FSM_sequential_mcp1_state_reg[0]_0 ,
    mcp1_test_sh_reg_0,
    \b_lock_count_reg[3] ,
    E);
  output b_lock_mod;
  output gt_slip_int;
  output [0:0]S;
  input mcp1_state0;
  input rxusrclk2;
  input [1:0]\FSM_sequential_mcp1_state_reg[0]_0 ;
  input mcp1_test_sh_reg_0;
  input \b_lock_count_reg[3] ;
  input [0:0]E;

  wire [0:0]E;
  wire \FSM_sequential_mcp1_state[0]_i_1__0_n_0 ;
  wire \FSM_sequential_mcp1_state[1]_i_2__0_n_0 ;
  wire \FSM_sequential_mcp1_state[1]_i_3__0_n_0 ;
  wire \FSM_sequential_mcp1_state[1]_i_4__0_n_0 ;
  wire \FSM_sequential_mcp1_state[1]_i_5_n_0 ;
  wire \FSM_sequential_mcp1_state[1]_i_7_n_0 ;
  wire [1:0]\FSM_sequential_mcp1_state_reg[0]_0 ;
  wire [0:0]S;
  wire \b_lock_count_reg[3] ;
  wire b_lock_mod;
  wire gt_slip_int;
  wire mcp1_b_lock0_out;
  wire mcp1_b_lock_i_1_n_0;
  wire mcp1_b_lock_i_3_n_0;
  wire [5:0]mcp1_sh_cnt;
  wire \mcp1_sh_cnt[0]_i_1_n_0 ;
  wire \mcp1_sh_cnt[1]_i_1_n_0 ;
  wire \mcp1_sh_cnt[2]_i_1_n_0 ;
  wire \mcp1_sh_cnt[3]_i_1_n_0 ;
  wire \mcp1_sh_cnt[4]_i_1_n_0 ;
  wire \mcp1_sh_cnt[5]_i_1_n_0 ;
  wire \mcp1_sh_cnt[5]_i_2_n_0 ;
  wire \mcp1_sh_cnt[5]_i_3_n_0 ;
  wire \mcp1_sh_invalid_cnt[0]_i_1_n_0 ;
  wire \mcp1_sh_invalid_cnt[1]_i_1_n_0 ;
  wire \mcp1_sh_invalid_cnt[2]_i_1_n_0 ;
  wire \mcp1_sh_invalid_cnt[2]_i_2_n_0 ;
  wire \mcp1_sh_invalid_cnt[3]_i_1_n_0 ;
  wire \mcp1_sh_invalid_cnt[3]_i_2_n_0 ;
  wire \mcp1_sh_invalid_cnt[3]_i_3_n_0 ;
  wire \mcp1_sh_invalid_cnt[3]_i_4_n_0 ;
  wire \mcp1_sh_invalid_cnt[3]_i_5_n_0 ;
  wire \mcp1_sh_invalid_cnt_reg_n_0_[0] ;
  wire \mcp1_sh_invalid_cnt_reg_n_0_[1] ;
  wire \mcp1_sh_invalid_cnt_reg_n_0_[2] ;
  wire \mcp1_sh_invalid_cnt_reg_n_0_[3] ;
  wire \mcp1_slip_done_cnt[4]_i_1_n_0 ;
  wire [4:0]mcp1_slip_done_cnt_reg;
  wire mcp1_slip_done_i_1_n_0;
  wire mcp1_slip_done_reg_n_0;
  wire mcp1_slip_i_1_n_0;
  wire mcp1_state;
  wire mcp1_state0;
  wire [1:0]mcp1_state__0;
  wire mcp1_test_sh_i_1_n_0;
  wire mcp1_test_sh_reg_0;
  wire mcp1_test_sh_reg_n_0;
  wire [4:0]p_0_in__0;
  wire p_1_in;
  wire rxusrclk2;

  LUT6 #(
    .INIT(64'hFF00FFFF09FF0000)) 
    \FSM_sequential_mcp1_state[0]_i_1__0 
       (.I0(\FSM_sequential_mcp1_state_reg[0]_0 [0]),
        .I1(\FSM_sequential_mcp1_state_reg[0]_0 [1]),
        .I2(\FSM_sequential_mcp1_state[1]_i_3__0_n_0 ),
        .I3(mcp1_state__0[1]),
        .I4(mcp1_state),
        .I5(mcp1_state__0[0]),
        .O(\FSM_sequential_mcp1_state[0]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h0D0FFFFFF0F00000)) 
    \FSM_sequential_mcp1_state[1]_i_2__0 
       (.I0(\FSM_sequential_mcp1_state[1]_i_3__0_n_0 ),
        .I1(\FSM_sequential_mcp1_state[1]_i_4__0_n_0 ),
        .I2(mcp1_state__0[0]),
        .I3(\FSM_sequential_mcp1_state[1]_i_5_n_0 ),
        .I4(mcp1_state),
        .I5(mcp1_state__0[1]),
        .O(\FSM_sequential_mcp1_state[1]_i_2__0_n_0 ));
  LUT5 #(
    .INIT(32'h2AAAAAAA)) 
    \FSM_sequential_mcp1_state[1]_i_3__0 
       (.I0(b_lock_mod),
        .I1(\mcp1_sh_invalid_cnt_reg_n_0_[2] ),
        .I2(\mcp1_sh_invalid_cnt_reg_n_0_[0] ),
        .I3(\mcp1_sh_invalid_cnt_reg_n_0_[1] ),
        .I4(\mcp1_sh_invalid_cnt_reg_n_0_[3] ),
        .O(\FSM_sequential_mcp1_state[1]_i_3__0_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \FSM_sequential_mcp1_state[1]_i_4__0 
       (.I0(\FSM_sequential_mcp1_state_reg[0]_0 [1]),
        .I1(\FSM_sequential_mcp1_state_reg[0]_0 [0]),
        .O(\FSM_sequential_mcp1_state[1]_i_4__0_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \FSM_sequential_mcp1_state[1]_i_5 
       (.I0(mcp1_test_sh_reg_n_0),
        .I1(\mcp1_sh_invalid_cnt[3]_i_3_n_0 ),
        .O(\FSM_sequential_mcp1_state[1]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h8A0A8A8A80008888)) 
    \FSM_sequential_mcp1_state[1]_i_6 
       (.I0(mcp1_test_sh_reg_0),
        .I1(\FSM_sequential_mcp1_state[1]_i_7_n_0 ),
        .I2(mcp1_state__0[1]),
        .I3(mcp1_slip_done_reg_n_0),
        .I4(mcp1_state__0[0]),
        .I5(mcp1_test_sh_reg_n_0),
        .O(mcp1_state));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFF1F)) 
    \FSM_sequential_mcp1_state[1]_i_7 
       (.I0(\FSM_sequential_mcp1_state[1]_i_4__0_n_0 ),
        .I1(\FSM_sequential_mcp1_state[1]_i_3__0_n_0 ),
        .I2(mcp1_state__0[1]),
        .I3(mcp1_state__0[0]),
        .I4(\mcp1_sh_invalid_cnt[3]_i_3_n_0 ),
        .I5(mcp1_test_sh_reg_n_0),
        .O(\FSM_sequential_mcp1_state[1]_i_7_n_0 ));
  (* FSM_ENCODED_STATES = "RESET_CNT:01,TEST_VALID_INVALID_SH:10,LOCK_INIT:00,SLIP:11" *) 
  FDRE \FSM_sequential_mcp1_state_reg[0] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(\FSM_sequential_mcp1_state[0]_i_1__0_n_0 ),
        .Q(mcp1_state__0[0]),
        .R(mcp1_state0));
  (* FSM_ENCODED_STATES = "RESET_CNT:01,TEST_VALID_INVALID_SH:10,LOCK_INIT:00,SLIP:11" *) 
  FDRE \FSM_sequential_mcp1_state_reg[1] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(\FSM_sequential_mcp1_state[1]_i_2__0_n_0 ),
        .Q(mcp1_state__0[1]),
        .R(mcp1_state0));
  LUT2 #(
    .INIT(4'h6)) 
    \b_lock_count[0]_i_4 
       (.I0(b_lock_mod),
        .I1(\b_lock_count_reg[3] ),
        .O(S));
  LUT6 #(
    .INIT(64'h00000000222E2222)) 
    mcp1_b_lock_i_1
       (.I0(b_lock_mod),
        .I1(mcp1_b_lock0_out),
        .I2(mcp1_state__0[0]),
        .I3(mcp1_b_lock_i_3_n_0),
        .I4(\mcp1_sh_invalid_cnt[3]_i_3_n_0 ),
        .I5(mcp1_state0),
        .O(mcp1_b_lock_i_1_n_0));
  LUT6 #(
    .INIT(64'hAAAA00800080AAAA)) 
    mcp1_b_lock_i_2
       (.I0(mcp1_test_sh_reg_0),
        .I1(\FSM_sequential_mcp1_state[1]_i_4__0_n_0 ),
        .I2(\mcp1_sh_invalid_cnt[3]_i_3_n_0 ),
        .I3(mcp1_b_lock_i_3_n_0),
        .I4(mcp1_state__0[1]),
        .I5(mcp1_state__0[0]),
        .O(mcp1_b_lock0_out));
  (* SOFT_HLUTNM = "soft_lutpair176" *) 
  LUT5 #(
    .INIT(32'hFFFFFEFF)) 
    mcp1_b_lock_i_3
       (.I0(\mcp1_sh_invalid_cnt_reg_n_0_[0] ),
        .I1(\mcp1_sh_invalid_cnt_reg_n_0_[1] ),
        .I2(\mcp1_sh_invalid_cnt_reg_n_0_[3] ),
        .I3(mcp1_state__0[1]),
        .I4(\mcp1_sh_invalid_cnt_reg_n_0_[2] ),
        .O(mcp1_b_lock_i_3_n_0));
  FDRE #(
    .INIT(1'b0)) 
    mcp1_b_lock_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(mcp1_b_lock_i_1_n_0),
        .Q(b_lock_mod),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h2)) 
    \mcp1_sh_cnt[0]_i_1 
       (.I0(mcp1_state__0[1]),
        .I1(mcp1_sh_cnt[0]),
        .O(\mcp1_sh_cnt[0]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h28)) 
    \mcp1_sh_cnt[1]_i_1 
       (.I0(mcp1_state__0[1]),
        .I1(mcp1_sh_cnt[0]),
        .I2(mcp1_sh_cnt[1]),
        .O(\mcp1_sh_cnt[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair177" *) 
  LUT4 #(
    .INIT(16'h2A80)) 
    \mcp1_sh_cnt[2]_i_1 
       (.I0(mcp1_state__0[1]),
        .I1(mcp1_sh_cnt[1]),
        .I2(mcp1_sh_cnt[0]),
        .I3(mcp1_sh_cnt[2]),
        .O(\mcp1_sh_cnt[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair177" *) 
  LUT5 #(
    .INIT(32'h2AAA8000)) 
    \mcp1_sh_cnt[3]_i_1 
       (.I0(mcp1_state__0[1]),
        .I1(mcp1_sh_cnt[0]),
        .I2(mcp1_sh_cnt[1]),
        .I3(mcp1_sh_cnt[2]),
        .I4(mcp1_sh_cnt[3]),
        .O(\mcp1_sh_cnt[3]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h2AAAAAAA80000000)) 
    \mcp1_sh_cnt[4]_i_1 
       (.I0(mcp1_state__0[1]),
        .I1(mcp1_sh_cnt[2]),
        .I2(mcp1_sh_cnt[1]),
        .I3(mcp1_sh_cnt[0]),
        .I4(mcp1_sh_cnt[3]),
        .I5(mcp1_sh_cnt[4]),
        .O(\mcp1_sh_cnt[4]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h2828282828280828)) 
    \mcp1_sh_cnt[5]_i_1 
       (.I0(mcp1_test_sh_reg_0),
        .I1(mcp1_state__0[0]),
        .I2(mcp1_state__0[1]),
        .I3(\mcp1_sh_invalid_cnt[3]_i_3_n_0 ),
        .I4(\FSM_sequential_mcp1_state[1]_i_4__0_n_0 ),
        .I5(\FSM_sequential_mcp1_state[1]_i_3__0_n_0 ),
        .O(\mcp1_sh_cnt[5]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h28)) 
    \mcp1_sh_cnt[5]_i_2 
       (.I0(mcp1_state__0[1]),
        .I1(\mcp1_sh_cnt[5]_i_3_n_0 ),
        .I2(mcp1_sh_cnt[5]),
        .O(\mcp1_sh_cnt[5]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h80000000)) 
    \mcp1_sh_cnt[5]_i_3 
       (.I0(mcp1_sh_cnt[3]),
        .I1(mcp1_sh_cnt[0]),
        .I2(mcp1_sh_cnt[1]),
        .I3(mcp1_sh_cnt[2]),
        .I4(mcp1_sh_cnt[4]),
        .O(\mcp1_sh_cnt[5]_i_3_n_0 ));
  FDRE \mcp1_sh_cnt_reg[0] 
       (.C(rxusrclk2),
        .CE(\mcp1_sh_cnt[5]_i_1_n_0 ),
        .D(\mcp1_sh_cnt[0]_i_1_n_0 ),
        .Q(mcp1_sh_cnt[0]),
        .R(mcp1_state0));
  FDRE \mcp1_sh_cnt_reg[1] 
       (.C(rxusrclk2),
        .CE(\mcp1_sh_cnt[5]_i_1_n_0 ),
        .D(\mcp1_sh_cnt[1]_i_1_n_0 ),
        .Q(mcp1_sh_cnt[1]),
        .R(mcp1_state0));
  FDRE \mcp1_sh_cnt_reg[2] 
       (.C(rxusrclk2),
        .CE(\mcp1_sh_cnt[5]_i_1_n_0 ),
        .D(\mcp1_sh_cnt[2]_i_1_n_0 ),
        .Q(mcp1_sh_cnt[2]),
        .R(mcp1_state0));
  FDRE \mcp1_sh_cnt_reg[3] 
       (.C(rxusrclk2),
        .CE(\mcp1_sh_cnt[5]_i_1_n_0 ),
        .D(\mcp1_sh_cnt[3]_i_1_n_0 ),
        .Q(mcp1_sh_cnt[3]),
        .R(mcp1_state0));
  FDRE \mcp1_sh_cnt_reg[4] 
       (.C(rxusrclk2),
        .CE(\mcp1_sh_cnt[5]_i_1_n_0 ),
        .D(\mcp1_sh_cnt[4]_i_1_n_0 ),
        .Q(mcp1_sh_cnt[4]),
        .R(mcp1_state0));
  FDRE \mcp1_sh_cnt_reg[5] 
       (.C(rxusrclk2),
        .CE(\mcp1_sh_cnt[5]_i_1_n_0 ),
        .D(\mcp1_sh_cnt[5]_i_2_n_0 ),
        .Q(mcp1_sh_cnt[5]),
        .R(mcp1_state0));
  LUT2 #(
    .INIT(4'h2)) 
    \mcp1_sh_invalid_cnt[0]_i_1 
       (.I0(\mcp1_sh_invalid_cnt[2]_i_2_n_0 ),
        .I1(\mcp1_sh_invalid_cnt_reg_n_0_[0] ),
        .O(\mcp1_sh_invalid_cnt[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair179" *) 
  LUT3 #(
    .INIT(8'h28)) 
    \mcp1_sh_invalid_cnt[1]_i_1 
       (.I0(\mcp1_sh_invalid_cnt[2]_i_2_n_0 ),
        .I1(\mcp1_sh_invalid_cnt_reg_n_0_[1] ),
        .I2(\mcp1_sh_invalid_cnt_reg_n_0_[0] ),
        .O(\mcp1_sh_invalid_cnt[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair179" *) 
  LUT4 #(
    .INIT(16'h7800)) 
    \mcp1_sh_invalid_cnt[2]_i_1 
       (.I0(\mcp1_sh_invalid_cnt_reg_n_0_[1] ),
        .I1(\mcp1_sh_invalid_cnt_reg_n_0_[0] ),
        .I2(\mcp1_sh_invalid_cnt_reg_n_0_[2] ),
        .I3(\mcp1_sh_invalid_cnt[2]_i_2_n_0 ),
        .O(\mcp1_sh_invalid_cnt[2]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h70000070)) 
    \mcp1_sh_invalid_cnt[2]_i_2 
       (.I0(\mcp1_sh_invalid_cnt[3]_i_3_n_0 ),
        .I1(\FSM_sequential_mcp1_state[1]_i_3__0_n_0 ),
        .I2(mcp1_state__0[1]),
        .I3(\FSM_sequential_mcp1_state_reg[0]_0 [0]),
        .I4(\FSM_sequential_mcp1_state_reg[0]_0 [1]),
        .O(\mcp1_sh_invalid_cnt[2]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h4444888844448000)) 
    \mcp1_sh_invalid_cnt[3]_i_1 
       (.I0(mcp1_state__0[1]),
        .I1(mcp1_test_sh_reg_0),
        .I2(\mcp1_sh_invalid_cnt[3]_i_3_n_0 ),
        .I3(\FSM_sequential_mcp1_state[1]_i_4__0_n_0 ),
        .I4(mcp1_state__0[0]),
        .I5(\mcp1_sh_invalid_cnt[3]_i_4_n_0 ),
        .O(\mcp1_sh_invalid_cnt[3]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000707000)) 
    \mcp1_sh_invalid_cnt[3]_i_2 
       (.I0(\mcp1_sh_invalid_cnt[3]_i_3_n_0 ),
        .I1(b_lock_mod),
        .I2(mcp1_state__0[1]),
        .I3(\mcp1_sh_invalid_cnt_reg_n_0_[3] ),
        .I4(\mcp1_sh_invalid_cnt[3]_i_5_n_0 ),
        .I5(\FSM_sequential_mcp1_state[1]_i_4__0_n_0 ),
        .O(\mcp1_sh_invalid_cnt[3]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \mcp1_sh_invalid_cnt[3]_i_3 
       (.I0(mcp1_sh_cnt[4]),
        .I1(mcp1_sh_cnt[2]),
        .I2(mcp1_sh_cnt[1]),
        .I3(mcp1_sh_cnt[0]),
        .I4(mcp1_sh_cnt[3]),
        .I5(mcp1_sh_cnt[5]),
        .O(\mcp1_sh_invalid_cnt[3]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h0999999999999999)) 
    \mcp1_sh_invalid_cnt[3]_i_4 
       (.I0(\FSM_sequential_mcp1_state_reg[0]_0 [0]),
        .I1(\FSM_sequential_mcp1_state_reg[0]_0 [1]),
        .I2(\mcp1_sh_invalid_cnt_reg_n_0_[2] ),
        .I3(\mcp1_sh_invalid_cnt_reg_n_0_[0] ),
        .I4(\mcp1_sh_invalid_cnt_reg_n_0_[1] ),
        .I5(\mcp1_sh_invalid_cnt_reg_n_0_[3] ),
        .O(\mcp1_sh_invalid_cnt[3]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair176" *) 
  LUT3 #(
    .INIT(8'h80)) 
    \mcp1_sh_invalid_cnt[3]_i_5 
       (.I0(\mcp1_sh_invalid_cnt_reg_n_0_[2] ),
        .I1(\mcp1_sh_invalid_cnt_reg_n_0_[0] ),
        .I2(\mcp1_sh_invalid_cnt_reg_n_0_[1] ),
        .O(\mcp1_sh_invalid_cnt[3]_i_5_n_0 ));
  FDRE \mcp1_sh_invalid_cnt_reg[0] 
       (.C(rxusrclk2),
        .CE(\mcp1_sh_invalid_cnt[3]_i_1_n_0 ),
        .D(\mcp1_sh_invalid_cnt[0]_i_1_n_0 ),
        .Q(\mcp1_sh_invalid_cnt_reg_n_0_[0] ),
        .R(mcp1_state0));
  FDRE \mcp1_sh_invalid_cnt_reg[1] 
       (.C(rxusrclk2),
        .CE(\mcp1_sh_invalid_cnt[3]_i_1_n_0 ),
        .D(\mcp1_sh_invalid_cnt[1]_i_1_n_0 ),
        .Q(\mcp1_sh_invalid_cnt_reg_n_0_[1] ),
        .R(mcp1_state0));
  FDRE \mcp1_sh_invalid_cnt_reg[2] 
       (.C(rxusrclk2),
        .CE(\mcp1_sh_invalid_cnt[3]_i_1_n_0 ),
        .D(\mcp1_sh_invalid_cnt[2]_i_1_n_0 ),
        .Q(\mcp1_sh_invalid_cnt_reg_n_0_[2] ),
        .R(mcp1_state0));
  FDRE \mcp1_sh_invalid_cnt_reg[3] 
       (.C(rxusrclk2),
        .CE(\mcp1_sh_invalid_cnt[3]_i_1_n_0 ),
        .D(\mcp1_sh_invalid_cnt[3]_i_2_n_0 ),
        .Q(\mcp1_sh_invalid_cnt_reg_n_0_[3] ),
        .R(mcp1_state0));
  (* SOFT_HLUTNM = "soft_lutpair181" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \mcp1_slip_done_cnt[0]_i_1 
       (.I0(mcp1_slip_done_cnt_reg[0]),
        .O(p_0_in__0[0]));
  (* SOFT_HLUTNM = "soft_lutpair181" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \mcp1_slip_done_cnt[1]_i_1 
       (.I0(mcp1_slip_done_cnt_reg[0]),
        .I1(mcp1_slip_done_cnt_reg[1]),
        .O(p_0_in__0[1]));
  (* SOFT_HLUTNM = "soft_lutpair180" *) 
  LUT3 #(
    .INIT(8'h6A)) 
    \mcp1_slip_done_cnt[2]_i_1 
       (.I0(mcp1_slip_done_cnt_reg[2]),
        .I1(mcp1_slip_done_cnt_reg[1]),
        .I2(mcp1_slip_done_cnt_reg[0]),
        .O(p_0_in__0[2]));
  (* SOFT_HLUTNM = "soft_lutpair180" *) 
  LUT4 #(
    .INIT(16'h6AAA)) 
    \mcp1_slip_done_cnt[3]_i_1 
       (.I0(mcp1_slip_done_cnt_reg[3]),
        .I1(mcp1_slip_done_cnt_reg[0]),
        .I2(mcp1_slip_done_cnt_reg[1]),
        .I3(mcp1_slip_done_cnt_reg[2]),
        .O(p_0_in__0[3]));
  LUT6 #(
    .INIT(64'hAAAAAABAAAAAAAAA)) 
    \mcp1_slip_done_cnt[4]_i_1 
       (.I0(mcp1_state0),
        .I1(mcp1_state__0[0]),
        .I2(mcp1_state__0[1]),
        .I3(\FSM_sequential_mcp1_state[1]_i_3__0_n_0 ),
        .I4(\FSM_sequential_mcp1_state[1]_i_4__0_n_0 ),
        .I5(mcp1_test_sh_reg_0),
        .O(\mcp1_slip_done_cnt[4]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair178" *) 
  LUT5 #(
    .INIT(32'h6AAAAAAA)) 
    \mcp1_slip_done_cnt[4]_i_2 
       (.I0(mcp1_slip_done_cnt_reg[4]),
        .I1(mcp1_slip_done_cnt_reg[2]),
        .I2(mcp1_slip_done_cnt_reg[3]),
        .I3(mcp1_slip_done_cnt_reg[0]),
        .I4(mcp1_slip_done_cnt_reg[1]),
        .O(p_0_in__0[4]));
  FDRE \mcp1_slip_done_cnt_reg[0] 
       (.C(rxusrclk2),
        .CE(E),
        .D(p_0_in__0[0]),
        .Q(mcp1_slip_done_cnt_reg[0]),
        .R(\mcp1_slip_done_cnt[4]_i_1_n_0 ));
  FDRE \mcp1_slip_done_cnt_reg[1] 
       (.C(rxusrclk2),
        .CE(E),
        .D(p_0_in__0[1]),
        .Q(mcp1_slip_done_cnt_reg[1]),
        .R(\mcp1_slip_done_cnt[4]_i_1_n_0 ));
  FDRE \mcp1_slip_done_cnt_reg[2] 
       (.C(rxusrclk2),
        .CE(E),
        .D(p_0_in__0[2]),
        .Q(mcp1_slip_done_cnt_reg[2]),
        .R(\mcp1_slip_done_cnt[4]_i_1_n_0 ));
  FDRE \mcp1_slip_done_cnt_reg[3] 
       (.C(rxusrclk2),
        .CE(E),
        .D(p_0_in__0[3]),
        .Q(mcp1_slip_done_cnt_reg[3]),
        .R(\mcp1_slip_done_cnt[4]_i_1_n_0 ));
  FDRE \mcp1_slip_done_cnt_reg[4] 
       (.C(rxusrclk2),
        .CE(E),
        .D(p_0_in__0[4]),
        .Q(mcp1_slip_done_cnt_reg[4]),
        .R(\mcp1_slip_done_cnt[4]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h00E2)) 
    mcp1_slip_done_i_1
       (.I0(mcp1_slip_done_reg_n_0),
        .I1(mcp1_test_sh_reg_0),
        .I2(p_1_in),
        .I3(\mcp1_slip_done_cnt[4]_i_1_n_0 ),
        .O(mcp1_slip_done_i_1_n_0));
  (* SOFT_HLUTNM = "soft_lutpair178" *) 
  LUT5 #(
    .INIT(32'h10000000)) 
    mcp1_slip_done_i_2
       (.I0(mcp1_slip_done_cnt_reg[1]),
        .I1(mcp1_slip_done_cnt_reg[0]),
        .I2(mcp1_slip_done_cnt_reg[4]),
        .I3(mcp1_slip_done_cnt_reg[2]),
        .I4(mcp1_slip_done_cnt_reg[3]),
        .O(p_1_in));
  FDRE mcp1_slip_done_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(mcp1_slip_done_i_1_n_0),
        .Q(mcp1_slip_done_reg_n_0),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h0004FFFF00040000)) 
    mcp1_slip_i_1
       (.I0(mcp1_state__0[0]),
        .I1(mcp1_state__0[1]),
        .I2(\FSM_sequential_mcp1_state[1]_i_3__0_n_0 ),
        .I3(\FSM_sequential_mcp1_state[1]_i_4__0_n_0 ),
        .I4(mcp1_test_sh_reg_0),
        .I5(gt_slip_int),
        .O(mcp1_slip_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    mcp1_slip_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(mcp1_slip_i_1_n_0),
        .Q(gt_slip_int),
        .R(mcp1_state0));
  LUT4 #(
    .INIT(16'hEFE0)) 
    mcp1_test_sh_i_1
       (.I0(mcp1_state__0[1]),
        .I1(mcp1_state__0[0]),
        .I2(mcp1_test_sh_reg_0),
        .I3(mcp1_test_sh_reg_n_0),
        .O(mcp1_test_sh_i_1_n_0));
  FDRE mcp1_test_sh_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(mcp1_test_sh_i_1_n_0),
        .Q(mcp1_test_sh_reg_n_0),
        .R(mcp1_state0));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_15_rx_decoder" *) 
module ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_rx_decoder
   (\mcp1_r_type_reg_reg[0]_0 ,
    \mcp1_r_type_reg_reg[2]_0 ,
    \rx_66_enc_reg_reg[11] ,
    \rx_66_enc_reg_reg[17] ,
    \rx_66_enc_reg_reg[29] ,
    \rx_66_enc_reg_reg[31] ,
    \rx_66_enc_reg_reg[39] ,
    \rx_66_enc_reg_reg[47] ,
    \rx_66_enc_reg_reg[53] ,
    \rx_66_enc_reg_reg[61] ,
    D,
    \mcp1_rx_64_ctrl_out_reg[7]_0 ,
    next_state__0,
    \mcp1_r_type_next_reg_reg[0]_0 ,
    out,
    \mcp1_dec_c4_reg[7]_0 ,
    Q,
    rxusrclk2,
    mcp1_state__0,
    \mcp1_rx_ebuff_ctrl_reg[7] ,
    \mcp1_rx_64_ctrl_out_reg[1]_0 ,
    \mcp1_r_type_next_reg_reg[2]_0 ,
    E,
    \mcp1_dec_c0_reg[7]_0 ,
    \mcp1_dec_c0_reg[6]_0 ,
    \mcp1_dec_c1_reg[7]_0 ,
    \mcp1_dec_c2_reg[6]_0 ,
    \mcp1_dec_c3_reg[5]_0 ,
    \mcp1_dec_c4_reg[7]_1 ,
    \mcp1_dec_c5_reg[7]_0 ,
    \mcp1_dec_c5_reg[5]_0 ,
    SS,
    \mcp1_dec_c7_reg[7]_0 ,
    \mcp1_rx_64_data_out_reg[28]_0 );
  output \mcp1_r_type_reg_reg[0]_0 ;
  output [2:0]\mcp1_r_type_reg_reg[2]_0 ;
  output \rx_66_enc_reg_reg[11] ;
  output \rx_66_enc_reg_reg[17] ;
  output \rx_66_enc_reg_reg[29] ;
  output \rx_66_enc_reg_reg[31] ;
  output \rx_66_enc_reg_reg[39] ;
  output \rx_66_enc_reg_reg[47] ;
  output \rx_66_enc_reg_reg[53] ;
  output \rx_66_enc_reg_reg[61] ;
  output [63:0]D;
  output [7:0]\mcp1_rx_64_ctrl_out_reg[7]_0 ;
  output [0:0]next_state__0;
  output \mcp1_r_type_next_reg_reg[0]_0 ;
  input out;
  input [1:0]\mcp1_dec_c4_reg[7]_0 ;
  input [65:0]Q;
  input rxusrclk2;
  input [0:0]mcp1_state__0;
  input \mcp1_rx_ebuff_ctrl_reg[7] ;
  input \mcp1_rx_64_ctrl_out_reg[1]_0 ;
  input \mcp1_r_type_next_reg_reg[2]_0 ;
  input [1:0]E;
  input [0:0]\mcp1_dec_c0_reg[7]_0 ;
  input [0:0]\mcp1_dec_c0_reg[6]_0 ;
  input [0:0]\mcp1_dec_c1_reg[7]_0 ;
  input [0:0]\mcp1_dec_c2_reg[6]_0 ;
  input [0:0]\mcp1_dec_c3_reg[5]_0 ;
  input [0:0]\mcp1_dec_c4_reg[7]_1 ;
  input [0:0]\mcp1_dec_c5_reg[7]_0 ;
  input [0:0]\mcp1_dec_c5_reg[5]_0 ;
  input [0:0]SS;
  input [0:0]\mcp1_dec_c7_reg[7]_0 ;
  input [0:0]\mcp1_rx_64_data_out_reg[28]_0 ;

  wire [63:0]D;
  wire [6:0]DecodeWord;
  wire [7:0]DecodeWord0;
  wire [6:0]DecodeWord1;
  wire [5:0]DecodeWord2;
  wire [7:0]DecodeWord3;
  wire [5:3]DecodeWord4;
  wire [5:3]DecodeWord5;
  wire [7:0]DecodeWord6;
  wire [1:0]E;
  wire \FSM_sequential_mcp1_state[1]_i_4__1_n_0 ;
  wire [65:0]Q;
  wire [0:0]SS;
  wire [63:0]data0;
  wire [55:0]data8;
  wire [7:0]mcp1_block_field_reg;
  wire \mcp1_dec_c0[0]_i_2_n_0 ;
  wire \mcp1_dec_c0[1]_i_1_n_0 ;
  wire \mcp1_dec_c0[3]_i_2_n_0 ;
  wire \mcp1_dec_c0[3]_i_3_n_0 ;
  wire \mcp1_dec_c0[4]_i_2_n_0 ;
  wire \mcp1_dec_c0[5]_i_2_n_0 ;
  wire \mcp1_dec_c0[5]_i_3_n_0 ;
  wire \mcp1_dec_c0[6]_i_3_n_0 ;
  wire \mcp1_dec_c0[6]_i_4_n_0 ;
  wire \mcp1_dec_c0[7]_i_1_n_0 ;
  wire \mcp1_dec_c0[7]_i_2_n_0 ;
  wire \mcp1_dec_c0[7]_i_3_n_0 ;
  wire [0:0]\mcp1_dec_c0_reg[6]_0 ;
  wire [0:0]\mcp1_dec_c0_reg[7]_0 ;
  wire \mcp1_dec_c1[0]_i_2_n_0 ;
  wire \mcp1_dec_c1[1]_i_1_n_0 ;
  wire \mcp1_dec_c1[2]_i_2_n_0 ;
  wire \mcp1_dec_c1[2]_i_3_n_0 ;
  wire \mcp1_dec_c1[2]_i_4_n_0 ;
  wire \mcp1_dec_c1[3]_i_2_n_0 ;
  wire \mcp1_dec_c1[4]_i_2_n_0 ;
  wire \mcp1_dec_c1[4]_i_3_n_0 ;
  wire \mcp1_dec_c1[5]_i_1_n_0 ;
  wire \mcp1_dec_c1[5]_i_2_n_0 ;
  wire \mcp1_dec_c1[5]_i_3_n_0 ;
  wire \mcp1_dec_c1[5]_i_4_n_0 ;
  wire \mcp1_dec_c1[6]_i_2_n_0 ;
  wire \mcp1_dec_c1[6]_i_3_n_0 ;
  wire \mcp1_dec_c1[7]_i_3_n_0 ;
  wire \mcp1_dec_c1[7]_i_4_n_0 ;
  wire \mcp1_dec_c1[7]_i_5_n_0 ;
  wire [0:0]\mcp1_dec_c1_reg[7]_0 ;
  wire \mcp1_dec_c2[1]_i_2_n_0 ;
  wire \mcp1_dec_c2[2]_i_2_n_0 ;
  wire \mcp1_dec_c2[3]_i_2_n_0 ;
  wire \mcp1_dec_c2[4]_i_1_n_0 ;
  wire \mcp1_dec_c2[4]_i_2_n_0 ;
  wire \mcp1_dec_c2[5]_i_2_n_0 ;
  wire \mcp1_dec_c2[5]_i_3_n_0 ;
  wire \mcp1_dec_c2[6]_i_3_n_0 ;
  wire \mcp1_dec_c2[6]_i_4_n_0 ;
  wire \mcp1_dec_c2[7]_i_1_n_0 ;
  wire \mcp1_dec_c2[7]_i_2_n_0 ;
  wire \mcp1_dec_c2[7]_i_3_n_0 ;
  wire [0:0]\mcp1_dec_c2_reg[6]_0 ;
  wire \mcp1_dec_c3[0]_i_2_n_0 ;
  wire \mcp1_dec_c3[2]_i_2_n_0 ;
  wire \mcp1_dec_c3[2]_i_3_n_0 ;
  wire \mcp1_dec_c3[2]_i_4_n_0 ;
  wire \mcp1_dec_c3[3]_i_2_n_0 ;
  wire \mcp1_dec_c3[4]_i_1_n_0 ;
  wire \mcp1_dec_c3[4]_i_2_n_0 ;
  wire \mcp1_dec_c3[5]_i_3_n_0 ;
  wire \mcp1_dec_c3[5]_i_4_n_0 ;
  wire \mcp1_dec_c3[5]_i_5_n_0 ;
  wire \mcp1_dec_c3[5]_i_6_n_0 ;
  wire \mcp1_dec_c3[6]_i_1_n_0 ;
  wire \mcp1_dec_c3[6]_i_2_n_0 ;
  wire \mcp1_dec_c3[7]_i_1_n_0 ;
  wire \mcp1_dec_c3[7]_i_2_n_0 ;
  wire \mcp1_dec_c3[7]_i_3_n_0 ;
  wire [0:0]\mcp1_dec_c3_reg[5]_0 ;
  wire \mcp1_dec_c4[0]_i_2_n_0 ;
  wire \mcp1_dec_c4[1]_i_1_n_0 ;
  wire \mcp1_dec_c4[3]_i_2_n_0 ;
  wire \mcp1_dec_c4[4]_i_2_n_0 ;
  wire \mcp1_dec_c4[5]_i_1_n_0 ;
  wire \mcp1_dec_c4[5]_i_2_n_0 ;
  wire \mcp1_dec_c4[5]_i_3_n_0 ;
  wire \mcp1_dec_c4[5]_i_4_n_0 ;
  wire \mcp1_dec_c4[6]_i_2_n_0 ;
  wire \mcp1_dec_c4[6]_i_3_n_0 ;
  wire \mcp1_dec_c4[7]_i_3_n_0 ;
  wire \mcp1_dec_c4[7]_i_4_n_0 ;
  wire \mcp1_dec_c4[7]_i_5_n_0 ;
  wire [1:0]\mcp1_dec_c4_reg[7]_0 ;
  wire [0:0]\mcp1_dec_c4_reg[7]_1 ;
  wire \mcp1_dec_c5[0]_i_1_n_0 ;
  wire \mcp1_dec_c5[0]_i_2_n_0 ;
  wire \mcp1_dec_c5[1]_i_1_n_0 ;
  wire \mcp1_dec_c5[3]_i_2_n_0 ;
  wire \mcp1_dec_c5[3]_i_3_n_0 ;
  wire \mcp1_dec_c5[4]_i_2_n_0 ;
  wire \mcp1_dec_c5[5]_i_3_n_0 ;
  wire \mcp1_dec_c5[5]_i_4_n_0 ;
  wire \mcp1_dec_c5[5]_i_5_n_0 ;
  wire \mcp1_dec_c5[6]_i_1_n_0 ;
  wire \mcp1_dec_c5[6]_i_2_n_0 ;
  wire \mcp1_dec_c5[7]_i_1_n_0 ;
  wire \mcp1_dec_c5[7]_i_2_n_0 ;
  wire \mcp1_dec_c5[7]_i_3_n_0 ;
  wire [0:0]\mcp1_dec_c5_reg[5]_0 ;
  wire [0:0]\mcp1_dec_c5_reg[7]_0 ;
  wire \mcp1_dec_c6[0]_i_1_n_0 ;
  wire \mcp1_dec_c6[1]_i_1_n_0 ;
  wire \mcp1_dec_c6[2]_i_2_n_0 ;
  wire \mcp1_dec_c6[2]_i_3_n_0 ;
  wire \mcp1_dec_c6[3]_i_2_n_0 ;
  wire \mcp1_dec_c6[4]_i_2_n_0 ;
  wire \mcp1_dec_c6[4]_i_3_n_0 ;
  wire \mcp1_dec_c6[5]_i_3_n_0 ;
  wire \mcp1_dec_c6[5]_i_4_n_0 ;
  wire \mcp1_dec_c6[5]_i_5_n_0 ;
  wire \mcp1_dec_c6[6]_i_1_n_0 ;
  wire \mcp1_dec_c6[6]_i_2_n_0 ;
  wire \mcp1_dec_c6[7]_i_1_n_0 ;
  wire \mcp1_dec_c6[7]_i_2_n_0 ;
  wire \mcp1_dec_c6[7]_i_3_n_0 ;
  wire \mcp1_dec_c7[0]_i_2_n_0 ;
  wire \mcp1_dec_c7[1]_i_1_n_0 ;
  wire \mcp1_dec_c7[3]_i_2_n_0 ;
  wire \mcp1_dec_c7[4]_i_2_n_0 ;
  wire \mcp1_dec_c7[4]_i_3_n_0 ;
  wire \mcp1_dec_c7[4]_i_4_n_0 ;
  wire \mcp1_dec_c7[5]_i_2_n_0 ;
  wire \mcp1_dec_c7[5]_i_3_n_0 ;
  wire \mcp1_dec_c7[6]_i_2_n_0 ;
  wire \mcp1_dec_c7[6]_i_3_n_0 ;
  wire \mcp1_dec_c7[7]_i_4_n_0 ;
  wire \mcp1_dec_c7[7]_i_5_n_0 ;
  wire \mcp1_dec_c7[7]_i_6_n_0 ;
  wire \mcp1_dec_c7[7]_i_7_n_0 ;
  wire \mcp1_dec_c7[7]_i_8_n_0 ;
  wire \mcp1_dec_c7[7]_i_9_n_0 ;
  wire [0:0]\mcp1_dec_c7_reg[7]_0 ;
  wire \mcp1_r_type_next_reg[0]_i_10_n_0 ;
  wire \mcp1_r_type_next_reg[0]_i_11_n_0 ;
  wire \mcp1_r_type_next_reg[0]_i_12_n_0 ;
  wire \mcp1_r_type_next_reg[0]_i_13_n_0 ;
  wire \mcp1_r_type_next_reg[0]_i_14_n_0 ;
  wire \mcp1_r_type_next_reg[0]_i_15_n_0 ;
  wire \mcp1_r_type_next_reg[0]_i_16_n_0 ;
  wire \mcp1_r_type_next_reg[0]_i_17_n_0 ;
  wire \mcp1_r_type_next_reg[0]_i_18_n_0 ;
  wire \mcp1_r_type_next_reg[0]_i_19_n_0 ;
  wire \mcp1_r_type_next_reg[0]_i_1_n_0 ;
  wire \mcp1_r_type_next_reg[0]_i_20_n_0 ;
  wire \mcp1_r_type_next_reg[0]_i_21_n_0 ;
  wire \mcp1_r_type_next_reg[0]_i_22_n_0 ;
  wire \mcp1_r_type_next_reg[0]_i_2_n_0 ;
  wire \mcp1_r_type_next_reg[0]_i_3_n_0 ;
  wire \mcp1_r_type_next_reg[0]_i_4_n_0 ;
  wire \mcp1_r_type_next_reg[0]_i_5_n_0 ;
  wire \mcp1_r_type_next_reg[0]_i_6_n_0 ;
  wire \mcp1_r_type_next_reg[0]_i_7_n_0 ;
  wire \mcp1_r_type_next_reg[0]_i_8_n_0 ;
  wire \mcp1_r_type_next_reg[0]_i_9_n_0 ;
  wire \mcp1_r_type_next_reg[1]_i_1_n_0 ;
  wire \mcp1_r_type_next_reg[2]_i_10_n_0 ;
  wire \mcp1_r_type_next_reg[2]_i_11_n_0 ;
  wire \mcp1_r_type_next_reg[2]_i_12_n_0 ;
  wire \mcp1_r_type_next_reg[2]_i_13_n_0 ;
  wire \mcp1_r_type_next_reg[2]_i_14_n_0 ;
  wire \mcp1_r_type_next_reg[2]_i_15_n_0 ;
  wire \mcp1_r_type_next_reg[2]_i_16_n_0 ;
  wire \mcp1_r_type_next_reg[2]_i_17_n_0 ;
  wire \mcp1_r_type_next_reg[2]_i_18_n_0 ;
  wire \mcp1_r_type_next_reg[2]_i_19_n_0 ;
  wire \mcp1_r_type_next_reg[2]_i_1_n_0 ;
  wire \mcp1_r_type_next_reg[2]_i_20_n_0 ;
  wire \mcp1_r_type_next_reg[2]_i_21_n_0 ;
  wire \mcp1_r_type_next_reg[2]_i_22_n_0 ;
  wire \mcp1_r_type_next_reg[2]_i_23_n_0 ;
  wire \mcp1_r_type_next_reg[2]_i_24_n_0 ;
  wire \mcp1_r_type_next_reg[2]_i_25_n_0 ;
  wire \mcp1_r_type_next_reg[2]_i_26_n_0 ;
  wire \mcp1_r_type_next_reg[2]_i_27_n_0 ;
  wire \mcp1_r_type_next_reg[2]_i_28_n_0 ;
  wire \mcp1_r_type_next_reg[2]_i_29_n_0 ;
  wire \mcp1_r_type_next_reg[2]_i_2_n_0 ;
  wire \mcp1_r_type_next_reg[2]_i_30_n_0 ;
  wire \mcp1_r_type_next_reg[2]_i_31_n_0 ;
  wire \mcp1_r_type_next_reg[2]_i_32_n_0 ;
  wire \mcp1_r_type_next_reg[2]_i_33_n_0 ;
  wire \mcp1_r_type_next_reg[2]_i_34_n_0 ;
  wire \mcp1_r_type_next_reg[2]_i_35_n_0 ;
  wire \mcp1_r_type_next_reg[2]_i_36_n_0 ;
  wire \mcp1_r_type_next_reg[2]_i_37_n_0 ;
  wire \mcp1_r_type_next_reg[2]_i_38_n_0 ;
  wire \mcp1_r_type_next_reg[2]_i_3_n_0 ;
  wire \mcp1_r_type_next_reg[2]_i_4_n_0 ;
  wire \mcp1_r_type_next_reg[2]_i_5_n_0 ;
  wire \mcp1_r_type_next_reg[2]_i_7_n_0 ;
  wire \mcp1_r_type_next_reg[2]_i_8_n_0 ;
  wire \mcp1_r_type_next_reg[2]_i_9_n_0 ;
  wire \mcp1_r_type_next_reg_reg[0]_0 ;
  wire \mcp1_r_type_next_reg_reg[2]_0 ;
  wire \mcp1_r_type_reg_reg[0]_0 ;
  wire [2:0]\mcp1_r_type_reg_reg[2]_0 ;
  wire [7:1]mcp1_rx_64_ctrl_out;
  wire \mcp1_rx_64_ctrl_out[0]_i_1_n_0 ;
  wire \mcp1_rx_64_ctrl_out[0]_i_2_n_0 ;
  wire \mcp1_rx_64_ctrl_out[0]_i_3_n_0 ;
  wire \mcp1_rx_64_ctrl_out[1]_i_2_n_0 ;
  wire \mcp1_rx_64_ctrl_out[1]_i_3_n_0 ;
  wire \mcp1_rx_64_ctrl_out[2]_i_2_n_0 ;
  wire \mcp1_rx_64_ctrl_out[3]_i_2_n_0 ;
  wire \mcp1_rx_64_ctrl_out[3]_i_3_n_0 ;
  wire \mcp1_rx_64_ctrl_out[3]_i_4_n_0 ;
  wire \mcp1_rx_64_ctrl_out[3]_i_5_n_0 ;
  wire \mcp1_rx_64_ctrl_out[4]_i_1_n_0 ;
  wire \mcp1_rx_64_ctrl_out[4]_i_2_n_0 ;
  wire \mcp1_rx_64_ctrl_out[4]_i_3_n_0 ;
  wire \mcp1_rx_64_ctrl_out[5]_i_2_n_0 ;
  wire \mcp1_rx_64_ctrl_out[5]_i_3_n_0 ;
  wire \mcp1_rx_64_ctrl_out[6]_i_2_n_0 ;
  wire \mcp1_rx_64_ctrl_out[7]_i_1_n_0 ;
  wire \mcp1_rx_64_ctrl_out[7]_i_3_n_0 ;
  wire \mcp1_rx_64_ctrl_out[7]_i_4_n_0 ;
  wire \mcp1_rx_64_ctrl_out[7]_i_6_n_0 ;
  wire \mcp1_rx_64_ctrl_out[7]_i_7_n_0 ;
  wire \mcp1_rx_64_ctrl_out_reg[1]_0 ;
  wire [7:0]\mcp1_rx_64_ctrl_out_reg[7]_0 ;
  wire \mcp1_rx_64_ctrl_out_reg[7]_i_5_n_0 ;
  wire \mcp1_rx_64_ctrl_out_reg_n_0_[0] ;
  wire \mcp1_rx_64_ctrl_out_reg_n_0_[1] ;
  wire \mcp1_rx_64_ctrl_out_reg_n_0_[2] ;
  wire \mcp1_rx_64_ctrl_out_reg_n_0_[3] ;
  wire \mcp1_rx_64_ctrl_out_reg_n_0_[4] ;
  wire \mcp1_rx_64_ctrl_out_reg_n_0_[5] ;
  wire \mcp1_rx_64_ctrl_out_reg_n_0_[6] ;
  wire \mcp1_rx_64_ctrl_out_reg_n_0_[7] ;
  wire [63:0]mcp1_rx_64_data_out;
  wire \mcp1_rx_64_data_out[0]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[0]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[10]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[10]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[11]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[11]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[12]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[12]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[13]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[13]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[13]_i_3_n_0 ;
  wire \mcp1_rx_64_data_out[14]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[14]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[15]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[15]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[15]_i_3_n_0 ;
  wire \mcp1_rx_64_data_out[16]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[16]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[16]_i_3_n_0 ;
  wire \mcp1_rx_64_data_out[17]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[17]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[17]_i_3_n_0 ;
  wire \mcp1_rx_64_data_out[18]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[18]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[18]_i_3_n_0 ;
  wire \mcp1_rx_64_data_out[19]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[19]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[19]_i_3_n_0 ;
  wire \mcp1_rx_64_data_out[1]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[1]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[1]_i_3_n_0 ;
  wire \mcp1_rx_64_data_out[20]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[20]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[20]_i_3_n_0 ;
  wire \mcp1_rx_64_data_out[21]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[21]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[21]_i_3_n_0 ;
  wire \mcp1_rx_64_data_out[22]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[22]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[22]_i_3_n_0 ;
  wire \mcp1_rx_64_data_out[23]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[23]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[23]_i_3_n_0 ;
  wire \mcp1_rx_64_data_out[24]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[24]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[24]_i_3_n_0 ;
  wire \mcp1_rx_64_data_out[24]_i_4_n_0 ;
  wire \mcp1_rx_64_data_out[25]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[25]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[25]_i_3_n_0 ;
  wire \mcp1_rx_64_data_out[25]_i_4_n_0 ;
  wire \mcp1_rx_64_data_out[26]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[26]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[26]_i_3_n_0 ;
  wire \mcp1_rx_64_data_out[27]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[27]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[27]_i_3_n_0 ;
  wire \mcp1_rx_64_data_out[28]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[28]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[28]_i_3_n_0 ;
  wire \mcp1_rx_64_data_out[29]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[29]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[29]_i_3_n_0 ;
  wire \mcp1_rx_64_data_out[2]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[2]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[30]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[30]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[30]_i_3_n_0 ;
  wire \mcp1_rx_64_data_out[30]_i_4_n_0 ;
  wire \mcp1_rx_64_data_out[30]_i_5_n_0 ;
  wire \mcp1_rx_64_data_out[31]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[31]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[31]_i_3_n_0 ;
  wire \mcp1_rx_64_data_out[31]_i_4_n_0 ;
  wire \mcp1_rx_64_data_out[31]_i_5_n_0 ;
  wire \mcp1_rx_64_data_out[32]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[32]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[32]_i_3_n_0 ;
  wire \mcp1_rx_64_data_out[33]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[33]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[33]_i_3_n_0 ;
  wire \mcp1_rx_64_data_out[33]_i_4_n_0 ;
  wire \mcp1_rx_64_data_out[33]_i_5_n_0 ;
  wire \mcp1_rx_64_data_out[33]_i_6_n_0 ;
  wire \mcp1_rx_64_data_out[33]_i_7_n_0 ;
  wire \mcp1_rx_64_data_out[34]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[34]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[34]_i_3_n_0 ;
  wire \mcp1_rx_64_data_out[34]_i_4_n_0 ;
  wire \mcp1_rx_64_data_out[35]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[35]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[35]_i_3_n_0 ;
  wire \mcp1_rx_64_data_out[36]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[36]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[36]_i_3_n_0 ;
  wire \mcp1_rx_64_data_out[37]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[37]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[37]_i_3_n_0 ;
  wire \mcp1_rx_64_data_out[37]_i_4_n_0 ;
  wire \mcp1_rx_64_data_out[37]_i_5_n_0 ;
  wire \mcp1_rx_64_data_out[38]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[38]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[38]_i_3_n_0 ;
  wire \mcp1_rx_64_data_out[38]_i_4_n_0 ;
  wire \mcp1_rx_64_data_out[38]_i_5_n_0 ;
  wire \mcp1_rx_64_data_out[39]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[39]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[39]_i_3_n_0 ;
  wire \mcp1_rx_64_data_out[39]_i_4_n_0 ;
  wire \mcp1_rx_64_data_out[39]_i_5_n_0 ;
  wire \mcp1_rx_64_data_out[39]_i_6_n_0 ;
  wire \mcp1_rx_64_data_out[3]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[3]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[40]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[40]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[40]_i_3_n_0 ;
  wire \mcp1_rx_64_data_out[40]_i_4_n_0 ;
  wire \mcp1_rx_64_data_out[41]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[41]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[41]_i_3_n_0 ;
  wire \mcp1_rx_64_data_out[41]_i_4_n_0 ;
  wire \mcp1_rx_64_data_out[42]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[42]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[42]_i_3_n_0 ;
  wire \mcp1_rx_64_data_out[42]_i_4_n_0 ;
  wire \mcp1_rx_64_data_out[43]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[43]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[43]_i_3_n_0 ;
  wire \mcp1_rx_64_data_out[44]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[44]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[44]_i_3_n_0 ;
  wire \mcp1_rx_64_data_out[44]_i_4_n_0 ;
  wire \mcp1_rx_64_data_out[45]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[45]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[45]_i_3_n_0 ;
  wire \mcp1_rx_64_data_out[45]_i_4_n_0 ;
  wire \mcp1_rx_64_data_out[46]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[46]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[46]_i_3_n_0 ;
  wire \mcp1_rx_64_data_out[46]_i_4_n_0 ;
  wire \mcp1_rx_64_data_out[47]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[47]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[47]_i_3_n_0 ;
  wire \mcp1_rx_64_data_out[47]_i_4_n_0 ;
  wire \mcp1_rx_64_data_out[48]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[48]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[48]_i_3_n_0 ;
  wire \mcp1_rx_64_data_out[49]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[49]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[49]_i_3_n_0 ;
  wire \mcp1_rx_64_data_out[49]_i_4_n_0 ;
  wire \mcp1_rx_64_data_out[49]_i_5_n_0 ;
  wire \mcp1_rx_64_data_out[4]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[4]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[50]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[50]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[50]_i_3_n_0 ;
  wire \mcp1_rx_64_data_out[50]_i_4_n_0 ;
  wire \mcp1_rx_64_data_out[51]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[51]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[51]_i_3_n_0 ;
  wire \mcp1_rx_64_data_out[51]_i_4_n_0 ;
  wire \mcp1_rx_64_data_out[52]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[52]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[52]_i_3_n_0 ;
  wire \mcp1_rx_64_data_out[52]_i_4_n_0 ;
  wire \mcp1_rx_64_data_out[53]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[53]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[53]_i_3_n_0 ;
  wire \mcp1_rx_64_data_out[53]_i_4_n_0 ;
  wire \mcp1_rx_64_data_out[54]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[54]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[54]_i_3_n_0 ;
  wire \mcp1_rx_64_data_out[54]_i_4_n_0 ;
  wire \mcp1_rx_64_data_out[55]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[55]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[55]_i_3_n_0 ;
  wire \mcp1_rx_64_data_out[55]_i_4_n_0 ;
  wire \mcp1_rx_64_data_out[56]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[56]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[56]_i_3_n_0 ;
  wire \mcp1_rx_64_data_out[56]_i_4_n_0 ;
  wire \mcp1_rx_64_data_out[56]_i_5_n_0 ;
  wire \mcp1_rx_64_data_out[56]_i_6_n_0 ;
  wire \mcp1_rx_64_data_out[57]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[57]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[58]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[58]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[59]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[59]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[5]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[5]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[5]_i_3_n_0 ;
  wire \mcp1_rx_64_data_out[5]_i_4_n_0 ;
  wire \mcp1_rx_64_data_out[5]_i_5_n_0 ;
  wire \mcp1_rx_64_data_out[5]_i_6_n_0 ;
  wire \mcp1_rx_64_data_out[60]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[60]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[61]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[61]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[62]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[62]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[63]_i_10_n_0 ;
  wire \mcp1_rx_64_data_out[63]_i_11_n_0 ;
  wire \mcp1_rx_64_data_out[63]_i_12_n_0 ;
  wire \mcp1_rx_64_data_out[63]_i_13_n_0 ;
  wire \mcp1_rx_64_data_out[63]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[63]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[63]_i_3_n_0 ;
  wire \mcp1_rx_64_data_out[63]_i_4_n_0 ;
  wire \mcp1_rx_64_data_out[63]_i_5_n_0 ;
  wire \mcp1_rx_64_data_out[63]_i_6_n_0 ;
  wire \mcp1_rx_64_data_out[63]_i_7_n_0 ;
  wire \mcp1_rx_64_data_out[63]_i_8_n_0 ;
  wire \mcp1_rx_64_data_out[63]_i_9_n_0 ;
  wire \mcp1_rx_64_data_out[6]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[6]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[6]_i_3_n_0 ;
  wire \mcp1_rx_64_data_out[6]_i_4_n_0 ;
  wire \mcp1_rx_64_data_out[6]_i_5_n_0 ;
  wire \mcp1_rx_64_data_out[6]_i_6_n_0 ;
  wire \mcp1_rx_64_data_out[7]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[7]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[7]_i_3_n_0 ;
  wire \mcp1_rx_64_data_out[7]_i_4_n_0 ;
  wire \mcp1_rx_64_data_out[7]_i_5_n_0 ;
  wire \mcp1_rx_64_data_out[8]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[8]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[8]_i_3_n_0 ;
  wire \mcp1_rx_64_data_out[9]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[9]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[9]_i_3_n_0 ;
  wire [0:0]\mcp1_rx_64_data_out_reg[28]_0 ;
  wire \mcp1_rx_66_enc_reg_reg_n_0_[0] ;
  wire \mcp1_rx_66_enc_reg_reg_n_0_[1] ;
  wire \mcp1_rx_ebuff_ctrl[7]_i_3_n_0 ;
  wire \mcp1_rx_ebuff_ctrl_reg[7] ;
  wire [0:0]mcp1_state__0;
  wire [0:0]next_state__0;
  wire out;
  wire [2:0]r_type_next;
  wire \rx_66_enc_reg_reg[11] ;
  wire \rx_66_enc_reg_reg[17] ;
  wire \rx_66_enc_reg_reg[29] ;
  wire \rx_66_enc_reg_reg[31] ;
  wire \rx_66_enc_reg_reg[39] ;
  wire \rx_66_enc_reg_reg[47] ;
  wire \rx_66_enc_reg_reg[53] ;
  wire \rx_66_enc_reg_reg[61] ;
  wire rxusrclk2;

  (* SOFT_HLUTNM = "soft_lutpair184" *) 
  LUT5 #(
    .INIT(32'hFFFFE0FF)) 
    \FSM_sequential_mcp1_state[0]_i_3__0 
       (.I0(r_type_next[0]),
        .I1(r_type_next[2]),
        .I2(\mcp1_r_type_reg_reg[2]_0 [1]),
        .I3(\mcp1_r_type_reg_reg[2]_0 [0]),
        .I4(\mcp1_r_type_reg_reg[2]_0 [2]),
        .O(\mcp1_r_type_next_reg_reg[0]_0 ));
  LUT6 #(
    .INIT(64'h44444444444F4444)) 
    \FSM_sequential_mcp1_state[1]_i_2__2 
       (.I0(\mcp1_rx_ebuff_ctrl_reg[7] ),
        .I1(\FSM_sequential_mcp1_state[1]_i_4__1_n_0 ),
        .I2(\mcp1_r_type_reg_reg[2]_0 [2]),
        .I3(\mcp1_r_type_reg_reg[2]_0 [0]),
        .I4(\mcp1_r_type_reg_reg[2]_0 [1]),
        .I5(mcp1_state__0),
        .O(next_state__0));
  LUT5 #(
    .INIT(32'h00000040)) 
    \FSM_sequential_mcp1_state[1]_i_4__1 
       (.I0(\mcp1_r_type_reg_reg[2]_0 [2]),
        .I1(\mcp1_r_type_reg_reg[2]_0 [0]),
        .I2(\mcp1_r_type_reg_reg[2]_0 [1]),
        .I3(r_type_next[2]),
        .I4(r_type_next[0]),
        .O(\FSM_sequential_mcp1_state[1]_i_4__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair184" *) 
  LUT3 #(
    .INIT(8'h01)) 
    \b_lock_count[0]_i_3 
       (.I0(\mcp1_r_type_reg_reg[2]_0 [0]),
        .I1(\mcp1_r_type_reg_reg[2]_0 [2]),
        .I2(\mcp1_r_type_reg_reg[2]_0 [1]),
        .O(\mcp1_r_type_reg_reg[0]_0 ));
  FDRE \mcp1_block_field_reg_reg[0] 
       (.C(rxusrclk2),
        .CE(\mcp1_dec_c4_reg[7]_0 [0]),
        .D(Q[2]),
        .Q(mcp1_block_field_reg[0]),
        .R(out));
  FDRE \mcp1_block_field_reg_reg[1] 
       (.C(rxusrclk2),
        .CE(\mcp1_dec_c4_reg[7]_0 [0]),
        .D(Q[3]),
        .Q(mcp1_block_field_reg[1]),
        .R(out));
  FDRE \mcp1_block_field_reg_reg[2] 
       (.C(rxusrclk2),
        .CE(\mcp1_dec_c4_reg[7]_0 [0]),
        .D(Q[4]),
        .Q(mcp1_block_field_reg[2]),
        .R(out));
  FDRE \mcp1_block_field_reg_reg[3] 
       (.C(rxusrclk2),
        .CE(\mcp1_dec_c4_reg[7]_0 [0]),
        .D(Q[5]),
        .Q(mcp1_block_field_reg[3]),
        .R(out));
  FDRE \mcp1_block_field_reg_reg[4] 
       (.C(rxusrclk2),
        .CE(\mcp1_dec_c4_reg[7]_0 [0]),
        .D(Q[6]),
        .Q(mcp1_block_field_reg[4]),
        .R(out));
  FDRE \mcp1_block_field_reg_reg[5] 
       (.C(rxusrclk2),
        .CE(\mcp1_dec_c4_reg[7]_0 [0]),
        .D(Q[7]),
        .Q(mcp1_block_field_reg[5]),
        .R(out));
  FDRE \mcp1_block_field_reg_reg[6] 
       (.C(rxusrclk2),
        .CE(\mcp1_dec_c4_reg[7]_0 [0]),
        .D(Q[8]),
        .Q(mcp1_block_field_reg[6]),
        .R(out));
  FDRE \mcp1_block_field_reg_reg[7] 
       (.C(rxusrclk2),
        .CE(\mcp1_dec_c4_reg[7]_0 [0]),
        .D(Q[9]),
        .Q(mcp1_block_field_reg[7]),
        .R(out));
  LUT6 #(
    .INIT(64'h0000000080000010)) 
    \mcp1_dec_c0[0]_i_1 
       (.I0(Q[13]),
        .I1(Q[14]),
        .I2(\mcp1_dec_c0[0]_i_2_n_0 ),
        .I3(Q[16]),
        .I4(Q[15]),
        .I5(Q[10]),
        .O(DecodeWord[0]));
  LUT2 #(
    .INIT(4'h1)) 
    \mcp1_dec_c0[0]_i_2 
       (.I0(Q[12]),
        .I1(Q[11]),
        .O(\mcp1_dec_c0[0]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h55555555755555D7)) 
    \mcp1_dec_c0[1]_i_1 
       (.I0(\rx_66_enc_reg_reg[11] ),
        .I1(Q[15]),
        .I2(Q[13]),
        .I3(Q[11]),
        .I4(Q[12]),
        .I5(\mcp1_dec_c0[4]_i_2_n_0 ),
        .O(\mcp1_dec_c0[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0305503050300305)) 
    \mcp1_dec_c0[2]_i_1 
       (.I0(\mcp1_dec_c0[4]_i_2_n_0 ),
        .I1(\mcp1_dec_c0[5]_i_2_n_0 ),
        .I2(Q[11]),
        .I3(Q[12]),
        .I4(Q[15]),
        .I5(Q[13]),
        .O(\rx_66_enc_reg_reg[11] ));
  LUT6 #(
    .INIT(64'hABAAAAEAAAAAAAAA)) 
    \mcp1_dec_c0[3]_i_1 
       (.I0(\mcp1_dec_c0[3]_i_2_n_0 ),
        .I1(Q[16]),
        .I2(Q[15]),
        .I3(Q[13]),
        .I4(Q[14]),
        .I5(\mcp1_dec_c0[3]_i_3_n_0 ),
        .O(DecodeWord[3]));
  LUT5 #(
    .INIT(32'h00000690)) 
    \mcp1_dec_c0[3]_i_2 
       (.I0(Q[13]),
        .I1(Q[15]),
        .I2(Q[12]),
        .I3(Q[11]),
        .I4(\mcp1_dec_c0[5]_i_2_n_0 ),
        .O(\mcp1_dec_c0[3]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'h08)) 
    \mcp1_dec_c0[3]_i_3 
       (.I0(Q[11]),
        .I1(Q[12]),
        .I2(Q[10]),
        .O(\mcp1_dec_c0[3]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h1004041013C4C410)) 
    \mcp1_dec_c0[4]_i_1 
       (.I0(\mcp1_dec_c0[5]_i_2_n_0 ),
        .I1(Q[11]),
        .I2(Q[12]),
        .I3(Q[15]),
        .I4(Q[13]),
        .I5(\mcp1_dec_c0[4]_i_2_n_0 ),
        .O(DecodeWord[4]));
  LUT5 #(
    .INIT(32'hF6FFFFF6)) 
    \mcp1_dec_c0[4]_i_2 
       (.I0(Q[16]),
        .I1(Q[15]),
        .I2(Q[10]),
        .I3(Q[14]),
        .I4(Q[13]),
        .O(\mcp1_dec_c0[4]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h000F114400110F00)) 
    \mcp1_dec_c0[5]_i_1 
       (.I0(\mcp1_dec_c0[5]_i_2_n_0 ),
        .I1(Q[13]),
        .I2(\mcp1_dec_c0[5]_i_3_n_0 ),
        .I3(Q[15]),
        .I4(Q[12]),
        .I5(Q[11]),
        .O(DecodeWord[5]));
  LUT5 #(
    .INIT(32'hF99FFFFF)) 
    \mcp1_dec_c0[5]_i_2 
       (.I0(Q[13]),
        .I1(Q[14]),
        .I2(Q[16]),
        .I3(Q[15]),
        .I4(Q[10]),
        .O(\mcp1_dec_c0[5]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hF6FFFFFF)) 
    \mcp1_dec_c0[5]_i_3 
       (.I0(Q[16]),
        .I1(Q[15]),
        .I2(Q[10]),
        .I3(Q[14]),
        .I4(Q[13]),
        .O(\mcp1_dec_c0[5]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAAAAAAABAAA)) 
    \mcp1_dec_c0[6]_i_2 
       (.I0(\mcp1_dec_c0[7]_i_2_n_0 ),
        .I1(\mcp1_dec_c0[6]_i_3_n_0 ),
        .I2(\mcp1_dec_c0[6]_i_4_n_0 ),
        .I3(Q[11]),
        .I4(Q[14]),
        .I5(Q[12]),
        .O(DecodeWord[6]));
  LUT2 #(
    .INIT(4'h7)) 
    \mcp1_dec_c0[6]_i_3 
       (.I0(Q[10]),
        .I1(Q[16]),
        .O(\mcp1_dec_c0[6]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \mcp1_dec_c0[6]_i_4 
       (.I0(Q[13]),
        .I1(Q[15]),
        .O(\mcp1_dec_c0[6]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFDDDDDDDDDDDDDDD)) 
    \mcp1_dec_c0[7]_i_1 
       (.I0(\rx_66_enc_reg_reg[11] ),
        .I1(\mcp1_dec_c0[7]_i_2_n_0 ),
        .I2(Q[16]),
        .I3(Q[10]),
        .I4(Q[14]),
        .I5(\mcp1_dec_c0[7]_i_3_n_0 ),
        .O(\mcp1_dec_c0[7]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair186" *) 
  LUT5 #(
    .INIT(32'h14000040)) 
    \mcp1_dec_c0[7]_i_2 
       (.I0(\mcp1_dec_c0[4]_i_2_n_0 ),
        .I1(Q[13]),
        .I2(Q[15]),
        .I3(Q[12]),
        .I4(Q[11]),
        .O(\mcp1_dec_c0[7]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair186" *) 
  LUT4 #(
    .INIT(16'h0010)) 
    \mcp1_dec_c0[7]_i_3 
       (.I0(Q[15]),
        .I1(Q[13]),
        .I2(Q[12]),
        .I3(Q[11]),
        .O(\mcp1_dec_c0[7]_i_3_n_0 ));
  FDRE \mcp1_dec_c0_reg[0] 
       (.C(rxusrclk2),
        .CE(\mcp1_dec_c0_reg[7]_0 ),
        .D(DecodeWord[0]),
        .Q(data0[0]),
        .R(\mcp1_dec_c0_reg[6]_0 ));
  FDSE \mcp1_dec_c0_reg[1] 
       (.C(rxusrclk2),
        .CE(\mcp1_dec_c0_reg[7]_0 ),
        .D(\mcp1_dec_c0[1]_i_1_n_0 ),
        .Q(data0[1]),
        .S(1'b0));
  FDSE \mcp1_dec_c0_reg[2] 
       (.C(rxusrclk2),
        .CE(\mcp1_dec_c0_reg[7]_0 ),
        .D(\rx_66_enc_reg_reg[11] ),
        .Q(data0[2]),
        .S(\mcp1_dec_c0_reg[6]_0 ));
  FDSE \mcp1_dec_c0_reg[3] 
       (.C(rxusrclk2),
        .CE(\mcp1_dec_c0_reg[7]_0 ),
        .D(DecodeWord[3]),
        .Q(data0[3]),
        .S(\mcp1_dec_c0_reg[6]_0 ));
  FDSE \mcp1_dec_c0_reg[4] 
       (.C(rxusrclk2),
        .CE(\mcp1_dec_c0_reg[7]_0 ),
        .D(DecodeWord[4]),
        .Q(data0[4]),
        .S(\mcp1_dec_c0_reg[6]_0 ));
  FDSE \mcp1_dec_c0_reg[5] 
       (.C(rxusrclk2),
        .CE(\mcp1_dec_c0_reg[7]_0 ),
        .D(DecodeWord[5]),
        .Q(data0[5]),
        .S(\mcp1_dec_c0_reg[6]_0 ));
  FDSE \mcp1_dec_c0_reg[6] 
       (.C(rxusrclk2),
        .CE(\mcp1_dec_c0_reg[7]_0 ),
        .D(DecodeWord[6]),
        .Q(data0[6]),
        .S(\mcp1_dec_c0_reg[6]_0 ));
  FDSE \mcp1_dec_c0_reg[7] 
       (.C(rxusrclk2),
        .CE(\mcp1_dec_c0_reg[7]_0 ),
        .D(\mcp1_dec_c0[7]_i_1_n_0 ),
        .Q(data0[7]),
        .S(1'b0));
  LUT6 #(
    .INIT(64'h0080000000000010)) 
    \mcp1_dec_c1[0]_i_1 
       (.I0(Q[20]),
        .I1(Q[21]),
        .I2(\mcp1_dec_c1[0]_i_2_n_0 ),
        .I3(Q[17]),
        .I4(Q[23]),
        .I5(Q[22]),
        .O(DecodeWord0[0]));
  LUT2 #(
    .INIT(4'h1)) 
    \mcp1_dec_c1[0]_i_2 
       (.I0(Q[19]),
        .I1(Q[18]),
        .O(\mcp1_dec_c1[0]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h5575555555557557)) 
    \mcp1_dec_c1[1]_i_1 
       (.I0(\rx_66_enc_reg_reg[17] ),
        .I1(\mcp1_dec_c1[4]_i_3_n_0 ),
        .I2(Q[20]),
        .I3(Q[22]),
        .I4(Q[18]),
        .I5(Q[19]),
        .O(\mcp1_dec_c1[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0100008080000001)) 
    \mcp1_dec_c1[2]_i_1 
       (.I0(\mcp1_dec_c1[2]_i_2_n_0 ),
        .I1(\mcp1_dec_c1[2]_i_3_n_0 ),
        .I2(Q[17]),
        .I3(\mcp1_dec_c1[2]_i_4_n_0 ),
        .I4(Q[18]),
        .I5(Q[19]),
        .O(\rx_66_enc_reg_reg[17] ));
  LUT2 #(
    .INIT(4'h6)) 
    \mcp1_dec_c1[2]_i_2 
       (.I0(Q[20]),
        .I1(Q[21]),
        .O(\mcp1_dec_c1[2]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mcp1_dec_c1[2]_i_3 
       (.I0(Q[23]),
        .I1(Q[22]),
        .O(\mcp1_dec_c1[2]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mcp1_dec_c1[2]_i_4 
       (.I0(Q[20]),
        .I1(Q[22]),
        .O(\mcp1_dec_c1[2]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hABAAAAAAAAAAEAAA)) 
    \mcp1_dec_c1[3]_i_1 
       (.I0(\mcp1_dec_c1[4]_i_2_n_0 ),
        .I1(Q[22]),
        .I2(Q[23]),
        .I3(\mcp1_dec_c1[3]_i_2_n_0 ),
        .I4(Q[21]),
        .I5(Q[20]),
        .O(DecodeWord0[3]));
  LUT3 #(
    .INIT(8'h40)) 
    \mcp1_dec_c1[3]_i_2 
       (.I0(Q[17]),
        .I1(Q[18]),
        .I2(Q[19]),
        .O(\mcp1_dec_c1[3]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAAAABEAEAAA)) 
    \mcp1_dec_c1[4]_i_1 
       (.I0(\mcp1_dec_c1[4]_i_2_n_0 ),
        .I1(Q[18]),
        .I2(Q[19]),
        .I3(Q[22]),
        .I4(Q[20]),
        .I5(\mcp1_dec_c1[4]_i_3_n_0 ),
        .O(DecodeWord0[4]));
  LUT6 #(
    .INIT(64'h0200000200202000)) 
    \mcp1_dec_c1[4]_i_2 
       (.I0(Q[17]),
        .I1(\mcp1_dec_c1[5]_i_4_n_0 ),
        .I2(Q[18]),
        .I3(Q[22]),
        .I4(Q[20]),
        .I5(Q[19]),
        .O(\mcp1_dec_c1[4]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair185" *) 
  LUT5 #(
    .INIT(32'hFFFF6FF6)) 
    \mcp1_dec_c1[4]_i_3 
       (.I0(Q[21]),
        .I1(Q[20]),
        .I2(Q[23]),
        .I3(Q[22]),
        .I4(Q[17]),
        .O(\mcp1_dec_c1[4]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF75575555)) 
    \mcp1_dec_c1[5]_i_1 
       (.I0(\rx_66_enc_reg_reg[17] ),
        .I1(Q[17]),
        .I2(Q[22]),
        .I3(Q[23]),
        .I4(\mcp1_dec_c1[5]_i_2_n_0 ),
        .I5(\mcp1_dec_c1[5]_i_3_n_0 ),
        .O(\mcp1_dec_c1[5]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00088000)) 
    \mcp1_dec_c1[5]_i_2 
       (.I0(Q[21]),
        .I1(Q[20]),
        .I2(Q[18]),
        .I3(Q[19]),
        .I4(Q[22]),
        .O(\mcp1_dec_c1[5]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000004420000)) 
    \mcp1_dec_c1[5]_i_3 
       (.I0(Q[19]),
        .I1(Q[18]),
        .I2(Q[22]),
        .I3(Q[20]),
        .I4(Q[17]),
        .I5(\mcp1_dec_c1[5]_i_4_n_0 ),
        .O(\mcp1_dec_c1[5]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair185" *) 
  LUT4 #(
    .INIT(16'hF99F)) 
    \mcp1_dec_c1[5]_i_4 
       (.I0(Q[21]),
        .I1(Q[20]),
        .I2(Q[22]),
        .I3(Q[23]),
        .O(\mcp1_dec_c1[5]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAAEAAAAAAAAAAAAA)) 
    \mcp1_dec_c1[6]_i_1 
       (.I0(\mcp1_dec_c1[7]_i_3_n_0 ),
        .I1(\mcp1_dec_c1[6]_i_2_n_0 ),
        .I2(\mcp1_dec_c1[6]_i_3_n_0 ),
        .I3(Q[21]),
        .I4(Q[23]),
        .I5(Q[17]),
        .O(DecodeWord0[6]));
  LUT2 #(
    .INIT(4'h2)) 
    \mcp1_dec_c1[6]_i_2 
       (.I0(Q[20]),
        .I1(Q[22]),
        .O(\mcp1_dec_c1[6]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \mcp1_dec_c1[6]_i_3 
       (.I0(Q[18]),
        .I1(Q[19]),
        .O(\mcp1_dec_c1[6]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hAAAABAAAAAAAAAAA)) 
    \mcp1_dec_c1[7]_i_2 
       (.I0(\mcp1_dec_c1[7]_i_3_n_0 ),
        .I1(\mcp1_dec_c1[7]_i_4_n_0 ),
        .I2(Q[21]),
        .I3(\mcp1_dec_c1[7]_i_5_n_0 ),
        .I4(Q[18]),
        .I5(Q[19]),
        .O(DecodeWord0[7]));
  LUT5 #(
    .INIT(32'h14000040)) 
    \mcp1_dec_c1[7]_i_3 
       (.I0(\mcp1_dec_c1[4]_i_3_n_0 ),
        .I1(Q[20]),
        .I2(Q[22]),
        .I3(Q[19]),
        .I4(Q[18]),
        .O(\mcp1_dec_c1[7]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h7)) 
    \mcp1_dec_c1[7]_i_4 
       (.I0(Q[17]),
        .I1(Q[23]),
        .O(\mcp1_dec_c1[7]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \mcp1_dec_c1[7]_i_5 
       (.I0(Q[20]),
        .I1(Q[22]),
        .O(\mcp1_dec_c1[7]_i_5_n_0 ));
  FDRE \mcp1_dec_c1_reg[0] 
       (.C(rxusrclk2),
        .CE(\mcp1_dec_c4_reg[7]_0 [0]),
        .D(DecodeWord0[0]),
        .Q(data0[8]),
        .R(\mcp1_dec_c1_reg[7]_0 ));
  FDSE \mcp1_dec_c1_reg[1] 
       (.C(rxusrclk2),
        .CE(\mcp1_dec_c4_reg[7]_0 [0]),
        .D(\mcp1_dec_c1[1]_i_1_n_0 ),
        .Q(data0[9]),
        .S(1'b0));
  FDSE \mcp1_dec_c1_reg[2] 
       (.C(rxusrclk2),
        .CE(\mcp1_dec_c4_reg[7]_0 [0]),
        .D(\rx_66_enc_reg_reg[17] ),
        .Q(data0[10]),
        .S(\mcp1_dec_c1_reg[7]_0 ));
  FDSE \mcp1_dec_c1_reg[3] 
       (.C(rxusrclk2),
        .CE(\mcp1_dec_c4_reg[7]_0 [0]),
        .D(DecodeWord0[3]),
        .Q(data0[11]),
        .S(\mcp1_dec_c1_reg[7]_0 ));
  FDSE \mcp1_dec_c1_reg[4] 
       (.C(rxusrclk2),
        .CE(\mcp1_dec_c4_reg[7]_0 [0]),
        .D(DecodeWord0[4]),
        .Q(data0[12]),
        .S(\mcp1_dec_c1_reg[7]_0 ));
  FDSE \mcp1_dec_c1_reg[5] 
       (.C(rxusrclk2),
        .CE(\mcp1_dec_c4_reg[7]_0 [0]),
        .D(\mcp1_dec_c1[5]_i_1_n_0 ),
        .Q(data0[13]),
        .S(1'b0));
  FDSE \mcp1_dec_c1_reg[6] 
       (.C(rxusrclk2),
        .CE(\mcp1_dec_c4_reg[7]_0 [0]),
        .D(DecodeWord0[6]),
        .Q(data0[14]),
        .S(\mcp1_dec_c1_reg[7]_0 ));
  FDSE \mcp1_dec_c1_reg[7] 
       (.C(rxusrclk2),
        .CE(\mcp1_dec_c4_reg[7]_0 [0]),
        .D(DecodeWord0[7]),
        .Q(data0[15]),
        .S(\mcp1_dec_c1_reg[7]_0 ));
  LUT6 #(
    .INIT(64'h0000000000004001)) 
    \mcp1_dec_c2[0]_i_1 
       (.I0(\mcp1_dec_c2[1]_i_2_n_0 ),
        .I1(Q[29]),
        .I2(Q[27]),
        .I3(Q[28]),
        .I4(Q[25]),
        .I5(Q[26]),
        .O(DecodeWord1[0]));
  LUT6 #(
    .INIT(64'h0000000002008001)) 
    \mcp1_dec_c2[1]_i_1 
       (.I0(Q[28]),
        .I1(Q[25]),
        .I2(Q[26]),
        .I3(Q[27]),
        .I4(Q[29]),
        .I5(\mcp1_dec_c2[1]_i_2_n_0 ),
        .O(DecodeWord1[1]));
  (* SOFT_HLUTNM = "soft_lutpair188" *) 
  LUT3 #(
    .INIT(8'hBE)) 
    \mcp1_dec_c2[1]_i_2 
       (.I0(Q[24]),
        .I1(Q[29]),
        .I2(Q[30]),
        .O(\mcp1_dec_c2[1]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0550033030035005)) 
    \mcp1_dec_c2[2]_i_1 
       (.I0(\mcp1_dec_c2[2]_i_2_n_0 ),
        .I1(\mcp1_dec_c2[5]_i_2_n_0 ),
        .I2(Q[29]),
        .I3(Q[27]),
        .I4(Q[26]),
        .I5(Q[25]),
        .O(\rx_66_enc_reg_reg[29] ));
  LUT5 #(
    .INIT(32'hFFFF6FF6)) 
    \mcp1_dec_c2[2]_i_2 
       (.I0(Q[28]),
        .I1(Q[27]),
        .I2(Q[30]),
        .I3(Q[29]),
        .I4(Q[24]),
        .O(\mcp1_dec_c2[2]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hABAAAAAAAAAAEAAA)) 
    \mcp1_dec_c2[3]_i_1 
       (.I0(\mcp1_dec_c2[4]_i_2_n_0 ),
        .I1(Q[29]),
        .I2(Q[30]),
        .I3(\mcp1_dec_c2[3]_i_2_n_0 ),
        .I4(Q[28]),
        .I5(Q[27]),
        .O(DecodeWord1[3]));
  LUT3 #(
    .INIT(8'h40)) 
    \mcp1_dec_c2[3]_i_2 
       (.I0(Q[24]),
        .I1(Q[26]),
        .I2(Q[25]),
        .O(\mcp1_dec_c2[3]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hFD)) 
    \mcp1_dec_c2[4]_i_1 
       (.I0(\rx_66_enc_reg_reg[29] ),
        .I1(\mcp1_dec_c2[4]_i_2_n_0 ),
        .I2(\mcp1_dec_c2[7]_i_2_n_0 ),
        .O(\mcp1_dec_c2[4]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair183" *) 
  LUT5 #(
    .INIT(32'h00004224)) 
    \mcp1_dec_c2[4]_i_2 
       (.I0(Q[25]),
        .I1(Q[26]),
        .I2(Q[27]),
        .I3(Q[29]),
        .I4(\mcp1_dec_c2[5]_i_2_n_0 ),
        .O(\mcp1_dec_c2[4]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000110F0F114400)) 
    \mcp1_dec_c2[5]_i_1 
       (.I0(\mcp1_dec_c2[5]_i_2_n_0 ),
        .I1(Q[27]),
        .I2(\mcp1_dec_c2[5]_i_3_n_0 ),
        .I3(Q[25]),
        .I4(Q[26]),
        .I5(Q[29]),
        .O(DecodeWord1[5]));
  LUT5 #(
    .INIT(32'hF99FFFFF)) 
    \mcp1_dec_c2[5]_i_2 
       (.I0(Q[30]),
        .I1(Q[29]),
        .I2(Q[27]),
        .I3(Q[28]),
        .I4(Q[24]),
        .O(\mcp1_dec_c2[5]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair188" *) 
  LUT5 #(
    .INIT(32'hFFFF7FF7)) 
    \mcp1_dec_c2[5]_i_3 
       (.I0(Q[28]),
        .I1(Q[27]),
        .I2(Q[30]),
        .I3(Q[29]),
        .I4(Q[24]),
        .O(\mcp1_dec_c2[5]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAAAAABAAAAA)) 
    \mcp1_dec_c2[6]_i_2 
       (.I0(\mcp1_dec_c2[7]_i_2_n_0 ),
        .I1(\mcp1_dec_c2[6]_i_3_n_0 ),
        .I2(\mcp1_dec_c2[6]_i_4_n_0 ),
        .I3(Q[26]),
        .I4(Q[30]),
        .I5(Q[28]),
        .O(DecodeWord1[6]));
  LUT2 #(
    .INIT(4'h7)) 
    \mcp1_dec_c2[6]_i_3 
       (.I0(Q[25]),
        .I1(Q[24]),
        .O(\mcp1_dec_c2[6]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \mcp1_dec_c2[6]_i_4 
       (.I0(Q[27]),
        .I1(Q[29]),
        .O(\mcp1_dec_c2[6]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFDDDDDDDDDDDDDDD)) 
    \mcp1_dec_c2[7]_i_1 
       (.I0(\rx_66_enc_reg_reg[29] ),
        .I1(\mcp1_dec_c2[7]_i_2_n_0 ),
        .I2(Q[28]),
        .I3(Q[30]),
        .I4(Q[24]),
        .I5(\mcp1_dec_c2[7]_i_3_n_0 ),
        .O(\mcp1_dec_c2[7]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0100004040000000)) 
    \mcp1_dec_c2[7]_i_2 
       (.I0(\mcp1_dec_c2[1]_i_2_n_0 ),
        .I1(Q[28]),
        .I2(Q[27]),
        .I3(Q[25]),
        .I4(Q[26]),
        .I5(Q[29]),
        .O(\mcp1_dec_c2[7]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair183" *) 
  LUT4 #(
    .INIT(16'h0004)) 
    \mcp1_dec_c2[7]_i_3 
       (.I0(Q[25]),
        .I1(Q[26]),
        .I2(Q[27]),
        .I3(Q[29]),
        .O(\mcp1_dec_c2[7]_i_3_n_0 ));
  FDRE \mcp1_dec_c2_reg[0] 
       (.C(rxusrclk2),
        .CE(\mcp1_dec_c0_reg[7]_0 ),
        .D(DecodeWord1[0]),
        .Q(data0[16]),
        .R(\mcp1_dec_c2_reg[6]_0 ));
  FDSE \mcp1_dec_c2_reg[1] 
       (.C(rxusrclk2),
        .CE(\mcp1_dec_c0_reg[7]_0 ),
        .D(DecodeWord1[1]),
        .Q(data0[17]),
        .S(\mcp1_dec_c2_reg[6]_0 ));
  FDSE \mcp1_dec_c2_reg[2] 
       (.C(rxusrclk2),
        .CE(\mcp1_dec_c0_reg[7]_0 ),
        .D(\rx_66_enc_reg_reg[29] ),
        .Q(data0[18]),
        .S(\mcp1_dec_c2_reg[6]_0 ));
  FDSE \mcp1_dec_c2_reg[3] 
       (.C(rxusrclk2),
        .CE(\mcp1_dec_c0_reg[7]_0 ),
        .D(DecodeWord1[3]),
        .Q(data0[19]),
        .S(\mcp1_dec_c2_reg[6]_0 ));
  FDSE \mcp1_dec_c2_reg[4] 
       (.C(rxusrclk2),
        .CE(\mcp1_dec_c0_reg[7]_0 ),
        .D(\mcp1_dec_c2[4]_i_1_n_0 ),
        .Q(data0[20]),
        .S(1'b0));
  FDSE \mcp1_dec_c2_reg[5] 
       (.C(rxusrclk2),
        .CE(\mcp1_dec_c0_reg[7]_0 ),
        .D(DecodeWord1[5]),
        .Q(data0[21]),
        .S(\mcp1_dec_c2_reg[6]_0 ));
  FDSE \mcp1_dec_c2_reg[6] 
       (.C(rxusrclk2),
        .CE(\mcp1_dec_c0_reg[7]_0 ),
        .D(DecodeWord1[6]),
        .Q(data0[22]),
        .S(\mcp1_dec_c2_reg[6]_0 ));
  FDSE \mcp1_dec_c2_reg[7] 
       (.C(rxusrclk2),
        .CE(\mcp1_dec_c0_reg[7]_0 ),
        .D(\mcp1_dec_c2[7]_i_1_n_0 ),
        .Q(data0[23]),
        .S(1'b0));
  LUT6 #(
    .INIT(64'h0008000000000001)) 
    \mcp1_dec_c3[0]_i_1 
       (.I0(Q[35]),
        .I1(Q[34]),
        .I2(\mcp1_dec_c3[0]_i_2_n_0 ),
        .I3(Q[31]),
        .I4(Q[36]),
        .I5(Q[37]),
        .O(DecodeWord2[0]));
  LUT2 #(
    .INIT(4'hE)) 
    \mcp1_dec_c3[0]_i_2 
       (.I0(Q[33]),
        .I1(Q[32]),
        .O(\mcp1_dec_c3[0]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0002200000000001)) 
    \mcp1_dec_c3[1]_i_1 
       (.I0(Q[35]),
        .I1(\mcp1_dec_c3[5]_i_5_n_0 ),
        .I2(Q[32]),
        .I3(Q[33]),
        .I4(Q[36]),
        .I5(Q[34]),
        .O(DecodeWord2[1]));
  LUT6 #(
    .INIT(64'h0180000000008001)) 
    \mcp1_dec_c3[2]_i_1 
       (.I0(\mcp1_dec_c3[2]_i_2_n_0 ),
        .I1(\mcp1_dec_c3[2]_i_3_n_0 ),
        .I2(Q[31]),
        .I3(Q[33]),
        .I4(Q[32]),
        .I5(\mcp1_dec_c3[2]_i_4_n_0 ),
        .O(\rx_66_enc_reg_reg[31] ));
  LUT2 #(
    .INIT(4'h6)) 
    \mcp1_dec_c3[2]_i_2 
       (.I0(Q[37]),
        .I1(Q[36]),
        .O(\mcp1_dec_c3[2]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mcp1_dec_c3[2]_i_3 
       (.I0(Q[34]),
        .I1(Q[35]),
        .O(\mcp1_dec_c3[2]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mcp1_dec_c3[2]_i_4 
       (.I0(Q[34]),
        .I1(Q[36]),
        .O(\mcp1_dec_c3[2]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hABAAAAAAAAAAEAAA)) 
    \mcp1_dec_c3[3]_i_1 
       (.I0(\mcp1_dec_c3[4]_i_2_n_0 ),
        .I1(Q[36]),
        .I2(Q[37]),
        .I3(\mcp1_dec_c3[3]_i_2_n_0 ),
        .I4(Q[34]),
        .I5(Q[35]),
        .O(DecodeWord2[3]));
  LUT3 #(
    .INIT(8'h08)) 
    \mcp1_dec_c3[3]_i_2 
       (.I0(Q[32]),
        .I1(Q[33]),
        .I2(Q[31]),
        .O(\mcp1_dec_c3[3]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hFD)) 
    \mcp1_dec_c3[4]_i_1 
       (.I0(\rx_66_enc_reg_reg[31] ),
        .I1(\mcp1_dec_c3[4]_i_2_n_0 ),
        .I2(\mcp1_dec_c3[7]_i_2_n_0 ),
        .O(\mcp1_dec_c3[4]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000009600000)) 
    \mcp1_dec_c3[4]_i_2 
       (.I0(Q[36]),
        .I1(Q[34]),
        .I2(Q[32]),
        .I3(Q[33]),
        .I4(Q[31]),
        .I5(\mcp1_dec_c3[5]_i_6_n_0 ),
        .O(\mcp1_dec_c3[4]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAAAAAAABAAE)) 
    \mcp1_dec_c3[5]_i_2 
       (.I0(\mcp1_dec_c3[5]_i_3_n_0 ),
        .I1(Q[36]),
        .I2(Q[32]),
        .I3(Q[33]),
        .I4(\mcp1_dec_c3[5]_i_4_n_0 ),
        .I5(\mcp1_dec_c3[5]_i_5_n_0 ),
        .O(DecodeWord2[5]));
  LUT6 #(
    .INIT(64'h0000000004420000)) 
    \mcp1_dec_c3[5]_i_3 
       (.I0(Q[33]),
        .I1(Q[32]),
        .I2(Q[36]),
        .I3(Q[34]),
        .I4(Q[31]),
        .I5(\mcp1_dec_c3[5]_i_6_n_0 ),
        .O(\mcp1_dec_c3[5]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h7)) 
    \mcp1_dec_c3[5]_i_4 
       (.I0(Q[34]),
        .I1(Q[35]),
        .O(\mcp1_dec_c3[5]_i_4_n_0 ));
  LUT3 #(
    .INIT(8'hBE)) 
    \mcp1_dec_c3[5]_i_5 
       (.I0(Q[31]),
        .I1(Q[36]),
        .I2(Q[37]),
        .O(\mcp1_dec_c3[5]_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair206" *) 
  LUT4 #(
    .INIT(16'hF99F)) 
    \mcp1_dec_c3[5]_i_6 
       (.I0(Q[35]),
        .I1(Q[34]),
        .I2(Q[36]),
        .I3(Q[37]),
        .O(\mcp1_dec_c3[5]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hDDDFDDDDDDDDDDDD)) 
    \mcp1_dec_c3[6]_i_1 
       (.I0(\rx_66_enc_reg_reg[31] ),
        .I1(\mcp1_dec_c3[7]_i_2_n_0 ),
        .I2(\mcp1_dec_c3[6]_i_2_n_0 ),
        .I3(Q[35]),
        .I4(Q[37]),
        .I5(Q[31]),
        .O(\mcp1_dec_c3[6]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair205" *) 
  LUT4 #(
    .INIT(16'hFBFF)) 
    \mcp1_dec_c3[6]_i_2 
       (.I0(Q[36]),
        .I1(Q[34]),
        .I2(Q[33]),
        .I3(Q[32]),
        .O(\mcp1_dec_c3[6]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFDDDDDDDDDDDDDDD)) 
    \mcp1_dec_c3[7]_i_1 
       (.I0(\rx_66_enc_reg_reg[31] ),
        .I1(\mcp1_dec_c3[7]_i_2_n_0 ),
        .I2(Q[37]),
        .I3(Q[31]),
        .I4(Q[35]),
        .I5(\mcp1_dec_c3[7]_i_3_n_0 ),
        .O(\mcp1_dec_c3[7]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000018000080)) 
    \mcp1_dec_c3[7]_i_2 
       (.I0(Q[35]),
        .I1(Q[34]),
        .I2(Q[36]),
        .I3(Q[32]),
        .I4(Q[33]),
        .I5(\mcp1_dec_c3[5]_i_5_n_0 ),
        .O(\mcp1_dec_c3[7]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair205" *) 
  LUT4 #(
    .INIT(16'h0100)) 
    \mcp1_dec_c3[7]_i_3 
       (.I0(Q[36]),
        .I1(Q[34]),
        .I2(Q[32]),
        .I3(Q[33]),
        .O(\mcp1_dec_c3[7]_i_3_n_0 ));
  FDRE \mcp1_dec_c3_reg[0] 
       (.C(rxusrclk2),
        .CE(\mcp1_dec_c4_reg[7]_0 [0]),
        .D(DecodeWord2[0]),
        .Q(data0[24]),
        .R(\mcp1_dec_c3_reg[5]_0 ));
  FDSE \mcp1_dec_c3_reg[1] 
       (.C(rxusrclk2),
        .CE(\mcp1_dec_c4_reg[7]_0 [0]),
        .D(DecodeWord2[1]),
        .Q(data0[25]),
        .S(\mcp1_dec_c3_reg[5]_0 ));
  FDSE \mcp1_dec_c3_reg[2] 
       (.C(rxusrclk2),
        .CE(\mcp1_dec_c4_reg[7]_0 [0]),
        .D(\rx_66_enc_reg_reg[31] ),
        .Q(data0[26]),
        .S(\mcp1_dec_c3_reg[5]_0 ));
  FDSE \mcp1_dec_c3_reg[3] 
       (.C(rxusrclk2),
        .CE(\mcp1_dec_c4_reg[7]_0 [0]),
        .D(DecodeWord2[3]),
        .Q(data0[27]),
        .S(\mcp1_dec_c3_reg[5]_0 ));
  FDSE \mcp1_dec_c3_reg[4] 
       (.C(rxusrclk2),
        .CE(\mcp1_dec_c4_reg[7]_0 [0]),
        .D(\mcp1_dec_c3[4]_i_1_n_0 ),
        .Q(data0[28]),
        .S(1'b0));
  FDSE \mcp1_dec_c3_reg[5] 
       (.C(rxusrclk2),
        .CE(\mcp1_dec_c4_reg[7]_0 [0]),
        .D(DecodeWord2[5]),
        .Q(data0[29]),
        .S(\mcp1_dec_c3_reg[5]_0 ));
  FDSE \mcp1_dec_c3_reg[6] 
       (.C(rxusrclk2),
        .CE(\mcp1_dec_c4_reg[7]_0 [0]),
        .D(\mcp1_dec_c3[6]_i_1_n_0 ),
        .Q(data0[30]),
        .S(1'b0));
  FDSE \mcp1_dec_c3_reg[7] 
       (.C(rxusrclk2),
        .CE(\mcp1_dec_c4_reg[7]_0 [0]),
        .D(\mcp1_dec_c3[7]_i_1_n_0 ),
        .Q(data0[31]),
        .S(1'b0));
  LUT6 #(
    .INIT(64'h0008000000000001)) 
    \mcp1_dec_c4[0]_i_1 
       (.I0(Q[41]),
        .I1(Q[42]),
        .I2(Q[38]),
        .I3(\mcp1_dec_c4[0]_i_2_n_0 ),
        .I4(Q[44]),
        .I5(Q[43]),
        .O(DecodeWord3[0]));
  LUT2 #(
    .INIT(4'hE)) 
    \mcp1_dec_c4[0]_i_2 
       (.I0(Q[40]),
        .I1(Q[39]),
        .O(\mcp1_dec_c4[0]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h5D5555555555D55D)) 
    \mcp1_dec_c4[1]_i_1 
       (.I0(\rx_66_enc_reg_reg[39] ),
        .I1(\mcp1_dec_c4[6]_i_2_n_0 ),
        .I2(Q[43]),
        .I3(Q[41]),
        .I4(Q[39]),
        .I5(Q[40]),
        .O(\mcp1_dec_c4[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF18810000)) 
    \mcp1_dec_c4[2]_i_1 
       (.I0(Q[39]),
        .I1(Q[40]),
        .I2(Q[43]),
        .I3(Q[41]),
        .I4(\mcp1_dec_c4[6]_i_2_n_0 ),
        .I5(\mcp1_dec_c4[4]_i_2_n_0 ),
        .O(\rx_66_enc_reg_reg[39] ));
  LUT6 #(
    .INIT(64'hABAAAAAAAAAAEAAA)) 
    \mcp1_dec_c4[3]_i_1 
       (.I0(\mcp1_dec_c4[4]_i_2_n_0 ),
        .I1(Q[43]),
        .I2(Q[44]),
        .I3(\mcp1_dec_c4[3]_i_2_n_0 ),
        .I4(Q[41]),
        .I5(Q[42]),
        .O(DecodeWord3[3]));
  (* SOFT_HLUTNM = "soft_lutpair187" *) 
  LUT3 #(
    .INIT(8'h40)) 
    \mcp1_dec_c4[3]_i_2 
       (.I0(Q[38]),
        .I1(Q[39]),
        .I2(Q[40]),
        .O(\mcp1_dec_c4[3]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hABEAEAAAAAAAAAAA)) 
    \mcp1_dec_c4[4]_i_1 
       (.I0(\mcp1_dec_c4[4]_i_2_n_0 ),
        .I1(Q[39]),
        .I2(Q[40]),
        .I3(Q[43]),
        .I4(Q[41]),
        .I5(\mcp1_dec_c4[6]_i_2_n_0 ),
        .O(DecodeWord3[4]));
  LUT6 #(
    .INIT(64'h0200000800080200)) 
    \mcp1_dec_c4[4]_i_2 
       (.I0(Q[38]),
        .I1(Q[39]),
        .I2(\mcp1_dec_c4[5]_i_4_n_0 ),
        .I3(Q[40]),
        .I4(Q[43]),
        .I5(Q[41]),
        .O(\mcp1_dec_c4[4]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF57555557)) 
    \mcp1_dec_c4[5]_i_1 
       (.I0(\rx_66_enc_reg_reg[39] ),
        .I1(\mcp1_dec_c4[5]_i_2_n_0 ),
        .I2(Q[38]),
        .I3(Q[43]),
        .I4(Q[44]),
        .I5(\mcp1_dec_c4[5]_i_3_n_0 ),
        .O(\mcp1_dec_c4[5]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFF77FFF)) 
    \mcp1_dec_c4[5]_i_2 
       (.I0(Q[42]),
        .I1(Q[41]),
        .I2(Q[39]),
        .I3(Q[40]),
        .I4(Q[43]),
        .O(\mcp1_dec_c4[5]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000004420000)) 
    \mcp1_dec_c4[5]_i_3 
       (.I0(Q[40]),
        .I1(Q[39]),
        .I2(Q[43]),
        .I3(Q[41]),
        .I4(Q[38]),
        .I5(\mcp1_dec_c4[5]_i_4_n_0 ),
        .O(\mcp1_dec_c4[5]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'hF99F)) 
    \mcp1_dec_c4[5]_i_4 
       (.I0(Q[43]),
        .I1(Q[44]),
        .I2(Q[42]),
        .I3(Q[41]),
        .O(\mcp1_dec_c4[5]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h2830008028000080)) 
    \mcp1_dec_c4[6]_i_1 
       (.I0(\mcp1_dec_c4[6]_i_2_n_0 ),
        .I1(Q[43]),
        .I2(Q[41]),
        .I3(Q[40]),
        .I4(Q[39]),
        .I5(\mcp1_dec_c4[6]_i_3_n_0 ),
        .O(DecodeWord3[6]));
  LUT5 #(
    .INIT(32'h09000009)) 
    \mcp1_dec_c4[6]_i_2 
       (.I0(Q[44]),
        .I1(Q[43]),
        .I2(Q[38]),
        .I3(Q[42]),
        .I4(Q[41]),
        .O(\mcp1_dec_c4[6]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'h40)) 
    \mcp1_dec_c4[6]_i_3 
       (.I0(Q[42]),
        .I1(Q[44]),
        .I2(Q[38]),
        .O(\mcp1_dec_c4[6]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hAAAABAAAAAAAAAAA)) 
    \mcp1_dec_c4[7]_i_2 
       (.I0(\mcp1_dec_c4[7]_i_3_n_0 ),
        .I1(\mcp1_dec_c4[7]_i_4_n_0 ),
        .I2(Q[42]),
        .I3(\mcp1_dec_c4[7]_i_5_n_0 ),
        .I4(Q[39]),
        .I5(Q[40]),
        .O(DecodeWord3[7]));
  LUT5 #(
    .INIT(32'h28000080)) 
    \mcp1_dec_c4[7]_i_3 
       (.I0(\mcp1_dec_c4[6]_i_2_n_0 ),
        .I1(Q[41]),
        .I2(Q[43]),
        .I3(Q[40]),
        .I4(Q[39]),
        .O(\mcp1_dec_c4[7]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h7)) 
    \mcp1_dec_c4[7]_i_4 
       (.I0(Q[38]),
        .I1(Q[44]),
        .O(\mcp1_dec_c4[7]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \mcp1_dec_c4[7]_i_5 
       (.I0(Q[41]),
        .I1(Q[43]),
        .O(\mcp1_dec_c4[7]_i_5_n_0 ));
  FDRE \mcp1_dec_c4_reg[0] 
       (.C(rxusrclk2),
        .CE(\mcp1_dec_c4_reg[7]_0 [1]),
        .D(DecodeWord3[0]),
        .Q(data0[32]),
        .R(\mcp1_dec_c4_reg[7]_1 ));
  FDSE \mcp1_dec_c4_reg[1] 
       (.C(rxusrclk2),
        .CE(\mcp1_dec_c4_reg[7]_0 [1]),
        .D(\mcp1_dec_c4[1]_i_1_n_0 ),
        .Q(data0[33]),
        .S(1'b0));
  FDSE \mcp1_dec_c4_reg[2] 
       (.C(rxusrclk2),
        .CE(\mcp1_dec_c4_reg[7]_0 [1]),
        .D(\rx_66_enc_reg_reg[39] ),
        .Q(data0[34]),
        .S(\mcp1_dec_c4_reg[7]_1 ));
  FDSE \mcp1_dec_c4_reg[3] 
       (.C(rxusrclk2),
        .CE(\mcp1_dec_c4_reg[7]_0 [1]),
        .D(DecodeWord3[3]),
        .Q(data0[35]),
        .S(\mcp1_dec_c4_reg[7]_1 ));
  FDSE \mcp1_dec_c4_reg[4] 
       (.C(rxusrclk2),
        .CE(\mcp1_dec_c4_reg[7]_0 [1]),
        .D(DecodeWord3[4]),
        .Q(data0[36]),
        .S(\mcp1_dec_c4_reg[7]_1 ));
  FDSE \mcp1_dec_c4_reg[5] 
       (.C(rxusrclk2),
        .CE(\mcp1_dec_c4_reg[7]_0 [1]),
        .D(\mcp1_dec_c4[5]_i_1_n_0 ),
        .Q(data0[37]),
        .S(1'b0));
  FDSE \mcp1_dec_c4_reg[6] 
       (.C(rxusrclk2),
        .CE(\mcp1_dec_c4_reg[7]_0 [1]),
        .D(DecodeWord3[6]),
        .Q(data0[38]),
        .S(\mcp1_dec_c4_reg[7]_1 ));
  FDSE \mcp1_dec_c4_reg[7] 
       (.C(rxusrclk2),
        .CE(\mcp1_dec_c4_reg[7]_0 [1]),
        .D(DecodeWord3[7]),
        .Q(data0[39]),
        .S(\mcp1_dec_c4_reg[7]_1 ));
  LUT6 #(
    .INIT(64'h0000000020000001)) 
    \mcp1_dec_c5[0]_i_1 
       (.I0(Q[51]),
        .I1(Q[45]),
        .I2(Q[50]),
        .I3(Q[48]),
        .I4(Q[49]),
        .I5(\mcp1_dec_c5[0]_i_2_n_0 ),
        .O(\mcp1_dec_c5[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \mcp1_dec_c5[0]_i_2 
       (.I0(Q[46]),
        .I1(Q[47]),
        .O(\mcp1_dec_c5[0]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h55555555755555D7)) 
    \mcp1_dec_c5[1]_i_1 
       (.I0(\rx_66_enc_reg_reg[47] ),
        .I1(Q[50]),
        .I2(Q[48]),
        .I3(Q[46]),
        .I4(Q[47]),
        .I5(\mcp1_dec_c5[4]_i_2_n_0 ),
        .O(\mcp1_dec_c5[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h011040040DD07007)) 
    \mcp1_dec_c5[2]_i_1 
       (.I0(\mcp1_dec_c5[5]_i_3_n_0 ),
        .I1(Q[47]),
        .I2(Q[48]),
        .I3(Q[50]),
        .I4(Q[46]),
        .I5(\mcp1_dec_c5[4]_i_2_n_0 ),
        .O(\rx_66_enc_reg_reg[47] ));
  LUT6 #(
    .INIT(64'hABAAAAAAAAAAEAAA)) 
    \mcp1_dec_c5[3]_i_1 
       (.I0(\mcp1_dec_c5[3]_i_2_n_0 ),
        .I1(Q[50]),
        .I2(Q[51]),
        .I3(\mcp1_dec_c5[3]_i_3_n_0 ),
        .I4(Q[49]),
        .I5(Q[48]),
        .O(DecodeWord4[3]));
  LUT5 #(
    .INIT(32'h00001482)) 
    \mcp1_dec_c5[3]_i_2 
       (.I0(Q[47]),
        .I1(Q[50]),
        .I2(Q[48]),
        .I3(Q[46]),
        .I4(\mcp1_dec_c5[5]_i_3_n_0 ),
        .O(\mcp1_dec_c5[3]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'h40)) 
    \mcp1_dec_c5[3]_i_3 
       (.I0(Q[45]),
        .I1(Q[47]),
        .I2(Q[46]),
        .O(\mcp1_dec_c5[3]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h0410100407D0D004)) 
    \mcp1_dec_c5[4]_i_1 
       (.I0(\mcp1_dec_c5[5]_i_3_n_0 ),
        .I1(Q[47]),
        .I2(Q[46]),
        .I3(Q[50]),
        .I4(Q[48]),
        .I5(\mcp1_dec_c5[4]_i_2_n_0 ),
        .O(DecodeWord4[4]));
  LUT5 #(
    .INIT(32'hFFFF6FF6)) 
    \mcp1_dec_c5[4]_i_2 
       (.I0(Q[49]),
        .I1(Q[48]),
        .I2(Q[51]),
        .I3(Q[50]),
        .I4(Q[45]),
        .O(\mcp1_dec_c5[4]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF00140100)) 
    \mcp1_dec_c5[5]_i_2 
       (.I0(\mcp1_dec_c5[5]_i_3_n_0 ),
        .I1(Q[50]),
        .I2(Q[48]),
        .I3(Q[47]),
        .I4(Q[46]),
        .I5(\mcp1_dec_c5[5]_i_4_n_0 ),
        .O(DecodeWord4[5]));
  LUT5 #(
    .INIT(32'hF99FFFFF)) 
    \mcp1_dec_c5[5]_i_3 
       (.I0(Q[51]),
        .I1(Q[50]),
        .I2(Q[48]),
        .I3(Q[49]),
        .I4(Q[45]),
        .O(\mcp1_dec_c5[5]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h0000000001000020)) 
    \mcp1_dec_c5[5]_i_4 
       (.I0(Q[51]),
        .I1(Q[45]),
        .I2(Q[50]),
        .I3(Q[46]),
        .I4(Q[47]),
        .I5(\mcp1_dec_c5[5]_i_5_n_0 ),
        .O(\mcp1_dec_c5[5]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h7)) 
    \mcp1_dec_c5[5]_i_5 
       (.I0(Q[48]),
        .I1(Q[49]),
        .O(\mcp1_dec_c5[5]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hDFDDDDDDDDDDDDDD)) 
    \mcp1_dec_c5[6]_i_1 
       (.I0(\rx_66_enc_reg_reg[47] ),
        .I1(\mcp1_dec_c5[7]_i_2_n_0 ),
        .I2(\mcp1_dec_c5[6]_i_2_n_0 ),
        .I3(Q[51]),
        .I4(Q[45]),
        .I5(Q[46]),
        .O(\mcp1_dec_c5[6]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFFFD)) 
    \mcp1_dec_c5[6]_i_2 
       (.I0(Q[48]),
        .I1(Q[50]),
        .I2(Q[49]),
        .I3(Q[47]),
        .O(\mcp1_dec_c5[6]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFDDDDDDDDDDDDDDD)) 
    \mcp1_dec_c5[7]_i_1 
       (.I0(\rx_66_enc_reg_reg[47] ),
        .I1(\mcp1_dec_c5[7]_i_2_n_0 ),
        .I2(Q[49]),
        .I3(Q[51]),
        .I4(Q[45]),
        .I5(\mcp1_dec_c5[7]_i_3_n_0 ),
        .O(\mcp1_dec_c5[7]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair190" *) 
  LUT5 #(
    .INIT(32'h14000040)) 
    \mcp1_dec_c5[7]_i_2 
       (.I0(\mcp1_dec_c5[4]_i_2_n_0 ),
        .I1(Q[48]),
        .I2(Q[50]),
        .I3(Q[46]),
        .I4(Q[47]),
        .O(\mcp1_dec_c5[7]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair190" *) 
  LUT4 #(
    .INIT(16'h0004)) 
    \mcp1_dec_c5[7]_i_3 
       (.I0(Q[46]),
        .I1(Q[47]),
        .I2(Q[48]),
        .I3(Q[50]),
        .O(\mcp1_dec_c5[7]_i_3_n_0 ));
  FDRE \mcp1_dec_c5_reg[0] 
       (.C(rxusrclk2),
        .CE(\mcp1_dec_c5_reg[7]_0 ),
        .D(\mcp1_dec_c5[0]_i_1_n_0 ),
        .Q(data0[40]),
        .R(\mcp1_dec_c5_reg[5]_0 ));
  FDSE \mcp1_dec_c5_reg[1] 
       (.C(rxusrclk2),
        .CE(\mcp1_dec_c5_reg[7]_0 ),
        .D(\mcp1_dec_c5[1]_i_1_n_0 ),
        .Q(data0[41]),
        .S(1'b0));
  FDSE \mcp1_dec_c5_reg[2] 
       (.C(rxusrclk2),
        .CE(\mcp1_dec_c5_reg[7]_0 ),
        .D(\rx_66_enc_reg_reg[47] ),
        .Q(data0[42]),
        .S(\mcp1_dec_c5_reg[5]_0 ));
  FDSE \mcp1_dec_c5_reg[3] 
       (.C(rxusrclk2),
        .CE(\mcp1_dec_c5_reg[7]_0 ),
        .D(DecodeWord4[3]),
        .Q(data0[43]),
        .S(\mcp1_dec_c5_reg[5]_0 ));
  FDSE \mcp1_dec_c5_reg[4] 
       (.C(rxusrclk2),
        .CE(\mcp1_dec_c5_reg[7]_0 ),
        .D(DecodeWord4[4]),
        .Q(data0[44]),
        .S(\mcp1_dec_c5_reg[5]_0 ));
  FDSE \mcp1_dec_c5_reg[5] 
       (.C(rxusrclk2),
        .CE(\mcp1_dec_c5_reg[7]_0 ),
        .D(DecodeWord4[5]),
        .Q(data0[45]),
        .S(\mcp1_dec_c5_reg[5]_0 ));
  FDSE \mcp1_dec_c5_reg[6] 
       (.C(rxusrclk2),
        .CE(\mcp1_dec_c5_reg[7]_0 ),
        .D(\mcp1_dec_c5[6]_i_1_n_0 ),
        .Q(data0[46]),
        .S(1'b0));
  FDSE \mcp1_dec_c5_reg[7] 
       (.C(rxusrclk2),
        .CE(\mcp1_dec_c5_reg[7]_0 ),
        .D(\mcp1_dec_c5[7]_i_1_n_0 ),
        .Q(data0[47]),
        .S(1'b0));
  LUT6 #(
    .INIT(64'h0000000000000082)) 
    \mcp1_dec_c6[0]_i_1 
       (.I0(\rx_66_enc_reg_reg[53] ),
        .I1(Q[55]),
        .I2(Q[57]),
        .I3(Q[54]),
        .I4(Q[53]),
        .I5(\mcp1_dec_c6[4]_i_3_n_0 ),
        .O(\mcp1_dec_c6[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h5557555575555557)) 
    \mcp1_dec_c6[1]_i_1 
       (.I0(\rx_66_enc_reg_reg[53] ),
        .I1(\mcp1_dec_c6[4]_i_3_n_0 ),
        .I2(Q[54]),
        .I3(Q[53]),
        .I4(Q[55]),
        .I5(Q[57]),
        .O(\mcp1_dec_c6[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h5003500030050005)) 
    \mcp1_dec_c6[2]_i_1 
       (.I0(\mcp1_dec_c6[4]_i_3_n_0 ),
        .I1(\mcp1_dec_c6[2]_i_2_n_0 ),
        .I2(Q[53]),
        .I3(\mcp1_dec_c6[2]_i_3_n_0 ),
        .I4(Q[52]),
        .I5(Q[54]),
        .O(\rx_66_enc_reg_reg[53] ));
  LUT4 #(
    .INIT(16'hF99F)) 
    \mcp1_dec_c6[2]_i_2 
       (.I0(Q[57]),
        .I1(Q[58]),
        .I2(Q[56]),
        .I3(Q[55]),
        .O(\mcp1_dec_c6[2]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mcp1_dec_c6[2]_i_3 
       (.I0(Q[55]),
        .I1(Q[57]),
        .O(\mcp1_dec_c6[2]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hABAAAAAAAAAAEAAA)) 
    \mcp1_dec_c6[3]_i_1 
       (.I0(\mcp1_dec_c6[4]_i_2_n_0 ),
        .I1(Q[57]),
        .I2(Q[58]),
        .I3(\mcp1_dec_c6[3]_i_2_n_0 ),
        .I4(Q[55]),
        .I5(Q[56]),
        .O(DecodeWord5[3]));
  LUT3 #(
    .INIT(8'h08)) 
    \mcp1_dec_c6[3]_i_2 
       (.I0(Q[53]),
        .I1(Q[54]),
        .I2(Q[52]),
        .O(\mcp1_dec_c6[3]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAAABAAEEAAA)) 
    \mcp1_dec_c6[4]_i_1 
       (.I0(\mcp1_dec_c6[4]_i_2_n_0 ),
        .I1(Q[57]),
        .I2(Q[53]),
        .I3(Q[54]),
        .I4(Q[55]),
        .I5(\mcp1_dec_c6[4]_i_3_n_0 ),
        .O(DecodeWord5[4]));
  LUT6 #(
    .INIT(64'h0000000004408008)) 
    \mcp1_dec_c6[4]_i_2 
       (.I0(Q[54]),
        .I1(Q[52]),
        .I2(Q[57]),
        .I3(Q[55]),
        .I4(Q[53]),
        .I5(\mcp1_dec_c6[2]_i_2_n_0 ),
        .O(\mcp1_dec_c6[4]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hF6FFFFF6)) 
    \mcp1_dec_c6[4]_i_3 
       (.I0(Q[58]),
        .I1(Q[57]),
        .I2(Q[52]),
        .I3(Q[56]),
        .I4(Q[55]),
        .O(\mcp1_dec_c6[4]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h3C0000AA000000AA)) 
    \mcp1_dec_c6[5]_i_2 
       (.I0(\mcp1_dec_c6[5]_i_3_n_0 ),
        .I1(Q[55]),
        .I2(Q[56]),
        .I3(\mcp1_dec_c6[5]_i_4_n_0 ),
        .I4(Q[52]),
        .I5(\mcp1_dec_c6[5]_i_5_n_0 ),
        .O(DecodeWord5[5]));
  (* SOFT_HLUTNM = "soft_lutpair192" *) 
  LUT5 #(
    .INIT(32'h18000000)) 
    \mcp1_dec_c6[5]_i_3 
       (.I0(Q[53]),
        .I1(Q[54]),
        .I2(Q[57]),
        .I3(Q[56]),
        .I4(Q[55]),
        .O(\mcp1_dec_c6[5]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mcp1_dec_c6[5]_i_4 
       (.I0(Q[58]),
        .I1(Q[57]),
        .O(\mcp1_dec_c6[5]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair189" *) 
  LUT4 #(
    .INIT(16'h1204)) 
    \mcp1_dec_c6[5]_i_5 
       (.I0(Q[57]),
        .I1(Q[54]),
        .I2(Q[55]),
        .I3(Q[53]),
        .O(\mcp1_dec_c6[5]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hDDDDDDDDDFDDDDDD)) 
    \mcp1_dec_c6[6]_i_1 
       (.I0(\rx_66_enc_reg_reg[53] ),
        .I1(\mcp1_dec_c6[7]_i_2_n_0 ),
        .I2(\mcp1_dec_c6[6]_i_2_n_0 ),
        .I3(Q[52]),
        .I4(Q[53]),
        .I5(Q[54]),
        .O(\mcp1_dec_c6[6]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFFDF)) 
    \mcp1_dec_c6[6]_i_2 
       (.I0(Q[58]),
        .I1(Q[57]),
        .I2(Q[55]),
        .I3(Q[56]),
        .O(\mcp1_dec_c6[6]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFDDDDDDDDDDDDDDD)) 
    \mcp1_dec_c6[7]_i_1 
       (.I0(\rx_66_enc_reg_reg[53] ),
        .I1(\mcp1_dec_c6[7]_i_2_n_0 ),
        .I2(Q[56]),
        .I3(Q[58]),
        .I4(Q[52]),
        .I5(\mcp1_dec_c6[7]_i_3_n_0 ),
        .O(\mcp1_dec_c6[7]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair189" *) 
  LUT5 #(
    .INIT(32'h10044000)) 
    \mcp1_dec_c6[7]_i_2 
       (.I0(\mcp1_dec_c6[4]_i_3_n_0 ),
        .I1(Q[55]),
        .I2(Q[54]),
        .I3(Q[53]),
        .I4(Q[57]),
        .O(\mcp1_dec_c6[7]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair192" *) 
  LUT4 #(
    .INIT(16'h0010)) 
    \mcp1_dec_c6[7]_i_3 
       (.I0(Q[53]),
        .I1(Q[55]),
        .I2(Q[54]),
        .I3(Q[57]),
        .O(\mcp1_dec_c6[7]_i_3_n_0 ));
  FDRE \mcp1_dec_c6_reg[0] 
       (.C(rxusrclk2),
        .CE(\mcp1_dec_c4_reg[7]_0 [1]),
        .D(\mcp1_dec_c6[0]_i_1_n_0 ),
        .Q(data0[48]),
        .R(1'b0));
  FDSE \mcp1_dec_c6_reg[1] 
       (.C(rxusrclk2),
        .CE(\mcp1_dec_c4_reg[7]_0 [1]),
        .D(\mcp1_dec_c6[1]_i_1_n_0 ),
        .Q(data0[49]),
        .S(1'b0));
  FDSE \mcp1_dec_c6_reg[2] 
       (.C(rxusrclk2),
        .CE(\mcp1_dec_c4_reg[7]_0 [1]),
        .D(\rx_66_enc_reg_reg[53] ),
        .Q(data0[50]),
        .S(SS));
  FDSE \mcp1_dec_c6_reg[3] 
       (.C(rxusrclk2),
        .CE(\mcp1_dec_c4_reg[7]_0 [1]),
        .D(DecodeWord5[3]),
        .Q(data0[51]),
        .S(SS));
  FDSE \mcp1_dec_c6_reg[4] 
       (.C(rxusrclk2),
        .CE(\mcp1_dec_c4_reg[7]_0 [1]),
        .D(DecodeWord5[4]),
        .Q(data0[52]),
        .S(SS));
  FDSE \mcp1_dec_c6_reg[5] 
       (.C(rxusrclk2),
        .CE(\mcp1_dec_c4_reg[7]_0 [1]),
        .D(DecodeWord5[5]),
        .Q(data0[53]),
        .S(SS));
  FDSE \mcp1_dec_c6_reg[6] 
       (.C(rxusrclk2),
        .CE(\mcp1_dec_c4_reg[7]_0 [1]),
        .D(\mcp1_dec_c6[6]_i_1_n_0 ),
        .Q(data0[54]),
        .S(1'b0));
  FDSE \mcp1_dec_c6_reg[7] 
       (.C(rxusrclk2),
        .CE(\mcp1_dec_c4_reg[7]_0 [1]),
        .D(\mcp1_dec_c6[7]_i_1_n_0 ),
        .Q(data0[55]),
        .S(1'b0));
  LUT6 #(
    .INIT(64'h0080000000000010)) 
    \mcp1_dec_c7[0]_i_1 
       (.I0(Q[62]),
        .I1(Q[63]),
        .I2(\mcp1_dec_c7[0]_i_2_n_0 ),
        .I3(Q[59]),
        .I4(Q[65]),
        .I5(Q[64]),
        .O(DecodeWord6[0]));
  LUT2 #(
    .INIT(4'h1)) 
    \mcp1_dec_c7[0]_i_2 
       (.I0(Q[61]),
        .I1(Q[60]),
        .O(\mcp1_dec_c7[0]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAAABAAAAAEB)) 
    \mcp1_dec_c7[1]_i_1 
       (.I0(\rx_66_enc_reg_reg[61] ),
        .I1(Q[64]),
        .I2(Q[62]),
        .I3(Q[60]),
        .I4(Q[61]),
        .I5(\mcp1_dec_c7[4]_i_3_n_0 ),
        .O(\mcp1_dec_c7[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hABAAAAAAAAAAEAAA)) 
    \mcp1_dec_c7[3]_i_1 
       (.I0(\mcp1_dec_c7[4]_i_2_n_0 ),
        .I1(Q[64]),
        .I2(Q[65]),
        .I3(\mcp1_dec_c7[3]_i_2_n_0 ),
        .I4(Q[63]),
        .I5(Q[62]),
        .O(DecodeWord6[3]));
  LUT3 #(
    .INIT(8'h40)) 
    \mcp1_dec_c7[3]_i_2 
       (.I0(Q[59]),
        .I1(Q[60]),
        .I2(Q[61]),
        .O(\mcp1_dec_c7[3]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hABBAAAAAAAAABAAA)) 
    \mcp1_dec_c7[4]_i_1 
       (.I0(\mcp1_dec_c7[4]_i_2_n_0 ),
        .I1(\mcp1_dec_c7[4]_i_3_n_0 ),
        .I2(Q[62]),
        .I3(Q[64]),
        .I4(Q[61]),
        .I5(Q[60]),
        .O(DecodeWord6[4]));
  LUT6 #(
    .INIT(64'h0400000800080400)) 
    \mcp1_dec_c7[4]_i_2 
       (.I0(Q[60]),
        .I1(Q[59]),
        .I2(\mcp1_dec_c7[4]_i_4_n_0 ),
        .I3(Q[61]),
        .I4(Q[64]),
        .I5(Q[62]),
        .O(\mcp1_dec_c7[4]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair182" *) 
  LUT5 #(
    .INIT(32'hF6FFFFF6)) 
    \mcp1_dec_c7[4]_i_3 
       (.I0(Q[65]),
        .I1(Q[64]),
        .I2(Q[59]),
        .I3(Q[63]),
        .I4(Q[62]),
        .O(\mcp1_dec_c7[4]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair196" *) 
  LUT4 #(
    .INIT(16'hF99F)) 
    \mcp1_dec_c7[4]_i_4 
       (.I0(Q[64]),
        .I1(Q[65]),
        .I2(Q[63]),
        .I3(Q[62]),
        .O(\mcp1_dec_c7[4]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h0055000F0F441100)) 
    \mcp1_dec_c7[5]_i_1 
       (.I0(\mcp1_dec_c7[5]_i_2_n_0 ),
        .I1(Q[62]),
        .I2(\mcp1_dec_c7[5]_i_3_n_0 ),
        .I3(Q[61]),
        .I4(Q[60]),
        .I5(Q[64]),
        .O(DecodeWord6[5]));
  (* SOFT_HLUTNM = "soft_lutpair182" *) 
  LUT5 #(
    .INIT(32'hFFDFBF7F)) 
    \mcp1_dec_c7[5]_i_2 
       (.I0(Q[63]),
        .I1(Q[65]),
        .I2(Q[59]),
        .I3(Q[62]),
        .I4(Q[64]),
        .O(\mcp1_dec_c7[5]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair196" *) 
  LUT5 #(
    .INIT(32'hF6FFFFFF)) 
    \mcp1_dec_c7[5]_i_3 
       (.I0(Q[65]),
        .I1(Q[64]),
        .I2(Q[59]),
        .I3(Q[63]),
        .I4(Q[62]),
        .O(\mcp1_dec_c7[5]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hAAEAAAAAAAAAAAAA)) 
    \mcp1_dec_c7[6]_i_1 
       (.I0(\mcp1_dec_c7[7]_i_4_n_0 ),
        .I1(\mcp1_dec_c7[6]_i_2_n_0 ),
        .I2(\mcp1_dec_c7[6]_i_3_n_0 ),
        .I3(Q[63]),
        .I4(Q[65]),
        .I5(Q[59]),
        .O(DecodeWord6[6]));
  LUT2 #(
    .INIT(4'h2)) 
    \mcp1_dec_c7[6]_i_2 
       (.I0(Q[62]),
        .I1(Q[64]),
        .O(\mcp1_dec_c7[6]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \mcp1_dec_c7[6]_i_3 
       (.I0(Q[60]),
        .I1(Q[61]),
        .O(\mcp1_dec_c7[6]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hAAAABAAAAAAAAAAA)) 
    \mcp1_dec_c7[7]_i_2 
       (.I0(\mcp1_dec_c7[7]_i_4_n_0 ),
        .I1(\mcp1_dec_c7[7]_i_5_n_0 ),
        .I2(Q[63]),
        .I3(\mcp1_dec_c7[7]_i_6_n_0 ),
        .I4(Q[60]),
        .I5(Q[61]),
        .O(DecodeWord6[7]));
  LUT6 #(
    .INIT(64'hDFFFFFF7BFFFFFFE)) 
    \mcp1_dec_c7[7]_i_3 
       (.I0(\mcp1_dec_c7[7]_i_7_n_0 ),
        .I1(Q[61]),
        .I2(\mcp1_dec_c7[7]_i_8_n_0 ),
        .I3(\mcp1_dec_c7[7]_i_9_n_0 ),
        .I4(Q[59]),
        .I5(Q[60]),
        .O(\rx_66_enc_reg_reg[61] ));
  LUT5 #(
    .INIT(32'h00001880)) 
    \mcp1_dec_c7[7]_i_4 
       (.I0(Q[60]),
        .I1(Q[61]),
        .I2(Q[64]),
        .I3(Q[62]),
        .I4(\mcp1_dec_c7[4]_i_3_n_0 ),
        .O(\mcp1_dec_c7[7]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h7)) 
    \mcp1_dec_c7[7]_i_5 
       (.I0(Q[59]),
        .I1(Q[65]),
        .O(\mcp1_dec_c7[7]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \mcp1_dec_c7[7]_i_6 
       (.I0(Q[62]),
        .I1(Q[64]),
        .O(\mcp1_dec_c7[7]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mcp1_dec_c7[7]_i_7 
       (.I0(Q[62]),
        .I1(Q[64]),
        .O(\mcp1_dec_c7[7]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mcp1_dec_c7[7]_i_8 
       (.I0(Q[62]),
        .I1(Q[63]),
        .O(\mcp1_dec_c7[7]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mcp1_dec_c7[7]_i_9 
       (.I0(Q[65]),
        .I1(Q[64]),
        .O(\mcp1_dec_c7[7]_i_9_n_0 ));
  FDRE \mcp1_dec_c7_reg[0] 
       (.C(rxusrclk2),
        .CE(\mcp1_dec_c5_reg[7]_0 ),
        .D(DecodeWord6[0]),
        .Q(data0[56]),
        .R(\mcp1_dec_c7_reg[7]_0 ));
  FDSE \mcp1_dec_c7_reg[1] 
       (.C(rxusrclk2),
        .CE(\mcp1_dec_c5_reg[7]_0 ),
        .D(\mcp1_dec_c7[1]_i_1_n_0 ),
        .Q(data0[57]),
        .S(1'b0));
  FDSE \mcp1_dec_c7_reg[2] 
       (.C(rxusrclk2),
        .CE(\mcp1_dec_c5_reg[7]_0 ),
        .D(1'b1),
        .Q(data0[58]),
        .S(1'b0));
  FDSE \mcp1_dec_c7_reg[3] 
       (.C(rxusrclk2),
        .CE(\mcp1_dec_c5_reg[7]_0 ),
        .D(DecodeWord6[3]),
        .Q(data0[59]),
        .S(\mcp1_dec_c7_reg[7]_0 ));
  FDSE \mcp1_dec_c7_reg[4] 
       (.C(rxusrclk2),
        .CE(\mcp1_dec_c5_reg[7]_0 ),
        .D(DecodeWord6[4]),
        .Q(data0[60]),
        .S(\mcp1_dec_c7_reg[7]_0 ));
  FDSE \mcp1_dec_c7_reg[5] 
       (.C(rxusrclk2),
        .CE(\mcp1_dec_c5_reg[7]_0 ),
        .D(DecodeWord6[5]),
        .Q(data0[61]),
        .S(\mcp1_dec_c7_reg[7]_0 ));
  FDSE \mcp1_dec_c7_reg[6] 
       (.C(rxusrclk2),
        .CE(\mcp1_dec_c5_reg[7]_0 ),
        .D(DecodeWord6[6]),
        .Q(data0[62]),
        .S(\mcp1_dec_c7_reg[7]_0 ));
  FDSE \mcp1_dec_c7_reg[7] 
       (.C(rxusrclk2),
        .CE(\mcp1_dec_c5_reg[7]_0 ),
        .D(DecodeWord6[7]),
        .Q(data0[63]),
        .S(\mcp1_dec_c7_reg[7]_0 ));
  LUT6 #(
    .INIT(64'h00000000FF0CAAAA)) 
    \mcp1_r_type_next_reg[0]_i_1 
       (.I0(r_type_next[0]),
        .I1(\mcp1_r_type_next_reg[0]_i_2_n_0 ),
        .I2(\mcp1_r_type_next_reg[0]_i_3_n_0 ),
        .I3(\mcp1_r_type_next_reg[0]_i_4_n_0 ),
        .I4(\mcp1_rx_64_ctrl_out_reg[1]_0 ),
        .I5(out),
        .O(\mcp1_r_type_next_reg[0]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hEFFF)) 
    \mcp1_r_type_next_reg[0]_i_10 
       (.I0(Q[3]),
        .I1(Q[4]),
        .I2(Q[9]),
        .I3(Q[2]),
        .O(\mcp1_r_type_next_reg[0]_i_10_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair210" *) 
  LUT4 #(
    .INIT(16'hFFDF)) 
    \mcp1_r_type_next_reg[0]_i_11 
       (.I0(Q[6]),
        .I1(Q[8]),
        .I2(Q[5]),
        .I3(Q[7]),
        .O(\mcp1_r_type_next_reg[0]_i_11_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFBFF)) 
    \mcp1_r_type_next_reg[0]_i_12 
       (.I0(Q[2]),
        .I1(Q[9]),
        .I2(Q[4]),
        .I3(Q[3]),
        .I4(\mcp1_r_type_next_reg[0]_i_21_n_0 ),
        .O(\mcp1_r_type_next_reg[0]_i_12_n_0 ));
  LUT5 #(
    .INIT(32'h00000040)) 
    \mcp1_r_type_next_reg[0]_i_13 
       (.I0(Q[8]),
        .I1(Q[6]),
        .I2(Q[7]),
        .I3(Q[5]),
        .I4(\mcp1_r_type_next_reg[0]_i_22_n_0 ),
        .O(\mcp1_r_type_next_reg[0]_i_13_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \mcp1_r_type_next_reg[0]_i_14 
       (.I0(Q[7]),
        .I1(Q[5]),
        .O(\mcp1_r_type_next_reg[0]_i_14_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \mcp1_r_type_next_reg[0]_i_15 
       (.I0(Q[6]),
        .I1(Q[8]),
        .O(\mcp1_r_type_next_reg[0]_i_15_n_0 ));
  LUT4 #(
    .INIT(16'h7FFF)) 
    \mcp1_r_type_next_reg[0]_i_16 
       (.I0(Q[3]),
        .I1(Q[4]),
        .I2(Q[9]),
        .I3(Q[2]),
        .O(\mcp1_r_type_next_reg[0]_i_16_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair191" *) 
  LUT4 #(
    .INIT(16'hFFDF)) 
    \mcp1_r_type_next_reg[0]_i_17 
       (.I0(Q[3]),
        .I1(Q[4]),
        .I2(Q[9]),
        .I3(Q[2]),
        .O(\mcp1_r_type_next_reg[0]_i_17_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair209" *) 
  LUT4 #(
    .INIT(16'hEFFF)) 
    \mcp1_r_type_next_reg[0]_i_18 
       (.I0(Q[5]),
        .I1(Q[7]),
        .I2(Q[8]),
        .I3(Q[6]),
        .O(\mcp1_r_type_next_reg[0]_i_18_n_0 ));
  LUT5 #(
    .INIT(32'h00008000)) 
    \mcp1_r_type_next_reg[0]_i_19 
       (.I0(Q[6]),
        .I1(Q[8]),
        .I2(Q[7]),
        .I3(Q[5]),
        .I4(\mcp1_r_type_next_reg[0]_i_16_n_0 ),
        .O(\mcp1_r_type_next_reg[0]_i_19_n_0 ));
  LUT6 #(
    .INIT(64'hFFD0FF00FFFFFF00)) 
    \mcp1_r_type_next_reg[0]_i_2 
       (.I0(\mcp1_r_type_next_reg[0]_i_5_n_0 ),
        .I1(\mcp1_r_type_next_reg[0]_i_6_n_0 ),
        .I2(\rx_66_enc_reg_reg[39] ),
        .I3(\mcp1_r_type_next_reg[0]_i_7_n_0 ),
        .I4(\mcp1_r_type_next_reg[0]_i_8_n_0 ),
        .I5(\mcp1_r_type_next_reg[0]_i_9_n_0 ),
        .O(\mcp1_r_type_next_reg[0]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h00000040)) 
    \mcp1_r_type_next_reg[0]_i_20 
       (.I0(Q[6]),
        .I1(Q[8]),
        .I2(Q[7]),
        .I3(Q[5]),
        .I4(\mcp1_r_type_next_reg[0]_i_10_n_0 ),
        .O(\mcp1_r_type_next_reg[0]_i_20_n_0 ));
  LUT4 #(
    .INIT(16'hEFFF)) 
    \mcp1_r_type_next_reg[0]_i_21 
       (.I0(Q[8]),
        .I1(Q[6]),
        .I2(Q[5]),
        .I3(Q[7]),
        .O(\mcp1_r_type_next_reg[0]_i_21_n_0 ));
  LUT4 #(
    .INIT(16'hFFDF)) 
    \mcp1_r_type_next_reg[0]_i_22 
       (.I0(Q[9]),
        .I1(Q[2]),
        .I2(Q[4]),
        .I3(Q[3]),
        .O(\mcp1_r_type_next_reg[0]_i_22_n_0 ));
  LUT3 #(
    .INIT(8'hFD)) 
    \mcp1_r_type_next_reg[0]_i_3 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(\mcp1_r_type_next_reg[2]_i_2_n_0 ),
        .O(\mcp1_r_type_next_reg[0]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \mcp1_r_type_next_reg[0]_i_4 
       (.I0(Q[1]),
        .I1(Q[0]),
        .O(\mcp1_r_type_next_reg[0]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h00000000EFFF00FF)) 
    \mcp1_r_type_next_reg[0]_i_5 
       (.I0(\mcp1_r_type_next_reg[0]_i_10_n_0 ),
        .I1(\mcp1_r_type_next_reg[0]_i_11_n_0 ),
        .I2(\rx_66_enc_reg_reg[29] ),
        .I3(\rx_66_enc_reg_reg[31] ),
        .I4(\mcp1_r_type_next_reg[0]_i_12_n_0 ),
        .I5(\mcp1_r_type_next_reg[0]_i_13_n_0 ),
        .O(\mcp1_r_type_next_reg[0]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000080)) 
    \mcp1_r_type_next_reg[0]_i_6 
       (.I0(\rx_66_enc_reg_reg[29] ),
        .I1(\rx_66_enc_reg_reg[31] ),
        .I2(\rx_66_enc_reg_reg[17] ),
        .I3(\mcp1_r_type_next_reg[0]_i_14_n_0 ),
        .I4(\mcp1_r_type_next_reg[0]_i_15_n_0 ),
        .I5(\mcp1_r_type_next_reg[0]_i_16_n_0 ),
        .O(\mcp1_r_type_next_reg[0]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF00FFFFFF0010)) 
    \mcp1_r_type_next_reg[0]_i_7 
       (.I0(\mcp1_r_type_next_reg[0]_i_17_n_0 ),
        .I1(\mcp1_r_type_next_reg[0]_i_18_n_0 ),
        .I2(\rx_66_enc_reg_reg[53] ),
        .I3(\rx_66_enc_reg_reg[61] ),
        .I4(\mcp1_r_type_next_reg[0]_i_19_n_0 ),
        .I5(\mcp1_r_type_next_reg[0]_i_20_n_0 ),
        .O(\mcp1_r_type_next_reg[0]_i_7_n_0 ));
  LUT3 #(
    .INIT(8'h20)) 
    \mcp1_r_type_next_reg[0]_i_8 
       (.I0(\rx_66_enc_reg_reg[47] ),
        .I1(\rx_66_enc_reg_reg[61] ),
        .I2(\rx_66_enc_reg_reg[53] ),
        .O(\mcp1_r_type_next_reg[0]_i_8_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair191" *) 
  LUT5 #(
    .INIT(32'hFFFFFBFF)) 
    \mcp1_r_type_next_reg[0]_i_9 
       (.I0(Q[3]),
        .I1(Q[4]),
        .I2(Q[2]),
        .I3(Q[9]),
        .I4(\mcp1_r_type_next_reg[2]_i_21_n_0 ),
        .O(\mcp1_r_type_next_reg[0]_i_9_n_0 ));
  LUT5 #(
    .INIT(32'hFFFF30AA)) 
    \mcp1_r_type_next_reg[1]_i_1 
       (.I0(r_type_next[1]),
        .I1(\mcp1_r_type_next_reg[0]_i_3_n_0 ),
        .I2(\mcp1_r_type_next_reg[2]_i_3_n_0 ),
        .I3(\mcp1_rx_64_ctrl_out_reg[1]_0 ),
        .I4(out),
        .O(\mcp1_r_type_next_reg[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h00F1FFFF00F10000)) 
    \mcp1_r_type_next_reg[2]_i_1 
       (.I0(\mcp1_r_type_next_reg[2]_i_2_n_0 ),
        .I1(\mcp1_r_type_next_reg[2]_i_3_n_0 ),
        .I2(\mcp1_r_type_next_reg[2]_i_4_n_0 ),
        .I3(\mcp1_r_type_next_reg[2]_i_5_n_0 ),
        .I4(\mcp1_r_type_next_reg_reg[2]_0 ),
        .I5(r_type_next[2]),
        .O(\mcp1_r_type_next_reg[2]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h7FFF)) 
    \mcp1_r_type_next_reg[2]_i_10 
       (.I0(\rx_66_enc_reg_reg[31] ),
        .I1(\rx_66_enc_reg_reg[29] ),
        .I2(\rx_66_enc_reg_reg[17] ),
        .I3(\rx_66_enc_reg_reg[11] ),
        .O(\mcp1_r_type_next_reg[2]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'h0000008003000080)) 
    \mcp1_r_type_next_reg[2]_i_11 
       (.I0(\mcp1_r_type_next_reg[2]_i_19_n_0 ),
        .I1(Q[8]),
        .I2(Q[6]),
        .I3(Q[5]),
        .I4(Q[7]),
        .I5(\mcp1_r_type_next_reg[2]_i_10_n_0 ),
        .O(\mcp1_r_type_next_reg[2]_i_11_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair187" *) 
  LUT5 #(
    .INIT(32'hFFFF7FFE)) 
    \mcp1_r_type_next_reg[2]_i_12 
       (.I0(Q[41]),
        .I1(Q[40]),
        .I2(Q[39]),
        .I3(Q[38]),
        .I4(\mcp1_r_type_next_reg[2]_i_20_n_0 ),
        .O(\mcp1_r_type_next_reg[2]_i_12_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \mcp1_r_type_next_reg[2]_i_13 
       (.I0(\rx_66_enc_reg_reg[39] ),
        .I1(\mcp1_r_type_next_reg[0]_i_8_n_0 ),
        .O(\mcp1_r_type_next_reg[2]_i_13_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000200000)) 
    \mcp1_r_type_next_reg[2]_i_14 
       (.I0(\mcp1_r_type_next_reg[2]_i_19_n_0 ),
        .I1(\mcp1_r_type_next_reg[2]_i_21_n_0 ),
        .I2(Q[3]),
        .I3(Q[4]),
        .I4(Q[2]),
        .I5(Q[9]),
        .O(\mcp1_r_type_next_reg[2]_i_14_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \mcp1_r_type_next_reg[2]_i_15 
       (.I0(\mcp1_r_type_next_reg[2]_i_10_n_0 ),
        .I1(\mcp1_r_type_next_reg[2]_i_22_n_0 ),
        .I2(\mcp1_r_type_next_reg[2]_i_23_n_0 ),
        .I3(\mcp1_r_type_next_reg[2]_i_24_n_0 ),
        .I4(\mcp1_r_type_next_reg[2]_i_25_n_0 ),
        .I5(\mcp1_r_type_next_reg[2]_i_26_n_0 ),
        .O(\mcp1_r_type_next_reg[2]_i_15_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair208" *) 
  LUT4 #(
    .INIT(16'h8000)) 
    \mcp1_r_type_next_reg[2]_i_16 
       (.I0(Q[5]),
        .I1(Q[7]),
        .I2(Q[8]),
        .I3(Q[6]),
        .O(\mcp1_r_type_next_reg[2]_i_16_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \mcp1_r_type_next_reg[2]_i_17 
       (.I0(Q[2]),
        .I1(Q[9]),
        .O(\mcp1_r_type_next_reg[2]_i_17_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair208" *) 
  LUT4 #(
    .INIT(16'h0040)) 
    \mcp1_r_type_next_reg[2]_i_18 
       (.I0(Q[5]),
        .I1(Q[7]),
        .I2(Q[8]),
        .I3(Q[6]),
        .O(\mcp1_r_type_next_reg[2]_i_18_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair206" *) 
  LUT4 #(
    .INIT(16'h8001)) 
    \mcp1_r_type_next_reg[2]_i_19 
       (.I0(Q[37]),
        .I1(Q[36]),
        .I2(Q[34]),
        .I3(Q[35]),
        .O(\mcp1_r_type_next_reg[2]_i_19_n_0 ));
  LUT4 #(
    .INIT(16'hAABA)) 
    \mcp1_r_type_next_reg[2]_i_2 
       (.I0(\mcp1_r_type_next_reg[2]_i_7_n_0 ),
        .I1(\mcp1_r_type_next_reg[2]_i_8_n_0 ),
        .I2(\mcp1_r_type_next_reg[2]_i_9_n_0 ),
        .I3(\mcp1_r_type_next_reg[2]_i_10_n_0 ),
        .O(\mcp1_r_type_next_reg[2]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair207" *) 
  LUT4 #(
    .INIT(16'hFFDF)) 
    \mcp1_r_type_next_reg[2]_i_20 
       (.I0(Q[2]),
        .I1(Q[9]),
        .I2(Q[4]),
        .I3(Q[3]),
        .O(\mcp1_r_type_next_reg[2]_i_20_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair209" *) 
  LUT4 #(
    .INIT(16'hFFDF)) 
    \mcp1_r_type_next_reg[2]_i_21 
       (.I0(Q[8]),
        .I1(Q[6]),
        .I2(Q[5]),
        .I3(Q[7]),
        .O(\mcp1_r_type_next_reg[2]_i_21_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \mcp1_r_type_next_reg[2]_i_22 
       (.I0(\mcp1_r_type_next_reg[2]_i_27_n_0 ),
        .I1(\mcp1_r_type_next_reg[0]_i_11_n_0 ),
        .I2(\mcp1_r_type_next_reg[2]_i_28_n_0 ),
        .I3(\mcp1_r_type_next_reg[2]_i_29_n_0 ),
        .I4(\mcp1_r_type_next_reg[2]_i_30_n_0 ),
        .O(\mcp1_r_type_next_reg[2]_i_22_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000008)) 
    \mcp1_r_type_next_reg[2]_i_23 
       (.I0(Q[46]),
        .I1(Q[47]),
        .I2(Q[45]),
        .I3(Q[51]),
        .I4(Q[50]),
        .I5(\mcp1_dec_c5[5]_i_5_n_0 ),
        .O(\mcp1_r_type_next_reg[2]_i_23_n_0 ));
  LUT6 #(
    .INIT(64'h0004000000000000)) 
    \mcp1_r_type_next_reg[2]_i_24 
       (.I0(Q[52]),
        .I1(\mcp1_r_type_next_reg[2]_i_31_n_0 ),
        .I2(Q[58]),
        .I3(Q[57]),
        .I4(Q[55]),
        .I5(Q[56]),
        .O(\mcp1_r_type_next_reg[2]_i_24_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000001000)) 
    \mcp1_r_type_next_reg[2]_i_25 
       (.I0(\mcp1_r_type_next_reg[2]_i_32_n_0 ),
        .I1(Q[38]),
        .I2(Q[41]),
        .I3(Q[42]),
        .I4(Q[44]),
        .I5(Q[43]),
        .O(\mcp1_r_type_next_reg[2]_i_25_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF00000100)) 
    \mcp1_r_type_next_reg[2]_i_26 
       (.I0(\mcp1_dec_c3[5]_i_4_n_0 ),
        .I1(Q[36]),
        .I2(Q[37]),
        .I3(\mcp1_r_type_next_reg[2]_i_33_n_0 ),
        .I4(Q[31]),
        .I5(\mcp1_r_type_next_reg[2]_i_34_n_0 ),
        .O(\mcp1_r_type_next_reg[2]_i_26_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair207" *) 
  LUT4 #(
    .INIT(16'hEFFF)) 
    \mcp1_r_type_next_reg[2]_i_27 
       (.I0(Q[9]),
        .I1(Q[2]),
        .I2(Q[3]),
        .I3(Q[4]),
        .O(\mcp1_r_type_next_reg[2]_i_27_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000008)) 
    \mcp1_r_type_next_reg[2]_i_28 
       (.I0(Q[25]),
        .I1(Q[26]),
        .I2(Q[24]),
        .I3(Q[30]),
        .I4(Q[29]),
        .I5(\mcp1_r_type_next_reg[2]_i_35_n_0 ),
        .O(\mcp1_r_type_next_reg[2]_i_28_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000004000)) 
    \mcp1_r_type_next_reg[2]_i_29 
       (.I0(Q[10]),
        .I1(\mcp1_r_type_next_reg[2]_i_36_n_0 ),
        .I2(Q[13]),
        .I3(Q[14]),
        .I4(Q[16]),
        .I5(Q[15]),
        .O(\mcp1_r_type_next_reg[2]_i_29_n_0 ));
  LUT6 #(
    .INIT(64'hFFAEAEAEFFAEFFAE)) 
    \mcp1_r_type_next_reg[2]_i_3 
       (.I0(\mcp1_r_type_next_reg[0]_i_2_n_0 ),
        .I1(\mcp1_r_type_next_reg[2]_i_11_n_0 ),
        .I2(\mcp1_r_type_next_reg[2]_i_12_n_0 ),
        .I3(\mcp1_r_type_next_reg[2]_i_13_n_0 ),
        .I4(\mcp1_r_type_next_reg[2]_i_14_n_0 ),
        .I5(\mcp1_r_type_next_reg[2]_i_15_n_0 ),
        .O(\mcp1_r_type_next_reg[2]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h0001000000000000)) 
    \mcp1_r_type_next_reg[2]_i_30 
       (.I0(\mcp1_r_type_next_reg[2]_i_37_n_0 ),
        .I1(Q[17]),
        .I2(Q[23]),
        .I3(Q[22]),
        .I4(Q[20]),
        .I5(Q[21]),
        .O(\mcp1_r_type_next_reg[2]_i_30_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \mcp1_r_type_next_reg[2]_i_31 
       (.I0(Q[54]),
        .I1(Q[53]),
        .O(\mcp1_r_type_next_reg[2]_i_31_n_0 ));
  LUT2 #(
    .INIT(4'h7)) 
    \mcp1_r_type_next_reg[2]_i_32 
       (.I0(Q[40]),
        .I1(Q[39]),
        .O(\mcp1_r_type_next_reg[2]_i_32_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \mcp1_r_type_next_reg[2]_i_33 
       (.I0(Q[33]),
        .I1(Q[32]),
        .O(\mcp1_r_type_next_reg[2]_i_33_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000001000)) 
    \mcp1_r_type_next_reg[2]_i_34 
       (.I0(\mcp1_r_type_next_reg[2]_i_38_n_0 ),
        .I1(Q[59]),
        .I2(Q[62]),
        .I3(Q[63]),
        .I4(Q[65]),
        .I5(Q[64]),
        .O(\mcp1_r_type_next_reg[2]_i_34_n_0 ));
  LUT2 #(
    .INIT(4'h7)) 
    \mcp1_r_type_next_reg[2]_i_35 
       (.I0(Q[27]),
        .I1(Q[28]),
        .O(\mcp1_r_type_next_reg[2]_i_35_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \mcp1_r_type_next_reg[2]_i_36 
       (.I0(Q[12]),
        .I1(Q[11]),
        .O(\mcp1_r_type_next_reg[2]_i_36_n_0 ));
  LUT2 #(
    .INIT(4'h7)) 
    \mcp1_r_type_next_reg[2]_i_37 
       (.I0(Q[19]),
        .I1(Q[18]),
        .O(\mcp1_r_type_next_reg[2]_i_37_n_0 ));
  LUT2 #(
    .INIT(4'h7)) 
    \mcp1_r_type_next_reg[2]_i_38 
       (.I0(Q[61]),
        .I1(Q[60]),
        .O(\mcp1_r_type_next_reg[2]_i_38_n_0 ));
  LUT2 #(
    .INIT(4'hB)) 
    \mcp1_r_type_next_reg[2]_i_4 
       (.I0(Q[1]),
        .I1(Q[0]),
        .O(\mcp1_r_type_next_reg[2]_i_4_n_0 ));
  LUT3 #(
    .INIT(8'hBA)) 
    \mcp1_r_type_next_reg[2]_i_5 
       (.I0(out),
        .I1(Q[0]),
        .I2(Q[1]),
        .O(\mcp1_r_type_next_reg[2]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h00C2000200020002)) 
    \mcp1_r_type_next_reg[2]_i_7 
       (.I0(\mcp1_r_type_next_reg[2]_i_16_n_0 ),
        .I1(Q[4]),
        .I2(Q[3]),
        .I3(\mcp1_r_type_next_reg[2]_i_17_n_0 ),
        .I4(\mcp1_r_type_next_reg[2]_i_18_n_0 ),
        .I5(\mcp1_r_type_next_reg[2]_i_19_n_0 ),
        .O(\mcp1_r_type_next_reg[2]_i_7_n_0 ));
  LUT4 #(
    .INIT(16'hFFDF)) 
    \mcp1_r_type_next_reg[2]_i_8 
       (.I0(Q[3]),
        .I1(Q[4]),
        .I2(Q[2]),
        .I3(Q[9]),
        .O(\mcp1_r_type_next_reg[2]_i_8_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair210" *) 
  LUT4 #(
    .INIT(16'h0040)) 
    \mcp1_r_type_next_reg[2]_i_9 
       (.I0(Q[5]),
        .I1(Q[7]),
        .I2(Q[6]),
        .I3(Q[8]),
        .O(\mcp1_r_type_next_reg[2]_i_9_n_0 ));
  FDRE \mcp1_r_type_next_reg_reg[0] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(\mcp1_r_type_next_reg[0]_i_1_n_0 ),
        .Q(r_type_next[0]),
        .R(1'b0));
  FDRE \mcp1_r_type_next_reg_reg[1] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(\mcp1_r_type_next_reg[1]_i_1_n_0 ),
        .Q(r_type_next[1]),
        .R(1'b0));
  FDRE \mcp1_r_type_next_reg_reg[2] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(\mcp1_r_type_next_reg[2]_i_1_n_0 ),
        .Q(r_type_next[2]),
        .R(1'b0));
  FDRE \mcp1_r_type_reg_reg[0] 
       (.C(rxusrclk2),
        .CE(\mcp1_dec_c4_reg[7]_0 [0]),
        .D(r_type_next[0]),
        .Q(\mcp1_r_type_reg_reg[2]_0 [0]),
        .R(out));
  FDSE \mcp1_r_type_reg_reg[1] 
       (.C(rxusrclk2),
        .CE(\mcp1_dec_c4_reg[7]_0 [0]),
        .D(r_type_next[1]),
        .Q(\mcp1_r_type_reg_reg[2]_0 [1]),
        .S(out));
  FDRE \mcp1_r_type_reg_reg[2] 
       (.C(rxusrclk2),
        .CE(\mcp1_dec_c4_reg[7]_0 [0]),
        .D(r_type_next[2]),
        .Q(\mcp1_r_type_reg_reg[2]_0 [2]),
        .R(out));
  LUT6 #(
    .INIT(64'hEE0EFFFFEE0E0000)) 
    \mcp1_rx_64_ctrl_out[0]_i_1 
       (.I0(\mcp1_rx_64_ctrl_out[0]_i_2_n_0 ),
        .I1(\mcp1_rx_64_ctrl_out[0]_i_3_n_0 ),
        .I2(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I3(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .I4(\mcp1_rx_64_ctrl_out_reg[1]_0 ),
        .I5(\mcp1_rx_64_ctrl_out_reg_n_0_[0] ),
        .O(\mcp1_rx_64_ctrl_out[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h7DEBEB7DFFFFFFFF)) 
    \mcp1_rx_64_ctrl_out[0]_i_2 
       (.I0(mcp1_block_field_reg[2]),
        .I1(mcp1_block_field_reg[5]),
        .I2(mcp1_block_field_reg[4]),
        .I3(mcp1_block_field_reg[0]),
        .I4(mcp1_block_field_reg[1]),
        .I5(mcp1_block_field_reg[7]),
        .O(\mcp1_rx_64_ctrl_out[0]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair197" *) 
  LUT5 #(
    .INIT(32'h7BDEEDBF)) 
    \mcp1_rx_64_ctrl_out[0]_i_3 
       (.I0(mcp1_block_field_reg[1]),
        .I1(mcp1_block_field_reg[2]),
        .I2(mcp1_block_field_reg[4]),
        .I3(mcp1_block_field_reg[3]),
        .I4(mcp1_block_field_reg[6]),
        .O(\mcp1_rx_64_ctrl_out[0]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAEAAAAAAAAAAA)) 
    \mcp1_rx_64_ctrl_out[1]_i_1 
       (.I0(\mcp1_rx_64_ctrl_out[3]_i_2_n_0 ),
        .I1(mcp1_block_field_reg[1]),
        .I2(mcp1_block_field_reg[4]),
        .I3(\mcp1_rx_64_ctrl_out[1]_i_2_n_0 ),
        .I4(mcp1_block_field_reg[0]),
        .I5(\mcp1_rx_64_ctrl_out[1]_i_3_n_0 ),
        .O(mcp1_rx_64_ctrl_out[1]));
  (* SOFT_HLUTNM = "soft_lutpair193" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \mcp1_rx_64_ctrl_out[1]_i_2 
       (.I0(mcp1_block_field_reg[3]),
        .I1(mcp1_block_field_reg[2]),
        .O(\mcp1_rx_64_ctrl_out[1]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair217" *) 
  LUT3 #(
    .INIT(8'h01)) 
    \mcp1_rx_64_ctrl_out[1]_i_3 
       (.I0(mcp1_block_field_reg[6]),
        .I1(mcp1_block_field_reg[7]),
        .I2(mcp1_block_field_reg[5]),
        .O(\mcp1_rx_64_ctrl_out[1]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h0000000002282880)) 
    \mcp1_rx_64_ctrl_out[2]_i_1 
       (.I0(\mcp1_rx_64_ctrl_out[2]_i_2_n_0 ),
        .I1(mcp1_block_field_reg[4]),
        .I2(mcp1_block_field_reg[7]),
        .I3(mcp1_block_field_reg[2]),
        .I4(mcp1_block_field_reg[5]),
        .I5(mcp1_block_field_reg[6]),
        .O(mcp1_rx_64_ctrl_out[2]));
  LUT6 #(
    .INIT(64'h3880048008403440)) 
    \mcp1_rx_64_ctrl_out[2]_i_2 
       (.I0(mcp1_block_field_reg[5]),
        .I1(mcp1_block_field_reg[0]),
        .I2(mcp1_block_field_reg[3]),
        .I3(mcp1_block_field_reg[1]),
        .I4(mcp1_block_field_reg[4]),
        .I5(mcp1_block_field_reg[2]),
        .O(\mcp1_rx_64_ctrl_out[2]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAEBAAAAAAAA)) 
    \mcp1_rx_64_ctrl_out[3]_i_1 
       (.I0(\mcp1_rx_64_ctrl_out[3]_i_2_n_0 ),
        .I1(mcp1_block_field_reg[7]),
        .I2(mcp1_block_field_reg[5]),
        .I3(\mcp1_rx_64_ctrl_out[3]_i_3_n_0 ),
        .I4(mcp1_block_field_reg[0]),
        .I5(\mcp1_rx_64_ctrl_out[3]_i_4_n_0 ),
        .O(mcp1_rx_64_ctrl_out[3]));
  LUT3 #(
    .INIT(8'h02)) 
    \mcp1_rx_64_ctrl_out[3]_i_2 
       (.I0(mcp1_block_field_reg[0]),
        .I1(\mcp1_rx_64_ctrl_out[3]_i_5_n_0 ),
        .I2(mcp1_block_field_reg[6]),
        .O(\mcp1_rx_64_ctrl_out[3]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair217" *) 
  LUT3 #(
    .INIT(8'hAB)) 
    \mcp1_rx_64_ctrl_out[3]_i_3 
       (.I0(mcp1_block_field_reg[6]),
        .I1(mcp1_block_field_reg[7]),
        .I2(mcp1_block_field_reg[4]),
        .O(\mcp1_rx_64_ctrl_out[3]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair193" *) 
  LUT5 #(
    .INIT(32'h1008B000)) 
    \mcp1_rx_64_ctrl_out[3]_i_4 
       (.I0(mcp1_block_field_reg[2]),
        .I1(mcp1_block_field_reg[4]),
        .I2(mcp1_block_field_reg[1]),
        .I3(mcp1_block_field_reg[3]),
        .I4(mcp1_block_field_reg[5]),
        .O(\mcp1_rx_64_ctrl_out[3]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFBDFFDBFFFFF)) 
    \mcp1_rx_64_ctrl_out[3]_i_5 
       (.I0(mcp1_block_field_reg[3]),
        .I1(mcp1_block_field_reg[1]),
        .I2(mcp1_block_field_reg[4]),
        .I3(mcp1_block_field_reg[2]),
        .I4(mcp1_block_field_reg[5]),
        .I5(mcp1_block_field_reg[7]),
        .O(\mcp1_rx_64_ctrl_out[3]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hEE0EFFFFEE0E0000)) 
    \mcp1_rx_64_ctrl_out[4]_i_1 
       (.I0(\mcp1_rx_64_ctrl_out[4]_i_2_n_0 ),
        .I1(\mcp1_rx_64_ctrl_out[4]_i_3_n_0 ),
        .I2(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I3(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .I4(\mcp1_rx_64_ctrl_out_reg[1]_0 ),
        .I5(\mcp1_rx_64_ctrl_out_reg_n_0_[4] ),
        .O(\mcp1_rx_64_ctrl_out[4]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h77D6FFD7)) 
    \mcp1_rx_64_ctrl_out[4]_i_2 
       (.I0(mcp1_block_field_reg[4]),
        .I1(mcp1_block_field_reg[1]),
        .I2(mcp1_block_field_reg[3]),
        .I3(mcp1_block_field_reg[2]),
        .I4(mcp1_block_field_reg[0]),
        .O(\mcp1_rx_64_ctrl_out[4]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h5FFFFFDFFDFF5FFF)) 
    \mcp1_rx_64_ctrl_out[4]_i_3 
       (.I0(mcp1_block_field_reg[6]),
        .I1(mcp1_block_field_reg[0]),
        .I2(mcp1_block_field_reg[7]),
        .I3(mcp1_block_field_reg[5]),
        .I4(mcp1_block_field_reg[3]),
        .I5(mcp1_block_field_reg[1]),
        .O(\mcp1_rx_64_ctrl_out[4]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'h2F20)) 
    \mcp1_rx_64_ctrl_out[5]_i_1 
       (.I0(\mcp1_rx_64_ctrl_out[5]_i_2_n_0 ),
        .I1(\mcp1_rx_64_ctrl_out[5]_i_3_n_0 ),
        .I2(mcp1_block_field_reg[0]),
        .I3(\mcp1_rx_64_ctrl_out_reg[7]_i_5_n_0 ),
        .O(mcp1_rx_64_ctrl_out[5]));
  (* SOFT_HLUTNM = "soft_lutpair197" *) 
  LUT5 #(
    .INIT(32'h02220240)) 
    \mcp1_rx_64_ctrl_out[5]_i_2 
       (.I0(mcp1_block_field_reg[1]),
        .I1(mcp1_block_field_reg[4]),
        .I2(mcp1_block_field_reg[3]),
        .I3(mcp1_block_field_reg[2]),
        .I4(mcp1_block_field_reg[6]),
        .O(\mcp1_rx_64_ctrl_out[5]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair203" *) 
  LUT4 #(
    .INIT(16'hEBFB)) 
    \mcp1_rx_64_ctrl_out[5]_i_3 
       (.I0(mcp1_block_field_reg[5]),
        .I1(mcp1_block_field_reg[7]),
        .I2(mcp1_block_field_reg[6]),
        .I3(mcp1_block_field_reg[3]),
        .O(\mcp1_rx_64_ctrl_out[5]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \mcp1_rx_64_ctrl_out[6]_i_1 
       (.I0(\mcp1_rx_64_ctrl_out[6]_i_2_n_0 ),
        .I1(mcp1_block_field_reg[1]),
        .I2(\mcp1_rx_64_ctrl_out[7]_i_4_n_0 ),
        .I3(mcp1_block_field_reg[0]),
        .I4(\mcp1_rx_64_ctrl_out_reg[7]_i_5_n_0 ),
        .O(mcp1_rx_64_ctrl_out[6]));
  LUT6 #(
    .INIT(64'h0000000000000420)) 
    \mcp1_rx_64_ctrl_out[6]_i_2 
       (.I0(mcp1_block_field_reg[3]),
        .I1(mcp1_block_field_reg[2]),
        .I2(mcp1_block_field_reg[6]),
        .I3(mcp1_block_field_reg[7]),
        .I4(mcp1_block_field_reg[4]),
        .I5(mcp1_block_field_reg[5]),
        .O(\mcp1_rx_64_ctrl_out[6]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hAEAA)) 
    \mcp1_rx_64_ctrl_out[7]_i_1 
       (.I0(out),
        .I1(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I2(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .I3(\mcp1_rx_64_ctrl_out_reg[1]_0 ),
        .O(\mcp1_rx_64_ctrl_out[7]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \mcp1_rx_64_ctrl_out[7]_i_2 
       (.I0(\mcp1_rx_64_ctrl_out[7]_i_3_n_0 ),
        .I1(mcp1_block_field_reg[1]),
        .I2(\mcp1_rx_64_ctrl_out[7]_i_4_n_0 ),
        .I3(mcp1_block_field_reg[0]),
        .I4(\mcp1_rx_64_ctrl_out_reg[7]_i_5_n_0 ),
        .O(mcp1_rx_64_ctrl_out[7]));
  LUT6 #(
    .INIT(64'h8000000000040200)) 
    \mcp1_rx_64_ctrl_out[7]_i_3 
       (.I0(mcp1_block_field_reg[2]),
        .I1(mcp1_block_field_reg[3]),
        .I2(mcp1_block_field_reg[4]),
        .I3(mcp1_block_field_reg[7]),
        .I4(mcp1_block_field_reg[6]),
        .I5(mcp1_block_field_reg[5]),
        .O(\mcp1_rx_64_ctrl_out[7]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h0000000010000080)) 
    \mcp1_rx_64_ctrl_out[7]_i_4 
       (.I0(mcp1_block_field_reg[4]),
        .I1(mcp1_block_field_reg[3]),
        .I2(mcp1_block_field_reg[7]),
        .I3(mcp1_block_field_reg[5]),
        .I4(mcp1_block_field_reg[6]),
        .I5(mcp1_block_field_reg[2]),
        .O(\mcp1_rx_64_ctrl_out[7]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h0008000020000000)) 
    \mcp1_rx_64_ctrl_out[7]_i_6 
       (.I0(mcp1_block_field_reg[2]),
        .I1(mcp1_block_field_reg[3]),
        .I2(mcp1_block_field_reg[4]),
        .I3(mcp1_block_field_reg[5]),
        .I4(mcp1_block_field_reg[7]),
        .I5(mcp1_block_field_reg[6]),
        .O(\mcp1_rx_64_ctrl_out[7]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h0100000000400800)) 
    \mcp1_rx_64_ctrl_out[7]_i_7 
       (.I0(mcp1_block_field_reg[6]),
        .I1(mcp1_block_field_reg[7]),
        .I2(mcp1_block_field_reg[5]),
        .I3(mcp1_block_field_reg[4]),
        .I4(mcp1_block_field_reg[3]),
        .I5(mcp1_block_field_reg[2]),
        .O(\mcp1_rx_64_ctrl_out[7]_i_7_n_0 ));
  FDSE \mcp1_rx_64_ctrl_out_reg[0] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(\mcp1_rx_64_ctrl_out[0]_i_1_n_0 ),
        .Q(\mcp1_rx_64_ctrl_out_reg_n_0_[0] ),
        .S(out));
  FDRE \mcp1_rx_64_ctrl_out_reg[1] 
       (.C(rxusrclk2),
        .CE(\mcp1_dec_c4_reg[7]_0 [0]),
        .D(mcp1_rx_64_ctrl_out[1]),
        .Q(\mcp1_rx_64_ctrl_out_reg_n_0_[1] ),
        .R(\mcp1_rx_64_ctrl_out[7]_i_1_n_0 ));
  FDRE \mcp1_rx_64_ctrl_out_reg[2] 
       (.C(rxusrclk2),
        .CE(\mcp1_dec_c4_reg[7]_0 [0]),
        .D(mcp1_rx_64_ctrl_out[2]),
        .Q(\mcp1_rx_64_ctrl_out_reg_n_0_[2] ),
        .R(\mcp1_rx_64_ctrl_out[7]_i_1_n_0 ));
  FDRE \mcp1_rx_64_ctrl_out_reg[3] 
       (.C(rxusrclk2),
        .CE(\mcp1_dec_c4_reg[7]_0 [0]),
        .D(mcp1_rx_64_ctrl_out[3]),
        .Q(\mcp1_rx_64_ctrl_out_reg_n_0_[3] ),
        .R(\mcp1_rx_64_ctrl_out[7]_i_1_n_0 ));
  FDSE \mcp1_rx_64_ctrl_out_reg[4] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(\mcp1_rx_64_ctrl_out[4]_i_1_n_0 ),
        .Q(\mcp1_rx_64_ctrl_out_reg_n_0_[4] ),
        .S(out));
  FDRE \mcp1_rx_64_ctrl_out_reg[5] 
       (.C(rxusrclk2),
        .CE(\mcp1_dec_c4_reg[7]_0 [0]),
        .D(mcp1_rx_64_ctrl_out[5]),
        .Q(\mcp1_rx_64_ctrl_out_reg_n_0_[5] ),
        .R(\mcp1_rx_64_ctrl_out[7]_i_1_n_0 ));
  FDRE \mcp1_rx_64_ctrl_out_reg[6] 
       (.C(rxusrclk2),
        .CE(\mcp1_dec_c4_reg[7]_0 [0]),
        .D(mcp1_rx_64_ctrl_out[6]),
        .Q(\mcp1_rx_64_ctrl_out_reg_n_0_[6] ),
        .R(\mcp1_rx_64_ctrl_out[7]_i_1_n_0 ));
  FDRE \mcp1_rx_64_ctrl_out_reg[7] 
       (.C(rxusrclk2),
        .CE(\mcp1_dec_c4_reg[7]_0 [0]),
        .D(mcp1_rx_64_ctrl_out[7]),
        .Q(\mcp1_rx_64_ctrl_out_reg_n_0_[7] ),
        .R(\mcp1_rx_64_ctrl_out[7]_i_1_n_0 ));
  MUXF7 \mcp1_rx_64_ctrl_out_reg[7]_i_5 
       (.I0(\mcp1_rx_64_ctrl_out[7]_i_6_n_0 ),
        .I1(\mcp1_rx_64_ctrl_out[7]_i_7_n_0 ),
        .O(\mcp1_rx_64_ctrl_out_reg[7]_i_5_n_0 ),
        .S(mcp1_block_field_reg[1]));
  LUT4 #(
    .INIT(16'hFB08)) 
    \mcp1_rx_64_data_out[0]_i_1 
       (.I0(mcp1_block_field_reg[0]),
        .I1(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I2(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .I3(\mcp1_rx_64_data_out[0]_i_2_n_0 ),
        .O(\mcp1_rx_64_data_out[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hEEAF480DA6AB0009)) 
    \mcp1_rx_64_data_out[0]_i_2 
       (.I0(\mcp1_rx_64_data_out[63]_i_2_n_0 ),
        .I1(\mcp1_rx_64_data_out[63]_i_6_n_0 ),
        .I2(\mcp1_rx_64_data_out[63]_i_7_n_0 ),
        .I3(\mcp1_rx_64_data_out[56]_i_3_n_0 ),
        .I4(data8[0]),
        .I5(data0[0]),
        .O(\mcp1_rx_64_data_out[0]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFF00FF00E200FFFF)) 
    \mcp1_rx_64_data_out[10]_i_1 
       (.I0(\mcp1_rx_64_data_out[30]_i_3_n_0 ),
        .I1(\mcp1_rx_64_data_out[15]_i_2_n_0 ),
        .I2(\mcp1_rx_64_data_out[39]_i_3_n_0 ),
        .I3(data8[2]),
        .I4(\mcp1_rx_64_data_out[10]_i_2_n_0 ),
        .I5(\mcp1_rx_64_data_out[49]_i_2_n_0 ),
        .O(\mcp1_rx_64_data_out[10]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h111D00FF4D7DFFFF)) 
    \mcp1_rx_64_data_out[10]_i_2 
       (.I0(data0[10]),
        .I1(\mcp1_rx_64_data_out[63]_i_7_n_0 ),
        .I2(\mcp1_rx_64_data_out[56]_i_3_n_0 ),
        .I3(data8[10]),
        .I4(\mcp1_rx_64_data_out[63]_i_6_n_0 ),
        .I5(\mcp1_rx_64_data_out[63]_i_2_n_0 ),
        .O(\mcp1_rx_64_data_out[10]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFF00FF00E200FFFF)) 
    \mcp1_rx_64_data_out[11]_i_1 
       (.I0(\mcp1_rx_64_data_out[30]_i_3_n_0 ),
        .I1(\mcp1_rx_64_data_out[15]_i_2_n_0 ),
        .I2(\mcp1_rx_64_data_out[39]_i_3_n_0 ),
        .I3(data8[3]),
        .I4(\mcp1_rx_64_data_out[11]_i_2_n_0 ),
        .I5(\mcp1_rx_64_data_out[49]_i_2_n_0 ),
        .O(\mcp1_rx_64_data_out[11]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h111D00FF4D7DFFFF)) 
    \mcp1_rx_64_data_out[11]_i_2 
       (.I0(data0[11]),
        .I1(\mcp1_rx_64_data_out[63]_i_7_n_0 ),
        .I2(\mcp1_rx_64_data_out[56]_i_3_n_0 ),
        .I3(data8[11]),
        .I4(\mcp1_rx_64_data_out[63]_i_6_n_0 ),
        .I5(\mcp1_rx_64_data_out[63]_i_2_n_0 ),
        .O(\mcp1_rx_64_data_out[11]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFF00FF00E200FFFF)) 
    \mcp1_rx_64_data_out[12]_i_1 
       (.I0(\mcp1_rx_64_data_out[30]_i_3_n_0 ),
        .I1(\mcp1_rx_64_data_out[15]_i_2_n_0 ),
        .I2(\mcp1_rx_64_data_out[39]_i_3_n_0 ),
        .I3(data8[4]),
        .I4(\mcp1_rx_64_data_out[12]_i_2_n_0 ),
        .I5(\mcp1_rx_64_data_out[49]_i_2_n_0 ),
        .O(\mcp1_rx_64_data_out[12]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h111D00FF4D7DFFFF)) 
    \mcp1_rx_64_data_out[12]_i_2 
       (.I0(data0[12]),
        .I1(\mcp1_rx_64_data_out[63]_i_7_n_0 ),
        .I2(\mcp1_rx_64_data_out[56]_i_3_n_0 ),
        .I3(data8[12]),
        .I4(\mcp1_rx_64_data_out[63]_i_6_n_0 ),
        .I5(\mcp1_rx_64_data_out[63]_i_2_n_0 ),
        .O(\mcp1_rx_64_data_out[12]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hE4F4E4F4F5F5E4F4)) 
    \mcp1_rx_64_data_out[13]_i_1 
       (.I0(\mcp1_rx_64_data_out[49]_i_2_n_0 ),
        .I1(\mcp1_rx_64_data_out[13]_i_2_n_0 ),
        .I2(data8[5]),
        .I3(\mcp1_rx_64_data_out[30]_i_4_n_0 ),
        .I4(\mcp1_rx_64_data_out[30]_i_3_n_0 ),
        .I5(\mcp1_rx_64_data_out[13]_i_3_n_0 ),
        .O(\mcp1_rx_64_data_out[13]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFF8A0000F5800000)) 
    \mcp1_rx_64_data_out[13]_i_2 
       (.I0(\mcp1_rx_64_data_out[63]_i_6_n_0 ),
        .I1(\mcp1_rx_64_data_out[56]_i_3_n_0 ),
        .I2(\mcp1_rx_64_data_out[63]_i_7_n_0 ),
        .I3(data8[13]),
        .I4(\mcp1_rx_64_data_out[63]_i_2_n_0 ),
        .I5(data0[13]),
        .O(\mcp1_rx_64_data_out[13]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hDD0DDD0D0000DD0D)) 
    \mcp1_rx_64_data_out[13]_i_3 
       (.I0(data0[13]),
        .I1(\mcp1_rx_64_data_out[31]_i_5_n_0 ),
        .I2(data8[13]),
        .I3(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .I4(data8[5]),
        .I5(\mcp1_rx_64_data_out[15]_i_2_n_0 ),
        .O(\mcp1_rx_64_data_out[13]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFF00FF00E200FFFF)) 
    \mcp1_rx_64_data_out[14]_i_1 
       (.I0(\mcp1_rx_64_data_out[30]_i_3_n_0 ),
        .I1(\mcp1_rx_64_data_out[15]_i_2_n_0 ),
        .I2(\mcp1_rx_64_data_out[39]_i_3_n_0 ),
        .I3(data8[6]),
        .I4(\mcp1_rx_64_data_out[14]_i_2_n_0 ),
        .I5(\mcp1_rx_64_data_out[49]_i_2_n_0 ),
        .O(\mcp1_rx_64_data_out[14]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h111D00FF4D7DFFFF)) 
    \mcp1_rx_64_data_out[14]_i_2 
       (.I0(data0[14]),
        .I1(\mcp1_rx_64_data_out[63]_i_7_n_0 ),
        .I2(\mcp1_rx_64_data_out[56]_i_3_n_0 ),
        .I3(data8[14]),
        .I4(\mcp1_rx_64_data_out[63]_i_6_n_0 ),
        .I5(\mcp1_rx_64_data_out[63]_i_2_n_0 ),
        .O(\mcp1_rx_64_data_out[14]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFF00FF00E200FFFF)) 
    \mcp1_rx_64_data_out[15]_i_1 
       (.I0(\mcp1_rx_64_data_out[30]_i_3_n_0 ),
        .I1(\mcp1_rx_64_data_out[15]_i_2_n_0 ),
        .I2(\mcp1_rx_64_data_out[39]_i_3_n_0 ),
        .I3(data8[7]),
        .I4(\mcp1_rx_64_data_out[15]_i_3_n_0 ),
        .I5(\mcp1_rx_64_data_out[49]_i_2_n_0 ),
        .O(\mcp1_rx_64_data_out[15]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'hB)) 
    \mcp1_rx_64_data_out[15]_i_2 
       (.I0(\mcp1_rx_64_data_out[56]_i_3_n_0 ),
        .I1(\mcp1_rx_64_data_out[63]_i_7_n_0 ),
        .O(\mcp1_rx_64_data_out[15]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h111D00FF4D7DFFFF)) 
    \mcp1_rx_64_data_out[15]_i_3 
       (.I0(data0[15]),
        .I1(\mcp1_rx_64_data_out[63]_i_7_n_0 ),
        .I2(\mcp1_rx_64_data_out[56]_i_3_n_0 ),
        .I3(data8[15]),
        .I4(\mcp1_rx_64_data_out[63]_i_6_n_0 ),
        .I5(\mcp1_rx_64_data_out[63]_i_2_n_0 ),
        .O(\mcp1_rx_64_data_out[15]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hEFEE4544FFFF4544)) 
    \mcp1_rx_64_data_out[16]_i_1 
       (.I0(\mcp1_rx_64_data_out[49]_i_2_n_0 ),
        .I1(\mcp1_rx_64_data_out[16]_i_2_n_0 ),
        .I2(\mcp1_rx_64_data_out[16]_i_3_n_0 ),
        .I3(\mcp1_rx_64_data_out[30]_i_3_n_0 ),
        .I4(data8[8]),
        .I5(\mcp1_rx_64_data_out[30]_i_4_n_0 ),
        .O(\mcp1_rx_64_data_out[16]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hD0D0F000)) 
    \mcp1_rx_64_data_out[16]_i_2 
       (.I0(\mcp1_rx_64_data_out[15]_i_2_n_0 ),
        .I1(data0[16]),
        .I2(\mcp1_rx_64_data_out[63]_i_2_n_0 ),
        .I3(data8[16]),
        .I4(\mcp1_rx_64_data_out[63]_i_6_n_0 ),
        .O(\mcp1_rx_64_data_out[16]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hDD0DDD0D0000DD0D)) 
    \mcp1_rx_64_data_out[16]_i_3 
       (.I0(data0[16]),
        .I1(\mcp1_rx_64_data_out[31]_i_5_n_0 ),
        .I2(data8[8]),
        .I3(\mcp1_rx_64_data_out[15]_i_2_n_0 ),
        .I4(data8[16]),
        .I5(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .O(\mcp1_rx_64_data_out[16]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hA2AFA2A2AFAFAFAF)) 
    \mcp1_rx_64_data_out[17]_i_1 
       (.I0(data8[9]),
        .I1(\mcp1_rx_64_data_out[30]_i_4_n_0 ),
        .I2(\mcp1_rx_64_data_out[49]_i_2_n_0 ),
        .I3(\mcp1_rx_64_data_out[17]_i_2_n_0 ),
        .I4(\mcp1_rx_64_data_out[30]_i_3_n_0 ),
        .I5(\mcp1_rx_64_data_out[17]_i_3_n_0 ),
        .O(\mcp1_rx_64_data_out[17]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hDD0DDD0D0000DD0D)) 
    \mcp1_rx_64_data_out[17]_i_2 
       (.I0(data0[17]),
        .I1(\mcp1_rx_64_data_out[31]_i_5_n_0 ),
        .I2(data8[9]),
        .I3(\mcp1_rx_64_data_out[15]_i_2_n_0 ),
        .I4(data8[17]),
        .I5(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .O(\mcp1_rx_64_data_out[17]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h4C7FFFFF)) 
    \mcp1_rx_64_data_out[17]_i_3 
       (.I0(data0[17]),
        .I1(\mcp1_rx_64_data_out[63]_i_6_n_0 ),
        .I2(\mcp1_rx_64_data_out[15]_i_2_n_0 ),
        .I3(data8[17]),
        .I4(\mcp1_rx_64_data_out[63]_i_2_n_0 ),
        .O(\mcp1_rx_64_data_out[17]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h20EF2020EFEFEFEF)) 
    \mcp1_rx_64_data_out[18]_i_1 
       (.I0(data8[10]),
        .I1(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .I2(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I3(\mcp1_rx_64_data_out[18]_i_2_n_0 ),
        .I4(\mcp1_rx_64_data_out[30]_i_3_n_0 ),
        .I5(\mcp1_rx_64_data_out[18]_i_3_n_0 ),
        .O(\mcp1_rx_64_data_out[18]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hDD0DDD0D0000DD0D)) 
    \mcp1_rx_64_data_out[18]_i_2 
       (.I0(data0[18]),
        .I1(\mcp1_rx_64_data_out[31]_i_5_n_0 ),
        .I2(data8[10]),
        .I3(\mcp1_rx_64_data_out[15]_i_2_n_0 ),
        .I4(data8[18]),
        .I5(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .O(\mcp1_rx_64_data_out[18]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h03DDCFDD03FF03FF)) 
    \mcp1_rx_64_data_out[18]_i_3 
       (.I0(data8[10]),
        .I1(\mcp1_rx_64_data_out[63]_i_6_n_0 ),
        .I2(data8[18]),
        .I3(\mcp1_rx_64_data_out[63]_i_2_n_0 ),
        .I4(data0[18]),
        .I5(\mcp1_rx_64_data_out[15]_i_2_n_0 ),
        .O(\mcp1_rx_64_data_out[18]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hCCAECCFFCCAECCAE)) 
    \mcp1_rx_64_data_out[19]_i_1 
       (.I0(\mcp1_rx_64_data_out[19]_i_2_n_0 ),
        .I1(data8[11]),
        .I2(\mcp1_rx_64_data_out[30]_i_4_n_0 ),
        .I3(\mcp1_rx_64_data_out[49]_i_2_n_0 ),
        .I4(\mcp1_rx_64_data_out[19]_i_3_n_0 ),
        .I5(\mcp1_rx_64_data_out[30]_i_3_n_0 ),
        .O(\mcp1_rx_64_data_out[19]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hD0D0F000)) 
    \mcp1_rx_64_data_out[19]_i_2 
       (.I0(\mcp1_rx_64_data_out[15]_i_2_n_0 ),
        .I1(data0[19]),
        .I2(\mcp1_rx_64_data_out[63]_i_2_n_0 ),
        .I3(data8[19]),
        .I4(\mcp1_rx_64_data_out[63]_i_6_n_0 ),
        .O(\mcp1_rx_64_data_out[19]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hDD0DDD0D0000DD0D)) 
    \mcp1_rx_64_data_out[19]_i_3 
       (.I0(data0[19]),
        .I1(\mcp1_rx_64_data_out[31]_i_5_n_0 ),
        .I2(data8[11]),
        .I3(\mcp1_rx_64_data_out[15]_i_2_n_0 ),
        .I4(data8[19]),
        .I5(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .O(\mcp1_rx_64_data_out[19]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hDDDDDDD0DDD0DDD0)) 
    \mcp1_rx_64_data_out[1]_i_1 
       (.I0(\mcp1_rx_64_data_out[49]_i_2_n_0 ),
        .I1(mcp1_block_field_reg[1]),
        .I2(\mcp1_rx_64_data_out[5]_i_3_n_0 ),
        .I3(\mcp1_rx_64_data_out[1]_i_2_n_0 ),
        .I4(\mcp1_rx_64_data_out[30]_i_3_n_0 ),
        .I5(\mcp1_rx_64_data_out[1]_i_3_n_0 ),
        .O(\mcp1_rx_64_data_out[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hD0D0F0D00000A000)) 
    \mcp1_rx_64_data_out[1]_i_2 
       (.I0(\mcp1_rx_64_data_out[63]_i_6_n_0 ),
        .I1(\mcp1_rx_64_data_out[63]_i_7_n_0 ),
        .I2(\mcp1_rx_64_data_out[63]_i_2_n_0 ),
        .I3(data0[1]),
        .I4(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .I5(data8[1]),
        .O(\mcp1_rx_64_data_out[1]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hA0CAA0CAA0CAAFCA)) 
    \mcp1_rx_64_data_out[1]_i_3 
       (.I0(data0[1]),
        .I1(data8[1]),
        .I2(\mcp1_rx_64_data_out[56]_i_3_n_0 ),
        .I3(\mcp1_rx_64_data_out[63]_i_7_n_0 ),
        .I4(\mcp1_rx_64_data_out[6]_i_6_n_0 ),
        .I5(\mcp1_rx_64_data_out[7]_i_5_n_0 ),
        .O(\mcp1_rx_64_data_out[1]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hCCAECCFFCCAECCAE)) 
    \mcp1_rx_64_data_out[20]_i_1 
       (.I0(\mcp1_rx_64_data_out[20]_i_2_n_0 ),
        .I1(data8[12]),
        .I2(\mcp1_rx_64_data_out[30]_i_4_n_0 ),
        .I3(\mcp1_rx_64_data_out[49]_i_2_n_0 ),
        .I4(\mcp1_rx_64_data_out[20]_i_3_n_0 ),
        .I5(\mcp1_rx_64_data_out[30]_i_3_n_0 ),
        .O(\mcp1_rx_64_data_out[20]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hD0D0F000)) 
    \mcp1_rx_64_data_out[20]_i_2 
       (.I0(\mcp1_rx_64_data_out[15]_i_2_n_0 ),
        .I1(data0[20]),
        .I2(\mcp1_rx_64_data_out[63]_i_2_n_0 ),
        .I3(data8[20]),
        .I4(\mcp1_rx_64_data_out[63]_i_6_n_0 ),
        .O(\mcp1_rx_64_data_out[20]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hDD0DDD0D0000DD0D)) 
    \mcp1_rx_64_data_out[20]_i_3 
       (.I0(data0[20]),
        .I1(\mcp1_rx_64_data_out[31]_i_5_n_0 ),
        .I2(data8[12]),
        .I3(\mcp1_rx_64_data_out[15]_i_2_n_0 ),
        .I4(data8[20]),
        .I5(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .O(\mcp1_rx_64_data_out[20]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hCCAECCFFCCAECCAE)) 
    \mcp1_rx_64_data_out[21]_i_1 
       (.I0(\mcp1_rx_64_data_out[21]_i_2_n_0 ),
        .I1(data8[13]),
        .I2(\mcp1_rx_64_data_out[30]_i_4_n_0 ),
        .I3(\mcp1_rx_64_data_out[49]_i_2_n_0 ),
        .I4(\mcp1_rx_64_data_out[21]_i_3_n_0 ),
        .I5(\mcp1_rx_64_data_out[30]_i_3_n_0 ),
        .O(\mcp1_rx_64_data_out[21]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hD0D0F000)) 
    \mcp1_rx_64_data_out[21]_i_2 
       (.I0(\mcp1_rx_64_data_out[15]_i_2_n_0 ),
        .I1(data0[21]),
        .I2(\mcp1_rx_64_data_out[63]_i_2_n_0 ),
        .I3(data8[21]),
        .I4(\mcp1_rx_64_data_out[63]_i_6_n_0 ),
        .O(\mcp1_rx_64_data_out[21]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hDD0DDD0D0000DD0D)) 
    \mcp1_rx_64_data_out[21]_i_3 
       (.I0(data0[21]),
        .I1(\mcp1_rx_64_data_out[31]_i_5_n_0 ),
        .I2(data8[13]),
        .I3(\mcp1_rx_64_data_out[15]_i_2_n_0 ),
        .I4(data8[21]),
        .I5(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .O(\mcp1_rx_64_data_out[21]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hCCAECCFFCCAECCAE)) 
    \mcp1_rx_64_data_out[22]_i_1 
       (.I0(\mcp1_rx_64_data_out[22]_i_2_n_0 ),
        .I1(data8[14]),
        .I2(\mcp1_rx_64_data_out[30]_i_4_n_0 ),
        .I3(\mcp1_rx_64_data_out[49]_i_2_n_0 ),
        .I4(\mcp1_rx_64_data_out[22]_i_3_n_0 ),
        .I5(\mcp1_rx_64_data_out[30]_i_3_n_0 ),
        .O(\mcp1_rx_64_data_out[22]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hD0D0F000)) 
    \mcp1_rx_64_data_out[22]_i_2 
       (.I0(\mcp1_rx_64_data_out[15]_i_2_n_0 ),
        .I1(data0[22]),
        .I2(\mcp1_rx_64_data_out[63]_i_2_n_0 ),
        .I3(data8[22]),
        .I4(\mcp1_rx_64_data_out[63]_i_6_n_0 ),
        .O(\mcp1_rx_64_data_out[22]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hDD0DDD0D0000DD0D)) 
    \mcp1_rx_64_data_out[22]_i_3 
       (.I0(data0[22]),
        .I1(\mcp1_rx_64_data_out[31]_i_5_n_0 ),
        .I2(data8[14]),
        .I3(\mcp1_rx_64_data_out[15]_i_2_n_0 ),
        .I4(data8[22]),
        .I5(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .O(\mcp1_rx_64_data_out[22]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hCCAECCFFCCAECCAE)) 
    \mcp1_rx_64_data_out[23]_i_1 
       (.I0(\mcp1_rx_64_data_out[23]_i_2_n_0 ),
        .I1(data8[15]),
        .I2(\mcp1_rx_64_data_out[30]_i_4_n_0 ),
        .I3(\mcp1_rx_64_data_out[49]_i_2_n_0 ),
        .I4(\mcp1_rx_64_data_out[23]_i_3_n_0 ),
        .I5(\mcp1_rx_64_data_out[30]_i_3_n_0 ),
        .O(\mcp1_rx_64_data_out[23]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hD0D0F000)) 
    \mcp1_rx_64_data_out[23]_i_2 
       (.I0(\mcp1_rx_64_data_out[15]_i_2_n_0 ),
        .I1(data0[23]),
        .I2(\mcp1_rx_64_data_out[63]_i_2_n_0 ),
        .I3(data8[23]),
        .I4(\mcp1_rx_64_data_out[63]_i_6_n_0 ),
        .O(\mcp1_rx_64_data_out[23]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hDD0DDD0D0000DD0D)) 
    \mcp1_rx_64_data_out[23]_i_3 
       (.I0(data0[23]),
        .I1(\mcp1_rx_64_data_out[31]_i_5_n_0 ),
        .I2(data8[15]),
        .I3(\mcp1_rx_64_data_out[15]_i_2_n_0 ),
        .I4(data8[23]),
        .I5(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .O(\mcp1_rx_64_data_out[23]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h00FDFDFDFDFDFDFD)) 
    \mcp1_rx_64_data_out[24]_i_1 
       (.I0(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I1(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .I2(data8[16]),
        .I3(\mcp1_rx_64_data_out[24]_i_2_n_0 ),
        .I4(\mcp1_rx_64_data_out[24]_i_3_n_0 ),
        .I5(\mcp1_rx_64_data_out[24]_i_4_n_0 ),
        .O(\mcp1_rx_64_data_out[24]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h0F2FFF2F)) 
    \mcp1_rx_64_data_out[24]_i_2 
       (.I0(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .I1(data8[24]),
        .I2(\mcp1_rx_64_data_out[63]_i_2_n_0 ),
        .I3(\mcp1_rx_64_data_out[63]_i_6_n_0 ),
        .I4(data0[24]),
        .O(\mcp1_rx_64_data_out[24]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h00000000FFFFA2FB)) 
    \mcp1_rx_64_data_out[24]_i_3 
       (.I0(\mcp1_rx_64_data_out[63]_i_6_n_0 ),
        .I1(\mcp1_rx_64_data_out[63]_i_7_n_0 ),
        .I2(\mcp1_rx_64_data_out[56]_i_3_n_0 ),
        .I3(data8[16]),
        .I4(\mcp1_rx_64_data_out[63]_i_2_n_0 ),
        .I5(\mcp1_rx_64_data_out[49]_i_2_n_0 ),
        .O(\mcp1_rx_64_data_out[24]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hD0DDFFFF)) 
    \mcp1_rx_64_data_out[24]_i_4 
       (.I0(data8[24]),
        .I1(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .I2(\mcp1_rx_64_data_out[31]_i_5_n_0 ),
        .I3(data0[24]),
        .I4(\mcp1_rx_64_data_out[30]_i_3_n_0 ),
        .O(\mcp1_rx_64_data_out[24]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hEFEFEFEFEF20EFEF)) 
    \mcp1_rx_64_data_out[25]_i_1 
       (.I0(data8[17]),
        .I1(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .I2(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I3(\mcp1_rx_64_data_out[25]_i_2_n_0 ),
        .I4(\mcp1_rx_64_data_out[25]_i_3_n_0 ),
        .I5(\mcp1_rx_64_data_out[25]_i_4_n_0 ),
        .O(\mcp1_rx_64_data_out[25]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h1151004000400040)) 
    \mcp1_rx_64_data_out[25]_i_2 
       (.I0(\mcp1_rx_64_data_out[63]_i_2_n_0 ),
        .I1(\mcp1_rx_64_data_out[63]_i_6_n_0 ),
        .I2(data0[25]),
        .I3(\mcp1_rx_64_data_out[31]_i_5_n_0 ),
        .I4(\mcp1_rx_64_data_out[15]_i_2_n_0 ),
        .I5(data8[17]),
        .O(\mcp1_rx_64_data_out[25]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hD0DDFFFF)) 
    \mcp1_rx_64_data_out[25]_i_3 
       (.I0(data8[17]),
        .I1(\mcp1_rx_64_data_out[15]_i_2_n_0 ),
        .I2(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .I3(data8[25]),
        .I4(\mcp1_rx_64_data_out[30]_i_3_n_0 ),
        .O(\mcp1_rx_64_data_out[25]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hA0A0C000)) 
    \mcp1_rx_64_data_out[25]_i_4 
       (.I0(data0[25]),
        .I1(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .I2(\mcp1_rx_64_data_out[63]_i_2_n_0 ),
        .I3(data8[25]),
        .I4(\mcp1_rx_64_data_out[63]_i_6_n_0 ),
        .O(\mcp1_rx_64_data_out[25]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFF55FF55BA10FF10)) 
    \mcp1_rx_64_data_out[26]_i_1 
       (.I0(\mcp1_rx_64_data_out[49]_i_2_n_0 ),
        .I1(\mcp1_rx_64_data_out[26]_i_2_n_0 ),
        .I2(\mcp1_rx_64_data_out[30]_i_3_n_0 ),
        .I3(data8[18]),
        .I4(\mcp1_rx_64_data_out[30]_i_4_n_0 ),
        .I5(\mcp1_rx_64_data_out[26]_i_3_n_0 ),
        .O(\mcp1_rx_64_data_out[26]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hD0DD0000D0DDD0DD)) 
    \mcp1_rx_64_data_out[26]_i_2 
       (.I0(data8[26]),
        .I1(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .I2(\mcp1_rx_64_data_out[15]_i_2_n_0 ),
        .I3(data8[18]),
        .I4(\mcp1_rx_64_data_out[31]_i_5_n_0 ),
        .I5(data0[26]),
        .O(\mcp1_rx_64_data_out[26]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h8888C0CC)) 
    \mcp1_rx_64_data_out[26]_i_3 
       (.I0(data0[26]),
        .I1(\mcp1_rx_64_data_out[63]_i_2_n_0 ),
        .I2(data8[26]),
        .I3(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .I4(\mcp1_rx_64_data_out[63]_i_6_n_0 ),
        .O(\mcp1_rx_64_data_out[26]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFF55FF55BA10FF10)) 
    \mcp1_rx_64_data_out[27]_i_1 
       (.I0(\mcp1_rx_64_data_out[49]_i_2_n_0 ),
        .I1(\mcp1_rx_64_data_out[27]_i_2_n_0 ),
        .I2(\mcp1_rx_64_data_out[30]_i_3_n_0 ),
        .I3(data8[19]),
        .I4(\mcp1_rx_64_data_out[30]_i_4_n_0 ),
        .I5(\mcp1_rx_64_data_out[27]_i_3_n_0 ),
        .O(\mcp1_rx_64_data_out[27]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hD0DD0000D0DDD0DD)) 
    \mcp1_rx_64_data_out[27]_i_2 
       (.I0(data8[27]),
        .I1(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .I2(\mcp1_rx_64_data_out[15]_i_2_n_0 ),
        .I3(data8[19]),
        .I4(\mcp1_rx_64_data_out[31]_i_5_n_0 ),
        .I5(data0[27]),
        .O(\mcp1_rx_64_data_out[27]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h8C8C808C)) 
    \mcp1_rx_64_data_out[27]_i_3 
       (.I0(data0[27]),
        .I1(\mcp1_rx_64_data_out[63]_i_2_n_0 ),
        .I2(\mcp1_rx_64_data_out[63]_i_6_n_0 ),
        .I3(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .I4(data8[27]),
        .O(\mcp1_rx_64_data_out[27]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFF55FF55BA10FF10)) 
    \mcp1_rx_64_data_out[28]_i_1 
       (.I0(\mcp1_rx_64_data_out[49]_i_2_n_0 ),
        .I1(\mcp1_rx_64_data_out[28]_i_2_n_0 ),
        .I2(\mcp1_rx_64_data_out[30]_i_3_n_0 ),
        .I3(data8[20]),
        .I4(\mcp1_rx_64_data_out[30]_i_4_n_0 ),
        .I5(\mcp1_rx_64_data_out[28]_i_3_n_0 ),
        .O(\mcp1_rx_64_data_out[28]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hD0DD0000D0DDD0DD)) 
    \mcp1_rx_64_data_out[28]_i_2 
       (.I0(data8[28]),
        .I1(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .I2(\mcp1_rx_64_data_out[15]_i_2_n_0 ),
        .I3(data8[20]),
        .I4(\mcp1_rx_64_data_out[31]_i_5_n_0 ),
        .I5(data0[28]),
        .O(\mcp1_rx_64_data_out[28]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h8888C0CC)) 
    \mcp1_rx_64_data_out[28]_i_3 
       (.I0(data0[28]),
        .I1(\mcp1_rx_64_data_out[63]_i_2_n_0 ),
        .I2(data8[28]),
        .I3(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .I4(\mcp1_rx_64_data_out[63]_i_6_n_0 ),
        .O(\mcp1_rx_64_data_out[28]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFF55FF55BA10FF10)) 
    \mcp1_rx_64_data_out[29]_i_1 
       (.I0(\mcp1_rx_64_data_out[49]_i_2_n_0 ),
        .I1(\mcp1_rx_64_data_out[29]_i_2_n_0 ),
        .I2(\mcp1_rx_64_data_out[30]_i_3_n_0 ),
        .I3(data8[21]),
        .I4(\mcp1_rx_64_data_out[30]_i_4_n_0 ),
        .I5(\mcp1_rx_64_data_out[29]_i_3_n_0 ),
        .O(\mcp1_rx_64_data_out[29]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hD0DD0000D0DDD0DD)) 
    \mcp1_rx_64_data_out[29]_i_2 
       (.I0(data8[29]),
        .I1(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .I2(\mcp1_rx_64_data_out[15]_i_2_n_0 ),
        .I3(data8[21]),
        .I4(\mcp1_rx_64_data_out[31]_i_5_n_0 ),
        .I5(data0[29]),
        .O(\mcp1_rx_64_data_out[29]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h8C8C808C)) 
    \mcp1_rx_64_data_out[29]_i_3 
       (.I0(data0[29]),
        .I1(\mcp1_rx_64_data_out[63]_i_2_n_0 ),
        .I2(\mcp1_rx_64_data_out[63]_i_6_n_0 ),
        .I3(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .I4(data8[29]),
        .O(\mcp1_rx_64_data_out[29]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \mcp1_rx_64_data_out[2]_i_1 
       (.I0(mcp1_block_field_reg[2]),
        .I1(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I2(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .I3(\mcp1_rx_64_data_out[2]_i_2_n_0 ),
        .O(\mcp1_rx_64_data_out[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hDDEFDDD88D4ADDD8)) 
    \mcp1_rx_64_data_out[2]_i_2 
       (.I0(\mcp1_rx_64_data_out[63]_i_2_n_0 ),
        .I1(data8[2]),
        .I2(\mcp1_rx_64_data_out[56]_i_3_n_0 ),
        .I3(\mcp1_rx_64_data_out[63]_i_7_n_0 ),
        .I4(\mcp1_rx_64_data_out[63]_i_6_n_0 ),
        .I5(data0[2]),
        .O(\mcp1_rx_64_data_out[2]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFF55FF55BA10FF10)) 
    \mcp1_rx_64_data_out[30]_i_1 
       (.I0(\mcp1_rx_64_data_out[49]_i_2_n_0 ),
        .I1(\mcp1_rx_64_data_out[30]_i_2_n_0 ),
        .I2(\mcp1_rx_64_data_out[30]_i_3_n_0 ),
        .I3(data8[22]),
        .I4(\mcp1_rx_64_data_out[30]_i_4_n_0 ),
        .I5(\mcp1_rx_64_data_out[30]_i_5_n_0 ),
        .O(\mcp1_rx_64_data_out[30]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hD0DD0000D0DDD0DD)) 
    \mcp1_rx_64_data_out[30]_i_2 
       (.I0(data8[30]),
        .I1(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .I2(\mcp1_rx_64_data_out[15]_i_2_n_0 ),
        .I3(data8[22]),
        .I4(\mcp1_rx_64_data_out[31]_i_5_n_0 ),
        .I5(data0[30]),
        .O(\mcp1_rx_64_data_out[30]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \mcp1_rx_64_data_out[30]_i_3 
       (.I0(\mcp1_rx_64_data_out[63]_i_6_n_0 ),
        .I1(\mcp1_rx_64_data_out[63]_i_2_n_0 ),
        .O(\mcp1_rx_64_data_out[30]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair202" *) 
  LUT2 #(
    .INIT(4'h7)) 
    \mcp1_rx_64_data_out[30]_i_4 
       (.I0(\mcp1_rx_64_data_out[39]_i_3_n_0 ),
        .I1(\mcp1_rx_64_data_out[15]_i_2_n_0 ),
        .O(\mcp1_rx_64_data_out[30]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'h8888C0CC)) 
    \mcp1_rx_64_data_out[30]_i_5 
       (.I0(data0[30]),
        .I1(\mcp1_rx_64_data_out[63]_i_2_n_0 ),
        .I2(data8[30]),
        .I3(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .I4(\mcp1_rx_64_data_out[63]_i_6_n_0 ),
        .O(\mcp1_rx_64_data_out[30]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hBBFBFFFFBB0BBB0B)) 
    \mcp1_rx_64_data_out[31]_i_1 
       (.I0(\mcp1_rx_64_data_out[31]_i_2_n_0 ),
        .I1(\mcp1_rx_64_data_out[31]_i_3_n_0 ),
        .I2(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I3(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .I4(\mcp1_rx_64_data_out[31]_i_4_n_0 ),
        .I5(data8[23]),
        .O(\mcp1_rx_64_data_out[31]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h08AA0808)) 
    \mcp1_rx_64_data_out[31]_i_2 
       (.I0(\mcp1_rx_64_data_out[30]_i_3_n_0 ),
        .I1(data8[31]),
        .I2(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .I3(\mcp1_rx_64_data_out[31]_i_5_n_0 ),
        .I4(data0[31]),
        .O(\mcp1_rx_64_data_out[31]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h0F4FFF4F)) 
    \mcp1_rx_64_data_out[31]_i_3 
       (.I0(data8[31]),
        .I1(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .I2(\mcp1_rx_64_data_out[63]_i_2_n_0 ),
        .I3(\mcp1_rx_64_data_out[63]_i_6_n_0 ),
        .I4(data0[31]),
        .O(\mcp1_rx_64_data_out[31]_i_3_n_0 ));
  LUT3 #(
    .INIT(8'h47)) 
    \mcp1_rx_64_data_out[31]_i_4 
       (.I0(\mcp1_rx_64_data_out[39]_i_3_n_0 ),
        .I1(\mcp1_rx_64_data_out[15]_i_2_n_0 ),
        .I2(\mcp1_rx_64_data_out[30]_i_3_n_0 ),
        .O(\mcp1_rx_64_data_out[31]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair200" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \mcp1_rx_64_data_out[31]_i_5 
       (.I0(\mcp1_rx_64_data_out[63]_i_7_n_0 ),
        .I1(\mcp1_rx_64_data_out[56]_i_3_n_0 ),
        .O(\mcp1_rx_64_data_out[31]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hFB08FB08FB08FBFB)) 
    \mcp1_rx_64_data_out[32]_i_1 
       (.I0(data8[24]),
        .I1(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I2(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .I3(\mcp1_rx_64_data_out[32]_i_2_n_0 ),
        .I4(\mcp1_rx_64_data_out[32]_i_3_n_0 ),
        .I5(\mcp1_rx_64_data_out[63]_i_2_n_0 ),
        .O(\mcp1_rx_64_data_out[32]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hF0F0D0D00000D000)) 
    \mcp1_rx_64_data_out[32]_i_2 
       (.I0(\mcp1_rx_64_data_out[63]_i_7_n_0 ),
        .I1(data8[32]),
        .I2(\mcp1_rx_64_data_out[63]_i_2_n_0 ),
        .I3(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .I4(\mcp1_rx_64_data_out[63]_i_6_n_0 ),
        .I5(data0[32]),
        .O(\mcp1_rx_64_data_out[32]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hCC337703FF337703)) 
    \mcp1_rx_64_data_out[32]_i_3 
       (.I0(data8[32]),
        .I1(\mcp1_rx_64_data_out[63]_i_6_n_0 ),
        .I2(data8[24]),
        .I3(\mcp1_rx_64_data_out[56]_i_3_n_0 ),
        .I4(\mcp1_rx_64_data_out[63]_i_7_n_0 ),
        .I5(data0[32]),
        .O(\mcp1_rx_64_data_out[32]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h00000000FEFEFFFE)) 
    \mcp1_rx_64_data_out[33]_i_1 
       (.I0(\mcp1_rx_64_data_out[33]_i_2_n_0 ),
        .I1(\mcp1_rx_64_data_out[33]_i_3_n_0 ),
        .I2(\mcp1_rx_64_data_out[33]_i_4_n_0 ),
        .I3(\mcp1_rx_64_data_out[33]_i_5_n_0 ),
        .I4(\mcp1_rx_64_data_out[33]_i_6_n_0 ),
        .I5(\mcp1_rx_64_data_out[33]_i_7_n_0 ),
        .O(\mcp1_rx_64_data_out[33]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h828A8088)) 
    \mcp1_rx_64_data_out[33]_i_2 
       (.I0(data0[33]),
        .I1(\mcp1_rx_64_data_out[63]_i_2_n_0 ),
        .I2(\mcp1_rx_64_data_out[63]_i_6_n_0 ),
        .I3(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .I4(\mcp1_rx_64_data_out[63]_i_8_n_0 ),
        .O(\mcp1_rx_64_data_out[33]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h4F444444)) 
    \mcp1_rx_64_data_out[33]_i_3 
       (.I0(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .I1(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I2(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .I3(\mcp1_rx_64_data_out[37]_i_5_n_0 ),
        .I4(\mcp1_rx_64_data_out[39]_i_3_n_0 ),
        .O(\mcp1_rx_64_data_out[33]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair215" *) 
  LUT4 #(
    .INIT(16'h2000)) 
    \mcp1_rx_64_data_out[33]_i_4 
       (.I0(\mcp1_rx_64_data_out[63]_i_7_n_0 ),
        .I1(\mcp1_rx_64_data_out[63]_i_6_n_0 ),
        .I2(data8[33]),
        .I3(\mcp1_rx_64_data_out[63]_i_2_n_0 ),
        .O(\mcp1_rx_64_data_out[33]_i_4_n_0 ));
  LUT4 #(
    .INIT(16'hDDF5)) 
    \mcp1_rx_64_data_out[33]_i_5 
       (.I0(\mcp1_rx_64_data_out[56]_i_3_n_0 ),
        .I1(\mcp1_rx_64_data_out[37]_i_5_n_0 ),
        .I2(data8[33]),
        .I3(\mcp1_rx_64_data_out[63]_i_7_n_0 ),
        .O(\mcp1_rx_64_data_out[33]_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair216" *) 
  LUT4 #(
    .INIT(16'hFF0D)) 
    \mcp1_rx_64_data_out[33]_i_6 
       (.I0(data8[25]),
        .I1(\mcp1_rx_64_data_out[39]_i_2_n_0 ),
        .I2(\mcp1_rx_64_data_out[63]_i_6_n_0 ),
        .I3(\mcp1_rx_64_data_out[63]_i_2_n_0 ),
        .O(\mcp1_rx_64_data_out[33]_i_6_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair213" *) 
  LUT3 #(
    .INIT(8'h04)) 
    \mcp1_rx_64_data_out[33]_i_7 
       (.I0(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .I1(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I2(data8[25]),
        .O(\mcp1_rx_64_data_out[33]_i_7_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair204" *) 
  LUT5 #(
    .INIT(32'hFBFBFB08)) 
    \mcp1_rx_64_data_out[34]_i_1 
       (.I0(data8[26]),
        .I1(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I2(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .I3(\mcp1_rx_64_data_out[34]_i_2_n_0 ),
        .I4(\mcp1_rx_64_data_out[34]_i_3_n_0 ),
        .O(\mcp1_rx_64_data_out[34]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hA888AAAA20002020)) 
    \mcp1_rx_64_data_out[34]_i_2 
       (.I0(\mcp1_rx_64_data_out[63]_i_2_n_0 ),
        .I1(\mcp1_rx_64_data_out[63]_i_6_n_0 ),
        .I2(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .I3(data8[34]),
        .I4(\mcp1_rx_64_data_out[63]_i_7_n_0 ),
        .I5(data0[34]),
        .O(\mcp1_rx_64_data_out[34]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hF888F888F8888888)) 
    \mcp1_rx_64_data_out[34]_i_3 
       (.I0(\mcp1_rx_64_data_out[34]_i_4_n_0 ),
        .I1(\mcp1_rx_64_data_out[39]_i_3_n_0 ),
        .I2(\mcp1_rx_64_data_out[56]_i_3_n_0 ),
        .I3(\mcp1_rx_64_data_out[30]_i_3_n_0 ),
        .I4(data8[34]),
        .I5(\mcp1_rx_64_data_out[63]_i_7_n_0 ),
        .O(\mcp1_rx_64_data_out[34]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'hBFBC)) 
    \mcp1_rx_64_data_out[34]_i_4 
       (.I0(data0[34]),
        .I1(\mcp1_rx_64_data_out[63]_i_7_n_0 ),
        .I2(\mcp1_rx_64_data_out[56]_i_3_n_0 ),
        .I3(data8[26]),
        .O(\mcp1_rx_64_data_out[34]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFB08FBFBFB080808)) 
    \mcp1_rx_64_data_out[35]_i_1 
       (.I0(data8[27]),
        .I1(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I2(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .I3(\mcp1_rx_64_data_out[35]_i_2_n_0 ),
        .I4(\mcp1_rx_64_data_out[63]_i_2_n_0 ),
        .I5(\mcp1_rx_64_data_out[35]_i_3_n_0 ),
        .O(\mcp1_rx_64_data_out[35]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hF0F088FC)) 
    \mcp1_rx_64_data_out[35]_i_2 
       (.I0(data8[35]),
        .I1(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .I2(data0[35]),
        .I3(\mcp1_rx_64_data_out[63]_i_7_n_0 ),
        .I4(\mcp1_rx_64_data_out[63]_i_6_n_0 ),
        .O(\mcp1_rx_64_data_out[35]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFBBFCCCFFBBFC)) 
    \mcp1_rx_64_data_out[35]_i_3 
       (.I0(data8[35]),
        .I1(\mcp1_rx_64_data_out[63]_i_6_n_0 ),
        .I2(data8[27]),
        .I3(\mcp1_rx_64_data_out[56]_i_3_n_0 ),
        .I4(\mcp1_rx_64_data_out[63]_i_7_n_0 ),
        .I5(data0[35]),
        .O(\mcp1_rx_64_data_out[35]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFB08FBFBFB080808)) 
    \mcp1_rx_64_data_out[36]_i_1 
       (.I0(data8[28]),
        .I1(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I2(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .I3(\mcp1_rx_64_data_out[36]_i_2_n_0 ),
        .I4(\mcp1_rx_64_data_out[63]_i_2_n_0 ),
        .I5(\mcp1_rx_64_data_out[36]_i_3_n_0 ),
        .O(\mcp1_rx_64_data_out[36]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hF0F088FC)) 
    \mcp1_rx_64_data_out[36]_i_2 
       (.I0(data8[36]),
        .I1(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .I2(data0[36]),
        .I3(\mcp1_rx_64_data_out[63]_i_7_n_0 ),
        .I4(\mcp1_rx_64_data_out[63]_i_6_n_0 ),
        .O(\mcp1_rx_64_data_out[36]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFCBBFFFFFCBBFFCC)) 
    \mcp1_rx_64_data_out[36]_i_3 
       (.I0(data8[36]),
        .I1(\mcp1_rx_64_data_out[63]_i_6_n_0 ),
        .I2(data0[36]),
        .I3(\mcp1_rx_64_data_out[63]_i_7_n_0 ),
        .I4(\mcp1_rx_64_data_out[56]_i_3_n_0 ),
        .I5(data8[28]),
        .O(\mcp1_rx_64_data_out[36]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFB08FBFBFB08FB08)) 
    \mcp1_rx_64_data_out[37]_i_1 
       (.I0(data8[29]),
        .I1(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I2(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .I3(\mcp1_rx_64_data_out[37]_i_2_n_0 ),
        .I4(\mcp1_rx_64_data_out[37]_i_3_n_0 ),
        .I5(\mcp1_rx_64_data_out[37]_i_4_n_0 ),
        .O(\mcp1_rx_64_data_out[37]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hF0F0D0D00000D000)) 
    \mcp1_rx_64_data_out[37]_i_2 
       (.I0(\mcp1_rx_64_data_out[63]_i_7_n_0 ),
        .I1(data8[37]),
        .I2(\mcp1_rx_64_data_out[63]_i_2_n_0 ),
        .I3(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .I4(\mcp1_rx_64_data_out[63]_i_6_n_0 ),
        .I5(data0[37]),
        .O(\mcp1_rx_64_data_out[37]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAEAAAAAABFAAAAAA)) 
    \mcp1_rx_64_data_out[37]_i_3 
       (.I0(\mcp1_rx_64_data_out[63]_i_2_n_0 ),
        .I1(\mcp1_rx_64_data_out[63]_i_7_n_0 ),
        .I2(\mcp1_rx_64_data_out[37]_i_5_n_0 ),
        .I3(\mcp1_rx_64_data_out[56]_i_3_n_0 ),
        .I4(\mcp1_rx_64_data_out[63]_i_6_n_0 ),
        .I5(data8[37]),
        .O(\mcp1_rx_64_data_out[37]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFCEFCCECFCECCCE)) 
    \mcp1_rx_64_data_out[37]_i_4 
       (.I0(data8[29]),
        .I1(\mcp1_rx_64_data_out[63]_i_6_n_0 ),
        .I2(\mcp1_rx_64_data_out[63]_i_7_n_0 ),
        .I3(\mcp1_rx_64_data_out[56]_i_3_n_0 ),
        .I4(\mcp1_rx_64_data_out[37]_i_5_n_0 ),
        .I5(data0[37]),
        .O(\mcp1_rx_64_data_out[37]_i_4_n_0 ));
  LUT4 #(
    .INIT(16'h7FFE)) 
    \mcp1_rx_64_data_out[37]_i_5 
       (.I0(data8[31]),
        .I1(data8[28]),
        .I2(data8[30]),
        .I3(data8[29]),
        .O(\mcp1_rx_64_data_out[37]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h08FB08FB08FBFBFB)) 
    \mcp1_rx_64_data_out[38]_i_1 
       (.I0(data8[30]),
        .I1(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I2(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .I3(\mcp1_rx_64_data_out[38]_i_2_n_0 ),
        .I4(\mcp1_rx_64_data_out[38]_i_3_n_0 ),
        .I5(\mcp1_rx_64_data_out[63]_i_2_n_0 ),
        .O(\mcp1_rx_64_data_out[38]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0F0F4F4FFFFF4FFF)) 
    \mcp1_rx_64_data_out[38]_i_2 
       (.I0(data8[38]),
        .I1(\mcp1_rx_64_data_out[63]_i_7_n_0 ),
        .I2(\mcp1_rx_64_data_out[63]_i_2_n_0 ),
        .I3(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .I4(\mcp1_rx_64_data_out[63]_i_6_n_0 ),
        .I5(data0[38]),
        .O(\mcp1_rx_64_data_out[38]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hC404FFFFC4040000)) 
    \mcp1_rx_64_data_out[38]_i_3 
       (.I0(data8[38]),
        .I1(\mcp1_rx_64_data_out[56]_i_3_n_0 ),
        .I2(\mcp1_rx_64_data_out[63]_i_7_n_0 ),
        .I3(\mcp1_rx_64_data_out[38]_i_4_n_0 ),
        .I4(\mcp1_rx_64_data_out[63]_i_6_n_0 ),
        .I5(\mcp1_rx_64_data_out[38]_i_5_n_0 ),
        .O(\mcp1_rx_64_data_out[38]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair212" *) 
  LUT4 #(
    .INIT(16'h0001)) 
    \mcp1_rx_64_data_out[38]_i_4 
       (.I0(data8[29]),
        .I1(data8[30]),
        .I2(data8[28]),
        .I3(data8[31]),
        .O(\mcp1_rx_64_data_out[38]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'h0FABFFAB)) 
    \mcp1_rx_64_data_out[38]_i_5 
       (.I0(\mcp1_rx_64_data_out[38]_i_4_n_0 ),
        .I1(data8[30]),
        .I2(\mcp1_rx_64_data_out[56]_i_3_n_0 ),
        .I3(\mcp1_rx_64_data_out[63]_i_7_n_0 ),
        .I4(data0[38]),
        .O(\mcp1_rx_64_data_out[38]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hF0F0F0F00000FB00)) 
    \mcp1_rx_64_data_out[39]_i_1 
       (.I0(\mcp1_rx_64_data_out[39]_i_2_n_0 ),
        .I1(\mcp1_rx_64_data_out[39]_i_3_n_0 ),
        .I2(data8[31]),
        .I3(\mcp1_rx_64_data_out[39]_i_4_n_0 ),
        .I4(\mcp1_rx_64_data_out[39]_i_5_n_0 ),
        .I5(\mcp1_rx_64_data_out[49]_i_2_n_0 ),
        .O(\mcp1_rx_64_data_out[39]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair201" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \mcp1_rx_64_data_out[39]_i_2 
       (.I0(\mcp1_rx_64_data_out[63]_i_7_n_0 ),
        .I1(\mcp1_rx_64_data_out[56]_i_3_n_0 ),
        .O(\mcp1_rx_64_data_out[39]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair199" *) 
  LUT2 #(
    .INIT(4'h1)) 
    \mcp1_rx_64_data_out[39]_i_3 
       (.I0(\mcp1_rx_64_data_out[63]_i_6_n_0 ),
        .I1(\mcp1_rx_64_data_out[63]_i_2_n_0 ),
        .O(\mcp1_rx_64_data_out[39]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFF3FFDFDFD3FFDF)) 
    \mcp1_rx_64_data_out[39]_i_4 
       (.I0(\mcp1_rx_64_data_out[56]_i_3_n_0 ),
        .I1(\mcp1_rx_64_data_out[63]_i_2_n_0 ),
        .I2(\mcp1_rx_64_data_out[63]_i_6_n_0 ),
        .I3(data8[39]),
        .I4(\mcp1_rx_64_data_out[63]_i_7_n_0 ),
        .I5(\mcp1_rx_64_data_out[39]_i_6_n_0 ),
        .O(\mcp1_rx_64_data_out[39]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h0F0F030300001F11)) 
    \mcp1_rx_64_data_out[39]_i_5 
       (.I0(\mcp1_rx_64_data_out[39]_i_6_n_0 ),
        .I1(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .I2(data0[39]),
        .I3(\mcp1_rx_64_data_out[63]_i_8_n_0 ),
        .I4(\mcp1_rx_64_data_out[63]_i_6_n_0 ),
        .I5(\mcp1_rx_64_data_out[63]_i_2_n_0 ),
        .O(\mcp1_rx_64_data_out[39]_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair212" *) 
  LUT4 #(
    .INIT(16'h7FFF)) 
    \mcp1_rx_64_data_out[39]_i_6 
       (.I0(data8[29]),
        .I1(data8[30]),
        .I2(data8[28]),
        .I3(data8[31]),
        .O(\mcp1_rx_64_data_out[39]_i_6_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair214" *) 
  LUT4 #(
    .INIT(16'hFB08)) 
    \mcp1_rx_64_data_out[3]_i_1 
       (.I0(mcp1_block_field_reg[3]),
        .I1(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I2(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .I3(\mcp1_rx_64_data_out[3]_i_2_n_0 ),
        .O(\mcp1_rx_64_data_out[3]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFF679E06FF55FF55)) 
    \mcp1_rx_64_data_out[3]_i_2 
       (.I0(\mcp1_rx_64_data_out[63]_i_2_n_0 ),
        .I1(\mcp1_rx_64_data_out[63]_i_7_n_0 ),
        .I2(\mcp1_rx_64_data_out[56]_i_3_n_0 ),
        .I3(data8[3]),
        .I4(data0[3]),
        .I5(\mcp1_rx_64_data_out[63]_i_6_n_0 ),
        .O(\mcp1_rx_64_data_out[3]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFBFBFBFBFBFBFB08)) 
    \mcp1_rx_64_data_out[40]_i_1 
       (.I0(data8[32]),
        .I1(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I2(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .I3(\mcp1_rx_64_data_out[40]_i_2_n_0 ),
        .I4(\mcp1_rx_64_data_out[40]_i_3_n_0 ),
        .I5(\mcp1_rx_64_data_out[40]_i_4_n_0 ),
        .O(\mcp1_rx_64_data_out[40]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFD000022200000)) 
    \mcp1_rx_64_data_out[40]_i_2 
       (.I0(\mcp1_rx_64_data_out[63]_i_7_n_0 ),
        .I1(\mcp1_rx_64_data_out[63]_i_6_n_0 ),
        .I2(\mcp1_rx_64_data_out[56]_i_3_n_0 ),
        .I3(data8[40]),
        .I4(\mcp1_rx_64_data_out[63]_i_2_n_0 ),
        .I5(data0[40]),
        .O(\mcp1_rx_64_data_out[40]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hAA080808)) 
    \mcp1_rx_64_data_out[40]_i_3 
       (.I0(\mcp1_rx_64_data_out[39]_i_3_n_0 ),
        .I1(data8[32]),
        .I2(\mcp1_rx_64_data_out[63]_i_7_n_0 ),
        .I3(data0[40]),
        .I4(\mcp1_rx_64_data_out[63]_i_8_n_0 ),
        .O(\mcp1_rx_64_data_out[40]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'hE200)) 
    \mcp1_rx_64_data_out[40]_i_4 
       (.I0(data8[40]),
        .I1(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .I2(data8[32]),
        .I3(\mcp1_rx_64_data_out[30]_i_3_n_0 ),
        .O(\mcp1_rx_64_data_out[40]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFBFBFBFBFBFBFB08)) 
    \mcp1_rx_64_data_out[41]_i_1 
       (.I0(data8[33]),
        .I1(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I2(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .I3(\mcp1_rx_64_data_out[41]_i_2_n_0 ),
        .I4(\mcp1_rx_64_data_out[41]_i_3_n_0 ),
        .I5(\mcp1_rx_64_data_out[41]_i_4_n_0 ),
        .O(\mcp1_rx_64_data_out[41]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hD0D0F0D000002000)) 
    \mcp1_rx_64_data_out[41]_i_2 
       (.I0(\mcp1_rx_64_data_out[63]_i_7_n_0 ),
        .I1(\mcp1_rx_64_data_out[63]_i_6_n_0 ),
        .I2(\mcp1_rx_64_data_out[63]_i_2_n_0 ),
        .I3(data8[41]),
        .I4(\mcp1_rx_64_data_out[56]_i_3_n_0 ),
        .I5(data0[41]),
        .O(\mcp1_rx_64_data_out[41]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h80AA8080)) 
    \mcp1_rx_64_data_out[41]_i_3 
       (.I0(\mcp1_rx_64_data_out[39]_i_3_n_0 ),
        .I1(data0[41]),
        .I2(\mcp1_rx_64_data_out[63]_i_8_n_0 ),
        .I3(\mcp1_rx_64_data_out[63]_i_7_n_0 ),
        .I4(data8[33]),
        .O(\mcp1_rx_64_data_out[41]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'hA808)) 
    \mcp1_rx_64_data_out[41]_i_4 
       (.I0(\mcp1_rx_64_data_out[30]_i_3_n_0 ),
        .I1(data8[41]),
        .I2(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .I3(data8[33]),
        .O(\mcp1_rx_64_data_out[41]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFBFBFBFBFBFBFB08)) 
    \mcp1_rx_64_data_out[42]_i_1 
       (.I0(data8[34]),
        .I1(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I2(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .I3(\mcp1_rx_64_data_out[42]_i_2_n_0 ),
        .I4(\mcp1_rx_64_data_out[42]_i_3_n_0 ),
        .I5(\mcp1_rx_64_data_out[42]_i_4_n_0 ),
        .O(\mcp1_rx_64_data_out[42]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFD000022200000)) 
    \mcp1_rx_64_data_out[42]_i_2 
       (.I0(\mcp1_rx_64_data_out[63]_i_7_n_0 ),
        .I1(\mcp1_rx_64_data_out[63]_i_6_n_0 ),
        .I2(\mcp1_rx_64_data_out[56]_i_3_n_0 ),
        .I3(data8[42]),
        .I4(\mcp1_rx_64_data_out[63]_i_2_n_0 ),
        .I5(data0[42]),
        .O(\mcp1_rx_64_data_out[42]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair202" *) 
  LUT5 #(
    .INIT(32'h8A800000)) 
    \mcp1_rx_64_data_out[42]_i_3 
       (.I0(\mcp1_rx_64_data_out[39]_i_3_n_0 ),
        .I1(data0[42]),
        .I2(\mcp1_rx_64_data_out[63]_i_7_n_0 ),
        .I3(data8[34]),
        .I4(\mcp1_rx_64_data_out[15]_i_2_n_0 ),
        .O(\mcp1_rx_64_data_out[42]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'hA808)) 
    \mcp1_rx_64_data_out[42]_i_4 
       (.I0(\mcp1_rx_64_data_out[30]_i_3_n_0 ),
        .I1(data8[42]),
        .I2(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .I3(data8[34]),
        .O(\mcp1_rx_64_data_out[42]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFB08FBFBFB080808)) 
    \mcp1_rx_64_data_out[43]_i_1 
       (.I0(data8[35]),
        .I1(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I2(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .I3(\mcp1_rx_64_data_out[43]_i_2_n_0 ),
        .I4(\mcp1_rx_64_data_out[63]_i_2_n_0 ),
        .I5(\mcp1_rx_64_data_out[43]_i_3_n_0 ),
        .O(\mcp1_rx_64_data_out[43]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair198" *) 
  LUT5 #(
    .INIT(32'hFEFF5400)) 
    \mcp1_rx_64_data_out[43]_i_2 
       (.I0(\mcp1_rx_64_data_out[63]_i_6_n_0 ),
        .I1(data8[43]),
        .I2(\mcp1_rx_64_data_out[56]_i_3_n_0 ),
        .I3(\mcp1_rx_64_data_out[63]_i_7_n_0 ),
        .I4(data0[43]),
        .O(\mcp1_rx_64_data_out[43]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFCCCBBFF30008800)) 
    \mcp1_rx_64_data_out[43]_i_3 
       (.I0(data8[43]),
        .I1(\mcp1_rx_64_data_out[63]_i_6_n_0 ),
        .I2(data0[43]),
        .I3(\mcp1_rx_64_data_out[56]_i_3_n_0 ),
        .I4(\mcp1_rx_64_data_out[63]_i_7_n_0 ),
        .I5(data8[35]),
        .O(\mcp1_rx_64_data_out[43]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hBBBBBBBB8B8B8B88)) 
    \mcp1_rx_64_data_out[44]_i_1 
       (.I0(data8[36]),
        .I1(\mcp1_rx_64_data_out[49]_i_2_n_0 ),
        .I2(\mcp1_rx_64_data_out[44]_i_2_n_0 ),
        .I3(data8[44]),
        .I4(\mcp1_rx_64_data_out[49]_i_3_n_0 ),
        .I5(\mcp1_rx_64_data_out[44]_i_3_n_0 ),
        .O(\mcp1_rx_64_data_out[44]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair215" *) 
  LUT4 #(
    .INIT(16'h0DFF)) 
    \mcp1_rx_64_data_out[44]_i_2 
       (.I0(\mcp1_rx_64_data_out[63]_i_7_n_0 ),
        .I1(\mcp1_rx_64_data_out[63]_i_6_n_0 ),
        .I2(data0[44]),
        .I3(\mcp1_rx_64_data_out[63]_i_2_n_0 ),
        .O(\mcp1_rx_64_data_out[44]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hB800FFFFB800B800)) 
    \mcp1_rx_64_data_out[44]_i_3 
       (.I0(data8[36]),
        .I1(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .I2(data8[44]),
        .I3(\mcp1_rx_64_data_out[30]_i_3_n_0 ),
        .I4(\mcp1_rx_64_data_out[44]_i_4_n_0 ),
        .I5(\mcp1_rx_64_data_out[39]_i_3_n_0 ),
        .O(\mcp1_rx_64_data_out[44]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'h707F)) 
    \mcp1_rx_64_data_out[44]_i_4 
       (.I0(data0[44]),
        .I1(\mcp1_rx_64_data_out[56]_i_3_n_0 ),
        .I2(\mcp1_rx_64_data_out[63]_i_7_n_0 ),
        .I3(data8[36]),
        .O(\mcp1_rx_64_data_out[44]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFBFBFBFBFBFBFB08)) 
    \mcp1_rx_64_data_out[45]_i_1 
       (.I0(data8[37]),
        .I1(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I2(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .I3(\mcp1_rx_64_data_out[45]_i_2_n_0 ),
        .I4(\mcp1_rx_64_data_out[45]_i_3_n_0 ),
        .I5(\mcp1_rx_64_data_out[45]_i_4_n_0 ),
        .O(\mcp1_rx_64_data_out[45]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFD000022200000)) 
    \mcp1_rx_64_data_out[45]_i_2 
       (.I0(\mcp1_rx_64_data_out[63]_i_7_n_0 ),
        .I1(\mcp1_rx_64_data_out[63]_i_6_n_0 ),
        .I2(\mcp1_rx_64_data_out[56]_i_3_n_0 ),
        .I3(data8[45]),
        .I4(\mcp1_rx_64_data_out[63]_i_2_n_0 ),
        .I5(data0[45]),
        .O(\mcp1_rx_64_data_out[45]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hAA080808)) 
    \mcp1_rx_64_data_out[45]_i_3 
       (.I0(\mcp1_rx_64_data_out[39]_i_3_n_0 ),
        .I1(data8[37]),
        .I2(\mcp1_rx_64_data_out[63]_i_7_n_0 ),
        .I3(data0[45]),
        .I4(\mcp1_rx_64_data_out[63]_i_8_n_0 ),
        .O(\mcp1_rx_64_data_out[45]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'hE200)) 
    \mcp1_rx_64_data_out[45]_i_4 
       (.I0(data8[45]),
        .I1(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .I2(data8[37]),
        .I3(\mcp1_rx_64_data_out[30]_i_3_n_0 ),
        .O(\mcp1_rx_64_data_out[45]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFBFBFBFBFBFBFB08)) 
    \mcp1_rx_64_data_out[46]_i_1 
       (.I0(data8[38]),
        .I1(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I2(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .I3(\mcp1_rx_64_data_out[46]_i_2_n_0 ),
        .I4(\mcp1_rx_64_data_out[46]_i_3_n_0 ),
        .I5(\mcp1_rx_64_data_out[46]_i_4_n_0 ),
        .O(\mcp1_rx_64_data_out[46]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFD000022200000)) 
    \mcp1_rx_64_data_out[46]_i_2 
       (.I0(\mcp1_rx_64_data_out[63]_i_7_n_0 ),
        .I1(\mcp1_rx_64_data_out[63]_i_6_n_0 ),
        .I2(\mcp1_rx_64_data_out[56]_i_3_n_0 ),
        .I3(data8[46]),
        .I4(\mcp1_rx_64_data_out[63]_i_2_n_0 ),
        .I5(data0[46]),
        .O(\mcp1_rx_64_data_out[46]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h80AA8080)) 
    \mcp1_rx_64_data_out[46]_i_3 
       (.I0(\mcp1_rx_64_data_out[39]_i_3_n_0 ),
        .I1(data0[46]),
        .I2(\mcp1_rx_64_data_out[63]_i_8_n_0 ),
        .I3(\mcp1_rx_64_data_out[63]_i_7_n_0 ),
        .I4(data8[38]),
        .O(\mcp1_rx_64_data_out[46]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'hA808)) 
    \mcp1_rx_64_data_out[46]_i_4 
       (.I0(\mcp1_rx_64_data_out[30]_i_3_n_0 ),
        .I1(data8[46]),
        .I2(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .I3(data8[38]),
        .O(\mcp1_rx_64_data_out[46]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFBFBFBFBFBFBFB08)) 
    \mcp1_rx_64_data_out[47]_i_1 
       (.I0(data8[39]),
        .I1(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I2(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .I3(\mcp1_rx_64_data_out[47]_i_2_n_0 ),
        .I4(\mcp1_rx_64_data_out[47]_i_3_n_0 ),
        .I5(\mcp1_rx_64_data_out[47]_i_4_n_0 ),
        .O(\mcp1_rx_64_data_out[47]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFD000022200000)) 
    \mcp1_rx_64_data_out[47]_i_2 
       (.I0(\mcp1_rx_64_data_out[63]_i_7_n_0 ),
        .I1(\mcp1_rx_64_data_out[63]_i_6_n_0 ),
        .I2(\mcp1_rx_64_data_out[56]_i_3_n_0 ),
        .I3(data8[47]),
        .I4(\mcp1_rx_64_data_out[63]_i_2_n_0 ),
        .I5(data0[47]),
        .O(\mcp1_rx_64_data_out[47]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hAA080808)) 
    \mcp1_rx_64_data_out[47]_i_3 
       (.I0(\mcp1_rx_64_data_out[39]_i_3_n_0 ),
        .I1(data8[39]),
        .I2(\mcp1_rx_64_data_out[63]_i_7_n_0 ),
        .I3(data0[47]),
        .I4(\mcp1_rx_64_data_out[63]_i_8_n_0 ),
        .O(\mcp1_rx_64_data_out[47]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'hE200)) 
    \mcp1_rx_64_data_out[47]_i_4 
       (.I0(data8[47]),
        .I1(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .I2(data8[39]),
        .I3(\mcp1_rx_64_data_out[30]_i_3_n_0 ),
        .O(\mcp1_rx_64_data_out[47]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hBBBBBBBBBB8B8888)) 
    \mcp1_rx_64_data_out[48]_i_1 
       (.I0(data8[40]),
        .I1(\mcp1_rx_64_data_out[49]_i_2_n_0 ),
        .I2(\mcp1_rx_64_data_out[49]_i_3_n_0 ),
        .I3(data0[48]),
        .I4(\mcp1_rx_64_data_out[63]_i_2_n_0 ),
        .I5(\mcp1_rx_64_data_out[48]_i_2_n_0 ),
        .O(\mcp1_rx_64_data_out[48]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hB800FFFFB800B800)) 
    \mcp1_rx_64_data_out[48]_i_2 
       (.I0(data8[40]),
        .I1(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .I2(data8[48]),
        .I3(\mcp1_rx_64_data_out[30]_i_3_n_0 ),
        .I4(\mcp1_rx_64_data_out[48]_i_3_n_0 ),
        .I5(\mcp1_rx_64_data_out[39]_i_3_n_0 ),
        .O(\mcp1_rx_64_data_out[48]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h707F)) 
    \mcp1_rx_64_data_out[48]_i_3 
       (.I0(data0[48]),
        .I1(\mcp1_rx_64_data_out[56]_i_3_n_0 ),
        .I2(\mcp1_rx_64_data_out[63]_i_7_n_0 ),
        .I3(data8[40]),
        .O(\mcp1_rx_64_data_out[48]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hB8888888BBBBBBBB)) 
    \mcp1_rx_64_data_out[49]_i_1 
       (.I0(data8[41]),
        .I1(\mcp1_rx_64_data_out[49]_i_2_n_0 ),
        .I2(data0[49]),
        .I3(\mcp1_rx_64_data_out[63]_i_2_n_0 ),
        .I4(\mcp1_rx_64_data_out[49]_i_3_n_0 ),
        .I5(\mcp1_rx_64_data_out[49]_i_4_n_0 ),
        .O(\mcp1_rx_64_data_out[49]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair204" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \mcp1_rx_64_data_out[49]_i_2 
       (.I0(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I1(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .O(\mcp1_rx_64_data_out[49]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair198" *) 
  LUT3 #(
    .INIT(8'hFD)) 
    \mcp1_rx_64_data_out[49]_i_3 
       (.I0(\mcp1_rx_64_data_out[63]_i_7_n_0 ),
        .I1(\mcp1_rx_64_data_out[63]_i_6_n_0 ),
        .I2(\mcp1_rx_64_data_out[56]_i_3_n_0 ),
        .O(\mcp1_rx_64_data_out[49]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h47FF000047FF47FF)) 
    \mcp1_rx_64_data_out[49]_i_4 
       (.I0(data8[41]),
        .I1(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .I2(data8[49]),
        .I3(\mcp1_rx_64_data_out[30]_i_3_n_0 ),
        .I4(\mcp1_rx_64_data_out[49]_i_5_n_0 ),
        .I5(\mcp1_rx_64_data_out[39]_i_3_n_0 ),
        .O(\mcp1_rx_64_data_out[49]_i_4_n_0 ));
  LUT4 #(
    .INIT(16'h707F)) 
    \mcp1_rx_64_data_out[49]_i_5 
       (.I0(data0[49]),
        .I1(\mcp1_rx_64_data_out[56]_i_3_n_0 ),
        .I2(\mcp1_rx_64_data_out[63]_i_7_n_0 ),
        .I3(data8[41]),
        .O(\mcp1_rx_64_data_out[49]_i_5_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \mcp1_rx_64_data_out[4]_i_1 
       (.I0(mcp1_block_field_reg[4]),
        .I1(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I2(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .I3(\mcp1_rx_64_data_out[4]_i_2_n_0 ),
        .O(\mcp1_rx_64_data_out[4]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFF679E06FF55FF55)) 
    \mcp1_rx_64_data_out[4]_i_2 
       (.I0(\mcp1_rx_64_data_out[63]_i_2_n_0 ),
        .I1(\mcp1_rx_64_data_out[63]_i_7_n_0 ),
        .I2(\mcp1_rx_64_data_out[56]_i_3_n_0 ),
        .I3(data8[4]),
        .I4(data0[4]),
        .I5(\mcp1_rx_64_data_out[63]_i_6_n_0 ),
        .O(\mcp1_rx_64_data_out[4]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFBFBFBFBFBFBFB08)) 
    \mcp1_rx_64_data_out[50]_i_1 
       (.I0(data8[42]),
        .I1(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I2(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .I3(\mcp1_rx_64_data_out[50]_i_2_n_0 ),
        .I4(\mcp1_rx_64_data_out[50]_i_3_n_0 ),
        .I5(\mcp1_rx_64_data_out[50]_i_4_n_0 ),
        .O(\mcp1_rx_64_data_out[50]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hF000F020)) 
    \mcp1_rx_64_data_out[50]_i_2 
       (.I0(\mcp1_rx_64_data_out[63]_i_7_n_0 ),
        .I1(\mcp1_rx_64_data_out[63]_i_6_n_0 ),
        .I2(\mcp1_rx_64_data_out[63]_i_2_n_0 ),
        .I3(data0[50]),
        .I4(\mcp1_rx_64_data_out[56]_i_3_n_0 ),
        .O(\mcp1_rx_64_data_out[50]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hA8080808)) 
    \mcp1_rx_64_data_out[50]_i_3 
       (.I0(\mcp1_rx_64_data_out[39]_i_3_n_0 ),
        .I1(data8[42]),
        .I2(\mcp1_rx_64_data_out[63]_i_7_n_0 ),
        .I3(\mcp1_rx_64_data_out[56]_i_3_n_0 ),
        .I4(data0[50]),
        .O(\mcp1_rx_64_data_out[50]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hAAA20080)) 
    \mcp1_rx_64_data_out[50]_i_4 
       (.I0(\mcp1_rx_64_data_out[30]_i_3_n_0 ),
        .I1(\mcp1_rx_64_data_out[56]_i_3_n_0 ),
        .I2(data8[50]),
        .I3(\mcp1_rx_64_data_out[63]_i_7_n_0 ),
        .I4(data8[42]),
        .O(\mcp1_rx_64_data_out[50]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFBFBFBFBFBFBFB08)) 
    \mcp1_rx_64_data_out[51]_i_1 
       (.I0(data8[43]),
        .I1(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I2(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .I3(\mcp1_rx_64_data_out[51]_i_2_n_0 ),
        .I4(\mcp1_rx_64_data_out[51]_i_3_n_0 ),
        .I5(\mcp1_rx_64_data_out[51]_i_4_n_0 ),
        .O(\mcp1_rx_64_data_out[51]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hF000F020)) 
    \mcp1_rx_64_data_out[51]_i_2 
       (.I0(\mcp1_rx_64_data_out[63]_i_7_n_0 ),
        .I1(\mcp1_rx_64_data_out[63]_i_6_n_0 ),
        .I2(\mcp1_rx_64_data_out[63]_i_2_n_0 ),
        .I3(data0[51]),
        .I4(\mcp1_rx_64_data_out[56]_i_3_n_0 ),
        .O(\mcp1_rx_64_data_out[51]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hA8080808)) 
    \mcp1_rx_64_data_out[51]_i_3 
       (.I0(\mcp1_rx_64_data_out[39]_i_3_n_0 ),
        .I1(data8[43]),
        .I2(\mcp1_rx_64_data_out[63]_i_7_n_0 ),
        .I3(\mcp1_rx_64_data_out[56]_i_3_n_0 ),
        .I4(data0[51]),
        .O(\mcp1_rx_64_data_out[51]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hAAA20080)) 
    \mcp1_rx_64_data_out[51]_i_4 
       (.I0(\mcp1_rx_64_data_out[30]_i_3_n_0 ),
        .I1(\mcp1_rx_64_data_out[56]_i_3_n_0 ),
        .I2(data8[51]),
        .I3(\mcp1_rx_64_data_out[63]_i_7_n_0 ),
        .I4(data8[43]),
        .O(\mcp1_rx_64_data_out[51]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFBFBFBFBFBFBFB08)) 
    \mcp1_rx_64_data_out[52]_i_1 
       (.I0(data8[44]),
        .I1(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I2(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .I3(\mcp1_rx_64_data_out[52]_i_2_n_0 ),
        .I4(\mcp1_rx_64_data_out[52]_i_3_n_0 ),
        .I5(\mcp1_rx_64_data_out[52]_i_4_n_0 ),
        .O(\mcp1_rx_64_data_out[52]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hF000F020)) 
    \mcp1_rx_64_data_out[52]_i_2 
       (.I0(\mcp1_rx_64_data_out[63]_i_7_n_0 ),
        .I1(\mcp1_rx_64_data_out[63]_i_6_n_0 ),
        .I2(\mcp1_rx_64_data_out[63]_i_2_n_0 ),
        .I3(data0[52]),
        .I4(\mcp1_rx_64_data_out[56]_i_3_n_0 ),
        .O(\mcp1_rx_64_data_out[52]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hA8080808)) 
    \mcp1_rx_64_data_out[52]_i_3 
       (.I0(\mcp1_rx_64_data_out[39]_i_3_n_0 ),
        .I1(data8[44]),
        .I2(\mcp1_rx_64_data_out[63]_i_7_n_0 ),
        .I3(\mcp1_rx_64_data_out[56]_i_3_n_0 ),
        .I4(data0[52]),
        .O(\mcp1_rx_64_data_out[52]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hAAA20080)) 
    \mcp1_rx_64_data_out[52]_i_4 
       (.I0(\mcp1_rx_64_data_out[30]_i_3_n_0 ),
        .I1(\mcp1_rx_64_data_out[56]_i_3_n_0 ),
        .I2(data8[52]),
        .I3(\mcp1_rx_64_data_out[63]_i_7_n_0 ),
        .I4(data8[44]),
        .O(\mcp1_rx_64_data_out[52]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFBFBFBFBFBFBFB08)) 
    \mcp1_rx_64_data_out[53]_i_1 
       (.I0(data8[45]),
        .I1(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I2(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .I3(\mcp1_rx_64_data_out[53]_i_2_n_0 ),
        .I4(\mcp1_rx_64_data_out[53]_i_3_n_0 ),
        .I5(\mcp1_rx_64_data_out[53]_i_4_n_0 ),
        .O(\mcp1_rx_64_data_out[53]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair201" *) 
  LUT5 #(
    .INIT(32'hF000F020)) 
    \mcp1_rx_64_data_out[53]_i_2 
       (.I0(\mcp1_rx_64_data_out[63]_i_7_n_0 ),
        .I1(\mcp1_rx_64_data_out[63]_i_6_n_0 ),
        .I2(\mcp1_rx_64_data_out[63]_i_2_n_0 ),
        .I3(data0[53]),
        .I4(\mcp1_rx_64_data_out[56]_i_3_n_0 ),
        .O(\mcp1_rx_64_data_out[53]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hA8080808)) 
    \mcp1_rx_64_data_out[53]_i_3 
       (.I0(\mcp1_rx_64_data_out[39]_i_3_n_0 ),
        .I1(data8[45]),
        .I2(\mcp1_rx_64_data_out[63]_i_7_n_0 ),
        .I3(\mcp1_rx_64_data_out[56]_i_3_n_0 ),
        .I4(data0[53]),
        .O(\mcp1_rx_64_data_out[53]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hAAA20080)) 
    \mcp1_rx_64_data_out[53]_i_4 
       (.I0(\mcp1_rx_64_data_out[30]_i_3_n_0 ),
        .I1(\mcp1_rx_64_data_out[56]_i_3_n_0 ),
        .I2(data8[53]),
        .I3(\mcp1_rx_64_data_out[63]_i_7_n_0 ),
        .I4(data8[45]),
        .O(\mcp1_rx_64_data_out[53]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFBFBFBFBFBFBFB08)) 
    \mcp1_rx_64_data_out[54]_i_1 
       (.I0(data8[46]),
        .I1(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I2(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .I3(\mcp1_rx_64_data_out[54]_i_2_n_0 ),
        .I4(\mcp1_rx_64_data_out[54]_i_3_n_0 ),
        .I5(\mcp1_rx_64_data_out[54]_i_4_n_0 ),
        .O(\mcp1_rx_64_data_out[54]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair200" *) 
  LUT5 #(
    .INIT(32'hF000F020)) 
    \mcp1_rx_64_data_out[54]_i_2 
       (.I0(\mcp1_rx_64_data_out[63]_i_7_n_0 ),
        .I1(\mcp1_rx_64_data_out[63]_i_6_n_0 ),
        .I2(\mcp1_rx_64_data_out[63]_i_2_n_0 ),
        .I3(data0[54]),
        .I4(\mcp1_rx_64_data_out[56]_i_3_n_0 ),
        .O(\mcp1_rx_64_data_out[54]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hA8080808)) 
    \mcp1_rx_64_data_out[54]_i_3 
       (.I0(\mcp1_rx_64_data_out[39]_i_3_n_0 ),
        .I1(data8[46]),
        .I2(\mcp1_rx_64_data_out[63]_i_7_n_0 ),
        .I3(\mcp1_rx_64_data_out[56]_i_3_n_0 ),
        .I4(data0[54]),
        .O(\mcp1_rx_64_data_out[54]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair194" *) 
  LUT5 #(
    .INIT(32'hAAA20080)) 
    \mcp1_rx_64_data_out[54]_i_4 
       (.I0(\mcp1_rx_64_data_out[30]_i_3_n_0 ),
        .I1(\mcp1_rx_64_data_out[56]_i_3_n_0 ),
        .I2(data8[54]),
        .I3(\mcp1_rx_64_data_out[63]_i_7_n_0 ),
        .I4(data8[46]),
        .O(\mcp1_rx_64_data_out[54]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFBFBFBFBFBFBFB08)) 
    \mcp1_rx_64_data_out[55]_i_1 
       (.I0(data8[47]),
        .I1(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I2(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .I3(\mcp1_rx_64_data_out[55]_i_2_n_0 ),
        .I4(\mcp1_rx_64_data_out[55]_i_3_n_0 ),
        .I5(\mcp1_rx_64_data_out[55]_i_4_n_0 ),
        .O(\mcp1_rx_64_data_out[55]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair199" *) 
  LUT5 #(
    .INIT(32'hF000F020)) 
    \mcp1_rx_64_data_out[55]_i_2 
       (.I0(\mcp1_rx_64_data_out[63]_i_7_n_0 ),
        .I1(\mcp1_rx_64_data_out[63]_i_6_n_0 ),
        .I2(\mcp1_rx_64_data_out[63]_i_2_n_0 ),
        .I3(data0[55]),
        .I4(\mcp1_rx_64_data_out[56]_i_3_n_0 ),
        .O(\mcp1_rx_64_data_out[55]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hA8080808)) 
    \mcp1_rx_64_data_out[55]_i_3 
       (.I0(\mcp1_rx_64_data_out[39]_i_3_n_0 ),
        .I1(data8[47]),
        .I2(\mcp1_rx_64_data_out[63]_i_7_n_0 ),
        .I3(\mcp1_rx_64_data_out[56]_i_3_n_0 ),
        .I4(data0[55]),
        .O(\mcp1_rx_64_data_out[55]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hAAA20080)) 
    \mcp1_rx_64_data_out[55]_i_4 
       (.I0(\mcp1_rx_64_data_out[30]_i_3_n_0 ),
        .I1(\mcp1_rx_64_data_out[56]_i_3_n_0 ),
        .I2(data8[55]),
        .I3(\mcp1_rx_64_data_out[63]_i_7_n_0 ),
        .I4(data8[47]),
        .O(\mcp1_rx_64_data_out[55]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair213" *) 
  LUT4 #(
    .INIT(16'hFB08)) 
    \mcp1_rx_64_data_out[56]_i_1 
       (.I0(data8[48]),
        .I1(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I2(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .I3(\mcp1_rx_64_data_out[56]_i_2_n_0 ),
        .O(\mcp1_rx_64_data_out[56]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hF0F0F0F0FBFF5188)) 
    \mcp1_rx_64_data_out[56]_i_2 
       (.I0(\mcp1_rx_64_data_out[63]_i_6_n_0 ),
        .I1(\mcp1_rx_64_data_out[56]_i_3_n_0 ),
        .I2(data0[56]),
        .I3(\mcp1_rx_64_data_out[63]_i_7_n_0 ),
        .I4(data8[48]),
        .I5(\mcp1_rx_64_data_out[63]_i_2_n_0 ),
        .O(\mcp1_rx_64_data_out[56]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h0000D1D2)) 
    \mcp1_rx_64_data_out[56]_i_3 
       (.I0(mcp1_block_field_reg[5]),
        .I1(mcp1_block_field_reg[7]),
        .I2(mcp1_block_field_reg[4]),
        .I3(mcp1_block_field_reg[6]),
        .I4(\mcp1_rx_64_data_out[56]_i_4_n_0 ),
        .O(\mcp1_rx_64_data_out[56]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFF4BB4)) 
    \mcp1_rx_64_data_out[56]_i_4 
       (.I0(mcp1_block_field_reg[5]),
        .I1(mcp1_block_field_reg[2]),
        .I2(mcp1_block_field_reg[3]),
        .I3(mcp1_block_field_reg[0]),
        .I4(\mcp1_rx_64_data_out[56]_i_5_n_0 ),
        .I5(\mcp1_rx_64_data_out[56]_i_6_n_0 ),
        .O(\mcp1_rx_64_data_out[56]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h6FF69999F99FFFFF)) 
    \mcp1_rx_64_data_out[56]_i_5 
       (.I0(mcp1_block_field_reg[2]),
        .I1(mcp1_block_field_reg[1]),
        .I2(mcp1_block_field_reg[5]),
        .I3(mcp1_block_field_reg[6]),
        .I4(mcp1_block_field_reg[4]),
        .I5(mcp1_block_field_reg[3]),
        .O(\mcp1_rx_64_data_out[56]_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair195" *) 
  LUT4 #(
    .INIT(16'h595A)) 
    \mcp1_rx_64_data_out[56]_i_6 
       (.I0(mcp1_block_field_reg[2]),
        .I1(mcp1_block_field_reg[7]),
        .I2(mcp1_block_field_reg[5]),
        .I3(mcp1_block_field_reg[4]),
        .O(\mcp1_rx_64_data_out[56]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hFB08FBFBFB080808)) 
    \mcp1_rx_64_data_out[57]_i_1 
       (.I0(data8[49]),
        .I1(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I2(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .I3(data0[57]),
        .I4(\mcp1_rx_64_data_out[63]_i_2_n_0 ),
        .I5(\mcp1_rx_64_data_out[57]_i_2_n_0 ),
        .O(\mcp1_rx_64_data_out[57]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hB8883000BBBB3000)) 
    \mcp1_rx_64_data_out[57]_i_2 
       (.I0(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .I1(\mcp1_rx_64_data_out[63]_i_6_n_0 ),
        .I2(\mcp1_rx_64_data_out[63]_i_8_n_0 ),
        .I3(data0[57]),
        .I4(data8[49]),
        .I5(\mcp1_rx_64_data_out[63]_i_7_n_0 ),
        .O(\mcp1_rx_64_data_out[57]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFB08FBFBFB080808)) 
    \mcp1_rx_64_data_out[58]_i_1 
       (.I0(data8[50]),
        .I1(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I2(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .I3(data0[58]),
        .I4(\mcp1_rx_64_data_out[63]_i_2_n_0 ),
        .I5(\mcp1_rx_64_data_out[58]_i_2_n_0 ),
        .O(\mcp1_rx_64_data_out[58]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hF7F7C4F4C4F4C4F4)) 
    \mcp1_rx_64_data_out[58]_i_2 
       (.I0(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .I1(\mcp1_rx_64_data_out[63]_i_6_n_0 ),
        .I2(data8[50]),
        .I3(\mcp1_rx_64_data_out[63]_i_7_n_0 ),
        .I4(data0[58]),
        .I5(\mcp1_rx_64_data_out[63]_i_8_n_0 ),
        .O(\mcp1_rx_64_data_out[58]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFB08FBFBFB080808)) 
    \mcp1_rx_64_data_out[59]_i_1 
       (.I0(data8[51]),
        .I1(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I2(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .I3(data0[59]),
        .I4(\mcp1_rx_64_data_out[63]_i_2_n_0 ),
        .I5(\mcp1_rx_64_data_out[59]_i_2_n_0 ),
        .O(\mcp1_rx_64_data_out[59]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hF7F7C4F4C4F4C4F4)) 
    \mcp1_rx_64_data_out[59]_i_2 
       (.I0(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .I1(\mcp1_rx_64_data_out[63]_i_6_n_0 ),
        .I2(data8[51]),
        .I3(\mcp1_rx_64_data_out[63]_i_7_n_0 ),
        .I4(data0[59]),
        .I5(\mcp1_rx_64_data_out[63]_i_8_n_0 ),
        .O(\mcp1_rx_64_data_out[59]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hEEFE0000EEFEEEFE)) 
    \mcp1_rx_64_data_out[5]_i_1 
       (.I0(\mcp1_rx_64_data_out[5]_i_2_n_0 ),
        .I1(\mcp1_rx_64_data_out[5]_i_3_n_0 ),
        .I2(\mcp1_rx_64_data_out[5]_i_4_n_0 ),
        .I3(\mcp1_rx_64_data_out[5]_i_5_n_0 ),
        .I4(mcp1_block_field_reg[5]),
        .I5(\mcp1_rx_64_data_out[49]_i_2_n_0 ),
        .O(\mcp1_rx_64_data_out[5]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h40)) 
    \mcp1_rx_64_data_out[5]_i_2 
       (.I0(\mcp1_rx_64_data_out[63]_i_6_n_0 ),
        .I1(\mcp1_rx_64_data_out[63]_i_2_n_0 ),
        .I2(data8[5]),
        .O(\mcp1_rx_64_data_out[5]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hF0F0F2F0F0FAF2FA)) 
    \mcp1_rx_64_data_out[5]_i_3 
       (.I0(\mcp1_rx_64_data_out[39]_i_3_n_0 ),
        .I1(\mcp1_rx_64_data_out[7]_i_5_n_0 ),
        .I2(\mcp1_rx_64_data_out[49]_i_2_n_0 ),
        .I3(\mcp1_rx_64_data_out[56]_i_3_n_0 ),
        .I4(\mcp1_rx_64_data_out[6]_i_6_n_0 ),
        .I5(\mcp1_rx_64_data_out[63]_i_7_n_0 ),
        .O(\mcp1_rx_64_data_out[5]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hEEAEEEAEEEAEAAAA)) 
    \mcp1_rx_64_data_out[5]_i_4 
       (.I0(\mcp1_rx_64_data_out[30]_i_3_n_0 ),
        .I1(\mcp1_rx_64_data_out[63]_i_6_n_0 ),
        .I2(\mcp1_rx_64_data_out[63]_i_7_n_0 ),
        .I3(data8[5]),
        .I4(data0[5]),
        .I5(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .O(\mcp1_rx_64_data_out[5]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h0010051050155515)) 
    \mcp1_rx_64_data_out[5]_i_5 
       (.I0(\mcp1_rx_64_data_out[63]_i_2_n_0 ),
        .I1(\mcp1_rx_64_data_out[5]_i_6_n_0 ),
        .I2(\mcp1_rx_64_data_out[63]_i_7_n_0 ),
        .I3(\mcp1_rx_64_data_out[56]_i_3_n_0 ),
        .I4(data8[5]),
        .I5(data0[5]),
        .O(\mcp1_rx_64_data_out[5]_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair211" *) 
  LUT4 #(
    .INIT(16'h7FFE)) 
    \mcp1_rx_64_data_out[5]_i_6 
       (.I0(data8[27]),
        .I1(data8[24]),
        .I2(data8[26]),
        .I3(data8[25]),
        .O(\mcp1_rx_64_data_out[5]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hFB08FBFBFB080808)) 
    \mcp1_rx_64_data_out[60]_i_1 
       (.I0(data8[52]),
        .I1(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I2(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .I3(data0[60]),
        .I4(\mcp1_rx_64_data_out[63]_i_2_n_0 ),
        .I5(\mcp1_rx_64_data_out[60]_i_2_n_0 ),
        .O(\mcp1_rx_64_data_out[60]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hF7F7C4F4C4F4C4F4)) 
    \mcp1_rx_64_data_out[60]_i_2 
       (.I0(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .I1(\mcp1_rx_64_data_out[63]_i_6_n_0 ),
        .I2(data8[52]),
        .I3(\mcp1_rx_64_data_out[63]_i_7_n_0 ),
        .I4(data0[60]),
        .I5(\mcp1_rx_64_data_out[63]_i_8_n_0 ),
        .O(\mcp1_rx_64_data_out[60]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFB08FBFBFB080808)) 
    \mcp1_rx_64_data_out[61]_i_1 
       (.I0(data8[53]),
        .I1(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I2(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .I3(data0[61]),
        .I4(\mcp1_rx_64_data_out[63]_i_2_n_0 ),
        .I5(\mcp1_rx_64_data_out[61]_i_2_n_0 ),
        .O(\mcp1_rx_64_data_out[61]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hF7F7C4F4C4F4C4F4)) 
    \mcp1_rx_64_data_out[61]_i_2 
       (.I0(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .I1(\mcp1_rx_64_data_out[63]_i_6_n_0 ),
        .I2(data8[53]),
        .I3(\mcp1_rx_64_data_out[63]_i_7_n_0 ),
        .I4(data0[61]),
        .I5(\mcp1_rx_64_data_out[63]_i_8_n_0 ),
        .O(\mcp1_rx_64_data_out[61]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFB08FBFBFB080808)) 
    \mcp1_rx_64_data_out[62]_i_1 
       (.I0(data8[54]),
        .I1(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I2(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .I3(data0[62]),
        .I4(\mcp1_rx_64_data_out[63]_i_2_n_0 ),
        .I5(\mcp1_rx_64_data_out[62]_i_2_n_0 ),
        .O(\mcp1_rx_64_data_out[62]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hF7F7C4F4C4F4C4F4)) 
    \mcp1_rx_64_data_out[62]_i_2 
       (.I0(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .I1(\mcp1_rx_64_data_out[63]_i_6_n_0 ),
        .I2(data8[54]),
        .I3(\mcp1_rx_64_data_out[63]_i_7_n_0 ),
        .I4(data0[62]),
        .I5(\mcp1_rx_64_data_out[63]_i_8_n_0 ),
        .O(\mcp1_rx_64_data_out[62]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFB08FBFBFB080808)) 
    \mcp1_rx_64_data_out[63]_i_1 
       (.I0(data8[55]),
        .I1(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I2(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .I3(data0[63]),
        .I4(\mcp1_rx_64_data_out[63]_i_2_n_0 ),
        .I5(\mcp1_rx_64_data_out[63]_i_3_n_0 ),
        .O(\mcp1_rx_64_data_out[63]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair195" *) 
  LUT5 #(
    .INIT(32'hBEEAEBBF)) 
    \mcp1_rx_64_data_out[63]_i_10 
       (.I0(\mcp1_rx_64_data_out[63]_i_13_n_0 ),
        .I1(mcp1_block_field_reg[4]),
        .I2(mcp1_block_field_reg[5]),
        .I3(mcp1_block_field_reg[7]),
        .I4(mcp1_block_field_reg[2]),
        .O(\mcp1_rx_64_data_out[63]_i_10_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair214" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \mcp1_rx_64_data_out[63]_i_11 
       (.I0(mcp1_block_field_reg[6]),
        .I1(mcp1_block_field_reg[3]),
        .O(\mcp1_rx_64_data_out[63]_i_11_n_0 ));
  LUT6 #(
    .INIT(64'h900606900C300C30)) 
    \mcp1_rx_64_data_out[63]_i_12 
       (.I0(mcp1_block_field_reg[5]),
        .I1(mcp1_block_field_reg[0]),
        .I2(mcp1_block_field_reg[3]),
        .I3(mcp1_block_field_reg[1]),
        .I4(mcp1_block_field_reg[4]),
        .I5(mcp1_block_field_reg[2]),
        .O(\mcp1_rx_64_data_out[63]_i_12_n_0 ));
  LUT5 #(
    .INIT(32'h59999555)) 
    \mcp1_rx_64_data_out[63]_i_13 
       (.I0(mcp1_block_field_reg[0]),
        .I1(mcp1_block_field_reg[1]),
        .I2(mcp1_block_field_reg[5]),
        .I3(mcp1_block_field_reg[2]),
        .I4(mcp1_block_field_reg[3]),
        .O(\mcp1_rx_64_data_out[63]_i_13_n_0 ));
  LUT6 #(
    .INIT(64'h0000000016089600)) 
    \mcp1_rx_64_data_out[63]_i_2 
       (.I0(mcp1_block_field_reg[2]),
        .I1(mcp1_block_field_reg[3]),
        .I2(mcp1_block_field_reg[6]),
        .I3(mcp1_block_field_reg[7]),
        .I4(mcp1_block_field_reg[4]),
        .I5(\mcp1_rx_64_data_out[63]_i_4_n_0 ),
        .O(\mcp1_rx_64_data_out[63]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hF7F7C4F4C4F4C4F4)) 
    \mcp1_rx_64_data_out[63]_i_3 
       (.I0(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .I1(\mcp1_rx_64_data_out[63]_i_6_n_0 ),
        .I2(data8[55]),
        .I3(\mcp1_rx_64_data_out[63]_i_7_n_0 ),
        .I4(data0[63]),
        .I5(\mcp1_rx_64_data_out[63]_i_8_n_0 ),
        .O(\mcp1_rx_64_data_out[63]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFBBDEFEFFDFB7F)) 
    \mcp1_rx_64_data_out[63]_i_4 
       (.I0(mcp1_block_field_reg[0]),
        .I1(mcp1_block_field_reg[2]),
        .I2(mcp1_block_field_reg[1]),
        .I3(mcp1_block_field_reg[3]),
        .I4(mcp1_block_field_reg[5]),
        .I5(mcp1_block_field_reg[4]),
        .O(\mcp1_rx_64_data_out[63]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'hB)) 
    \mcp1_rx_64_data_out[63]_i_5 
       (.I0(\mcp1_rx_64_data_out[63]_i_7_n_0 ),
        .I1(\mcp1_rx_64_data_out[56]_i_3_n_0 ),
        .O(\mcp1_rx_64_data_out[63]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h0000000044141444)) 
    \mcp1_rx_64_data_out[63]_i_6 
       (.I0(\mcp1_rx_64_data_out[63]_i_9_n_0 ),
        .I1(mcp1_block_field_reg[1]),
        .I2(mcp1_block_field_reg[3]),
        .I3(mcp1_block_field_reg[4]),
        .I4(mcp1_block_field_reg[2]),
        .I5(\mcp1_rx_64_data_out[63]_i_10_n_0 ),
        .O(\mcp1_rx_64_data_out[63]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hFDFF6FF7FFFFFFFF)) 
    \mcp1_rx_64_data_out[63]_i_7 
       (.I0(mcp1_block_field_reg[2]),
        .I1(mcp1_block_field_reg[7]),
        .I2(mcp1_block_field_reg[5]),
        .I3(mcp1_block_field_reg[4]),
        .I4(\mcp1_rx_64_data_out[63]_i_11_n_0 ),
        .I5(\mcp1_rx_64_data_out[63]_i_12_n_0 ),
        .O(\mcp1_rx_64_data_out[63]_i_7_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair194" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \mcp1_rx_64_data_out[63]_i_8 
       (.I0(\mcp1_rx_64_data_out[63]_i_7_n_0 ),
        .I1(\mcp1_rx_64_data_out[56]_i_3_n_0 ),
        .O(\mcp1_rx_64_data_out[63]_i_8_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair203" *) 
  LUT5 #(
    .INIT(32'h6BFEEBB7)) 
    \mcp1_rx_64_data_out[63]_i_9 
       (.I0(mcp1_block_field_reg[6]),
        .I1(mcp1_block_field_reg[5]),
        .I2(mcp1_block_field_reg[4]),
        .I3(mcp1_block_field_reg[3]),
        .I4(mcp1_block_field_reg[7]),
        .O(\mcp1_rx_64_data_out[63]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'hBBBBBBBBBB8B8888)) 
    \mcp1_rx_64_data_out[6]_i_1 
       (.I0(mcp1_block_field_reg[6]),
        .I1(\mcp1_rx_64_data_out[49]_i_2_n_0 ),
        .I2(\mcp1_rx_64_data_out[6]_i_2_n_0 ),
        .I3(\mcp1_rx_64_data_out[6]_i_3_n_0 ),
        .I4(\mcp1_rx_64_data_out[6]_i_4_n_0 ),
        .I5(\mcp1_rx_64_data_out[6]_i_5_n_0 ),
        .O(\mcp1_rx_64_data_out[6]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair216" *) 
  LUT3 #(
    .INIT(8'hBA)) 
    \mcp1_rx_64_data_out[6]_i_2 
       (.I0(\mcp1_rx_64_data_out[63]_i_2_n_0 ),
        .I1(\mcp1_rx_64_data_out[63]_i_6_n_0 ),
        .I2(\mcp1_rx_64_data_out[39]_i_2_n_0 ),
        .O(\mcp1_rx_64_data_out[6]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h4444444444444440)) 
    \mcp1_rx_64_data_out[6]_i_3 
       (.I0(\mcp1_rx_64_data_out[63]_i_2_n_0 ),
        .I1(\mcp1_rx_64_data_out[56]_i_3_n_0 ),
        .I2(data8[25]),
        .I3(data8[26]),
        .I4(data8[24]),
        .I5(data8[27]),
        .O(\mcp1_rx_64_data_out[6]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hAF3AFFFFA03AFFFF)) 
    \mcp1_rx_64_data_out[6]_i_4 
       (.I0(data0[6]),
        .I1(\mcp1_rx_64_data_out[6]_i_6_n_0 ),
        .I2(\mcp1_rx_64_data_out[63]_i_7_n_0 ),
        .I3(\mcp1_rx_64_data_out[56]_i_3_n_0 ),
        .I4(\mcp1_rx_64_data_out[63]_i_6_n_0 ),
        .I5(data8[6]),
        .O(\mcp1_rx_64_data_out[6]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hF200F200F2005000)) 
    \mcp1_rx_64_data_out[6]_i_5 
       (.I0(\mcp1_rx_64_data_out[63]_i_6_n_0 ),
        .I1(\mcp1_rx_64_data_out[63]_i_7_n_0 ),
        .I2(data8[6]),
        .I3(\mcp1_rx_64_data_out[63]_i_2_n_0 ),
        .I4(data0[6]),
        .I5(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .O(\mcp1_rx_64_data_out[6]_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair211" *) 
  LUT4 #(
    .INIT(16'h0001)) 
    \mcp1_rx_64_data_out[6]_i_6 
       (.I0(data8[25]),
        .I1(data8[26]),
        .I2(data8[24]),
        .I3(data8[27]),
        .O(\mcp1_rx_64_data_out[6]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hEEFE0000EEFEEEFE)) 
    \mcp1_rx_64_data_out[7]_i_1 
       (.I0(\mcp1_rx_64_data_out[7]_i_2_n_0 ),
        .I1(\mcp1_rx_64_data_out[7]_i_3_n_0 ),
        .I2(\mcp1_rx_64_data_out[30]_i_3_n_0 ),
        .I3(\mcp1_rx_64_data_out[7]_i_4_n_0 ),
        .I4(mcp1_block_field_reg[7]),
        .I5(\mcp1_rx_64_data_out[49]_i_2_n_0 ),
        .O(\mcp1_rx_64_data_out[7]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFF5000022200000)) 
    \mcp1_rx_64_data_out[7]_i_2 
       (.I0(\mcp1_rx_64_data_out[63]_i_6_n_0 ),
        .I1(\mcp1_rx_64_data_out[63]_i_7_n_0 ),
        .I2(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .I3(data0[7]),
        .I4(\mcp1_rx_64_data_out[63]_i_2_n_0 ),
        .I5(data8[7]),
        .O(\mcp1_rx_64_data_out[7]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h4FFF4444)) 
    \mcp1_rx_64_data_out[7]_i_3 
       (.I0(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .I1(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I2(\mcp1_rx_64_data_out[7]_i_5_n_0 ),
        .I3(\mcp1_rx_64_data_out[56]_i_3_n_0 ),
        .I4(\mcp1_rx_64_data_out[39]_i_3_n_0 ),
        .O(\mcp1_rx_64_data_out[7]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hDDD0DDD00000DDD0)) 
    \mcp1_rx_64_data_out[7]_i_4 
       (.I0(data0[7]),
        .I1(\mcp1_rx_64_data_out[31]_i_5_n_0 ),
        .I2(\mcp1_rx_64_data_out[15]_i_2_n_0 ),
        .I3(\mcp1_rx_64_data_out[7]_i_5_n_0 ),
        .I4(data8[7]),
        .I5(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .O(\mcp1_rx_64_data_out[7]_i_4_n_0 ));
  LUT4 #(
    .INIT(16'h8000)) 
    \mcp1_rx_64_data_out[7]_i_5 
       (.I0(data8[25]),
        .I1(data8[26]),
        .I2(data8[24]),
        .I3(data8[27]),
        .O(\mcp1_rx_64_data_out[7]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hFFF2FFFFDDD0DDD0)) 
    \mcp1_rx_64_data_out[8]_i_1 
       (.I0(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I1(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .I2(\mcp1_rx_64_data_out[8]_i_2_n_0 ),
        .I3(\mcp1_rx_64_data_out[8]_i_3_n_0 ),
        .I4(\mcp1_rx_64_data_out[31]_i_4_n_0 ),
        .I5(data8[0]),
        .O(\mcp1_rx_64_data_out[8]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFF8A0000F5800000)) 
    \mcp1_rx_64_data_out[8]_i_2 
       (.I0(\mcp1_rx_64_data_out[63]_i_6_n_0 ),
        .I1(\mcp1_rx_64_data_out[56]_i_3_n_0 ),
        .I2(\mcp1_rx_64_data_out[63]_i_7_n_0 ),
        .I3(data8[8]),
        .I4(\mcp1_rx_64_data_out[63]_i_2_n_0 ),
        .I5(data0[8]),
        .O(\mcp1_rx_64_data_out[8]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h08AA0808)) 
    \mcp1_rx_64_data_out[8]_i_3 
       (.I0(\mcp1_rx_64_data_out[30]_i_3_n_0 ),
        .I1(data8[8]),
        .I2(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .I3(\mcp1_rx_64_data_out[31]_i_5_n_0 ),
        .I4(data0[8]),
        .O(\mcp1_rx_64_data_out[8]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hF0F044F4F0F0FFFF)) 
    \mcp1_rx_64_data_out[9]_i_1 
       (.I0(\mcp1_rx_64_data_out[9]_i_2_n_0 ),
        .I1(\mcp1_rx_64_data_out[30]_i_3_n_0 ),
        .I2(data8[1]),
        .I3(\mcp1_rx_64_data_out[30]_i_4_n_0 ),
        .I4(\mcp1_rx_64_data_out[49]_i_2_n_0 ),
        .I5(\mcp1_rx_64_data_out[9]_i_3_n_0 ),
        .O(\mcp1_rx_64_data_out[9]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hDD0DDD0D0000DD0D)) 
    \mcp1_rx_64_data_out[9]_i_2 
       (.I0(data0[9]),
        .I1(\mcp1_rx_64_data_out[31]_i_5_n_0 ),
        .I2(data8[1]),
        .I3(\mcp1_rx_64_data_out[15]_i_2_n_0 ),
        .I4(data8[9]),
        .I5(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .O(\mcp1_rx_64_data_out[9]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h80DDA0FFFFFFFFFF)) 
    \mcp1_rx_64_data_out[9]_i_3 
       (.I0(\mcp1_rx_64_data_out[63]_i_6_n_0 ),
        .I1(\mcp1_rx_64_data_out[63]_i_7_n_0 ),
        .I2(\mcp1_rx_64_data_out[15]_i_2_n_0 ),
        .I3(data8[9]),
        .I4(data0[9]),
        .I5(\mcp1_rx_64_data_out[63]_i_2_n_0 ),
        .O(\mcp1_rx_64_data_out[9]_i_3_n_0 ));
  FDRE \mcp1_rx_64_data_out_reg[0] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_64_data_out_reg[28]_0 ),
        .D(\mcp1_rx_64_data_out[0]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[0]),
        .R(out));
  FDRE \mcp1_rx_64_data_out_reg[10] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_64_data_out_reg[28]_0 ),
        .D(\mcp1_rx_64_data_out[10]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[10]),
        .R(out));
  FDRE \mcp1_rx_64_data_out_reg[11] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_64_data_out_reg[28]_0 ),
        .D(\mcp1_rx_64_data_out[11]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[11]),
        .R(out));
  FDRE \mcp1_rx_64_data_out_reg[12] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_64_data_out_reg[28]_0 ),
        .D(\mcp1_rx_64_data_out[12]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[12]),
        .R(out));
  FDRE \mcp1_rx_64_data_out_reg[13] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_64_data_out_reg[28]_0 ),
        .D(\mcp1_rx_64_data_out[13]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[13]),
        .R(out));
  FDRE \mcp1_rx_64_data_out_reg[14] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_64_data_out_reg[28]_0 ),
        .D(\mcp1_rx_64_data_out[14]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[14]),
        .R(out));
  FDRE \mcp1_rx_64_data_out_reg[15] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_64_data_out_reg[28]_0 ),
        .D(\mcp1_rx_64_data_out[15]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[15]),
        .R(out));
  FDRE \mcp1_rx_64_data_out_reg[16] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_64_data_out_reg[28]_0 ),
        .D(\mcp1_rx_64_data_out[16]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[16]),
        .R(out));
  FDRE \mcp1_rx_64_data_out_reg[17] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_64_data_out_reg[28]_0 ),
        .D(\mcp1_rx_64_data_out[17]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[17]),
        .R(out));
  FDRE \mcp1_rx_64_data_out_reg[18] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_64_data_out_reg[28]_0 ),
        .D(\mcp1_rx_64_data_out[18]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[18]),
        .R(out));
  FDRE \mcp1_rx_64_data_out_reg[19] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_64_data_out_reg[28]_0 ),
        .D(\mcp1_rx_64_data_out[19]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[19]),
        .R(out));
  FDRE \mcp1_rx_64_data_out_reg[1] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_64_data_out_reg[28]_0 ),
        .D(\mcp1_rx_64_data_out[1]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[1]),
        .R(out));
  FDRE \mcp1_rx_64_data_out_reg[20] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_64_data_out_reg[28]_0 ),
        .D(\mcp1_rx_64_data_out[20]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[20]),
        .R(out));
  FDRE \mcp1_rx_64_data_out_reg[21] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_64_data_out_reg[28]_0 ),
        .D(\mcp1_rx_64_data_out[21]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[21]),
        .R(out));
  FDRE \mcp1_rx_64_data_out_reg[22] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_64_data_out_reg[28]_0 ),
        .D(\mcp1_rx_64_data_out[22]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[22]),
        .R(out));
  FDRE \mcp1_rx_64_data_out_reg[23] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_64_data_out_reg[28]_0 ),
        .D(\mcp1_rx_64_data_out[23]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[23]),
        .R(out));
  FDSE \mcp1_rx_64_data_out_reg[24] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_64_data_out_reg[28]_0 ),
        .D(\mcp1_rx_64_data_out[24]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[24]),
        .S(out));
  FDRE \mcp1_rx_64_data_out_reg[25] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_64_data_out_reg[28]_0 ),
        .D(\mcp1_rx_64_data_out[25]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[25]),
        .R(out));
  FDRE \mcp1_rx_64_data_out_reg[26] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_64_data_out_reg[28]_0 ),
        .D(\mcp1_rx_64_data_out[26]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[26]),
        .R(out));
  FDRE \mcp1_rx_64_data_out_reg[27] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_64_data_out_reg[28]_0 ),
        .D(\mcp1_rx_64_data_out[27]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[27]),
        .R(out));
  FDRE \mcp1_rx_64_data_out_reg[28] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_64_data_out_reg[28]_0 ),
        .D(\mcp1_rx_64_data_out[28]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[28]),
        .R(out));
  FDRE \mcp1_rx_64_data_out_reg[29] 
       (.C(rxusrclk2),
        .CE(E[0]),
        .D(\mcp1_rx_64_data_out[29]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[29]),
        .R(out));
  FDSE \mcp1_rx_64_data_out_reg[2] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_64_data_out_reg[28]_0 ),
        .D(\mcp1_rx_64_data_out[2]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[2]),
        .S(out));
  FDRE \mcp1_rx_64_data_out_reg[30] 
       (.C(rxusrclk2),
        .CE(E[0]),
        .D(\mcp1_rx_64_data_out[30]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[30]),
        .R(out));
  FDRE \mcp1_rx_64_data_out_reg[31] 
       (.C(rxusrclk2),
        .CE(E[0]),
        .D(\mcp1_rx_64_data_out[31]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[31]),
        .R(out));
  FDRE \mcp1_rx_64_data_out_reg[32] 
       (.C(rxusrclk2),
        .CE(E[0]),
        .D(\mcp1_rx_64_data_out[32]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[32]),
        .R(out));
  FDRE \mcp1_rx_64_data_out_reg[33] 
       (.C(rxusrclk2),
        .CE(E[0]),
        .D(\mcp1_rx_64_data_out[33]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[33]),
        .R(out));
  FDSE \mcp1_rx_64_data_out_reg[34] 
       (.C(rxusrclk2),
        .CE(E[0]),
        .D(\mcp1_rx_64_data_out[34]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[34]),
        .S(out));
  FDSE \mcp1_rx_64_data_out_reg[35] 
       (.C(rxusrclk2),
        .CE(E[0]),
        .D(\mcp1_rx_64_data_out[35]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[35]),
        .S(out));
  FDSE \mcp1_rx_64_data_out_reg[36] 
       (.C(rxusrclk2),
        .CE(E[0]),
        .D(\mcp1_rx_64_data_out[36]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[36]),
        .S(out));
  FDRE \mcp1_rx_64_data_out_reg[37] 
       (.C(rxusrclk2),
        .CE(E[0]),
        .D(\mcp1_rx_64_data_out[37]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[37]),
        .R(out));
  FDRE \mcp1_rx_64_data_out_reg[38] 
       (.C(rxusrclk2),
        .CE(E[0]),
        .D(\mcp1_rx_64_data_out[38]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[38]),
        .R(out));
  FDSE \mcp1_rx_64_data_out_reg[39] 
       (.C(rxusrclk2),
        .CE(E[0]),
        .D(\mcp1_rx_64_data_out[39]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[39]),
        .S(out));
  FDSE \mcp1_rx_64_data_out_reg[3] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_64_data_out_reg[28]_0 ),
        .D(\mcp1_rx_64_data_out[3]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[3]),
        .S(out));
  FDRE \mcp1_rx_64_data_out_reg[40] 
       (.C(rxusrclk2),
        .CE(E[0]),
        .D(\mcp1_rx_64_data_out[40]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[40]),
        .R(out));
  FDRE \mcp1_rx_64_data_out_reg[41] 
       (.C(rxusrclk2),
        .CE(E[0]),
        .D(\mcp1_rx_64_data_out[41]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[41]),
        .R(out));
  FDRE \mcp1_rx_64_data_out_reg[42] 
       (.C(rxusrclk2),
        .CE(E[0]),
        .D(\mcp1_rx_64_data_out[42]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[42]),
        .R(out));
  FDRE \mcp1_rx_64_data_out_reg[43] 
       (.C(rxusrclk2),
        .CE(E[0]),
        .D(\mcp1_rx_64_data_out[43]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[43]),
        .R(out));
  FDRE \mcp1_rx_64_data_out_reg[44] 
       (.C(rxusrclk2),
        .CE(E[0]),
        .D(\mcp1_rx_64_data_out[44]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[44]),
        .R(out));
  FDRE \mcp1_rx_64_data_out_reg[45] 
       (.C(rxusrclk2),
        .CE(E[0]),
        .D(\mcp1_rx_64_data_out[45]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[45]),
        .R(out));
  FDRE \mcp1_rx_64_data_out_reg[46] 
       (.C(rxusrclk2),
        .CE(E[0]),
        .D(\mcp1_rx_64_data_out[46]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[46]),
        .R(out));
  FDRE \mcp1_rx_64_data_out_reg[47] 
       (.C(rxusrclk2),
        .CE(E[0]),
        .D(\mcp1_rx_64_data_out[47]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[47]),
        .R(out));
  FDRE \mcp1_rx_64_data_out_reg[48] 
       (.C(rxusrclk2),
        .CE(E[0]),
        .D(\mcp1_rx_64_data_out[48]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[48]),
        .R(out));
  FDRE \mcp1_rx_64_data_out_reg[49] 
       (.C(rxusrclk2),
        .CE(E[0]),
        .D(\mcp1_rx_64_data_out[49]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[49]),
        .R(out));
  FDSE \mcp1_rx_64_data_out_reg[4] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_64_data_out_reg[28]_0 ),
        .D(\mcp1_rx_64_data_out[4]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[4]),
        .S(out));
  FDRE \mcp1_rx_64_data_out_reg[50] 
       (.C(rxusrclk2),
        .CE(E[0]),
        .D(\mcp1_rx_64_data_out[50]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[50]),
        .R(out));
  FDRE \mcp1_rx_64_data_out_reg[51] 
       (.C(rxusrclk2),
        .CE(E[0]),
        .D(\mcp1_rx_64_data_out[51]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[51]),
        .R(out));
  FDRE \mcp1_rx_64_data_out_reg[52] 
       (.C(rxusrclk2),
        .CE(E[0]),
        .D(\mcp1_rx_64_data_out[52]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[52]),
        .R(out));
  FDRE \mcp1_rx_64_data_out_reg[53] 
       (.C(rxusrclk2),
        .CE(E[0]),
        .D(\mcp1_rx_64_data_out[53]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[53]),
        .R(out));
  FDRE \mcp1_rx_64_data_out_reg[54] 
       (.C(rxusrclk2),
        .CE(E[0]),
        .D(\mcp1_rx_64_data_out[54]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[54]),
        .R(out));
  FDRE \mcp1_rx_64_data_out_reg[55] 
       (.C(rxusrclk2),
        .CE(E[0]),
        .D(\mcp1_rx_64_data_out[55]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[55]),
        .R(out));
  FDSE \mcp1_rx_64_data_out_reg[56] 
       (.C(rxusrclk2),
        .CE(E[0]),
        .D(\mcp1_rx_64_data_out[56]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[56]),
        .S(out));
  FDRE \mcp1_rx_64_data_out_reg[57] 
       (.C(rxusrclk2),
        .CE(E[0]),
        .D(\mcp1_rx_64_data_out[57]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[57]),
        .R(out));
  FDRE \mcp1_rx_64_data_out_reg[58] 
       (.C(rxusrclk2),
        .CE(E[0]),
        .D(\mcp1_rx_64_data_out[58]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[58]),
        .R(out));
  FDRE \mcp1_rx_64_data_out_reg[59] 
       (.C(rxusrclk2),
        .CE(E[0]),
        .D(\mcp1_rx_64_data_out[59]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[59]),
        .R(out));
  FDRE \mcp1_rx_64_data_out_reg[5] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_64_data_out_reg[28]_0 ),
        .D(\mcp1_rx_64_data_out[5]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[5]),
        .R(out));
  FDRE \mcp1_rx_64_data_out_reg[60] 
       (.C(rxusrclk2),
        .CE(E[0]),
        .D(\mcp1_rx_64_data_out[60]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[60]),
        .R(out));
  FDRE \mcp1_rx_64_data_out_reg[61] 
       (.C(rxusrclk2),
        .CE(E[0]),
        .D(\mcp1_rx_64_data_out[61]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[61]),
        .R(out));
  FDRE \mcp1_rx_64_data_out_reg[62] 
       (.C(rxusrclk2),
        .CE(E[0]),
        .D(\mcp1_rx_64_data_out[62]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[62]),
        .R(out));
  FDRE \mcp1_rx_64_data_out_reg[63] 
       (.C(rxusrclk2),
        .CE(E[0]),
        .D(\mcp1_rx_64_data_out[63]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[63]),
        .R(out));
  FDRE \mcp1_rx_64_data_out_reg[6] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_64_data_out_reg[28]_0 ),
        .D(\mcp1_rx_64_data_out[6]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[6]),
        .R(out));
  FDSE \mcp1_rx_64_data_out_reg[7] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_64_data_out_reg[28]_0 ),
        .D(\mcp1_rx_64_data_out[7]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[7]),
        .S(out));
  FDRE \mcp1_rx_64_data_out_reg[8] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_64_data_out_reg[28]_0 ),
        .D(\mcp1_rx_64_data_out[8]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[8]),
        .R(out));
  FDRE \mcp1_rx_64_data_out_reg[9] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_64_data_out_reg[28]_0 ),
        .D(\mcp1_rx_64_data_out[9]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[9]),
        .R(out));
  FDRE \mcp1_rx_66_enc_reg_reg[0] 
       (.C(rxusrclk2),
        .CE(E[0]),
        .D(Q[0]),
        .Q(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .R(out));
  FDRE \mcp1_rx_66_enc_reg_reg[10] 
       (.C(rxusrclk2),
        .CE(E[0]),
        .D(Q[10]),
        .Q(data8[0]),
        .R(out));
  FDRE \mcp1_rx_66_enc_reg_reg[11] 
       (.C(rxusrclk2),
        .CE(E[0]),
        .D(Q[11]),
        .Q(data8[1]),
        .R(out));
  FDRE \mcp1_rx_66_enc_reg_reg[12] 
       (.C(rxusrclk2),
        .CE(E[0]),
        .D(Q[12]),
        .Q(data8[2]),
        .R(out));
  FDRE \mcp1_rx_66_enc_reg_reg[13] 
       (.C(rxusrclk2),
        .CE(E[0]),
        .D(Q[13]),
        .Q(data8[3]),
        .R(out));
  FDRE \mcp1_rx_66_enc_reg_reg[14] 
       (.C(rxusrclk2),
        .CE(E[0]),
        .D(Q[14]),
        .Q(data8[4]),
        .R(out));
  FDRE \mcp1_rx_66_enc_reg_reg[15] 
       (.C(rxusrclk2),
        .CE(E[0]),
        .D(Q[15]),
        .Q(data8[5]),
        .R(out));
  FDRE \mcp1_rx_66_enc_reg_reg[16] 
       (.C(rxusrclk2),
        .CE(E[0]),
        .D(Q[16]),
        .Q(data8[6]),
        .R(out));
  FDRE \mcp1_rx_66_enc_reg_reg[17] 
       (.C(rxusrclk2),
        .CE(E[0]),
        .D(Q[17]),
        .Q(data8[7]),
        .R(out));
  FDRE \mcp1_rx_66_enc_reg_reg[18] 
       (.C(rxusrclk2),
        .CE(E[0]),
        .D(Q[18]),
        .Q(data8[8]),
        .R(out));
  FDRE \mcp1_rx_66_enc_reg_reg[19] 
       (.C(rxusrclk2),
        .CE(E[0]),
        .D(Q[19]),
        .Q(data8[9]),
        .R(out));
  FDRE \mcp1_rx_66_enc_reg_reg[1] 
       (.C(rxusrclk2),
        .CE(E[0]),
        .D(Q[1]),
        .Q(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .R(out));
  FDRE \mcp1_rx_66_enc_reg_reg[20] 
       (.C(rxusrclk2),
        .CE(E[0]),
        .D(Q[20]),
        .Q(data8[10]),
        .R(out));
  FDRE \mcp1_rx_66_enc_reg_reg[21] 
       (.C(rxusrclk2),
        .CE(E[0]),
        .D(Q[21]),
        .Q(data8[11]),
        .R(out));
  FDRE \mcp1_rx_66_enc_reg_reg[22] 
       (.C(rxusrclk2),
        .CE(E[0]),
        .D(Q[22]),
        .Q(data8[12]),
        .R(out));
  FDRE \mcp1_rx_66_enc_reg_reg[23] 
       (.C(rxusrclk2),
        .CE(E[1]),
        .D(Q[23]),
        .Q(data8[13]),
        .R(out));
  FDRE \mcp1_rx_66_enc_reg_reg[24] 
       (.C(rxusrclk2),
        .CE(E[1]),
        .D(Q[24]),
        .Q(data8[14]),
        .R(out));
  FDRE \mcp1_rx_66_enc_reg_reg[25] 
       (.C(rxusrclk2),
        .CE(E[1]),
        .D(Q[25]),
        .Q(data8[15]),
        .R(out));
  FDRE \mcp1_rx_66_enc_reg_reg[26] 
       (.C(rxusrclk2),
        .CE(E[1]),
        .D(Q[26]),
        .Q(data8[16]),
        .R(out));
  FDRE \mcp1_rx_66_enc_reg_reg[27] 
       (.C(rxusrclk2),
        .CE(E[1]),
        .D(Q[27]),
        .Q(data8[17]),
        .R(out));
  FDRE \mcp1_rx_66_enc_reg_reg[28] 
       (.C(rxusrclk2),
        .CE(E[1]),
        .D(Q[28]),
        .Q(data8[18]),
        .R(out));
  FDRE \mcp1_rx_66_enc_reg_reg[29] 
       (.C(rxusrclk2),
        .CE(E[1]),
        .D(Q[29]),
        .Q(data8[19]),
        .R(out));
  FDRE \mcp1_rx_66_enc_reg_reg[30] 
       (.C(rxusrclk2),
        .CE(E[1]),
        .D(Q[30]),
        .Q(data8[20]),
        .R(out));
  FDRE \mcp1_rx_66_enc_reg_reg[31] 
       (.C(rxusrclk2),
        .CE(E[1]),
        .D(Q[31]),
        .Q(data8[21]),
        .R(out));
  FDRE \mcp1_rx_66_enc_reg_reg[32] 
       (.C(rxusrclk2),
        .CE(E[1]),
        .D(Q[32]),
        .Q(data8[22]),
        .R(out));
  FDRE \mcp1_rx_66_enc_reg_reg[33] 
       (.C(rxusrclk2),
        .CE(E[1]),
        .D(Q[33]),
        .Q(data8[23]),
        .R(out));
  FDRE \mcp1_rx_66_enc_reg_reg[34] 
       (.C(rxusrclk2),
        .CE(E[1]),
        .D(Q[34]),
        .Q(data8[24]),
        .R(out));
  FDRE \mcp1_rx_66_enc_reg_reg[35] 
       (.C(rxusrclk2),
        .CE(E[1]),
        .D(Q[35]),
        .Q(data8[25]),
        .R(out));
  FDRE \mcp1_rx_66_enc_reg_reg[36] 
       (.C(rxusrclk2),
        .CE(E[1]),
        .D(Q[36]),
        .Q(data8[26]),
        .R(out));
  FDRE \mcp1_rx_66_enc_reg_reg[37] 
       (.C(rxusrclk2),
        .CE(E[1]),
        .D(Q[37]),
        .Q(data8[27]),
        .R(out));
  FDRE \mcp1_rx_66_enc_reg_reg[38] 
       (.C(rxusrclk2),
        .CE(E[1]),
        .D(Q[38]),
        .Q(data8[28]),
        .R(out));
  FDRE \mcp1_rx_66_enc_reg_reg[39] 
       (.C(rxusrclk2),
        .CE(E[1]),
        .D(Q[39]),
        .Q(data8[29]),
        .R(out));
  FDRE \mcp1_rx_66_enc_reg_reg[40] 
       (.C(rxusrclk2),
        .CE(E[1]),
        .D(Q[40]),
        .Q(data8[30]),
        .R(out));
  FDRE \mcp1_rx_66_enc_reg_reg[41] 
       (.C(rxusrclk2),
        .CE(E[1]),
        .D(Q[41]),
        .Q(data8[31]),
        .R(out));
  FDRE \mcp1_rx_66_enc_reg_reg[42] 
       (.C(rxusrclk2),
        .CE(E[1]),
        .D(Q[42]),
        .Q(data8[32]),
        .R(out));
  FDRE \mcp1_rx_66_enc_reg_reg[43] 
       (.C(rxusrclk2),
        .CE(E[1]),
        .D(Q[43]),
        .Q(data8[33]),
        .R(out));
  FDRE \mcp1_rx_66_enc_reg_reg[44] 
       (.C(rxusrclk2),
        .CE(E[1]),
        .D(Q[44]),
        .Q(data8[34]),
        .R(out));
  FDRE \mcp1_rx_66_enc_reg_reg[45] 
       (.C(rxusrclk2),
        .CE(E[1]),
        .D(Q[45]),
        .Q(data8[35]),
        .R(out));
  FDRE \mcp1_rx_66_enc_reg_reg[46] 
       (.C(rxusrclk2),
        .CE(E[1]),
        .D(Q[46]),
        .Q(data8[36]),
        .R(out));
  FDRE \mcp1_rx_66_enc_reg_reg[47] 
       (.C(rxusrclk2),
        .CE(E[1]),
        .D(Q[47]),
        .Q(data8[37]),
        .R(out));
  FDRE \mcp1_rx_66_enc_reg_reg[48] 
       (.C(rxusrclk2),
        .CE(E[1]),
        .D(Q[48]),
        .Q(data8[38]),
        .R(out));
  FDRE \mcp1_rx_66_enc_reg_reg[49] 
       (.C(rxusrclk2),
        .CE(E[1]),
        .D(Q[49]),
        .Q(data8[39]),
        .R(out));
  FDRE \mcp1_rx_66_enc_reg_reg[50] 
       (.C(rxusrclk2),
        .CE(E[1]),
        .D(Q[50]),
        .Q(data8[40]),
        .R(out));
  FDRE \mcp1_rx_66_enc_reg_reg[51] 
       (.C(rxusrclk2),
        .CE(E[1]),
        .D(Q[51]),
        .Q(data8[41]),
        .R(out));
  FDRE \mcp1_rx_66_enc_reg_reg[52] 
       (.C(rxusrclk2),
        .CE(E[1]),
        .D(Q[52]),
        .Q(data8[42]),
        .R(out));
  FDRE \mcp1_rx_66_enc_reg_reg[53] 
       (.C(rxusrclk2),
        .CE(E[1]),
        .D(Q[53]),
        .Q(data8[43]),
        .R(out));
  FDRE \mcp1_rx_66_enc_reg_reg[54] 
       (.C(rxusrclk2),
        .CE(E[1]),
        .D(Q[54]),
        .Q(data8[44]),
        .R(out));
  FDRE \mcp1_rx_66_enc_reg_reg[55] 
       (.C(rxusrclk2),
        .CE(E[1]),
        .D(Q[55]),
        .Q(data8[45]),
        .R(out));
  FDRE \mcp1_rx_66_enc_reg_reg[56] 
       (.C(rxusrclk2),
        .CE(E[1]),
        .D(Q[56]),
        .Q(data8[46]),
        .R(out));
  FDRE \mcp1_rx_66_enc_reg_reg[57] 
       (.C(rxusrclk2),
        .CE(E[1]),
        .D(Q[57]),
        .Q(data8[47]),
        .R(out));
  FDRE \mcp1_rx_66_enc_reg_reg[58] 
       (.C(rxusrclk2),
        .CE(E[1]),
        .D(Q[58]),
        .Q(data8[48]),
        .R(out));
  FDRE \mcp1_rx_66_enc_reg_reg[59] 
       (.C(rxusrclk2),
        .CE(E[1]),
        .D(Q[59]),
        .Q(data8[49]),
        .R(out));
  FDRE \mcp1_rx_66_enc_reg_reg[60] 
       (.C(rxusrclk2),
        .CE(E[1]),
        .D(Q[60]),
        .Q(data8[50]),
        .R(out));
  FDRE \mcp1_rx_66_enc_reg_reg[61] 
       (.C(rxusrclk2),
        .CE(E[1]),
        .D(Q[61]),
        .Q(data8[51]),
        .R(out));
  FDRE \mcp1_rx_66_enc_reg_reg[62] 
       (.C(rxusrclk2),
        .CE(E[1]),
        .D(Q[62]),
        .Q(data8[52]),
        .R(out));
  FDRE \mcp1_rx_66_enc_reg_reg[63] 
       (.C(rxusrclk2),
        .CE(E[1]),
        .D(Q[63]),
        .Q(data8[53]),
        .R(out));
  FDRE \mcp1_rx_66_enc_reg_reg[64] 
       (.C(rxusrclk2),
        .CE(E[1]),
        .D(Q[64]),
        .Q(data8[54]),
        .R(out));
  FDRE \mcp1_rx_66_enc_reg_reg[65] 
       (.C(rxusrclk2),
        .CE(E[1]),
        .D(Q[65]),
        .Q(data8[55]),
        .R(out));
  LUT2 #(
    .INIT(4'hE)) 
    \mcp1_rx_ebuff_ctrl[0]_i_1 
       (.I0(\mcp1_rx_64_ctrl_out_reg_n_0_[0] ),
        .I1(\mcp1_rx_ebuff_ctrl[7]_i_3_n_0 ),
        .O(\mcp1_rx_64_ctrl_out_reg[7]_0 [0]));
  LUT2 #(
    .INIT(4'hE)) 
    \mcp1_rx_ebuff_ctrl[1]_i_1 
       (.I0(\mcp1_rx_64_ctrl_out_reg_n_0_[1] ),
        .I1(\mcp1_rx_ebuff_ctrl[7]_i_3_n_0 ),
        .O(\mcp1_rx_64_ctrl_out_reg[7]_0 [1]));
  LUT2 #(
    .INIT(4'hE)) 
    \mcp1_rx_ebuff_ctrl[2]_i_1 
       (.I0(\mcp1_rx_64_ctrl_out_reg_n_0_[2] ),
        .I1(\mcp1_rx_ebuff_ctrl[7]_i_3_n_0 ),
        .O(\mcp1_rx_64_ctrl_out_reg[7]_0 [2]));
  LUT2 #(
    .INIT(4'hE)) 
    \mcp1_rx_ebuff_ctrl[3]_i_1 
       (.I0(\mcp1_rx_64_ctrl_out_reg_n_0_[3] ),
        .I1(\mcp1_rx_ebuff_ctrl[7]_i_3_n_0 ),
        .O(\mcp1_rx_64_ctrl_out_reg[7]_0 [3]));
  LUT2 #(
    .INIT(4'hE)) 
    \mcp1_rx_ebuff_ctrl[4]_i_1 
       (.I0(\mcp1_rx_64_ctrl_out_reg_n_0_[4] ),
        .I1(\mcp1_rx_ebuff_ctrl[7]_i_3_n_0 ),
        .O(\mcp1_rx_64_ctrl_out_reg[7]_0 [4]));
  LUT2 #(
    .INIT(4'hE)) 
    \mcp1_rx_ebuff_ctrl[5]_i_1 
       (.I0(\mcp1_rx_64_ctrl_out_reg_n_0_[5] ),
        .I1(\mcp1_rx_ebuff_ctrl[7]_i_3_n_0 ),
        .O(\mcp1_rx_64_ctrl_out_reg[7]_0 [5]));
  LUT2 #(
    .INIT(4'hE)) 
    \mcp1_rx_ebuff_ctrl[6]_i_1 
       (.I0(\mcp1_rx_64_ctrl_out_reg_n_0_[6] ),
        .I1(\mcp1_rx_ebuff_ctrl[7]_i_3_n_0 ),
        .O(\mcp1_rx_64_ctrl_out_reg[7]_0 [6]));
  LUT2 #(
    .INIT(4'hE)) 
    \mcp1_rx_ebuff_ctrl[7]_i_2 
       (.I0(\mcp1_rx_64_ctrl_out_reg_n_0_[7] ),
        .I1(\mcp1_rx_ebuff_ctrl[7]_i_3_n_0 ),
        .O(\mcp1_rx_64_ctrl_out_reg[7]_0 [7]));
  LUT6 #(
    .INIT(64'hFFF8FFF80000FFCB)) 
    \mcp1_rx_ebuff_ctrl[7]_i_3 
       (.I0(mcp1_state__0),
        .I1(\mcp1_r_type_reg_reg[2]_0 [1]),
        .I2(\mcp1_r_type_reg_reg[2]_0 [0]),
        .I3(\mcp1_r_type_reg_reg[2]_0 [2]),
        .I4(\FSM_sequential_mcp1_state[1]_i_4__1_n_0 ),
        .I5(\mcp1_rx_ebuff_ctrl_reg[7] ),
        .O(\mcp1_rx_ebuff_ctrl[7]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \mcp1_rx_ebuff_data[0]_i_1 
       (.I0(mcp1_rx_64_data_out[0]),
        .I1(\mcp1_rx_ebuff_ctrl[7]_i_3_n_0 ),
        .O(D[0]));
  LUT2 #(
    .INIT(4'hE)) 
    \mcp1_rx_ebuff_data[10]_i_1 
       (.I0(mcp1_rx_64_data_out[10]),
        .I1(\mcp1_rx_ebuff_ctrl[7]_i_3_n_0 ),
        .O(D[10]));
  LUT2 #(
    .INIT(4'hE)) 
    \mcp1_rx_ebuff_data[11]_i_1 
       (.I0(mcp1_rx_64_data_out[11]),
        .I1(\mcp1_rx_ebuff_ctrl[7]_i_3_n_0 ),
        .O(D[11]));
  LUT2 #(
    .INIT(4'hE)) 
    \mcp1_rx_ebuff_data[12]_i_1 
       (.I0(mcp1_rx_64_data_out[12]),
        .I1(\mcp1_rx_ebuff_ctrl[7]_i_3_n_0 ),
        .O(D[12]));
  LUT2 #(
    .INIT(4'hE)) 
    \mcp1_rx_ebuff_data[13]_i_1 
       (.I0(mcp1_rx_64_data_out[13]),
        .I1(\mcp1_rx_ebuff_ctrl[7]_i_3_n_0 ),
        .O(D[13]));
  LUT2 #(
    .INIT(4'hE)) 
    \mcp1_rx_ebuff_data[14]_i_1 
       (.I0(mcp1_rx_64_data_out[14]),
        .I1(\mcp1_rx_ebuff_ctrl[7]_i_3_n_0 ),
        .O(D[14]));
  LUT2 #(
    .INIT(4'hE)) 
    \mcp1_rx_ebuff_data[15]_i_1 
       (.I0(mcp1_rx_64_data_out[15]),
        .I1(\mcp1_rx_ebuff_ctrl[7]_i_3_n_0 ),
        .O(D[15]));
  LUT2 #(
    .INIT(4'h2)) 
    \mcp1_rx_ebuff_data[16]_i_1 
       (.I0(mcp1_rx_64_data_out[16]),
        .I1(\mcp1_rx_ebuff_ctrl[7]_i_3_n_0 ),
        .O(D[16]));
  LUT2 #(
    .INIT(4'hE)) 
    \mcp1_rx_ebuff_data[17]_i_1 
       (.I0(mcp1_rx_64_data_out[17]),
        .I1(\mcp1_rx_ebuff_ctrl[7]_i_3_n_0 ),
        .O(D[17]));
  LUT2 #(
    .INIT(4'hE)) 
    \mcp1_rx_ebuff_data[18]_i_1 
       (.I0(mcp1_rx_64_data_out[18]),
        .I1(\mcp1_rx_ebuff_ctrl[7]_i_3_n_0 ),
        .O(D[18]));
  LUT2 #(
    .INIT(4'hE)) 
    \mcp1_rx_ebuff_data[19]_i_1 
       (.I0(mcp1_rx_64_data_out[19]),
        .I1(\mcp1_rx_ebuff_ctrl[7]_i_3_n_0 ),
        .O(D[19]));
  LUT2 #(
    .INIT(4'hE)) 
    \mcp1_rx_ebuff_data[1]_i_1 
       (.I0(mcp1_rx_64_data_out[1]),
        .I1(\mcp1_rx_ebuff_ctrl[7]_i_3_n_0 ),
        .O(D[1]));
  LUT2 #(
    .INIT(4'hE)) 
    \mcp1_rx_ebuff_data[20]_i_1 
       (.I0(mcp1_rx_64_data_out[20]),
        .I1(\mcp1_rx_ebuff_ctrl[7]_i_3_n_0 ),
        .O(D[20]));
  LUT2 #(
    .INIT(4'hE)) 
    \mcp1_rx_ebuff_data[21]_i_1 
       (.I0(mcp1_rx_64_data_out[21]),
        .I1(\mcp1_rx_ebuff_ctrl[7]_i_3_n_0 ),
        .O(D[21]));
  LUT2 #(
    .INIT(4'hE)) 
    \mcp1_rx_ebuff_data[22]_i_1 
       (.I0(mcp1_rx_64_data_out[22]),
        .I1(\mcp1_rx_ebuff_ctrl[7]_i_3_n_0 ),
        .O(D[22]));
  LUT2 #(
    .INIT(4'hE)) 
    \mcp1_rx_ebuff_data[23]_i_1 
       (.I0(mcp1_rx_64_data_out[23]),
        .I1(\mcp1_rx_ebuff_ctrl[7]_i_3_n_0 ),
        .O(D[23]));
  LUT2 #(
    .INIT(4'h2)) 
    \mcp1_rx_ebuff_data[24]_i_1 
       (.I0(mcp1_rx_64_data_out[24]),
        .I1(\mcp1_rx_ebuff_ctrl[7]_i_3_n_0 ),
        .O(D[24]));
  LUT2 #(
    .INIT(4'hE)) 
    \mcp1_rx_ebuff_data[25]_i_1 
       (.I0(mcp1_rx_64_data_out[25]),
        .I1(\mcp1_rx_ebuff_ctrl[7]_i_3_n_0 ),
        .O(D[25]));
  LUT2 #(
    .INIT(4'hE)) 
    \mcp1_rx_ebuff_data[26]_i_1 
       (.I0(mcp1_rx_64_data_out[26]),
        .I1(\mcp1_rx_ebuff_ctrl[7]_i_3_n_0 ),
        .O(D[26]));
  LUT2 #(
    .INIT(4'hE)) 
    \mcp1_rx_ebuff_data[27]_i_1 
       (.I0(mcp1_rx_64_data_out[27]),
        .I1(\mcp1_rx_ebuff_ctrl[7]_i_3_n_0 ),
        .O(D[27]));
  LUT2 #(
    .INIT(4'hE)) 
    \mcp1_rx_ebuff_data[28]_i_1 
       (.I0(mcp1_rx_64_data_out[28]),
        .I1(\mcp1_rx_ebuff_ctrl[7]_i_3_n_0 ),
        .O(D[28]));
  LUT2 #(
    .INIT(4'hE)) 
    \mcp1_rx_ebuff_data[29]_i_1 
       (.I0(mcp1_rx_64_data_out[29]),
        .I1(\mcp1_rx_ebuff_ctrl[7]_i_3_n_0 ),
        .O(D[29]));
  LUT2 #(
    .INIT(4'hE)) 
    \mcp1_rx_ebuff_data[2]_i_1 
       (.I0(mcp1_rx_64_data_out[2]),
        .I1(\mcp1_rx_ebuff_ctrl[7]_i_3_n_0 ),
        .O(D[2]));
  LUT2 #(
    .INIT(4'hE)) 
    \mcp1_rx_ebuff_data[30]_i_1 
       (.I0(mcp1_rx_64_data_out[30]),
        .I1(\mcp1_rx_ebuff_ctrl[7]_i_3_n_0 ),
        .O(D[30]));
  LUT2 #(
    .INIT(4'hE)) 
    \mcp1_rx_ebuff_data[31]_i_1 
       (.I0(mcp1_rx_64_data_out[31]),
        .I1(\mcp1_rx_ebuff_ctrl[7]_i_3_n_0 ),
        .O(D[31]));
  LUT2 #(
    .INIT(4'h2)) 
    \mcp1_rx_ebuff_data[32]_i_1 
       (.I0(mcp1_rx_64_data_out[32]),
        .I1(\mcp1_rx_ebuff_ctrl[7]_i_3_n_0 ),
        .O(D[32]));
  LUT2 #(
    .INIT(4'hE)) 
    \mcp1_rx_ebuff_data[33]_i_1 
       (.I0(mcp1_rx_64_data_out[33]),
        .I1(\mcp1_rx_ebuff_ctrl[7]_i_3_n_0 ),
        .O(D[33]));
  LUT2 #(
    .INIT(4'hE)) 
    \mcp1_rx_ebuff_data[34]_i_1 
       (.I0(mcp1_rx_64_data_out[34]),
        .I1(\mcp1_rx_ebuff_ctrl[7]_i_3_n_0 ),
        .O(D[34]));
  LUT2 #(
    .INIT(4'hE)) 
    \mcp1_rx_ebuff_data[35]_i_1 
       (.I0(mcp1_rx_64_data_out[35]),
        .I1(\mcp1_rx_ebuff_ctrl[7]_i_3_n_0 ),
        .O(D[35]));
  LUT2 #(
    .INIT(4'hE)) 
    \mcp1_rx_ebuff_data[36]_i_1 
       (.I0(mcp1_rx_64_data_out[36]),
        .I1(\mcp1_rx_ebuff_ctrl[7]_i_3_n_0 ),
        .O(D[36]));
  LUT2 #(
    .INIT(4'hE)) 
    \mcp1_rx_ebuff_data[37]_i_1 
       (.I0(mcp1_rx_64_data_out[37]),
        .I1(\mcp1_rx_ebuff_ctrl[7]_i_3_n_0 ),
        .O(D[37]));
  LUT2 #(
    .INIT(4'hE)) 
    \mcp1_rx_ebuff_data[38]_i_1 
       (.I0(mcp1_rx_64_data_out[38]),
        .I1(\mcp1_rx_ebuff_ctrl[7]_i_3_n_0 ),
        .O(D[38]));
  LUT2 #(
    .INIT(4'hE)) 
    \mcp1_rx_ebuff_data[39]_i_1 
       (.I0(mcp1_rx_64_data_out[39]),
        .I1(\mcp1_rx_ebuff_ctrl[7]_i_3_n_0 ),
        .O(D[39]));
  LUT2 #(
    .INIT(4'hE)) 
    \mcp1_rx_ebuff_data[3]_i_1 
       (.I0(mcp1_rx_64_data_out[3]),
        .I1(\mcp1_rx_ebuff_ctrl[7]_i_3_n_0 ),
        .O(D[3]));
  LUT2 #(
    .INIT(4'h2)) 
    \mcp1_rx_ebuff_data[40]_i_1 
       (.I0(mcp1_rx_64_data_out[40]),
        .I1(\mcp1_rx_ebuff_ctrl[7]_i_3_n_0 ),
        .O(D[40]));
  LUT2 #(
    .INIT(4'hE)) 
    \mcp1_rx_ebuff_data[41]_i_1 
       (.I0(mcp1_rx_64_data_out[41]),
        .I1(\mcp1_rx_ebuff_ctrl[7]_i_3_n_0 ),
        .O(D[41]));
  LUT2 #(
    .INIT(4'hE)) 
    \mcp1_rx_ebuff_data[42]_i_1 
       (.I0(mcp1_rx_64_data_out[42]),
        .I1(\mcp1_rx_ebuff_ctrl[7]_i_3_n_0 ),
        .O(D[42]));
  LUT2 #(
    .INIT(4'hE)) 
    \mcp1_rx_ebuff_data[43]_i_1 
       (.I0(mcp1_rx_64_data_out[43]),
        .I1(\mcp1_rx_ebuff_ctrl[7]_i_3_n_0 ),
        .O(D[43]));
  LUT2 #(
    .INIT(4'hE)) 
    \mcp1_rx_ebuff_data[44]_i_1 
       (.I0(mcp1_rx_64_data_out[44]),
        .I1(\mcp1_rx_ebuff_ctrl[7]_i_3_n_0 ),
        .O(D[44]));
  LUT2 #(
    .INIT(4'hE)) 
    \mcp1_rx_ebuff_data[45]_i_1 
       (.I0(mcp1_rx_64_data_out[45]),
        .I1(\mcp1_rx_ebuff_ctrl[7]_i_3_n_0 ),
        .O(D[45]));
  LUT2 #(
    .INIT(4'hE)) 
    \mcp1_rx_ebuff_data[46]_i_1 
       (.I0(mcp1_rx_64_data_out[46]),
        .I1(\mcp1_rx_ebuff_ctrl[7]_i_3_n_0 ),
        .O(D[46]));
  LUT2 #(
    .INIT(4'hE)) 
    \mcp1_rx_ebuff_data[47]_i_1 
       (.I0(mcp1_rx_64_data_out[47]),
        .I1(\mcp1_rx_ebuff_ctrl[7]_i_3_n_0 ),
        .O(D[47]));
  LUT2 #(
    .INIT(4'h2)) 
    \mcp1_rx_ebuff_data[48]_i_1 
       (.I0(mcp1_rx_64_data_out[48]),
        .I1(\mcp1_rx_ebuff_ctrl[7]_i_3_n_0 ),
        .O(D[48]));
  LUT2 #(
    .INIT(4'hE)) 
    \mcp1_rx_ebuff_data[49]_i_1 
       (.I0(mcp1_rx_64_data_out[49]),
        .I1(\mcp1_rx_ebuff_ctrl[7]_i_3_n_0 ),
        .O(D[49]));
  LUT2 #(
    .INIT(4'hE)) 
    \mcp1_rx_ebuff_data[4]_i_1 
       (.I0(mcp1_rx_64_data_out[4]),
        .I1(\mcp1_rx_ebuff_ctrl[7]_i_3_n_0 ),
        .O(D[4]));
  LUT2 #(
    .INIT(4'hE)) 
    \mcp1_rx_ebuff_data[50]_i_1 
       (.I0(mcp1_rx_64_data_out[50]),
        .I1(\mcp1_rx_ebuff_ctrl[7]_i_3_n_0 ),
        .O(D[50]));
  LUT2 #(
    .INIT(4'hE)) 
    \mcp1_rx_ebuff_data[51]_i_1 
       (.I0(mcp1_rx_64_data_out[51]),
        .I1(\mcp1_rx_ebuff_ctrl[7]_i_3_n_0 ),
        .O(D[51]));
  LUT2 #(
    .INIT(4'hE)) 
    \mcp1_rx_ebuff_data[52]_i_1 
       (.I0(mcp1_rx_64_data_out[52]),
        .I1(\mcp1_rx_ebuff_ctrl[7]_i_3_n_0 ),
        .O(D[52]));
  LUT2 #(
    .INIT(4'hE)) 
    \mcp1_rx_ebuff_data[53]_i_1 
       (.I0(mcp1_rx_64_data_out[53]),
        .I1(\mcp1_rx_ebuff_ctrl[7]_i_3_n_0 ),
        .O(D[53]));
  LUT2 #(
    .INIT(4'hE)) 
    \mcp1_rx_ebuff_data[54]_i_1 
       (.I0(mcp1_rx_64_data_out[54]),
        .I1(\mcp1_rx_ebuff_ctrl[7]_i_3_n_0 ),
        .O(D[54]));
  LUT2 #(
    .INIT(4'hE)) 
    \mcp1_rx_ebuff_data[55]_i_1 
       (.I0(mcp1_rx_64_data_out[55]),
        .I1(\mcp1_rx_ebuff_ctrl[7]_i_3_n_0 ),
        .O(D[55]));
  LUT2 #(
    .INIT(4'h2)) 
    \mcp1_rx_ebuff_data[56]_i_1 
       (.I0(mcp1_rx_64_data_out[56]),
        .I1(\mcp1_rx_ebuff_ctrl[7]_i_3_n_0 ),
        .O(D[56]));
  LUT2 #(
    .INIT(4'hE)) 
    \mcp1_rx_ebuff_data[57]_i_1 
       (.I0(mcp1_rx_64_data_out[57]),
        .I1(\mcp1_rx_ebuff_ctrl[7]_i_3_n_0 ),
        .O(D[57]));
  LUT2 #(
    .INIT(4'hE)) 
    \mcp1_rx_ebuff_data[58]_i_1 
       (.I0(mcp1_rx_64_data_out[58]),
        .I1(\mcp1_rx_ebuff_ctrl[7]_i_3_n_0 ),
        .O(D[58]));
  LUT2 #(
    .INIT(4'hE)) 
    \mcp1_rx_ebuff_data[59]_i_1 
       (.I0(mcp1_rx_64_data_out[59]),
        .I1(\mcp1_rx_ebuff_ctrl[7]_i_3_n_0 ),
        .O(D[59]));
  LUT2 #(
    .INIT(4'hE)) 
    \mcp1_rx_ebuff_data[5]_i_1 
       (.I0(mcp1_rx_64_data_out[5]),
        .I1(\mcp1_rx_ebuff_ctrl[7]_i_3_n_0 ),
        .O(D[5]));
  LUT2 #(
    .INIT(4'hE)) 
    \mcp1_rx_ebuff_data[60]_i_1 
       (.I0(mcp1_rx_64_data_out[60]),
        .I1(\mcp1_rx_ebuff_ctrl[7]_i_3_n_0 ),
        .O(D[60]));
  LUT2 #(
    .INIT(4'hE)) 
    \mcp1_rx_ebuff_data[61]_i_1 
       (.I0(mcp1_rx_64_data_out[61]),
        .I1(\mcp1_rx_ebuff_ctrl[7]_i_3_n_0 ),
        .O(D[61]));
  LUT2 #(
    .INIT(4'hE)) 
    \mcp1_rx_ebuff_data[62]_i_1 
       (.I0(mcp1_rx_64_data_out[62]),
        .I1(\mcp1_rx_ebuff_ctrl[7]_i_3_n_0 ),
        .O(D[62]));
  LUT2 #(
    .INIT(4'hE)) 
    \mcp1_rx_ebuff_data[63]_i_1 
       (.I0(mcp1_rx_64_data_out[63]),
        .I1(\mcp1_rx_ebuff_ctrl[7]_i_3_n_0 ),
        .O(D[63]));
  LUT2 #(
    .INIT(4'hE)) 
    \mcp1_rx_ebuff_data[6]_i_1 
       (.I0(mcp1_rx_64_data_out[6]),
        .I1(\mcp1_rx_ebuff_ctrl[7]_i_3_n_0 ),
        .O(D[6]));
  LUT2 #(
    .INIT(4'hE)) 
    \mcp1_rx_ebuff_data[7]_i_1 
       (.I0(mcp1_rx_64_data_out[7]),
        .I1(\mcp1_rx_ebuff_ctrl[7]_i_3_n_0 ),
        .O(D[7]));
  LUT2 #(
    .INIT(4'h2)) 
    \mcp1_rx_ebuff_data[8]_i_1 
       (.I0(mcp1_rx_64_data_out[8]),
        .I1(\mcp1_rx_ebuff_ctrl[7]_i_3_n_0 ),
        .O(D[8]));
  LUT2 #(
    .INIT(4'hE)) 
    \mcp1_rx_ebuff_data[9]_i_1 
       (.I0(mcp1_rx_64_data_out[9]),
        .I1(\mcp1_rx_ebuff_ctrl[7]_i_3_n_0 ),
        .O(D[9]));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_15_rx_pcs" *) 
module ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_rx_pcs
   (SR,
    b_lock_mod_reg,
    gt_slip_int,
    ber_count_inc,
    mcp1_hiber_reg,
    err_block_count_inc,
    cable_pull,
    D,
    \rx_66_enc_reg_reg[17]_0 ,
    \rx_66_enc_reg_reg[29]_0 ,
    \rx_66_enc_reg_reg[31]_0 ,
    \rx_66_enc_reg_reg[39]_0 ,
    \rx_66_enc_reg_reg[47]_0 ,
    \rx_66_enc_reg_reg[53]_0 ,
    \rx_66_enc_reg_reg[61]_0 ,
    \mcp1_rx_ebuff_ctrl_reg[7] ,
    \mcp1_rx_ebuff_data_reg[63] ,
    comp_8,
    comp_2,
    comp_1,
    comp_1_0,
    comp_0,
    comp_0_1,
    comp_8_2,
    comp_2_3,
    comp_1_4,
    comp_1_5,
    comp_0_6,
    comp_0_7,
    signal_detect,
    rxusrclk2,
    out,
    \mcp1_rx_ebuff_data_reg[0] ,
    \mcp1_descr_reg_reg[0] ,
    \FSM_sequential_mcp1_state_reg[0] ,
    mcp1_err_block_count_inc_out_reg,
    \mcp1_timer_125us_reg[15] ,
    mcp1_err_block_count_inc_out_reg_0,
    \mcp1_rx_66_enc_reg_reg[65] ,
    \mcp1_r_type_next_reg_reg[2] ,
    \mcp1_rx_66_enc_reg_reg[22] ,
    \mcp1_dec_c0_reg[7] ,
    \mcp1_dec_c0_reg[6] ,
    \mcp1_dec_c1_reg[7] ,
    \mcp1_dec_c2_reg[6] ,
    \mcp1_dec_c3_reg[5] ,
    \mcp1_dec_c4_reg[7] ,
    E,
    \mcp1_dec_c5_reg[5] ,
    SS,
    \mcp1_dec_c7_reg[7] );
  output [0:0]SR;
  output b_lock_mod_reg;
  output gt_slip_int;
  output ber_count_inc;
  output mcp1_hiber_reg;
  output err_block_count_inc;
  output cable_pull;
  output [0:0]D;
  output [0:0]\rx_66_enc_reg_reg[17]_0 ;
  output [0:0]\rx_66_enc_reg_reg[29]_0 ;
  output [0:0]\rx_66_enc_reg_reg[31]_0 ;
  output [0:0]\rx_66_enc_reg_reg[39]_0 ;
  output [0:0]\rx_66_enc_reg_reg[47]_0 ;
  output [0:0]\rx_66_enc_reg_reg[53]_0 ;
  output \rx_66_enc_reg_reg[61]_0 ;
  output [7:0]\mcp1_rx_ebuff_ctrl_reg[7] ;
  output [63:0]\mcp1_rx_ebuff_data_reg[63] ;
  output comp_8;
  output comp_2;
  output comp_1;
  output comp_1_0;
  output comp_0;
  output comp_0_1;
  output comp_8_2;
  output comp_2_3;
  output comp_1_4;
  output comp_1_5;
  output comp_0_6;
  output comp_0_7;
  input signal_detect;
  input rxusrclk2;
  input out;
  input [2:0]\mcp1_rx_ebuff_data_reg[0] ;
  input [65:0]\mcp1_descr_reg_reg[0] ;
  input [2:0]\FSM_sequential_mcp1_state_reg[0] ;
  input mcp1_err_block_count_inc_out_reg;
  input [15:0]\mcp1_timer_125us_reg[15] ;
  input mcp1_err_block_count_inc_out_reg_0;
  input [2:0]\mcp1_rx_66_enc_reg_reg[65] ;
  input \mcp1_r_type_next_reg_reg[2] ;
  input [1:0]\mcp1_rx_66_enc_reg_reg[22] ;
  input [0:0]\mcp1_dec_c0_reg[7] ;
  input [0:0]\mcp1_dec_c0_reg[6] ;
  input [0:0]\mcp1_dec_c1_reg[7] ;
  input [0:0]\mcp1_dec_c2_reg[6] ;
  input [0:0]\mcp1_dec_c3_reg[5] ;
  input [0:0]\mcp1_dec_c4_reg[7] ;
  input [0:0]E;
  input [0:0]\mcp1_dec_c5_reg[5] ;
  input [0:0]SS;
  input [0:0]\mcp1_dec_c7_reg[7] ;

  wire [0:0]D;
  wire [0:0]E;
  wire [2:0]\FSM_sequential_mcp1_state_reg[0] ;
  wire [0:0]SS;
  wire b_lock_mod;
  wire b_lock_mod_reg;
  wire ber_count_inc;
  wire [7:0]block_field;
  wire cable_pull;
  wire comp_0;
  wire comp_0_1;
  wire comp_0_6;
  wire comp_0_7;
  wire comp_1;
  wire comp_1_0;
  wire comp_1_4;
  wire comp_1_5;
  wire comp_2;
  wire comp_2_3;
  wire comp_8;
  wire comp_8_2;
  wire err_block_count_inc;
  wire gt_slip_int;
  wire [0:0]\mcp1_dec_c0_reg[6] ;
  wire [0:0]\mcp1_dec_c0_reg[7] ;
  wire [0:0]\mcp1_dec_c1_reg[7] ;
  wire [0:0]\mcp1_dec_c2_reg[6] ;
  wire [0:0]\mcp1_dec_c3_reg[5] ;
  wire [0:0]\mcp1_dec_c4_reg[7] ;
  wire [0:0]\mcp1_dec_c5_reg[5] ;
  wire [0:0]\mcp1_dec_c7_reg[7] ;
  wire [65:0]\mcp1_descr_reg_reg[0] ;
  wire mcp1_err_block_count_inc_out1;
  wire mcp1_err_block_count_inc_out10_out;
  wire mcp1_err_block_count_inc_out_reg;
  wire mcp1_err_block_count_inc_out_reg_0;
  wire mcp1_hiber_reg;
  wire \mcp1_r_type_next_reg_reg[2] ;
  wire [1:0]\mcp1_rx_66_enc_reg_reg[22] ;
  wire [2:0]\mcp1_rx_66_enc_reg_reg[65] ;
  wire [7:0]\mcp1_rx_ebuff_ctrl_reg[7] ;
  wire [2:0]\mcp1_rx_ebuff_data_reg[0] ;
  wire [63:0]\mcp1_rx_ebuff_data_reg[63] ;
  wire mcp1_state0;
  wire [2:2]mcp1_state__0;
  wire [15:0]\mcp1_timer_125us_reg[15] ;
  wire [1:1]next_state__0;
  wire out;
  wire [2:0]r_type;
  wire [65:2]rx_66_enc;
  wire [65:0]rx_66_enc_reg;
  wire [0:0]\rx_66_enc_reg_reg[17]_0 ;
  wire [0:0]\rx_66_enc_reg_reg[29]_0 ;
  wire [0:0]\rx_66_enc_reg_reg[31]_0 ;
  wire [0:0]\rx_66_enc_reg_reg[39]_0 ;
  wire [0:0]\rx_66_enc_reg_reg[47]_0 ;
  wire [0:0]\rx_66_enc_reg_reg[53]_0 ;
  wire \rx_66_enc_reg_reg[61]_0 ;
  wire rx_ber_mon_fsm_i_n_2;
  wire rx_block_lock_fsm_i_n_2;
  wire rx_decoder_i_n_0;
  wire rx_decoder_i_n_85;
  wire [7:0]rx_ebuff_ctrl_t;
  wire [63:0]rx_ebuff_data_t;
  wire rx_pcs_fsm_i_n_2;
  wire rx_pcs_fsm_i_n_3;
  wire rx_pcs_fsm_i_n_5;
  wire rx_pcs_fsm_i_n_6;
  (* DONT_TOUCH *) (* equivalent_register_removal = "no" *) wire rxreset_1;
  (* DONT_TOUCH *) (* equivalent_register_removal = "no" *) wire rxreset_2;
  (* RTL_KEEP = "true" *) (* equivalent_register_removal = "no" *) wire rxreset_3;
  (* DONT_TOUCH *) (* equivalent_register_removal = "no" *) wire rxreset_4;
  (* DONT_TOUCH *) (* equivalent_register_removal = "no" *) wire rxreset_5;
  (* DONT_TOUCH *) (* equivalent_register_removal = "no" *) wire rxreset_6;
  wire rxusrclk2;
  wire signal_detect;

  assign SR[0] = rxreset_5;
  ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_pcs_descramble pcs_descramble_i
       (.SR(rxreset_4),
        .\mcp1_descr_reg_reg[0]_0 (\mcp1_descr_reg_reg[0] [65:2]),
        .\mcp1_descr_reg_reg[31]_0 (\mcp1_rx_ebuff_data_reg[0] ),
        .rx_66_enc(rx_66_enc[59:2]),
        .rxusrclk2(rxusrclk2));
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[60]_i_1 
       (.I0(\mcp1_descr_reg_reg[0] [21]),
        .I1(\mcp1_descr_reg_reg[0] [60]),
        .I2(\mcp1_descr_reg_reg[0] [2]),
        .O(rx_66_enc[60]));
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[61]_i_1 
       (.I0(\mcp1_descr_reg_reg[0] [22]),
        .I1(\mcp1_descr_reg_reg[0] [61]),
        .I2(\mcp1_descr_reg_reg[0] [3]),
        .O(rx_66_enc[61]));
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[62]_i_1 
       (.I0(\mcp1_descr_reg_reg[0] [23]),
        .I1(\mcp1_descr_reg_reg[0] [62]),
        .I2(\mcp1_descr_reg_reg[0] [4]),
        .O(rx_66_enc[62]));
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[63]_i_1 
       (.I0(\mcp1_descr_reg_reg[0] [24]),
        .I1(\mcp1_descr_reg_reg[0] [63]),
        .I2(\mcp1_descr_reg_reg[0] [5]),
        .O(rx_66_enc[63]));
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[64]_i_1 
       (.I0(\mcp1_descr_reg_reg[0] [25]),
        .I1(\mcp1_descr_reg_reg[0] [64]),
        .I2(\mcp1_descr_reg_reg[0] [6]),
        .O(rx_66_enc[64]));
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[65]_i_1 
       (.I0(\mcp1_descr_reg_reg[0] [26]),
        .I1(\mcp1_descr_reg_reg[0] [65]),
        .I2(\mcp1_descr_reg_reg[0] [7]),
        .O(rx_66_enc[65]));
  FDRE \rx_66_enc_reg_reg[0] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_66_enc_reg_reg[65] [0]),
        .D(\mcp1_descr_reg_reg[0] [0]),
        .Q(rx_66_enc_reg[0]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[10] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_66_enc_reg_reg[65] [1]),
        .D(rx_66_enc[10]),
        .Q(rx_66_enc_reg[10]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[11] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_66_enc_reg_reg[65] [1]),
        .D(rx_66_enc[11]),
        .Q(rx_66_enc_reg[11]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[12] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_66_enc_reg_reg[65] [1]),
        .D(rx_66_enc[12]),
        .Q(rx_66_enc_reg[12]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[13] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_66_enc_reg_reg[65] [1]),
        .D(rx_66_enc[13]),
        .Q(rx_66_enc_reg[13]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[14] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_66_enc_reg_reg[65] [1]),
        .D(rx_66_enc[14]),
        .Q(rx_66_enc_reg[14]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[15] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_66_enc_reg_reg[65] [1]),
        .D(rx_66_enc[15]),
        .Q(rx_66_enc_reg[15]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[16] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_66_enc_reg_reg[65] [1]),
        .D(rx_66_enc[16]),
        .Q(rx_66_enc_reg[16]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[17] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_66_enc_reg_reg[65] [1]),
        .D(rx_66_enc[17]),
        .Q(rx_66_enc_reg[17]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[18] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_66_enc_reg_reg[65] [1]),
        .D(rx_66_enc[18]),
        .Q(rx_66_enc_reg[18]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[19] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_66_enc_reg_reg[65] [1]),
        .D(rx_66_enc[19]),
        .Q(rx_66_enc_reg[19]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[1] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_66_enc_reg_reg[65] [0]),
        .D(\mcp1_descr_reg_reg[0] [1]),
        .Q(rx_66_enc_reg[1]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[20] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_66_enc_reg_reg[65] [1]),
        .D(rx_66_enc[20]),
        .Q(rx_66_enc_reg[20]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[21] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_66_enc_reg_reg[65] [1]),
        .D(rx_66_enc[21]),
        .Q(rx_66_enc_reg[21]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[22] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_66_enc_reg_reg[65] [1]),
        .D(rx_66_enc[22]),
        .Q(rx_66_enc_reg[22]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[23] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_66_enc_reg_reg[65] [1]),
        .D(rx_66_enc[23]),
        .Q(rx_66_enc_reg[23]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[24] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_66_enc_reg_reg[65] [1]),
        .D(rx_66_enc[24]),
        .Q(rx_66_enc_reg[24]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[25] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_66_enc_reg_reg[65] [1]),
        .D(rx_66_enc[25]),
        .Q(rx_66_enc_reg[25]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[26] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_66_enc_reg_reg[65] [1]),
        .D(rx_66_enc[26]),
        .Q(rx_66_enc_reg[26]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[27] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_66_enc_reg_reg[65] [1]),
        .D(rx_66_enc[27]),
        .Q(rx_66_enc_reg[27]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[28] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_66_enc_reg_reg[65] [1]),
        .D(rx_66_enc[28]),
        .Q(rx_66_enc_reg[28]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[29] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_66_enc_reg_reg[65] [1]),
        .D(rx_66_enc[29]),
        .Q(rx_66_enc_reg[29]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[2] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_66_enc_reg_reg[65] [0]),
        .D(rx_66_enc[2]),
        .Q(block_field[0]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[30] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_66_enc_reg_reg[65] [1]),
        .D(rx_66_enc[30]),
        .Q(rx_66_enc_reg[30]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[31] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_66_enc_reg_reg[65] [1]),
        .D(rx_66_enc[31]),
        .Q(rx_66_enc_reg[31]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[32] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_66_enc_reg_reg[65] [1]),
        .D(rx_66_enc[32]),
        .Q(rx_66_enc_reg[32]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[33] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_66_enc_reg_reg[65] [1]),
        .D(rx_66_enc[33]),
        .Q(rx_66_enc_reg[33]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[34] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_66_enc_reg_reg[65] [1]),
        .D(rx_66_enc[34]),
        .Q(rx_66_enc_reg[34]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[35] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_66_enc_reg_reg[65] [1]),
        .D(rx_66_enc[35]),
        .Q(rx_66_enc_reg[35]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[36] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_66_enc_reg_reg[65] [1]),
        .D(rx_66_enc[36]),
        .Q(rx_66_enc_reg[36]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[37] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_66_enc_reg_reg[65] [1]),
        .D(rx_66_enc[37]),
        .Q(rx_66_enc_reg[37]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[38] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_66_enc_reg_reg[65] [1]),
        .D(rx_66_enc[38]),
        .Q(rx_66_enc_reg[38]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[39] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_66_enc_reg_reg[65] [1]),
        .D(rx_66_enc[39]),
        .Q(rx_66_enc_reg[39]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[3] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_66_enc_reg_reg[65] [0]),
        .D(rx_66_enc[3]),
        .Q(block_field[1]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[40] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_66_enc_reg_reg[65] [1]),
        .D(rx_66_enc[40]),
        .Q(rx_66_enc_reg[40]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[41] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_66_enc_reg_reg[65] [1]),
        .D(rx_66_enc[41]),
        .Q(rx_66_enc_reg[41]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[42] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_66_enc_reg_reg[65] [1]),
        .D(rx_66_enc[42]),
        .Q(rx_66_enc_reg[42]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[43] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_66_enc_reg_reg[65] [1]),
        .D(rx_66_enc[43]),
        .Q(rx_66_enc_reg[43]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[44] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_66_enc_reg_reg[65] [1]),
        .D(rx_66_enc[44]),
        .Q(rx_66_enc_reg[44]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[45] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_66_enc_reg_reg[65] [1]),
        .D(rx_66_enc[45]),
        .Q(rx_66_enc_reg[45]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[46] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_66_enc_reg_reg[65] [1]),
        .D(rx_66_enc[46]),
        .Q(rx_66_enc_reg[46]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[47] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_66_enc_reg_reg[65] [1]),
        .D(rx_66_enc[47]),
        .Q(rx_66_enc_reg[47]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[48] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_66_enc_reg_reg[65] [1]),
        .D(rx_66_enc[48]),
        .Q(rx_66_enc_reg[48]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[49] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_66_enc_reg_reg[65] [1]),
        .D(rx_66_enc[49]),
        .Q(rx_66_enc_reg[49]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[4] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_66_enc_reg_reg[65] [0]),
        .D(rx_66_enc[4]),
        .Q(block_field[2]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[50] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_66_enc_reg_reg[65] [1]),
        .D(rx_66_enc[50]),
        .Q(rx_66_enc_reg[50]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[51] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_66_enc_reg_reg[65] [1]),
        .D(rx_66_enc[51]),
        .Q(rx_66_enc_reg[51]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[52] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_66_enc_reg_reg[65] [1]),
        .D(rx_66_enc[52]),
        .Q(rx_66_enc_reg[52]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[53] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_66_enc_reg_reg[65] [1]),
        .D(rx_66_enc[53]),
        .Q(rx_66_enc_reg[53]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[54] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_66_enc_reg_reg[65] [1]),
        .D(rx_66_enc[54]),
        .Q(rx_66_enc_reg[54]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[55] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_66_enc_reg_reg[65] [1]),
        .D(rx_66_enc[55]),
        .Q(rx_66_enc_reg[55]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[56] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_66_enc_reg_reg[65] [1]),
        .D(rx_66_enc[56]),
        .Q(rx_66_enc_reg[56]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[57] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_66_enc_reg_reg[65] [1]),
        .D(rx_66_enc[57]),
        .Q(rx_66_enc_reg[57]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[58] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_66_enc_reg_reg[65] [1]),
        .D(rx_66_enc[58]),
        .Q(rx_66_enc_reg[58]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[59] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_66_enc_reg_reg[65] [2]),
        .D(rx_66_enc[59]),
        .Q(rx_66_enc_reg[59]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[5] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_66_enc_reg_reg[65] [0]),
        .D(rx_66_enc[5]),
        .Q(block_field[3]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[60] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_66_enc_reg_reg[65] [2]),
        .D(rx_66_enc[60]),
        .Q(rx_66_enc_reg[60]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[61] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_66_enc_reg_reg[65] [2]),
        .D(rx_66_enc[61]),
        .Q(rx_66_enc_reg[61]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[62] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_66_enc_reg_reg[65] [2]),
        .D(rx_66_enc[62]),
        .Q(rx_66_enc_reg[62]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[63] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_66_enc_reg_reg[65] [2]),
        .D(rx_66_enc[63]),
        .Q(rx_66_enc_reg[63]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[64] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_66_enc_reg_reg[65] [2]),
        .D(rx_66_enc[64]),
        .Q(rx_66_enc_reg[64]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[65] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_66_enc_reg_reg[65] [2]),
        .D(rx_66_enc[65]),
        .Q(rx_66_enc_reg[65]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[6] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_66_enc_reg_reg[65] [0]),
        .D(rx_66_enc[6]),
        .Q(block_field[4]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[7] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_66_enc_reg_reg[65] [0]),
        .D(rx_66_enc[7]),
        .Q(block_field[5]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[8] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_66_enc_reg_reg[65] [0]),
        .D(rx_66_enc[8]),
        .Q(block_field[6]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[9] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_66_enc_reg_reg[65] [1]),
        .D(rx_66_enc[9]),
        .Q(block_field[7]),
        .R(1'b0));
  ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_rx_ber_mon_fsm rx_ber_mon_fsm_i
       (.\FSM_sequential_mcp1_state_reg[1]_0 (\mcp1_descr_reg_reg[0] [1:0]),
        .\FSM_sequential_mcp1_state_reg[2]_0 (rxreset_6),
        .\FSM_sequential_mcp1_state_reg[2]_1 (\FSM_sequential_mcp1_state_reg[0] [2]),
        .\FSM_sequential_mcp1_state_reg[2]_2 (rx_pcs_fsm_i_n_5),
        .b_lock_mod(b_lock_mod),
        .ber_count_inc(ber_count_inc),
        .mcp1_ber_count_inc_reg_0(mcp1_err_block_count_inc_out_reg),
        .mcp1_hiber_reg_0(mcp1_hiber_reg),
        .\mcp1_timer_125us_reg[15]_0 (\mcp1_timer_125us_reg[15] ),
        .out(rxreset_2),
        .rxreset_6_reg(rx_ber_mon_fsm_i_n_2),
        .rxusrclk2(rxusrclk2));
  ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_rx_block_lock_fsm rx_block_lock_fsm_i
       (.E(E),
        .\FSM_sequential_mcp1_state_reg[0]_0 (\mcp1_descr_reg_reg[0] [1:0]),
        .S(rx_block_lock_fsm_i_n_2),
        .\b_lock_count_reg[3] (rx_pcs_fsm_i_n_2),
        .b_lock_mod(b_lock_mod),
        .gt_slip_int(gt_slip_int),
        .mcp1_state0(mcp1_state0),
        .mcp1_test_sh_reg_0(mcp1_err_block_count_inc_out_reg),
        .rxusrclk2(rxusrclk2));
  ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_rx_decoder rx_decoder_i
       (.D(rx_ebuff_data_t),
        .E({\mcp1_rx_66_enc_reg_reg[65] [2],\mcp1_rx_66_enc_reg_reg[22] [1]}),
        .Q({rx_66_enc_reg[65:10],block_field,rx_66_enc_reg[1:0]}),
        .SS(SS),
        .\mcp1_dec_c0_reg[6]_0 (\mcp1_dec_c0_reg[6] ),
        .\mcp1_dec_c0_reg[7]_0 (\mcp1_dec_c0_reg[7] ),
        .\mcp1_dec_c1_reg[7]_0 (\mcp1_dec_c1_reg[7] ),
        .\mcp1_dec_c2_reg[6]_0 (\mcp1_dec_c2_reg[6] ),
        .\mcp1_dec_c3_reg[5]_0 (\mcp1_dec_c3_reg[5] ),
        .\mcp1_dec_c4_reg[7]_0 (\mcp1_rx_ebuff_data_reg[0] [1:0]),
        .\mcp1_dec_c4_reg[7]_1 (\mcp1_dec_c4_reg[7] ),
        .\mcp1_dec_c5_reg[5]_0 (\mcp1_dec_c5_reg[5] ),
        .\mcp1_dec_c5_reg[7]_0 (E),
        .\mcp1_dec_c7_reg[7]_0 (\mcp1_dec_c7_reg[7] ),
        .\mcp1_r_type_next_reg_reg[0]_0 (rx_decoder_i_n_85),
        .\mcp1_r_type_next_reg_reg[2]_0 (\mcp1_r_type_next_reg_reg[2] ),
        .\mcp1_r_type_reg_reg[0]_0 (rx_decoder_i_n_0),
        .\mcp1_r_type_reg_reg[2]_0 (r_type),
        .\mcp1_rx_64_ctrl_out_reg[1]_0 (mcp1_err_block_count_inc_out_reg),
        .\mcp1_rx_64_ctrl_out_reg[7]_0 (rx_ebuff_ctrl_t),
        .\mcp1_rx_64_data_out_reg[28]_0 (\mcp1_rx_66_enc_reg_reg[22] [0]),
        .\mcp1_rx_ebuff_ctrl_reg[7] (rx_pcs_fsm_i_n_3),
        .mcp1_state__0(mcp1_state__0),
        .next_state__0(next_state__0),
        .out(rxreset_5),
        .\rx_66_enc_reg_reg[11] (D),
        .\rx_66_enc_reg_reg[17] (\rx_66_enc_reg_reg[17]_0 ),
        .\rx_66_enc_reg_reg[29] (\rx_66_enc_reg_reg[29]_0 ),
        .\rx_66_enc_reg_reg[31] (\rx_66_enc_reg_reg[31]_0 ),
        .\rx_66_enc_reg_reg[39] (\rx_66_enc_reg_reg[39]_0 ),
        .\rx_66_enc_reg_reg[47] (\rx_66_enc_reg_reg[47]_0 ),
        .\rx_66_enc_reg_reg[53] (\rx_66_enc_reg_reg[53]_0 ),
        .\rx_66_enc_reg_reg[61] (\rx_66_enc_reg_reg[61]_0 ),
        .rxusrclk2(rxusrclk2));
  ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_rx_pcs_fsm rx_pcs_fsm_i
       (.CO(mcp1_err_block_count_inc_out1),
        .D(rx_ebuff_ctrl_t),
        .\FSM_sequential_mcp1_state_reg[0]_0 (\FSM_sequential_mcp1_state_reg[0] [2]),
        .\FSM_sequential_mcp1_state_reg[0]_1 (mcp1_hiber_reg),
        .\FSM_sequential_mcp1_state_reg[0]_2 (rx_decoder_i_n_85),
        .\FSM_sequential_mcp1_state_reg[1]_0 (rx_pcs_fsm_i_n_6),
        .\FSM_sequential_mcp1_state_reg[1]_1 (next_state__0),
        .\FSM_sequential_mcp1_state_reg[2]_0 (rx_pcs_fsm_i_n_3),
        .\FSM_sequential_mcp1_state_reg[2]_1 (mcp1_state__0),
        .\FSM_sequential_mcp1_state_reg[2]_2 (rxreset_2),
        .\FSM_sequential_mcp1_state_reg[2]_3 (r_type),
        .\FSM_sequential_mcp1_state_reg[2]_4 (rx_ber_mon_fsm_i_n_2),
        .S(rx_block_lock_fsm_i_n_2),
        .\b_lock_count_reg[0]_0 (rx_pcs_fsm_i_n_2),
        .\b_lock_count_reg[19]_0 (rx_decoder_i_n_0),
        .b_lock_mod(b_lock_mod),
        .b_lock_mod_reg_0(b_lock_mod_reg),
        .cable_pull(cable_pull),
        .comp_0(comp_0),
        .comp_0_1(comp_0_1),
        .comp_0_6(comp_0_6),
        .comp_0_7(comp_0_7),
        .comp_1(comp_1),
        .comp_1_0(comp_1_0),
        .comp_1_4(comp_1_4),
        .comp_1_5(comp_1_5),
        .comp_2(comp_2),
        .comp_2_3(comp_2_3),
        .comp_8(comp_8),
        .comp_8_2(comp_8_2),
        .mcp1_err_block_count_inc_out_reg(mcp1_err_block_count_inc_out10_out),
        .mcp1_err_block_count_inc_out_reg_0(mcp1_err_block_count_inc_out_reg_0),
        .\mcp1_rx_ebuff_ctrl_reg[7]_0 (\mcp1_rx_ebuff_ctrl_reg[7] ),
        .\mcp1_rx_ebuff_data_reg[0]_0 (mcp1_err_block_count_inc_out_reg),
        .\mcp1_rx_ebuff_data_reg[0]_1 ({\mcp1_rx_ebuff_data_reg[0] [2],\mcp1_rx_ebuff_data_reg[0] [0]}),
        .\mcp1_rx_ebuff_data_reg[23]_0 (\mcp1_rx_66_enc_reg_reg[65] [0]),
        .\mcp1_rx_ebuff_data_reg[63]_0 (\mcp1_rx_ebuff_data_reg[63] ),
        .\mcp1_rx_ebuff_data_reg[63]_1 (rx_ebuff_data_t),
        .out(rxreset_6),
        .rxreset_2_reg(rx_pcs_fsm_i_n_5),
        .rxusrclk2(rxusrclk2));
  ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_rx_pcs_test rx_pcs_test_i
       (.CO(mcp1_err_block_count_inc_out1),
        .E(E),
        .Q({rx_66_enc_reg[65:10],block_field}),
        .SR(rxreset_3),
        .err_block_count_inc(err_block_count_inc),
        .mcp1_err_block_count_inc_out_reg_0(rx_pcs_fsm_i_n_6),
        .mcp1_err_block_count_inc_out_reg_1(mcp1_err_block_count_inc_out_reg),
        .mcp1_ignore_next_mismatch_reg_0(\FSM_sequential_mcp1_state_reg[0] ),
        .mcp1_ignore_next_mismatch_reg_1(b_lock_mod_reg),
        .\rx_66_enc_reg_reg[65] (mcp1_err_block_count_inc_out10_out),
        .rxusrclk2(rxusrclk2));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE rxreset_1_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(out),
        .Q(rxreset_1),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE rxreset_2_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(out),
        .Q(rxreset_2),
        .R(1'b0));
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE rxreset_3_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(out),
        .Q(rxreset_3),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE rxreset_4_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(out),
        .Q(rxreset_4),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE rxreset_5_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(out),
        .Q(rxreset_5),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE rxreset_6_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(out),
        .Q(rxreset_6),
        .R(1'b0));
  ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_synchronizer_32 synch_signal_ok
       (.mcp1_state0(mcp1_state0),
        .out(rxreset_1),
        .rxusrclk2(rxusrclk2),
        .signal_detect(signal_detect));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_15_rx_pcs_fsm" *) 
module ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_rx_pcs_fsm
   (b_lock_mod_reg_0,
    cable_pull,
    \b_lock_count_reg[0]_0 ,
    \FSM_sequential_mcp1_state_reg[2]_0 ,
    \FSM_sequential_mcp1_state_reg[2]_1 ,
    rxreset_2_reg,
    \FSM_sequential_mcp1_state_reg[1]_0 ,
    \mcp1_rx_ebuff_ctrl_reg[7]_0 ,
    \mcp1_rx_ebuff_data_reg[63]_0 ,
    comp_8,
    comp_2,
    comp_1,
    comp_1_0,
    comp_0,
    comp_0_1,
    comp_8_2,
    comp_2_3,
    comp_1_4,
    comp_1_5,
    comp_0_6,
    comp_0_7,
    rxusrclk2,
    out,
    b_lock_mod,
    S,
    \FSM_sequential_mcp1_state_reg[2]_2 ,
    \FSM_sequential_mcp1_state_reg[0]_0 ,
    \mcp1_rx_ebuff_data_reg[0]_0 ,
    CO,
    mcp1_err_block_count_inc_out_reg,
    mcp1_err_block_count_inc_out_reg_0,
    \FSM_sequential_mcp1_state_reg[1]_1 ,
    \FSM_sequential_mcp1_state_reg[2]_3 ,
    \b_lock_count_reg[19]_0 ,
    \FSM_sequential_mcp1_state_reg[2]_4 ,
    \FSM_sequential_mcp1_state_reg[0]_1 ,
    \FSM_sequential_mcp1_state_reg[0]_2 ,
    \mcp1_rx_ebuff_data_reg[0]_1 ,
    D,
    \mcp1_rx_ebuff_data_reg[23]_0 ,
    \mcp1_rx_ebuff_data_reg[63]_1 );
  output b_lock_mod_reg_0;
  output cable_pull;
  output \b_lock_count_reg[0]_0 ;
  output \FSM_sequential_mcp1_state_reg[2]_0 ;
  output [0:0]\FSM_sequential_mcp1_state_reg[2]_1 ;
  output rxreset_2_reg;
  output \FSM_sequential_mcp1_state_reg[1]_0 ;
  output [7:0]\mcp1_rx_ebuff_ctrl_reg[7]_0 ;
  output [63:0]\mcp1_rx_ebuff_data_reg[63]_0 ;
  output comp_8;
  output comp_2;
  output comp_1;
  output comp_1_0;
  output comp_0;
  output comp_0_1;
  output comp_8_2;
  output comp_2_3;
  output comp_1_4;
  output comp_1_5;
  output comp_0_6;
  output comp_0_7;
  input rxusrclk2;
  input out;
  input b_lock_mod;
  input [0:0]S;
  input \FSM_sequential_mcp1_state_reg[2]_2 ;
  input [0:0]\FSM_sequential_mcp1_state_reg[0]_0 ;
  input \mcp1_rx_ebuff_data_reg[0]_0 ;
  input [0:0]CO;
  input [0:0]mcp1_err_block_count_inc_out_reg;
  input mcp1_err_block_count_inc_out_reg_0;
  input [0:0]\FSM_sequential_mcp1_state_reg[1]_1 ;
  input [2:0]\FSM_sequential_mcp1_state_reg[2]_3 ;
  input \b_lock_count_reg[19]_0 ;
  input \FSM_sequential_mcp1_state_reg[2]_4 ;
  input \FSM_sequential_mcp1_state_reg[0]_1 ;
  input \FSM_sequential_mcp1_state_reg[0]_2 ;
  input [1:0]\mcp1_rx_ebuff_data_reg[0]_1 ;
  input [7:0]D;
  input [0:0]\mcp1_rx_ebuff_data_reg[23]_0 ;
  input [63:0]\mcp1_rx_ebuff_data_reg[63]_1 ;

  wire [0:0]CO;
  wire [7:0]D;
  wire \FSM_sequential_mcp1_state[0]_i_1__2_n_0 ;
  wire \FSM_sequential_mcp1_state[0]_i_2__0_n_0 ;
  wire \FSM_sequential_mcp1_state[1]_i_1__1_n_0 ;
  wire \FSM_sequential_mcp1_state[2]_i_1__1_n_0 ;
  wire [0:0]\FSM_sequential_mcp1_state_reg[0]_0 ;
  wire \FSM_sequential_mcp1_state_reg[0]_1 ;
  wire \FSM_sequential_mcp1_state_reg[0]_2 ;
  wire \FSM_sequential_mcp1_state_reg[1]_0 ;
  wire [0:0]\FSM_sequential_mcp1_state_reg[1]_1 ;
  wire \FSM_sequential_mcp1_state_reg[2]_0 ;
  wire [0:0]\FSM_sequential_mcp1_state_reg[2]_1 ;
  wire \FSM_sequential_mcp1_state_reg[2]_2 ;
  wire [2:0]\FSM_sequential_mcp1_state_reg[2]_3 ;
  wire \FSM_sequential_mcp1_state_reg[2]_4 ;
  wire [0:0]S;
  wire \b_lock_count[0]_i_1_n_0 ;
  wire [19:19]b_lock_count_reg;
  wire \b_lock_count_reg[0]_0 ;
  wire \b_lock_count_reg[0]_i_2_n_0 ;
  wire \b_lock_count_reg[0]_i_2_n_1 ;
  wire \b_lock_count_reg[0]_i_2_n_2 ;
  wire \b_lock_count_reg[0]_i_2_n_3 ;
  wire \b_lock_count_reg[0]_i_2_n_4 ;
  wire \b_lock_count_reg[0]_i_2_n_5 ;
  wire \b_lock_count_reg[0]_i_2_n_6 ;
  wire \b_lock_count_reg[0]_i_2_n_7 ;
  wire \b_lock_count_reg[12]_i_1_n_0 ;
  wire \b_lock_count_reg[12]_i_1_n_1 ;
  wire \b_lock_count_reg[12]_i_1_n_2 ;
  wire \b_lock_count_reg[12]_i_1_n_3 ;
  wire \b_lock_count_reg[12]_i_1_n_4 ;
  wire \b_lock_count_reg[12]_i_1_n_5 ;
  wire \b_lock_count_reg[12]_i_1_n_6 ;
  wire \b_lock_count_reg[12]_i_1_n_7 ;
  wire \b_lock_count_reg[16]_i_1_n_1 ;
  wire \b_lock_count_reg[16]_i_1_n_2 ;
  wire \b_lock_count_reg[16]_i_1_n_3 ;
  wire \b_lock_count_reg[16]_i_1_n_4 ;
  wire \b_lock_count_reg[16]_i_1_n_5 ;
  wire \b_lock_count_reg[16]_i_1_n_6 ;
  wire \b_lock_count_reg[16]_i_1_n_7 ;
  wire \b_lock_count_reg[19]_0 ;
  wire \b_lock_count_reg[4]_i_1_n_0 ;
  wire \b_lock_count_reg[4]_i_1_n_1 ;
  wire \b_lock_count_reg[4]_i_1_n_2 ;
  wire \b_lock_count_reg[4]_i_1_n_3 ;
  wire \b_lock_count_reg[4]_i_1_n_4 ;
  wire \b_lock_count_reg[4]_i_1_n_5 ;
  wire \b_lock_count_reg[4]_i_1_n_6 ;
  wire \b_lock_count_reg[4]_i_1_n_7 ;
  wire \b_lock_count_reg[8]_i_1_n_0 ;
  wire \b_lock_count_reg[8]_i_1_n_1 ;
  wire \b_lock_count_reg[8]_i_1_n_2 ;
  wire \b_lock_count_reg[8]_i_1_n_3 ;
  wire \b_lock_count_reg[8]_i_1_n_4 ;
  wire \b_lock_count_reg[8]_i_1_n_5 ;
  wire \b_lock_count_reg[8]_i_1_n_6 ;
  wire \b_lock_count_reg[8]_i_1_n_7 ;
  wire \b_lock_count_reg_n_0_[10] ;
  wire \b_lock_count_reg_n_0_[11] ;
  wire \b_lock_count_reg_n_0_[12] ;
  wire \b_lock_count_reg_n_0_[13] ;
  wire \b_lock_count_reg_n_0_[14] ;
  wire \b_lock_count_reg_n_0_[15] ;
  wire \b_lock_count_reg_n_0_[16] ;
  wire \b_lock_count_reg_n_0_[17] ;
  wire \b_lock_count_reg_n_0_[18] ;
  wire \b_lock_count_reg_n_0_[1] ;
  wire \b_lock_count_reg_n_0_[2] ;
  wire \b_lock_count_reg_n_0_[3] ;
  wire \b_lock_count_reg_n_0_[4] ;
  wire \b_lock_count_reg_n_0_[5] ;
  wire \b_lock_count_reg_n_0_[6] ;
  wire \b_lock_count_reg_n_0_[7] ;
  wire \b_lock_count_reg_n_0_[8] ;
  wire \b_lock_count_reg_n_0_[9] ;
  wire \b_lock_deassert_count[5]_i_1_n_0 ;
  wire \b_lock_deassert_count_reg_n_0_[0] ;
  wire \b_lock_deassert_count_reg_n_0_[1] ;
  wire \b_lock_deassert_count_reg_n_0_[2] ;
  wire \b_lock_deassert_count_reg_n_0_[3] ;
  wire \b_lock_deassert_count_reg_n_0_[4] ;
  wire b_lock_mod;
  wire b_lock_mod_i_1_n_0;
  wire b_lock_mod_r;
  wire b_lock_mod_reg_0;
  wire cable_pull;
  wire cable_pull_i_1_n_0;
  wire cable_pull_i_2_n_0;
  wire comp_0;
  wire comp_0_1;
  wire comp_0_6;
  wire comp_0_7;
  wire comp_1;
  wire comp_1_0;
  wire comp_1_4;
  wire comp_1_5;
  wire comp_2;
  wire comp_2_3;
  wire comp_8;
  wire comp_8_2;
  wire [0:0]mcp1_err_block_count_inc_out_reg;
  wire mcp1_err_block_count_inc_out_reg_0;
  wire \mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ;
  wire [7:0]\mcp1_rx_ebuff_ctrl_reg[7]_0 ;
  wire \mcp1_rx_ebuff_data_reg[0]_0 ;
  wire [1:0]\mcp1_rx_ebuff_data_reg[0]_1 ;
  wire [0:0]\mcp1_rx_ebuff_data_reg[23]_0 ;
  wire [63:0]\mcp1_rx_ebuff_data_reg[63]_0 ;
  wire [63:0]\mcp1_rx_ebuff_data_reg[63]_1 ;
  wire [1:0]mcp1_state__0;
  wire [2:2]next_state__0;
  wire out;
  wire p_0_in;
  wire [5:0]p_0_in__2;
  wire p_1_in;
  wire rxreset_2_reg;
  wire rxusrclk2;
  wire sel;
  wire \state_eq_c_count[0]_i_1_n_0 ;
  wire \state_eq_c_count[1]_i_1_n_0 ;
  wire \state_eq_c_count[2]_i_1_n_0 ;
  wire \state_eq_c_count[2]_i_2_n_0 ;
  wire \state_eq_c_count_reg_n_0_[0] ;
  wire \state_eq_c_count_reg_n_0_[1] ;
  wire [3:3]\NLW_b_lock_count_reg[16]_i_1_CO_UNCONNECTED ;

  LUT6 #(
    .INIT(64'h0000000022222A22)) 
    \FSM_sequential_mcp1_state[0]_i_1__2 
       (.I0(\FSM_sequential_mcp1_state[0]_i_2__0_n_0 ),
        .I1(\mcp1_rx_ebuff_data_reg[0]_0 ),
        .I2(\FSM_sequential_mcp1_state_reg[0]_0 ),
        .I3(b_lock_mod),
        .I4(\FSM_sequential_mcp1_state_reg[0]_1 ),
        .I5(out),
        .O(\FSM_sequential_mcp1_state[0]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'hB0F4FFFFA0F50000)) 
    \FSM_sequential_mcp1_state[0]_i_2__0 
       (.I0(\FSM_sequential_mcp1_state_reg[2]_1 ),
        .I1(mcp1_state__0[1]),
        .I2(\FSM_sequential_mcp1_state_reg[0]_2 ),
        .I3(\b_lock_count_reg[19]_0 ),
        .I4(\mcp1_rx_ebuff_data_reg[0]_0 ),
        .I5(mcp1_state__0[0]),
        .O(\FSM_sequential_mcp1_state[0]_i_2__0_n_0 ));
  LUT4 #(
    .INIT(16'h00E2)) 
    \FSM_sequential_mcp1_state[1]_i_1__1 
       (.I0(mcp1_state__0[1]),
        .I1(\mcp1_rx_ebuff_data_reg[0]_0 ),
        .I2(\FSM_sequential_mcp1_state_reg[1]_1 ),
        .I3(\FSM_sequential_mcp1_state_reg[2]_4 ),
        .O(\FSM_sequential_mcp1_state[1]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair219" *) 
  LUT3 #(
    .INIT(8'h45)) 
    \FSM_sequential_mcp1_state[1]_i_3__1 
       (.I0(\FSM_sequential_mcp1_state_reg[2]_1 ),
        .I1(mcp1_state__0[1]),
        .I2(mcp1_state__0[0]),
        .O(\FSM_sequential_mcp1_state_reg[2]_0 ));
  LUT4 #(
    .INIT(16'h00E2)) 
    \FSM_sequential_mcp1_state[2]_i_1__1 
       (.I0(\FSM_sequential_mcp1_state_reg[2]_1 ),
        .I1(\mcp1_rx_ebuff_data_reg[0]_0 ),
        .I2(next_state__0),
        .I3(\FSM_sequential_mcp1_state_reg[2]_4 ),
        .O(\FSM_sequential_mcp1_state[2]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'h000000000000BA45)) 
    \FSM_sequential_mcp1_state[2]_i_2__1 
       (.I0(\FSM_sequential_mcp1_state_reg[2]_1 ),
        .I1(mcp1_state__0[1]),
        .I2(mcp1_state__0[0]),
        .I3(\FSM_sequential_mcp1_state_reg[2]_3 [0]),
        .I4(\FSM_sequential_mcp1_state_reg[2]_3 [2]),
        .I5(\FSM_sequential_mcp1_state_reg[2]_3 [1]),
        .O(next_state__0));
  LUT4 #(
    .INIT(16'hFBAA)) 
    \FSM_sequential_mcp1_state[2]_i_5 
       (.I0(\FSM_sequential_mcp1_state_reg[2]_2 ),
        .I1(b_lock_mod_reg_0),
        .I2(\FSM_sequential_mcp1_state_reg[0]_0 ),
        .I3(\mcp1_rx_ebuff_data_reg[0]_0 ),
        .O(rxreset_2_reg));
  (* FSM_ENCODED_STATES = "RX_INIT:000,RX_D:100,RX_C:011,RX_E:001,RX_T:010" *) 
  FDRE \FSM_sequential_mcp1_state_reg[0] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(\FSM_sequential_mcp1_state[0]_i_1__2_n_0 ),
        .Q(mcp1_state__0[0]),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "RX_INIT:000,RX_D:100,RX_C:011,RX_E:001,RX_T:010" *) 
  FDRE \FSM_sequential_mcp1_state_reg[1] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(\FSM_sequential_mcp1_state[1]_i_1__1_n_0 ),
        .Q(mcp1_state__0[1]),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "RX_INIT:000,RX_D:100,RX_C:011,RX_E:001,RX_T:010" *) 
  FDRE \FSM_sequential_mcp1_state_reg[2] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(\FSM_sequential_mcp1_state[2]_i_1__1_n_0 ),
        .Q(\FSM_sequential_mcp1_state_reg[2]_1 ),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hFFFFFF08)) 
    \b_lock_count[0]_i_1 
       (.I0(mcp1_state__0[0]),
        .I1(mcp1_state__0[1]),
        .I2(\FSM_sequential_mcp1_state_reg[2]_1 ),
        .I3(\b_lock_count_reg[19]_0 ),
        .I4(out),
        .O(\b_lock_count[0]_i_1_n_0 ));
  FDRE \b_lock_count_reg[0] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(\b_lock_count_reg[0]_i_2_n_7 ),
        .Q(\b_lock_count_reg[0]_0 ),
        .R(\b_lock_count[0]_i_1_n_0 ));
  CARRY4 \b_lock_count_reg[0]_i_2 
       (.CI(1'b0),
        .CO({\b_lock_count_reg[0]_i_2_n_0 ,\b_lock_count_reg[0]_i_2_n_1 ,\b_lock_count_reg[0]_i_2_n_2 ,\b_lock_count_reg[0]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,b_lock_mod}),
        .O({\b_lock_count_reg[0]_i_2_n_4 ,\b_lock_count_reg[0]_i_2_n_5 ,\b_lock_count_reg[0]_i_2_n_6 ,\b_lock_count_reg[0]_i_2_n_7 }),
        .S({\b_lock_count_reg_n_0_[3] ,\b_lock_count_reg_n_0_[2] ,\b_lock_count_reg_n_0_[1] ,S}));
  FDRE \b_lock_count_reg[10] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(\b_lock_count_reg[8]_i_1_n_5 ),
        .Q(\b_lock_count_reg_n_0_[10] ),
        .R(\b_lock_count[0]_i_1_n_0 ));
  FDRE \b_lock_count_reg[11] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(\b_lock_count_reg[8]_i_1_n_4 ),
        .Q(\b_lock_count_reg_n_0_[11] ),
        .R(\b_lock_count[0]_i_1_n_0 ));
  FDRE \b_lock_count_reg[12] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(\b_lock_count_reg[12]_i_1_n_7 ),
        .Q(\b_lock_count_reg_n_0_[12] ),
        .R(\b_lock_count[0]_i_1_n_0 ));
  CARRY4 \b_lock_count_reg[12]_i_1 
       (.CI(\b_lock_count_reg[8]_i_1_n_0 ),
        .CO({\b_lock_count_reg[12]_i_1_n_0 ,\b_lock_count_reg[12]_i_1_n_1 ,\b_lock_count_reg[12]_i_1_n_2 ,\b_lock_count_reg[12]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\b_lock_count_reg[12]_i_1_n_4 ,\b_lock_count_reg[12]_i_1_n_5 ,\b_lock_count_reg[12]_i_1_n_6 ,\b_lock_count_reg[12]_i_1_n_7 }),
        .S({\b_lock_count_reg_n_0_[15] ,\b_lock_count_reg_n_0_[14] ,\b_lock_count_reg_n_0_[13] ,\b_lock_count_reg_n_0_[12] }));
  FDRE \b_lock_count_reg[13] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(\b_lock_count_reg[12]_i_1_n_6 ),
        .Q(\b_lock_count_reg_n_0_[13] ),
        .R(\b_lock_count[0]_i_1_n_0 ));
  FDRE \b_lock_count_reg[14] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(\b_lock_count_reg[12]_i_1_n_5 ),
        .Q(\b_lock_count_reg_n_0_[14] ),
        .R(\b_lock_count[0]_i_1_n_0 ));
  FDRE \b_lock_count_reg[15] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(\b_lock_count_reg[12]_i_1_n_4 ),
        .Q(\b_lock_count_reg_n_0_[15] ),
        .R(\b_lock_count[0]_i_1_n_0 ));
  FDRE \b_lock_count_reg[16] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(\b_lock_count_reg[16]_i_1_n_7 ),
        .Q(\b_lock_count_reg_n_0_[16] ),
        .R(\b_lock_count[0]_i_1_n_0 ));
  CARRY4 \b_lock_count_reg[16]_i_1 
       (.CI(\b_lock_count_reg[12]_i_1_n_0 ),
        .CO({\NLW_b_lock_count_reg[16]_i_1_CO_UNCONNECTED [3],\b_lock_count_reg[16]_i_1_n_1 ,\b_lock_count_reg[16]_i_1_n_2 ,\b_lock_count_reg[16]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\b_lock_count_reg[16]_i_1_n_4 ,\b_lock_count_reg[16]_i_1_n_5 ,\b_lock_count_reg[16]_i_1_n_6 ,\b_lock_count_reg[16]_i_1_n_7 }),
        .S({b_lock_count_reg,\b_lock_count_reg_n_0_[18] ,\b_lock_count_reg_n_0_[17] ,\b_lock_count_reg_n_0_[16] }));
  FDRE \b_lock_count_reg[17] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(\b_lock_count_reg[16]_i_1_n_6 ),
        .Q(\b_lock_count_reg_n_0_[17] ),
        .R(\b_lock_count[0]_i_1_n_0 ));
  FDRE \b_lock_count_reg[18] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(\b_lock_count_reg[16]_i_1_n_5 ),
        .Q(\b_lock_count_reg_n_0_[18] ),
        .R(\b_lock_count[0]_i_1_n_0 ));
  FDRE \b_lock_count_reg[19] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(\b_lock_count_reg[16]_i_1_n_4 ),
        .Q(b_lock_count_reg),
        .R(\b_lock_count[0]_i_1_n_0 ));
  FDRE \b_lock_count_reg[1] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(\b_lock_count_reg[0]_i_2_n_6 ),
        .Q(\b_lock_count_reg_n_0_[1] ),
        .R(\b_lock_count[0]_i_1_n_0 ));
  FDRE \b_lock_count_reg[2] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(\b_lock_count_reg[0]_i_2_n_5 ),
        .Q(\b_lock_count_reg_n_0_[2] ),
        .R(\b_lock_count[0]_i_1_n_0 ));
  FDRE \b_lock_count_reg[3] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(\b_lock_count_reg[0]_i_2_n_4 ),
        .Q(\b_lock_count_reg_n_0_[3] ),
        .R(\b_lock_count[0]_i_1_n_0 ));
  FDRE \b_lock_count_reg[4] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(\b_lock_count_reg[4]_i_1_n_7 ),
        .Q(\b_lock_count_reg_n_0_[4] ),
        .R(\b_lock_count[0]_i_1_n_0 ));
  CARRY4 \b_lock_count_reg[4]_i_1 
       (.CI(\b_lock_count_reg[0]_i_2_n_0 ),
        .CO({\b_lock_count_reg[4]_i_1_n_0 ,\b_lock_count_reg[4]_i_1_n_1 ,\b_lock_count_reg[4]_i_1_n_2 ,\b_lock_count_reg[4]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\b_lock_count_reg[4]_i_1_n_4 ,\b_lock_count_reg[4]_i_1_n_5 ,\b_lock_count_reg[4]_i_1_n_6 ,\b_lock_count_reg[4]_i_1_n_7 }),
        .S({\b_lock_count_reg_n_0_[7] ,\b_lock_count_reg_n_0_[6] ,\b_lock_count_reg_n_0_[5] ,\b_lock_count_reg_n_0_[4] }));
  FDRE \b_lock_count_reg[5] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(\b_lock_count_reg[4]_i_1_n_6 ),
        .Q(\b_lock_count_reg_n_0_[5] ),
        .R(\b_lock_count[0]_i_1_n_0 ));
  FDRE \b_lock_count_reg[6] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(\b_lock_count_reg[4]_i_1_n_5 ),
        .Q(\b_lock_count_reg_n_0_[6] ),
        .R(\b_lock_count[0]_i_1_n_0 ));
  FDRE \b_lock_count_reg[7] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(\b_lock_count_reg[4]_i_1_n_4 ),
        .Q(\b_lock_count_reg_n_0_[7] ),
        .R(\b_lock_count[0]_i_1_n_0 ));
  FDRE \b_lock_count_reg[8] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(\b_lock_count_reg[8]_i_1_n_7 ),
        .Q(\b_lock_count_reg_n_0_[8] ),
        .R(\b_lock_count[0]_i_1_n_0 ));
  CARRY4 \b_lock_count_reg[8]_i_1 
       (.CI(\b_lock_count_reg[4]_i_1_n_0 ),
        .CO({\b_lock_count_reg[8]_i_1_n_0 ,\b_lock_count_reg[8]_i_1_n_1 ,\b_lock_count_reg[8]_i_1_n_2 ,\b_lock_count_reg[8]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\b_lock_count_reg[8]_i_1_n_4 ,\b_lock_count_reg[8]_i_1_n_5 ,\b_lock_count_reg[8]_i_1_n_6 ,\b_lock_count_reg[8]_i_1_n_7 }),
        .S({\b_lock_count_reg_n_0_[11] ,\b_lock_count_reg_n_0_[10] ,\b_lock_count_reg_n_0_[9] ,\b_lock_count_reg_n_0_[8] }));
  FDRE \b_lock_count_reg[9] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(\b_lock_count_reg[8]_i_1_n_6 ),
        .Q(\b_lock_count_reg_n_0_[9] ),
        .R(\b_lock_count[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair222" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \b_lock_deassert_count[0]_i_1 
       (.I0(\b_lock_deassert_count_reg_n_0_[0] ),
        .O(p_0_in__2[0]));
  (* SOFT_HLUTNM = "soft_lutpair222" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \b_lock_deassert_count[1]_i_1 
       (.I0(\b_lock_deassert_count_reg_n_0_[0] ),
        .I1(\b_lock_deassert_count_reg_n_0_[1] ),
        .O(p_0_in__2[1]));
  (* SOFT_HLUTNM = "soft_lutpair221" *) 
  LUT3 #(
    .INIT(8'h6A)) 
    \b_lock_deassert_count[2]_i_1 
       (.I0(\b_lock_deassert_count_reg_n_0_[2] ),
        .I1(\b_lock_deassert_count_reg_n_0_[1] ),
        .I2(\b_lock_deassert_count_reg_n_0_[0] ),
        .O(p_0_in__2[2]));
  (* SOFT_HLUTNM = "soft_lutpair221" *) 
  LUT4 #(
    .INIT(16'h6AAA)) 
    \b_lock_deassert_count[3]_i_1 
       (.I0(\b_lock_deassert_count_reg_n_0_[3] ),
        .I1(\b_lock_deassert_count_reg_n_0_[0] ),
        .I2(\b_lock_deassert_count_reg_n_0_[1] ),
        .I3(\b_lock_deassert_count_reg_n_0_[2] ),
        .O(p_0_in__2[3]));
  (* SOFT_HLUTNM = "soft_lutpair218" *) 
  LUT5 #(
    .INIT(32'h6AAAAAAA)) 
    \b_lock_deassert_count[4]_i_1 
       (.I0(\b_lock_deassert_count_reg_n_0_[4] ),
        .I1(\b_lock_deassert_count_reg_n_0_[2] ),
        .I2(\b_lock_deassert_count_reg_n_0_[1] ),
        .I3(\b_lock_deassert_count_reg_n_0_[0] ),
        .I4(\b_lock_deassert_count_reg_n_0_[3] ),
        .O(p_0_in__2[4]));
  LUT3 #(
    .INIT(8'hBA)) 
    \b_lock_deassert_count[5]_i_1 
       (.I0(out),
        .I1(b_lock_mod_reg_0),
        .I2(b_lock_mod_r),
        .O(\b_lock_deassert_count[5]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \b_lock_deassert_count[5]_i_2 
       (.I0(p_0_in),
        .O(sel));
  (* SOFT_HLUTNM = "soft_lutpair218" *) 
  LUT5 #(
    .INIT(32'h80000000)) 
    \b_lock_deassert_count[5]_i_3 
       (.I0(\b_lock_deassert_count_reg_n_0_[3] ),
        .I1(\b_lock_deassert_count_reg_n_0_[0] ),
        .I2(\b_lock_deassert_count_reg_n_0_[1] ),
        .I3(\b_lock_deassert_count_reg_n_0_[2] ),
        .I4(\b_lock_deassert_count_reg_n_0_[4] ),
        .O(p_0_in__2[5]));
  FDRE \b_lock_deassert_count_reg[0] 
       (.C(rxusrclk2),
        .CE(sel),
        .D(p_0_in__2[0]),
        .Q(\b_lock_deassert_count_reg_n_0_[0] ),
        .R(\b_lock_deassert_count[5]_i_1_n_0 ));
  FDRE \b_lock_deassert_count_reg[1] 
       (.C(rxusrclk2),
        .CE(sel),
        .D(p_0_in__2[1]),
        .Q(\b_lock_deassert_count_reg_n_0_[1] ),
        .R(\b_lock_deassert_count[5]_i_1_n_0 ));
  FDRE \b_lock_deassert_count_reg[2] 
       (.C(rxusrclk2),
        .CE(sel),
        .D(p_0_in__2[2]),
        .Q(\b_lock_deassert_count_reg_n_0_[2] ),
        .R(\b_lock_deassert_count[5]_i_1_n_0 ));
  FDRE \b_lock_deassert_count_reg[3] 
       (.C(rxusrclk2),
        .CE(sel),
        .D(p_0_in__2[3]),
        .Q(\b_lock_deassert_count_reg_n_0_[3] ),
        .R(\b_lock_deassert_count[5]_i_1_n_0 ));
  FDRE \b_lock_deassert_count_reg[4] 
       (.C(rxusrclk2),
        .CE(sel),
        .D(p_0_in__2[4]),
        .Q(\b_lock_deassert_count_reg_n_0_[4] ),
        .R(\b_lock_deassert_count[5]_i_1_n_0 ));
  FDRE \b_lock_deassert_count_reg[5] 
       (.C(rxusrclk2),
        .CE(sel),
        .D(p_0_in__2[5]),
        .Q(p_0_in),
        .R(\b_lock_deassert_count[5]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h8000FF0080008000)) 
    b_lock_mod_i_1
       (.I0(p_0_in),
        .I1(cable_pull_i_2_n_0),
        .I2(p_1_in),
        .I3(b_lock_mod),
        .I4(b_lock_count_reg),
        .I5(b_lock_mod_reg_0),
        .O(b_lock_mod_i_1_n_0));
  FDRE b_lock_mod_r_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(b_lock_mod_reg_0),
        .Q(b_lock_mod_r),
        .R(1'b0));
  FDRE b_lock_mod_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(b_lock_mod_i_1_n_0),
        .Q(b_lock_mod_reg_0),
        .R(out));
  LUT5 #(
    .INIT(32'hF4444444)) 
    cable_pull_i_1
       (.I0(b_lock_count_reg),
        .I1(cable_pull),
        .I2(b_lock_mod),
        .I3(p_1_in),
        .I4(cable_pull_i_2_n_0),
        .O(cable_pull_i_1_n_0));
  LUT3 #(
    .INIT(8'h40)) 
    cable_pull_i_2
       (.I0(\FSM_sequential_mcp1_state_reg[2]_1 ),
        .I1(mcp1_state__0[1]),
        .I2(mcp1_state__0[0]),
        .O(cable_pull_i_2_n_0));
  FDRE #(
    .INIT(1'b0)) 
    cable_pull_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(cable_pull_i_1_n_0),
        .Q(cable_pull),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h80808080808F8080)) 
    mcp1_err_block_count_inc_out_i_2
       (.I0(CO),
        .I1(mcp1_err_block_count_inc_out_reg),
        .I2(mcp1_err_block_count_inc_out_reg_0),
        .I3(mcp1_state__0[1]),
        .I4(mcp1_state__0[0]),
        .I5(\FSM_sequential_mcp1_state_reg[2]_1 ),
        .O(\FSM_sequential_mcp1_state_reg[1]_0 ));
  LUT5 #(
    .INIT(32'hAAAAAABA)) 
    \mcp1_rx_ebuff_ctrl[7]_i_1 
       (.I0(out),
        .I1(\FSM_sequential_mcp1_state_reg[2]_1 ),
        .I2(\mcp1_rx_ebuff_data_reg[0]_0 ),
        .I3(mcp1_state__0[0]),
        .I4(mcp1_state__0[1]),
        .O(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDSE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_ctrl_reg[0] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_ebuff_data_reg[0]_1 [0]),
        .D(D[0]),
        .Q(\mcp1_rx_ebuff_ctrl_reg[7]_0 [0]),
        .S(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_ctrl_reg[1] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_ebuff_data_reg[0]_1 [0]),
        .D(D[1]),
        .Q(\mcp1_rx_ebuff_ctrl_reg[7]_0 [1]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_ctrl_reg[2] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_ebuff_data_reg[0]_1 [0]),
        .D(D[2]),
        .Q(\mcp1_rx_ebuff_ctrl_reg[7]_0 [2]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_ctrl_reg[3] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_ebuff_data_reg[0]_1 [0]),
        .D(D[3]),
        .Q(\mcp1_rx_ebuff_ctrl_reg[7]_0 [3]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDSE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_ctrl_reg[4] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_ebuff_data_reg[0]_1 [0]),
        .D(D[4]),
        .Q(\mcp1_rx_ebuff_ctrl_reg[7]_0 [4]),
        .S(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_ctrl_reg[5] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_ebuff_data_reg[0]_1 [0]),
        .D(D[5]),
        .Q(\mcp1_rx_ebuff_ctrl_reg[7]_0 [5]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_ctrl_reg[6] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_ebuff_data_reg[0]_1 [0]),
        .D(D[6]),
        .Q(\mcp1_rx_ebuff_ctrl_reg[7]_0 [6]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_ctrl_reg[7] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_ebuff_data_reg[0]_1 [0]),
        .D(D[7]),
        .Q(\mcp1_rx_ebuff_ctrl_reg[7]_0 [7]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[0] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_ebuff_data_reg[0]_1 [1]),
        .D(\mcp1_rx_ebuff_data_reg[63]_1 [0]),
        .Q(\mcp1_rx_ebuff_data_reg[63]_0 [0]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[10] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_ebuff_data_reg[0]_1 [1]),
        .D(\mcp1_rx_ebuff_data_reg[63]_1 [10]),
        .Q(\mcp1_rx_ebuff_data_reg[63]_0 [10]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[11] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_ebuff_data_reg[0]_1 [1]),
        .D(\mcp1_rx_ebuff_data_reg[63]_1 [11]),
        .Q(\mcp1_rx_ebuff_data_reg[63]_0 [11]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[12] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_ebuff_data_reg[0]_1 [1]),
        .D(\mcp1_rx_ebuff_data_reg[63]_1 [12]),
        .Q(\mcp1_rx_ebuff_data_reg[63]_0 [12]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[13] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_ebuff_data_reg[0]_1 [1]),
        .D(\mcp1_rx_ebuff_data_reg[63]_1 [13]),
        .Q(\mcp1_rx_ebuff_data_reg[63]_0 [13]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[14] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_ebuff_data_reg[0]_1 [1]),
        .D(\mcp1_rx_ebuff_data_reg[63]_1 [14]),
        .Q(\mcp1_rx_ebuff_data_reg[63]_0 [14]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[15] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_ebuff_data_reg[0]_1 [1]),
        .D(\mcp1_rx_ebuff_data_reg[63]_1 [15]),
        .Q(\mcp1_rx_ebuff_data_reg[63]_0 [15]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[16] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_ebuff_data_reg[0]_1 [1]),
        .D(\mcp1_rx_ebuff_data_reg[63]_1 [16]),
        .Q(\mcp1_rx_ebuff_data_reg[63]_0 [16]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[17] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_ebuff_data_reg[0]_1 [1]),
        .D(\mcp1_rx_ebuff_data_reg[63]_1 [17]),
        .Q(\mcp1_rx_ebuff_data_reg[63]_0 [17]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[18] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_ebuff_data_reg[0]_1 [1]),
        .D(\mcp1_rx_ebuff_data_reg[63]_1 [18]),
        .Q(\mcp1_rx_ebuff_data_reg[63]_0 [18]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[19] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_ebuff_data_reg[0]_1 [1]),
        .D(\mcp1_rx_ebuff_data_reg[63]_1 [19]),
        .Q(\mcp1_rx_ebuff_data_reg[63]_0 [19]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[1] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_ebuff_data_reg[0]_1 [1]),
        .D(\mcp1_rx_ebuff_data_reg[63]_1 [1]),
        .Q(\mcp1_rx_ebuff_data_reg[63]_0 [1]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[20] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_ebuff_data_reg[0]_1 [1]),
        .D(\mcp1_rx_ebuff_data_reg[63]_1 [20]),
        .Q(\mcp1_rx_ebuff_data_reg[63]_0 [20]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[21] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_ebuff_data_reg[0]_1 [1]),
        .D(\mcp1_rx_ebuff_data_reg[63]_1 [21]),
        .Q(\mcp1_rx_ebuff_data_reg[63]_0 [21]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[22] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_ebuff_data_reg[0]_1 [1]),
        .D(\mcp1_rx_ebuff_data_reg[63]_1 [22]),
        .Q(\mcp1_rx_ebuff_data_reg[63]_0 [22]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[23] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_ebuff_data_reg[23]_0 ),
        .D(\mcp1_rx_ebuff_data_reg[63]_1 [23]),
        .Q(\mcp1_rx_ebuff_data_reg[63]_0 [23]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDSE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[24] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_ebuff_data_reg[23]_0 ),
        .D(\mcp1_rx_ebuff_data_reg[63]_1 [24]),
        .Q(\mcp1_rx_ebuff_data_reg[63]_0 [24]),
        .S(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[25] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_ebuff_data_reg[23]_0 ),
        .D(\mcp1_rx_ebuff_data_reg[63]_1 [25]),
        .Q(\mcp1_rx_ebuff_data_reg[63]_0 [25]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[26] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_ebuff_data_reg[23]_0 ),
        .D(\mcp1_rx_ebuff_data_reg[63]_1 [26]),
        .Q(\mcp1_rx_ebuff_data_reg[63]_0 [26]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[27] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_ebuff_data_reg[23]_0 ),
        .D(\mcp1_rx_ebuff_data_reg[63]_1 [27]),
        .Q(\mcp1_rx_ebuff_data_reg[63]_0 [27]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[28] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_ebuff_data_reg[23]_0 ),
        .D(\mcp1_rx_ebuff_data_reg[63]_1 [28]),
        .Q(\mcp1_rx_ebuff_data_reg[63]_0 [28]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[29] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_ebuff_data_reg[23]_0 ),
        .D(\mcp1_rx_ebuff_data_reg[63]_1 [29]),
        .Q(\mcp1_rx_ebuff_data_reg[63]_0 [29]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDSE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[2] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_ebuff_data_reg[0]_1 [1]),
        .D(\mcp1_rx_ebuff_data_reg[63]_1 [2]),
        .Q(\mcp1_rx_ebuff_data_reg[63]_0 [2]),
        .S(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[30] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_ebuff_data_reg[23]_0 ),
        .D(\mcp1_rx_ebuff_data_reg[63]_1 [30]),
        .Q(\mcp1_rx_ebuff_data_reg[63]_0 [30]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[31] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_ebuff_data_reg[23]_0 ),
        .D(\mcp1_rx_ebuff_data_reg[63]_1 [31]),
        .Q(\mcp1_rx_ebuff_data_reg[63]_0 [31]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[32] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_ebuff_data_reg[23]_0 ),
        .D(\mcp1_rx_ebuff_data_reg[63]_1 [32]),
        .Q(\mcp1_rx_ebuff_data_reg[63]_0 [32]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[33] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_ebuff_data_reg[23]_0 ),
        .D(\mcp1_rx_ebuff_data_reg[63]_1 [33]),
        .Q(\mcp1_rx_ebuff_data_reg[63]_0 [33]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDSE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[34] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_ebuff_data_reg[23]_0 ),
        .D(\mcp1_rx_ebuff_data_reg[63]_1 [34]),
        .Q(\mcp1_rx_ebuff_data_reg[63]_0 [34]),
        .S(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDSE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[35] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_ebuff_data_reg[23]_0 ),
        .D(\mcp1_rx_ebuff_data_reg[63]_1 [35]),
        .Q(\mcp1_rx_ebuff_data_reg[63]_0 [35]),
        .S(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDSE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[36] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_ebuff_data_reg[23]_0 ),
        .D(\mcp1_rx_ebuff_data_reg[63]_1 [36]),
        .Q(\mcp1_rx_ebuff_data_reg[63]_0 [36]),
        .S(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[37] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_ebuff_data_reg[23]_0 ),
        .D(\mcp1_rx_ebuff_data_reg[63]_1 [37]),
        .Q(\mcp1_rx_ebuff_data_reg[63]_0 [37]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[38] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_ebuff_data_reg[23]_0 ),
        .D(\mcp1_rx_ebuff_data_reg[63]_1 [38]),
        .Q(\mcp1_rx_ebuff_data_reg[63]_0 [38]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDSE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[39] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_ebuff_data_reg[23]_0 ),
        .D(\mcp1_rx_ebuff_data_reg[63]_1 [39]),
        .Q(\mcp1_rx_ebuff_data_reg[63]_0 [39]),
        .S(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDSE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[3] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_ebuff_data_reg[0]_1 [1]),
        .D(\mcp1_rx_ebuff_data_reg[63]_1 [3]),
        .Q(\mcp1_rx_ebuff_data_reg[63]_0 [3]),
        .S(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[40] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_ebuff_data_reg[23]_0 ),
        .D(\mcp1_rx_ebuff_data_reg[63]_1 [40]),
        .Q(\mcp1_rx_ebuff_data_reg[63]_0 [40]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[41] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_ebuff_data_reg[23]_0 ),
        .D(\mcp1_rx_ebuff_data_reg[63]_1 [41]),
        .Q(\mcp1_rx_ebuff_data_reg[63]_0 [41]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[42] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_ebuff_data_reg[23]_0 ),
        .D(\mcp1_rx_ebuff_data_reg[63]_1 [42]),
        .Q(\mcp1_rx_ebuff_data_reg[63]_0 [42]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[43] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_ebuff_data_reg[23]_0 ),
        .D(\mcp1_rx_ebuff_data_reg[63]_1 [43]),
        .Q(\mcp1_rx_ebuff_data_reg[63]_0 [43]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[44] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_ebuff_data_reg[23]_0 ),
        .D(\mcp1_rx_ebuff_data_reg[63]_1 [44]),
        .Q(\mcp1_rx_ebuff_data_reg[63]_0 [44]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[45] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_ebuff_data_reg[23]_0 ),
        .D(\mcp1_rx_ebuff_data_reg[63]_1 [45]),
        .Q(\mcp1_rx_ebuff_data_reg[63]_0 [45]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[46] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_ebuff_data_reg[23]_0 ),
        .D(\mcp1_rx_ebuff_data_reg[63]_1 [46]),
        .Q(\mcp1_rx_ebuff_data_reg[63]_0 [46]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[47] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_ebuff_data_reg[23]_0 ),
        .D(\mcp1_rx_ebuff_data_reg[63]_1 [47]),
        .Q(\mcp1_rx_ebuff_data_reg[63]_0 [47]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[48] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_ebuff_data_reg[23]_0 ),
        .D(\mcp1_rx_ebuff_data_reg[63]_1 [48]),
        .Q(\mcp1_rx_ebuff_data_reg[63]_0 [48]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[49] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_ebuff_data_reg[23]_0 ),
        .D(\mcp1_rx_ebuff_data_reg[63]_1 [49]),
        .Q(\mcp1_rx_ebuff_data_reg[63]_0 [49]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDSE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[4] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_ebuff_data_reg[0]_1 [1]),
        .D(\mcp1_rx_ebuff_data_reg[63]_1 [4]),
        .Q(\mcp1_rx_ebuff_data_reg[63]_0 [4]),
        .S(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[50] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_ebuff_data_reg[23]_0 ),
        .D(\mcp1_rx_ebuff_data_reg[63]_1 [50]),
        .Q(\mcp1_rx_ebuff_data_reg[63]_0 [50]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[51] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_ebuff_data_reg[23]_0 ),
        .D(\mcp1_rx_ebuff_data_reg[63]_1 [51]),
        .Q(\mcp1_rx_ebuff_data_reg[63]_0 [51]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[52] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_ebuff_data_reg[23]_0 ),
        .D(\mcp1_rx_ebuff_data_reg[63]_1 [52]),
        .Q(\mcp1_rx_ebuff_data_reg[63]_0 [52]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[53] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_ebuff_data_reg[23]_0 ),
        .D(\mcp1_rx_ebuff_data_reg[63]_1 [53]),
        .Q(\mcp1_rx_ebuff_data_reg[63]_0 [53]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[54] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_ebuff_data_reg[23]_0 ),
        .D(\mcp1_rx_ebuff_data_reg[63]_1 [54]),
        .Q(\mcp1_rx_ebuff_data_reg[63]_0 [54]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[55] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_ebuff_data_reg[23]_0 ),
        .D(\mcp1_rx_ebuff_data_reg[63]_1 [55]),
        .Q(\mcp1_rx_ebuff_data_reg[63]_0 [55]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDSE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[56] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_ebuff_data_reg[23]_0 ),
        .D(\mcp1_rx_ebuff_data_reg[63]_1 [56]),
        .Q(\mcp1_rx_ebuff_data_reg[63]_0 [56]),
        .S(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[57] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_ebuff_data_reg[23]_0 ),
        .D(\mcp1_rx_ebuff_data_reg[63]_1 [57]),
        .Q(\mcp1_rx_ebuff_data_reg[63]_0 [57]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[58] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_ebuff_data_reg[23]_0 ),
        .D(\mcp1_rx_ebuff_data_reg[63]_1 [58]),
        .Q(\mcp1_rx_ebuff_data_reg[63]_0 [58]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[59] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_ebuff_data_reg[23]_0 ),
        .D(\mcp1_rx_ebuff_data_reg[63]_1 [59]),
        .Q(\mcp1_rx_ebuff_data_reg[63]_0 [59]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[5] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_ebuff_data_reg[0]_1 [1]),
        .D(\mcp1_rx_ebuff_data_reg[63]_1 [5]),
        .Q(\mcp1_rx_ebuff_data_reg[63]_0 [5]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[60] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_ebuff_data_reg[23]_0 ),
        .D(\mcp1_rx_ebuff_data_reg[63]_1 [60]),
        .Q(\mcp1_rx_ebuff_data_reg[63]_0 [60]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[61] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_ebuff_data_reg[23]_0 ),
        .D(\mcp1_rx_ebuff_data_reg[63]_1 [61]),
        .Q(\mcp1_rx_ebuff_data_reg[63]_0 [61]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[62] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_ebuff_data_reg[23]_0 ),
        .D(\mcp1_rx_ebuff_data_reg[63]_1 [62]),
        .Q(\mcp1_rx_ebuff_data_reg[63]_0 [62]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[63] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_ebuff_data_reg[23]_0 ),
        .D(\mcp1_rx_ebuff_data_reg[63]_1 [63]),
        .Q(\mcp1_rx_ebuff_data_reg[63]_0 [63]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[6] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_ebuff_data_reg[0]_1 [1]),
        .D(\mcp1_rx_ebuff_data_reg[63]_1 [6]),
        .Q(\mcp1_rx_ebuff_data_reg[63]_0 [6]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDSE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[7] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_ebuff_data_reg[0]_1 [1]),
        .D(\mcp1_rx_ebuff_data_reg[63]_1 [7]),
        .Q(\mcp1_rx_ebuff_data_reg[63]_0 [7]),
        .S(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[8] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_ebuff_data_reg[0]_1 [1]),
        .D(\mcp1_rx_ebuff_data_reg[63]_1 [8]),
        .Q(\mcp1_rx_ebuff_data_reg[63]_0 [8]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[9] 
       (.C(rxusrclk2),
        .CE(\mcp1_rx_ebuff_data_reg[0]_1 [1]),
        .D(\mcp1_rx_ebuff_data_reg[63]_1 [9]),
        .Q(\mcp1_rx_ebuff_data_reg[63]_0 [9]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h2000)) 
    \rx_elastic_buffer_i/idle_delete_i/idle_detect_i0/comp_0 
       (.I0(\mcp1_rx_ebuff_data_reg[63]_0 [2]),
        .I1(\mcp1_rx_ebuff_data_reg[63]_0 [3]),
        .I2(\mcp1_rx_ebuff_data_reg[63]_0 [0]),
        .I3(\mcp1_rx_ebuff_data_reg[63]_0 [1]),
        .O(comp_0));
  LUT4 #(
    .INIT(16'h0001)) 
    \rx_elastic_buffer_i/idle_delete_i/idle_detect_i0/comp_1 
       (.I0(\mcp1_rx_ebuff_data_reg[63]_0 [7]),
        .I1(\mcp1_rx_ebuff_data_reg[63]_0 [6]),
        .I2(\mcp1_rx_ebuff_data_reg[63]_0 [4]),
        .I3(\mcp1_rx_ebuff_data_reg[63]_0 [5]),
        .O(comp_1));
  LUT4 #(
    .INIT(16'h8000)) 
    \rx_elastic_buffer_i/idle_delete_i/idle_detect_i0/comp_8 
       (.I0(\mcp1_rx_ebuff_ctrl_reg[7]_0 [3]),
        .I1(\mcp1_rx_ebuff_ctrl_reg[7]_0 [2]),
        .I2(\mcp1_rx_ebuff_ctrl_reg[7]_0 [0]),
        .I3(\mcp1_rx_ebuff_ctrl_reg[7]_0 [1]),
        .O(comp_8));
  LUT4 #(
    .INIT(16'h2000)) 
    \rx_elastic_buffer_i/idle_delete_i/idle_detect_i1/comp_0 
       (.I0(\mcp1_rx_ebuff_data_reg[63]_0 [34]),
        .I1(\mcp1_rx_ebuff_data_reg[63]_0 [35]),
        .I2(\mcp1_rx_ebuff_data_reg[63]_0 [32]),
        .I3(\mcp1_rx_ebuff_data_reg[63]_0 [33]),
        .O(comp_0_6));
  LUT4 #(
    .INIT(16'h0001)) 
    \rx_elastic_buffer_i/idle_delete_i/idle_detect_i1/comp_1 
       (.I0(\mcp1_rx_ebuff_data_reg[63]_0 [39]),
        .I1(\mcp1_rx_ebuff_data_reg[63]_0 [38]),
        .I2(\mcp1_rx_ebuff_data_reg[63]_0 [36]),
        .I3(\mcp1_rx_ebuff_data_reg[63]_0 [37]),
        .O(comp_1_4));
  LUT4 #(
    .INIT(16'h8000)) 
    \rx_elastic_buffer_i/idle_delete_i/idle_detect_i1/comp_8 
       (.I0(\mcp1_rx_ebuff_ctrl_reg[7]_0 [7]),
        .I1(\mcp1_rx_ebuff_ctrl_reg[7]_0 [6]),
        .I2(\mcp1_rx_ebuff_ctrl_reg[7]_0 [4]),
        .I3(\mcp1_rx_ebuff_ctrl_reg[7]_0 [5]),
        .O(comp_8_2));
  LUT4 #(
    .INIT(16'h1000)) 
    \rx_elastic_buffer_i/idle_delete_i/seq_detect_i0/comp_0 
       (.I0(\mcp1_rx_ebuff_data_reg[63]_0 [0]),
        .I1(\mcp1_rx_ebuff_data_reg[63]_0 [1]),
        .I2(\mcp1_rx_ebuff_data_reg[63]_0 [3]),
        .I3(\mcp1_rx_ebuff_data_reg[63]_0 [2]),
        .O(comp_0_1));
  LUT4 #(
    .INIT(16'h1000)) 
    \rx_elastic_buffer_i/idle_delete_i/seq_detect_i0/comp_1 
       (.I0(\mcp1_rx_ebuff_data_reg[63]_0 [5]),
        .I1(\mcp1_rx_ebuff_data_reg[63]_0 [6]),
        .I2(\mcp1_rx_ebuff_data_reg[63]_0 [4]),
        .I3(\mcp1_rx_ebuff_data_reg[63]_0 [7]),
        .O(comp_1_0));
  LUT4 #(
    .INIT(16'h0010)) 
    \rx_elastic_buffer_i/idle_delete_i/seq_detect_i0/comp_2 
       (.I0(\mcp1_rx_ebuff_ctrl_reg[7]_0 [3]),
        .I1(\mcp1_rx_ebuff_ctrl_reg[7]_0 [2]),
        .I2(\mcp1_rx_ebuff_ctrl_reg[7]_0 [0]),
        .I3(\mcp1_rx_ebuff_ctrl_reg[7]_0 [1]),
        .O(comp_2));
  LUT4 #(
    .INIT(16'h1000)) 
    \rx_elastic_buffer_i/idle_delete_i/seq_detect_i1/comp_0 
       (.I0(\mcp1_rx_ebuff_data_reg[63]_0 [32]),
        .I1(\mcp1_rx_ebuff_data_reg[63]_0 [33]),
        .I2(\mcp1_rx_ebuff_data_reg[63]_0 [35]),
        .I3(\mcp1_rx_ebuff_data_reg[63]_0 [34]),
        .O(comp_0_7));
  LUT4 #(
    .INIT(16'h1000)) 
    \rx_elastic_buffer_i/idle_delete_i/seq_detect_i1/comp_1 
       (.I0(\mcp1_rx_ebuff_data_reg[63]_0 [37]),
        .I1(\mcp1_rx_ebuff_data_reg[63]_0 [38]),
        .I2(\mcp1_rx_ebuff_data_reg[63]_0 [36]),
        .I3(\mcp1_rx_ebuff_data_reg[63]_0 [39]),
        .O(comp_1_5));
  LUT4 #(
    .INIT(16'h0010)) 
    \rx_elastic_buffer_i/idle_delete_i/seq_detect_i1/comp_2 
       (.I0(\mcp1_rx_ebuff_ctrl_reg[7]_0 [7]),
        .I1(\mcp1_rx_ebuff_ctrl_reg[7]_0 [6]),
        .I2(\mcp1_rx_ebuff_ctrl_reg[7]_0 [4]),
        .I3(\mcp1_rx_ebuff_ctrl_reg[7]_0 [5]),
        .O(comp_2_3));
  LUT6 #(
    .INIT(64'h0000000009000000)) 
    \state_eq_c_count[0]_i_1 
       (.I0(\state_eq_c_count_reg_n_0_[0] ),
        .I1(p_1_in),
        .I2(\FSM_sequential_mcp1_state_reg[2]_1 ),
        .I3(mcp1_state__0[1]),
        .I4(mcp1_state__0[0]),
        .I5(out),
        .O(\state_eq_c_count[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair220" *) 
  LUT4 #(
    .INIT(16'h009A)) 
    \state_eq_c_count[1]_i_1 
       (.I0(\state_eq_c_count_reg_n_0_[1] ),
        .I1(p_1_in),
        .I2(\state_eq_c_count_reg_n_0_[0] ),
        .I3(\state_eq_c_count[2]_i_2_n_0 ),
        .O(\state_eq_c_count[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair220" *) 
  LUT4 #(
    .INIT(16'h00EA)) 
    \state_eq_c_count[2]_i_1 
       (.I0(p_1_in),
        .I1(\state_eq_c_count_reg_n_0_[1] ),
        .I2(\state_eq_c_count_reg_n_0_[0] ),
        .I3(\state_eq_c_count[2]_i_2_n_0 ),
        .O(\state_eq_c_count[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair219" *) 
  LUT4 #(
    .INIT(16'hFFBF)) 
    \state_eq_c_count[2]_i_2 
       (.I0(out),
        .I1(mcp1_state__0[0]),
        .I2(mcp1_state__0[1]),
        .I3(\FSM_sequential_mcp1_state_reg[2]_1 ),
        .O(\state_eq_c_count[2]_i_2_n_0 ));
  FDRE \state_eq_c_count_reg[0] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(\state_eq_c_count[0]_i_1_n_0 ),
        .Q(\state_eq_c_count_reg_n_0_[0] ),
        .R(1'b0));
  FDRE \state_eq_c_count_reg[1] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(\state_eq_c_count[1]_i_1_n_0 ),
        .Q(\state_eq_c_count_reg_n_0_[1] ),
        .R(1'b0));
  FDRE \state_eq_c_count_reg[2] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(\state_eq_c_count[2]_i_1_n_0 ),
        .Q(p_1_in),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_15_rx_pcs_test" *) 
module ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_rx_pcs_test
   (CO,
    \rx_66_enc_reg_reg[65] ,
    err_block_count_inc,
    Q,
    rxusrclk2,
    mcp1_ignore_next_mismatch_reg_0,
    SR,
    mcp1_err_block_count_inc_out_reg_0,
    mcp1_err_block_count_inc_out_reg_1,
    mcp1_ignore_next_mismatch_reg_1,
    E);
  output [0:0]CO;
  output [0:0]\rx_66_enc_reg_reg[65] ;
  output err_block_count_inc;
  input [63:0]Q;
  input rxusrclk2;
  input [2:0]mcp1_ignore_next_mismatch_reg_0;
  input [0:0]SR;
  input mcp1_err_block_count_inc_out_reg_0;
  input mcp1_err_block_count_inc_out_reg_1;
  input mcp1_ignore_next_mismatch_reg_1;
  input [0:0]E;

  wire [0:0]CO;
  wire [0:0]E;
  wire [63:0]Q;
  wire [0:0]SR;
  wire err_block_count_inc;
  wire i__carry__0_i_1_n_0;
  wire i__carry__0_i_2_n_0;
  wire i__carry__0_i_3_n_0;
  wire i__carry__0_i_4_n_0;
  wire i__carry__1_i_1_n_0;
  wire i__carry__1_i_2_n_0;
  wire i__carry__1_i_3_n_0;
  wire i__carry__1_i_4_n_0;
  wire i__carry__2_i_1_n_0;
  wire i__carry__2_i_2_n_0;
  wire i__carry__2_i_3_n_0;
  wire i__carry__2_i_4_n_0;
  wire i__carry__3_i_1_n_0;
  wire i__carry__3_i_2_n_0;
  wire i__carry__3_i_3_n_0;
  wire i__carry__3_i_4_n_0;
  wire i__carry__4_i_1_n_0;
  wire i__carry__4_i_2_n_0;
  wire i__carry_i_1_n_0;
  wire i__carry_i_2_n_0;
  wire i__carry_i_3_n_0;
  wire i__carry_i_4_n_0;
  wire \mcp1_block_count[6]_i_2_n_0 ;
  wire [6:0]mcp1_block_count_reg;
  wire mcp1_err_block_count_inc_out1_carry__0_i_1_n_0;
  wire mcp1_err_block_count_inc_out1_carry__0_i_2_n_0;
  wire mcp1_err_block_count_inc_out1_carry__0_i_3_n_0;
  wire mcp1_err_block_count_inc_out1_carry__0_i_4_n_0;
  wire mcp1_err_block_count_inc_out1_carry__0_n_0;
  wire mcp1_err_block_count_inc_out1_carry__0_n_1;
  wire mcp1_err_block_count_inc_out1_carry__0_n_2;
  wire mcp1_err_block_count_inc_out1_carry__0_n_3;
  wire mcp1_err_block_count_inc_out1_carry__1_i_1_n_0;
  wire mcp1_err_block_count_inc_out1_carry__1_i_2_n_0;
  wire mcp1_err_block_count_inc_out1_carry__1_i_3_n_0;
  wire mcp1_err_block_count_inc_out1_carry__1_i_4_n_0;
  wire mcp1_err_block_count_inc_out1_carry__1_n_0;
  wire mcp1_err_block_count_inc_out1_carry__1_n_1;
  wire mcp1_err_block_count_inc_out1_carry__1_n_2;
  wire mcp1_err_block_count_inc_out1_carry__1_n_3;
  wire mcp1_err_block_count_inc_out1_carry__2_i_1_n_0;
  wire mcp1_err_block_count_inc_out1_carry__2_i_2_n_0;
  wire mcp1_err_block_count_inc_out1_carry__2_i_3_n_0;
  wire mcp1_err_block_count_inc_out1_carry__2_i_4_n_0;
  wire mcp1_err_block_count_inc_out1_carry__2_n_0;
  wire mcp1_err_block_count_inc_out1_carry__2_n_1;
  wire mcp1_err_block_count_inc_out1_carry__2_n_2;
  wire mcp1_err_block_count_inc_out1_carry__2_n_3;
  wire mcp1_err_block_count_inc_out1_carry__3_i_1_n_0;
  wire mcp1_err_block_count_inc_out1_carry__3_i_2_n_0;
  wire mcp1_err_block_count_inc_out1_carry__3_i_3_n_0;
  wire mcp1_err_block_count_inc_out1_carry__3_i_4_n_0;
  wire mcp1_err_block_count_inc_out1_carry__3_n_0;
  wire mcp1_err_block_count_inc_out1_carry__3_n_1;
  wire mcp1_err_block_count_inc_out1_carry__3_n_2;
  wire mcp1_err_block_count_inc_out1_carry__3_n_3;
  wire mcp1_err_block_count_inc_out1_carry__4_i_1_n_0;
  wire mcp1_err_block_count_inc_out1_carry__4_n_3;
  wire mcp1_err_block_count_inc_out1_carry_i_1_n_0;
  wire mcp1_err_block_count_inc_out1_carry_i_2_n_0;
  wire mcp1_err_block_count_inc_out1_carry_i_3_n_0;
  wire mcp1_err_block_count_inc_out1_carry_i_4_n_0;
  wire mcp1_err_block_count_inc_out1_carry_n_0;
  wire mcp1_err_block_count_inc_out1_carry_n_1;
  wire mcp1_err_block_count_inc_out1_carry_n_2;
  wire mcp1_err_block_count_inc_out1_carry_n_3;
  wire \mcp1_err_block_count_inc_out1_inferred__0/i__carry__0_n_0 ;
  wire \mcp1_err_block_count_inc_out1_inferred__0/i__carry__0_n_1 ;
  wire \mcp1_err_block_count_inc_out1_inferred__0/i__carry__0_n_2 ;
  wire \mcp1_err_block_count_inc_out1_inferred__0/i__carry__0_n_3 ;
  wire \mcp1_err_block_count_inc_out1_inferred__0/i__carry__1_n_0 ;
  wire \mcp1_err_block_count_inc_out1_inferred__0/i__carry__1_n_1 ;
  wire \mcp1_err_block_count_inc_out1_inferred__0/i__carry__1_n_2 ;
  wire \mcp1_err_block_count_inc_out1_inferred__0/i__carry__1_n_3 ;
  wire \mcp1_err_block_count_inc_out1_inferred__0/i__carry__2_n_0 ;
  wire \mcp1_err_block_count_inc_out1_inferred__0/i__carry__2_n_1 ;
  wire \mcp1_err_block_count_inc_out1_inferred__0/i__carry__2_n_2 ;
  wire \mcp1_err_block_count_inc_out1_inferred__0/i__carry__2_n_3 ;
  wire \mcp1_err_block_count_inc_out1_inferred__0/i__carry__3_n_0 ;
  wire \mcp1_err_block_count_inc_out1_inferred__0/i__carry__3_n_1 ;
  wire \mcp1_err_block_count_inc_out1_inferred__0/i__carry__3_n_2 ;
  wire \mcp1_err_block_count_inc_out1_inferred__0/i__carry__3_n_3 ;
  wire \mcp1_err_block_count_inc_out1_inferred__0/i__carry__4_n_3 ;
  wire \mcp1_err_block_count_inc_out1_inferred__0/i__carry_n_0 ;
  wire \mcp1_err_block_count_inc_out1_inferred__0/i__carry_n_1 ;
  wire \mcp1_err_block_count_inc_out1_inferred__0/i__carry_n_2 ;
  wire \mcp1_err_block_count_inc_out1_inferred__0/i__carry_n_3 ;
  wire mcp1_err_block_count_inc_out_i_1_n_0;
  wire mcp1_err_block_count_inc_out_reg_0;
  wire mcp1_err_block_count_inc_out_reg_1;
  wire mcp1_ignore_next_mismatch;
  wire mcp1_ignore_next_mismatch_i_1_n_0;
  wire mcp1_ignore_next_mismatch_i_2_n_0;
  wire mcp1_ignore_next_mismatch_i_3_n_0;
  wire mcp1_ignore_next_mismatch_i_4_n_0;
  wire [2:0]mcp1_ignore_next_mismatch_reg_0;
  wire mcp1_ignore_next_mismatch_reg_1;
  wire [6:0]p_0_in__1;
  wire [0:0]\rx_66_enc_reg_reg[65] ;
  wire rxusrclk2;
  wire [3:0]NLW_mcp1_err_block_count_inc_out1_carry_O_UNCONNECTED;
  wire [3:0]NLW_mcp1_err_block_count_inc_out1_carry__0_O_UNCONNECTED;
  wire [3:0]NLW_mcp1_err_block_count_inc_out1_carry__1_O_UNCONNECTED;
  wire [3:0]NLW_mcp1_err_block_count_inc_out1_carry__2_O_UNCONNECTED;
  wire [3:0]NLW_mcp1_err_block_count_inc_out1_carry__3_O_UNCONNECTED;
  wire [3:2]NLW_mcp1_err_block_count_inc_out1_carry__4_CO_UNCONNECTED;
  wire [3:0]NLW_mcp1_err_block_count_inc_out1_carry__4_O_UNCONNECTED;
  wire [3:0]\NLW_mcp1_err_block_count_inc_out1_inferred__0/i__carry_O_UNCONNECTED ;
  wire [3:0]\NLW_mcp1_err_block_count_inc_out1_inferred__0/i__carry__0_O_UNCONNECTED ;
  wire [3:0]\NLW_mcp1_err_block_count_inc_out1_inferred__0/i__carry__1_O_UNCONNECTED ;
  wire [3:0]\NLW_mcp1_err_block_count_inc_out1_inferred__0/i__carry__2_O_UNCONNECTED ;
  wire [3:0]\NLW_mcp1_err_block_count_inc_out1_inferred__0/i__carry__3_O_UNCONNECTED ;
  wire [3:2]\NLW_mcp1_err_block_count_inc_out1_inferred__0/i__carry__4_CO_UNCONNECTED ;
  wire [3:0]\NLW_mcp1_err_block_count_inc_out1_inferred__0/i__carry__4_O_UNCONNECTED ;

  LUT3 #(
    .INIT(8'h01)) 
    i__carry__0_i_1
       (.I0(Q[22]),
        .I1(Q[21]),
        .I2(Q[23]),
        .O(i__carry__0_i_1_n_0));
  LUT3 #(
    .INIT(8'h01)) 
    i__carry__0_i_2
       (.I0(Q[20]),
        .I1(Q[18]),
        .I2(Q[19]),
        .O(i__carry__0_i_2_n_0));
  LUT3 #(
    .INIT(8'h01)) 
    i__carry__0_i_3
       (.I0(Q[16]),
        .I1(Q[17]),
        .I2(Q[15]),
        .O(i__carry__0_i_3_n_0));
  LUT3 #(
    .INIT(8'h01)) 
    i__carry__0_i_4
       (.I0(Q[12]),
        .I1(Q[13]),
        .I2(Q[14]),
        .O(i__carry__0_i_4_n_0));
  LUT3 #(
    .INIT(8'h01)) 
    i__carry__1_i_1
       (.I0(Q[33]),
        .I1(Q[34]),
        .I2(Q[35]),
        .O(i__carry__1_i_1_n_0));
  LUT3 #(
    .INIT(8'h01)) 
    i__carry__1_i_2
       (.I0(Q[32]),
        .I1(Q[30]),
        .I2(Q[31]),
        .O(i__carry__1_i_2_n_0));
  LUT3 #(
    .INIT(8'h01)) 
    i__carry__1_i_3
       (.I0(Q[29]),
        .I1(Q[27]),
        .I2(Q[28]),
        .O(i__carry__1_i_3_n_0));
  LUT5 #(
    .INIT(32'h00011110)) 
    i__carry__1_i_4
       (.I0(Q[26]),
        .I1(Q[25]),
        .I2(mcp1_ignore_next_mismatch_reg_0[1]),
        .I3(mcp1_ignore_next_mismatch_reg_0[0]),
        .I4(Q[24]),
        .O(i__carry__1_i_4_n_0));
  LUT3 #(
    .INIT(8'h01)) 
    i__carry__2_i_1
       (.I0(Q[45]),
        .I1(Q[47]),
        .I2(Q[46]),
        .O(i__carry__2_i_1_n_0));
  LUT3 #(
    .INIT(8'h01)) 
    i__carry__2_i_2
       (.I0(Q[43]),
        .I1(Q[42]),
        .I2(Q[44]),
        .O(i__carry__2_i_2_n_0));
  LUT3 #(
    .INIT(8'h01)) 
    i__carry__2_i_3
       (.I0(Q[41]),
        .I1(Q[39]),
        .I2(Q[40]),
        .O(i__carry__2_i_3_n_0));
  LUT3 #(
    .INIT(8'h01)) 
    i__carry__2_i_4
       (.I0(Q[36]),
        .I1(Q[37]),
        .I2(Q[38]),
        .O(i__carry__2_i_4_n_0));
  LUT3 #(
    .INIT(8'h01)) 
    i__carry__3_i_1
       (.I0(Q[58]),
        .I1(Q[59]),
        .I2(Q[57]),
        .O(i__carry__3_i_1_n_0));
  LUT5 #(
    .INIT(32'h0000001E)) 
    i__carry__3_i_2
       (.I0(mcp1_ignore_next_mismatch_reg_0[1]),
        .I1(mcp1_ignore_next_mismatch_reg_0[0]),
        .I2(Q[56]),
        .I3(Q[54]),
        .I4(Q[55]),
        .O(i__carry__3_i_2_n_0));
  LUT3 #(
    .INIT(8'h01)) 
    i__carry__3_i_3
       (.I0(Q[51]),
        .I1(Q[53]),
        .I2(Q[52]),
        .O(i__carry__3_i_3_n_0));
  LUT3 #(
    .INIT(8'h01)) 
    i__carry__3_i_4
       (.I0(Q[50]),
        .I1(Q[48]),
        .I2(Q[49]),
        .O(i__carry__3_i_4_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    i__carry__4_i_1
       (.I0(Q[63]),
        .O(i__carry__4_i_1_n_0));
  LUT3 #(
    .INIT(8'h01)) 
    i__carry__4_i_2
       (.I0(Q[62]),
        .I1(Q[60]),
        .I2(Q[61]),
        .O(i__carry__4_i_2_n_0));
  LUT3 #(
    .INIT(8'h01)) 
    i__carry_i_1
       (.I0(Q[9]),
        .I1(Q[10]),
        .I2(Q[11]),
        .O(i__carry_i_1_n_0));
  LUT5 #(
    .INIT(32'h0000001E)) 
    i__carry_i_2
       (.I0(mcp1_ignore_next_mismatch_reg_0[1]),
        .I1(mcp1_ignore_next_mismatch_reg_0[0]),
        .I2(Q[6]),
        .I3(Q[7]),
        .I4(Q[8]),
        .O(i__carry_i_2_n_0));
  LUT5 #(
    .INIT(32'h0000001E)) 
    i__carry_i_3
       (.I0(mcp1_ignore_next_mismatch_reg_0[1]),
        .I1(mcp1_ignore_next_mismatch_reg_0[0]),
        .I2(Q[4]),
        .I3(Q[3]),
        .I4(Q[5]),
        .O(i__carry_i_3_n_0));
  LUT5 #(
    .INIT(32'h00001118)) 
    i__carry_i_4
       (.I0(Q[0]),
        .I1(Q[2]),
        .I2(mcp1_ignore_next_mismatch_reg_0[0]),
        .I3(mcp1_ignore_next_mismatch_reg_0[1]),
        .I4(Q[1]),
        .O(i__carry_i_4_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    \mcp1_block_count[0]_i_1 
       (.I0(mcp1_block_count_reg[0]),
        .O(p_0_in__1[0]));
  (* SOFT_HLUTNM = "soft_lutpair225" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \mcp1_block_count[1]_i_1 
       (.I0(mcp1_block_count_reg[0]),
        .I1(mcp1_block_count_reg[1]),
        .O(p_0_in__1[1]));
  (* SOFT_HLUTNM = "soft_lutpair224" *) 
  LUT3 #(
    .INIT(8'h6A)) 
    \mcp1_block_count[2]_i_1 
       (.I0(mcp1_block_count_reg[2]),
        .I1(mcp1_block_count_reg[1]),
        .I2(mcp1_block_count_reg[0]),
        .O(p_0_in__1[2]));
  (* SOFT_HLUTNM = "soft_lutpair225" *) 
  LUT4 #(
    .INIT(16'h6AAA)) 
    \mcp1_block_count[3]_i_1 
       (.I0(mcp1_block_count_reg[3]),
        .I1(mcp1_block_count_reg[0]),
        .I2(mcp1_block_count_reg[1]),
        .I3(mcp1_block_count_reg[2]),
        .O(p_0_in__1[3]));
  (* SOFT_HLUTNM = "soft_lutpair223" *) 
  LUT5 #(
    .INIT(32'h6AAAAAAA)) 
    \mcp1_block_count[4]_i_1 
       (.I0(mcp1_block_count_reg[4]),
        .I1(mcp1_block_count_reg[2]),
        .I2(mcp1_block_count_reg[1]),
        .I3(mcp1_block_count_reg[0]),
        .I4(mcp1_block_count_reg[3]),
        .O(p_0_in__1[4]));
  LUT6 #(
    .INIT(64'h6AAAAAAAAAAAAAAA)) 
    \mcp1_block_count[5]_i_1 
       (.I0(mcp1_block_count_reg[5]),
        .I1(mcp1_block_count_reg[3]),
        .I2(mcp1_block_count_reg[0]),
        .I3(mcp1_block_count_reg[1]),
        .I4(mcp1_block_count_reg[2]),
        .I5(mcp1_block_count_reg[4]),
        .O(p_0_in__1[5]));
  LUT3 #(
    .INIT(8'h6A)) 
    \mcp1_block_count[6]_i_1 
       (.I0(mcp1_block_count_reg[6]),
        .I1(\mcp1_block_count[6]_i_2_n_0 ),
        .I2(mcp1_block_count_reg[5]),
        .O(p_0_in__1[6]));
  (* SOFT_HLUTNM = "soft_lutpair223" *) 
  LUT5 #(
    .INIT(32'h80000000)) 
    \mcp1_block_count[6]_i_2 
       (.I0(mcp1_block_count_reg[4]),
        .I1(mcp1_block_count_reg[2]),
        .I2(mcp1_block_count_reg[1]),
        .I3(mcp1_block_count_reg[0]),
        .I4(mcp1_block_count_reg[3]),
        .O(\mcp1_block_count[6]_i_2_n_0 ));
  FDRE \mcp1_block_count_reg[0] 
       (.C(rxusrclk2),
        .CE(E),
        .D(p_0_in__1[0]),
        .Q(mcp1_block_count_reg[0]),
        .R(SR));
  FDRE \mcp1_block_count_reg[1] 
       (.C(rxusrclk2),
        .CE(E),
        .D(p_0_in__1[1]),
        .Q(mcp1_block_count_reg[1]),
        .R(SR));
  FDRE \mcp1_block_count_reg[2] 
       (.C(rxusrclk2),
        .CE(E),
        .D(p_0_in__1[2]),
        .Q(mcp1_block_count_reg[2]),
        .R(SR));
  FDRE \mcp1_block_count_reg[3] 
       (.C(rxusrclk2),
        .CE(E),
        .D(p_0_in__1[3]),
        .Q(mcp1_block_count_reg[3]),
        .R(SR));
  FDRE \mcp1_block_count_reg[4] 
       (.C(rxusrclk2),
        .CE(E),
        .D(p_0_in__1[4]),
        .Q(mcp1_block_count_reg[4]),
        .R(SR));
  FDRE \mcp1_block_count_reg[5] 
       (.C(rxusrclk2),
        .CE(E),
        .D(p_0_in__1[5]),
        .Q(mcp1_block_count_reg[5]),
        .R(SR));
  FDRE \mcp1_block_count_reg[6] 
       (.C(rxusrclk2),
        .CE(E),
        .D(p_0_in__1[6]),
        .Q(mcp1_block_count_reg[6]),
        .R(SR));
  CARRY4 mcp1_err_block_count_inc_out1_carry
       (.CI(1'b0),
        .CO({mcp1_err_block_count_inc_out1_carry_n_0,mcp1_err_block_count_inc_out1_carry_n_1,mcp1_err_block_count_inc_out1_carry_n_2,mcp1_err_block_count_inc_out1_carry_n_3}),
        .CYINIT(1'b0),
        .DI({1'b1,1'b1,1'b1,1'b1}),
        .O(NLW_mcp1_err_block_count_inc_out1_carry_O_UNCONNECTED[3:0]),
        .S({mcp1_err_block_count_inc_out1_carry_i_1_n_0,mcp1_err_block_count_inc_out1_carry_i_2_n_0,mcp1_err_block_count_inc_out1_carry_i_3_n_0,mcp1_err_block_count_inc_out1_carry_i_4_n_0}));
  CARRY4 mcp1_err_block_count_inc_out1_carry__0
       (.CI(mcp1_err_block_count_inc_out1_carry_n_0),
        .CO({mcp1_err_block_count_inc_out1_carry__0_n_0,mcp1_err_block_count_inc_out1_carry__0_n_1,mcp1_err_block_count_inc_out1_carry__0_n_2,mcp1_err_block_count_inc_out1_carry__0_n_3}),
        .CYINIT(1'b0),
        .DI({1'b1,1'b1,1'b1,1'b1}),
        .O(NLW_mcp1_err_block_count_inc_out1_carry__0_O_UNCONNECTED[3:0]),
        .S({mcp1_err_block_count_inc_out1_carry__0_i_1_n_0,mcp1_err_block_count_inc_out1_carry__0_i_2_n_0,mcp1_err_block_count_inc_out1_carry__0_i_3_n_0,mcp1_err_block_count_inc_out1_carry__0_i_4_n_0}));
  LUT3 #(
    .INIT(8'h80)) 
    mcp1_err_block_count_inc_out1_carry__0_i_1
       (.I0(Q[21]),
        .I1(Q[22]),
        .I2(Q[23]),
        .O(mcp1_err_block_count_inc_out1_carry__0_i_1_n_0));
  LUT3 #(
    .INIT(8'h80)) 
    mcp1_err_block_count_inc_out1_carry__0_i_2
       (.I0(Q[20]),
        .I1(Q[18]),
        .I2(Q[19]),
        .O(mcp1_err_block_count_inc_out1_carry__0_i_2_n_0));
  LUT3 #(
    .INIT(8'h80)) 
    mcp1_err_block_count_inc_out1_carry__0_i_3
       (.I0(Q[15]),
        .I1(Q[16]),
        .I2(Q[17]),
        .O(mcp1_err_block_count_inc_out1_carry__0_i_3_n_0));
  LUT3 #(
    .INIT(8'h80)) 
    mcp1_err_block_count_inc_out1_carry__0_i_4
       (.I0(Q[12]),
        .I1(Q[13]),
        .I2(Q[14]),
        .O(mcp1_err_block_count_inc_out1_carry__0_i_4_n_0));
  CARRY4 mcp1_err_block_count_inc_out1_carry__1
       (.CI(mcp1_err_block_count_inc_out1_carry__0_n_0),
        .CO({mcp1_err_block_count_inc_out1_carry__1_n_0,mcp1_err_block_count_inc_out1_carry__1_n_1,mcp1_err_block_count_inc_out1_carry__1_n_2,mcp1_err_block_count_inc_out1_carry__1_n_3}),
        .CYINIT(1'b0),
        .DI({1'b1,1'b1,1'b1,1'b1}),
        .O(NLW_mcp1_err_block_count_inc_out1_carry__1_O_UNCONNECTED[3:0]),
        .S({mcp1_err_block_count_inc_out1_carry__1_i_1_n_0,mcp1_err_block_count_inc_out1_carry__1_i_2_n_0,mcp1_err_block_count_inc_out1_carry__1_i_3_n_0,mcp1_err_block_count_inc_out1_carry__1_i_4_n_0}));
  LUT3 #(
    .INIT(8'h80)) 
    mcp1_err_block_count_inc_out1_carry__1_i_1
       (.I0(Q[33]),
        .I1(Q[34]),
        .I2(Q[35]),
        .O(mcp1_err_block_count_inc_out1_carry__1_i_1_n_0));
  LUT3 #(
    .INIT(8'h80)) 
    mcp1_err_block_count_inc_out1_carry__1_i_2
       (.I0(Q[32]),
        .I1(Q[30]),
        .I2(Q[31]),
        .O(mcp1_err_block_count_inc_out1_carry__1_i_2_n_0));
  LUT3 #(
    .INIT(8'h80)) 
    mcp1_err_block_count_inc_out1_carry__1_i_3
       (.I0(Q[29]),
        .I1(Q[27]),
        .I2(Q[28]),
        .O(mcp1_err_block_count_inc_out1_carry__1_i_3_n_0));
  LUT5 #(
    .INIT(32'h88800008)) 
    mcp1_err_block_count_inc_out1_carry__1_i_4
       (.I0(Q[26]),
        .I1(Q[25]),
        .I2(mcp1_ignore_next_mismatch_reg_0[1]),
        .I3(mcp1_ignore_next_mismatch_reg_0[0]),
        .I4(Q[24]),
        .O(mcp1_err_block_count_inc_out1_carry__1_i_4_n_0));
  CARRY4 mcp1_err_block_count_inc_out1_carry__2
       (.CI(mcp1_err_block_count_inc_out1_carry__1_n_0),
        .CO({mcp1_err_block_count_inc_out1_carry__2_n_0,mcp1_err_block_count_inc_out1_carry__2_n_1,mcp1_err_block_count_inc_out1_carry__2_n_2,mcp1_err_block_count_inc_out1_carry__2_n_3}),
        .CYINIT(1'b0),
        .DI({1'b1,1'b1,1'b1,1'b1}),
        .O(NLW_mcp1_err_block_count_inc_out1_carry__2_O_UNCONNECTED[3:0]),
        .S({mcp1_err_block_count_inc_out1_carry__2_i_1_n_0,mcp1_err_block_count_inc_out1_carry__2_i_2_n_0,mcp1_err_block_count_inc_out1_carry__2_i_3_n_0,mcp1_err_block_count_inc_out1_carry__2_i_4_n_0}));
  LUT3 #(
    .INIT(8'h80)) 
    mcp1_err_block_count_inc_out1_carry__2_i_1
       (.I0(Q[45]),
        .I1(Q[47]),
        .I2(Q[46]),
        .O(mcp1_err_block_count_inc_out1_carry__2_i_1_n_0));
  LUT3 #(
    .INIT(8'h80)) 
    mcp1_err_block_count_inc_out1_carry__2_i_2
       (.I0(Q[42]),
        .I1(Q[43]),
        .I2(Q[44]),
        .O(mcp1_err_block_count_inc_out1_carry__2_i_2_n_0));
  LUT3 #(
    .INIT(8'h80)) 
    mcp1_err_block_count_inc_out1_carry__2_i_3
       (.I0(Q[41]),
        .I1(Q[39]),
        .I2(Q[40]),
        .O(mcp1_err_block_count_inc_out1_carry__2_i_3_n_0));
  LUT3 #(
    .INIT(8'h80)) 
    mcp1_err_block_count_inc_out1_carry__2_i_4
       (.I0(Q[36]),
        .I1(Q[37]),
        .I2(Q[38]),
        .O(mcp1_err_block_count_inc_out1_carry__2_i_4_n_0));
  CARRY4 mcp1_err_block_count_inc_out1_carry__3
       (.CI(mcp1_err_block_count_inc_out1_carry__2_n_0),
        .CO({mcp1_err_block_count_inc_out1_carry__3_n_0,mcp1_err_block_count_inc_out1_carry__3_n_1,mcp1_err_block_count_inc_out1_carry__3_n_2,mcp1_err_block_count_inc_out1_carry__3_n_3}),
        .CYINIT(1'b0),
        .DI({1'b1,1'b1,1'b1,1'b1}),
        .O(NLW_mcp1_err_block_count_inc_out1_carry__3_O_UNCONNECTED[3:0]),
        .S({mcp1_err_block_count_inc_out1_carry__3_i_1_n_0,mcp1_err_block_count_inc_out1_carry__3_i_2_n_0,mcp1_err_block_count_inc_out1_carry__3_i_3_n_0,mcp1_err_block_count_inc_out1_carry__3_i_4_n_0}));
  LUT3 #(
    .INIT(8'h80)) 
    mcp1_err_block_count_inc_out1_carry__3_i_1
       (.I0(Q[57]),
        .I1(Q[58]),
        .I2(Q[59]),
        .O(mcp1_err_block_count_inc_out1_carry__3_i_1_n_0));
  LUT5 #(
    .INIT(32'h88800008)) 
    mcp1_err_block_count_inc_out1_carry__3_i_2
       (.I0(Q[54]),
        .I1(Q[55]),
        .I2(mcp1_ignore_next_mismatch_reg_0[1]),
        .I3(mcp1_ignore_next_mismatch_reg_0[0]),
        .I4(Q[56]),
        .O(mcp1_err_block_count_inc_out1_carry__3_i_2_n_0));
  LUT3 #(
    .INIT(8'h80)) 
    mcp1_err_block_count_inc_out1_carry__3_i_3
       (.I0(Q[53]),
        .I1(Q[51]),
        .I2(Q[52]),
        .O(mcp1_err_block_count_inc_out1_carry__3_i_3_n_0));
  LUT3 #(
    .INIT(8'h80)) 
    mcp1_err_block_count_inc_out1_carry__3_i_4
       (.I0(Q[50]),
        .I1(Q[48]),
        .I2(Q[49]),
        .O(mcp1_err_block_count_inc_out1_carry__3_i_4_n_0));
  CARRY4 mcp1_err_block_count_inc_out1_carry__4
       (.CI(mcp1_err_block_count_inc_out1_carry__3_n_0),
        .CO({NLW_mcp1_err_block_count_inc_out1_carry__4_CO_UNCONNECTED[3:2],CO,mcp1_err_block_count_inc_out1_carry__4_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b1,1'b1}),
        .O(NLW_mcp1_err_block_count_inc_out1_carry__4_O_UNCONNECTED[3:0]),
        .S({1'b0,1'b0,Q[63],mcp1_err_block_count_inc_out1_carry__4_i_1_n_0}));
  LUT3 #(
    .INIT(8'h80)) 
    mcp1_err_block_count_inc_out1_carry__4_i_1
       (.I0(Q[62]),
        .I1(Q[60]),
        .I2(Q[61]),
        .O(mcp1_err_block_count_inc_out1_carry__4_i_1_n_0));
  LUT3 #(
    .INIT(8'h80)) 
    mcp1_err_block_count_inc_out1_carry_i_1
       (.I0(Q[11]),
        .I1(Q[9]),
        .I2(Q[10]),
        .O(mcp1_err_block_count_inc_out1_carry_i_1_n_0));
  LUT5 #(
    .INIT(32'h88800008)) 
    mcp1_err_block_count_inc_out1_carry_i_2
       (.I0(Q[7]),
        .I1(Q[8]),
        .I2(mcp1_ignore_next_mismatch_reg_0[1]),
        .I3(mcp1_ignore_next_mismatch_reg_0[0]),
        .I4(Q[6]),
        .O(mcp1_err_block_count_inc_out1_carry_i_2_n_0));
  LUT5 #(
    .INIT(32'h88800008)) 
    mcp1_err_block_count_inc_out1_carry_i_3
       (.I0(Q[3]),
        .I1(Q[5]),
        .I2(mcp1_ignore_next_mismatch_reg_0[1]),
        .I3(mcp1_ignore_next_mismatch_reg_0[0]),
        .I4(Q[4]),
        .O(mcp1_err_block_count_inc_out1_carry_i_3_n_0));
  LUT5 #(
    .INIT(32'h88800004)) 
    mcp1_err_block_count_inc_out1_carry_i_4
       (.I0(Q[2]),
        .I1(Q[1]),
        .I2(mcp1_ignore_next_mismatch_reg_0[1]),
        .I3(mcp1_ignore_next_mismatch_reg_0[0]),
        .I4(Q[0]),
        .O(mcp1_err_block_count_inc_out1_carry_i_4_n_0));
  CARRY4 \mcp1_err_block_count_inc_out1_inferred__0/i__carry 
       (.CI(1'b0),
        .CO({\mcp1_err_block_count_inc_out1_inferred__0/i__carry_n_0 ,\mcp1_err_block_count_inc_out1_inferred__0/i__carry_n_1 ,\mcp1_err_block_count_inc_out1_inferred__0/i__carry_n_2 ,\mcp1_err_block_count_inc_out1_inferred__0/i__carry_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b1,1'b1,1'b1,1'b1}),
        .O(\NLW_mcp1_err_block_count_inc_out1_inferred__0/i__carry_O_UNCONNECTED [3:0]),
        .S({i__carry_i_1_n_0,i__carry_i_2_n_0,i__carry_i_3_n_0,i__carry_i_4_n_0}));
  CARRY4 \mcp1_err_block_count_inc_out1_inferred__0/i__carry__0 
       (.CI(\mcp1_err_block_count_inc_out1_inferred__0/i__carry_n_0 ),
        .CO({\mcp1_err_block_count_inc_out1_inferred__0/i__carry__0_n_0 ,\mcp1_err_block_count_inc_out1_inferred__0/i__carry__0_n_1 ,\mcp1_err_block_count_inc_out1_inferred__0/i__carry__0_n_2 ,\mcp1_err_block_count_inc_out1_inferred__0/i__carry__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b1,1'b1,1'b1,1'b1}),
        .O(\NLW_mcp1_err_block_count_inc_out1_inferred__0/i__carry__0_O_UNCONNECTED [3:0]),
        .S({i__carry__0_i_1_n_0,i__carry__0_i_2_n_0,i__carry__0_i_3_n_0,i__carry__0_i_4_n_0}));
  CARRY4 \mcp1_err_block_count_inc_out1_inferred__0/i__carry__1 
       (.CI(\mcp1_err_block_count_inc_out1_inferred__0/i__carry__0_n_0 ),
        .CO({\mcp1_err_block_count_inc_out1_inferred__0/i__carry__1_n_0 ,\mcp1_err_block_count_inc_out1_inferred__0/i__carry__1_n_1 ,\mcp1_err_block_count_inc_out1_inferred__0/i__carry__1_n_2 ,\mcp1_err_block_count_inc_out1_inferred__0/i__carry__1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b1,1'b1,1'b1,1'b1}),
        .O(\NLW_mcp1_err_block_count_inc_out1_inferred__0/i__carry__1_O_UNCONNECTED [3:0]),
        .S({i__carry__1_i_1_n_0,i__carry__1_i_2_n_0,i__carry__1_i_3_n_0,i__carry__1_i_4_n_0}));
  CARRY4 \mcp1_err_block_count_inc_out1_inferred__0/i__carry__2 
       (.CI(\mcp1_err_block_count_inc_out1_inferred__0/i__carry__1_n_0 ),
        .CO({\mcp1_err_block_count_inc_out1_inferred__0/i__carry__2_n_0 ,\mcp1_err_block_count_inc_out1_inferred__0/i__carry__2_n_1 ,\mcp1_err_block_count_inc_out1_inferred__0/i__carry__2_n_2 ,\mcp1_err_block_count_inc_out1_inferred__0/i__carry__2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b1,1'b1,1'b1,1'b1}),
        .O(\NLW_mcp1_err_block_count_inc_out1_inferred__0/i__carry__2_O_UNCONNECTED [3:0]),
        .S({i__carry__2_i_1_n_0,i__carry__2_i_2_n_0,i__carry__2_i_3_n_0,i__carry__2_i_4_n_0}));
  CARRY4 \mcp1_err_block_count_inc_out1_inferred__0/i__carry__3 
       (.CI(\mcp1_err_block_count_inc_out1_inferred__0/i__carry__2_n_0 ),
        .CO({\mcp1_err_block_count_inc_out1_inferred__0/i__carry__3_n_0 ,\mcp1_err_block_count_inc_out1_inferred__0/i__carry__3_n_1 ,\mcp1_err_block_count_inc_out1_inferred__0/i__carry__3_n_2 ,\mcp1_err_block_count_inc_out1_inferred__0/i__carry__3_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b1,1'b1,1'b1,1'b1}),
        .O(\NLW_mcp1_err_block_count_inc_out1_inferred__0/i__carry__3_O_UNCONNECTED [3:0]),
        .S({i__carry__3_i_1_n_0,i__carry__3_i_2_n_0,i__carry__3_i_3_n_0,i__carry__3_i_4_n_0}));
  CARRY4 \mcp1_err_block_count_inc_out1_inferred__0/i__carry__4 
       (.CI(\mcp1_err_block_count_inc_out1_inferred__0/i__carry__3_n_0 ),
        .CO({\NLW_mcp1_err_block_count_inc_out1_inferred__0/i__carry__4_CO_UNCONNECTED [3:2],\rx_66_enc_reg_reg[65] ,\mcp1_err_block_count_inc_out1_inferred__0/i__carry__4_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b1,1'b1}),
        .O(\NLW_mcp1_err_block_count_inc_out1_inferred__0/i__carry__4_O_UNCONNECTED [3:0]),
        .S({1'b0,1'b0,i__carry__4_i_1_n_0,i__carry__4_i_2_n_0}));
  LUT5 #(
    .INIT(32'h00004540)) 
    mcp1_err_block_count_inc_out_i_1
       (.I0(SR),
        .I1(mcp1_err_block_count_inc_out_reg_0),
        .I2(mcp1_err_block_count_inc_out_reg_1),
        .I3(err_block_count_inc),
        .I4(mcp1_ignore_next_mismatch_i_3_n_0),
        .O(mcp1_err_block_count_inc_out_i_1_n_0));
  FDRE mcp1_err_block_count_inc_out_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(mcp1_err_block_count_inc_out_i_1_n_0),
        .Q(err_block_count_inc),
        .R(1'b0));
  LUT4 #(
    .INIT(16'hFFAE)) 
    mcp1_ignore_next_mismatch_i_1
       (.I0(mcp1_ignore_next_mismatch_i_2_n_0),
        .I1(mcp1_ignore_next_mismatch),
        .I2(mcp1_ignore_next_mismatch_i_3_n_0),
        .I3(SR),
        .O(mcp1_ignore_next_mismatch_i_1_n_0));
  LUT5 #(
    .INIT(32'h00000004)) 
    mcp1_ignore_next_mismatch_i_2
       (.I0(mcp1_block_count_reg[2]),
        .I1(mcp1_err_block_count_inc_out_reg_1),
        .I2(mcp1_block_count_reg[3]),
        .I3(mcp1_block_count_reg[6]),
        .I4(mcp1_ignore_next_mismatch_i_4_n_0),
        .O(mcp1_ignore_next_mismatch_i_2_n_0));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    mcp1_ignore_next_mismatch_i_3
       (.I0(CO),
        .I1(\rx_66_enc_reg_reg[65] ),
        .I2(mcp1_ignore_next_mismatch_reg_0[2]),
        .I3(mcp1_ignore_next_mismatch_reg_1),
        .I4(mcp1_ignore_next_mismatch),
        .I5(mcp1_err_block_count_inc_out_reg_1),
        .O(mcp1_ignore_next_mismatch_i_3_n_0));
  (* SOFT_HLUTNM = "soft_lutpair224" *) 
  LUT4 #(
    .INIT(16'hFFFE)) 
    mcp1_ignore_next_mismatch_i_4
       (.I0(mcp1_block_count_reg[1]),
        .I1(mcp1_block_count_reg[0]),
        .I2(mcp1_block_count_reg[5]),
        .I3(mcp1_block_count_reg[4]),
        .O(mcp1_ignore_next_mismatch_i_4_n_0));
  FDRE mcp1_ignore_next_mismatch_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(mcp1_ignore_next_mismatch_i_1_n_0),
        .Q(mcp1_ignore_next_mismatch),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_15_rxratecounter" *) 
module ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_rxratecounter
   (out,
    E,
    rxusrclk2_en156_reg_rep__2_0,
    rxusrclk2_en156_reg_rep__0_0,
    rxusrclk2_en156_reg_rep__5_0,
    rxusrclk2_en156_reg_rep__6_0,
    rxusrclk2_en156_reg_rep__8_0,
    rxusrclk2_en156_reg_rep__9_0,
    rxusrclk2_en156_reg_rep__9_1,
    SR,
    rxusrclk2_en156_reg_rep__9_2,
    rxusrclk2_en156_reg_rep__9_3,
    rxusrclk2_en156_reg_rep__9_4,
    rxusrclk2_en156_reg_rep__9_5,
    rxusrclk2_en156_reg_rep__9_6,
    SS,
    rxusrclk2_en156_reg_rep__9_7,
    D,
    rxusrclk2,
    \mcp1_r_type_next_reg_reg[2] ,
    DecodeWord,
    DecodeWord0,
    DecodeWord1,
    DecodeWord2,
    DecodeWord3,
    DecodeWord4,
    DecodeWord5,
    \mcp1_dec_c7_reg[7] ,
    Q,
    rxdatavalid,
    rxheadervalid);
  output out;
  output [0:0]E;
  output [2:0]rxusrclk2_en156_reg_rep__2_0;
  output [0:0]rxusrclk2_en156_reg_rep__0_0;
  output [2:0]rxusrclk2_en156_reg_rep__5_0;
  output [1:0]rxusrclk2_en156_reg_rep__6_0;
  output [0:0]rxusrclk2_en156_reg_rep__8_0;
  output rxusrclk2_en156_reg_rep__9_0;
  output rxusrclk2_en156_reg_rep__9_1;
  output [0:0]SR;
  output [0:0]rxusrclk2_en156_reg_rep__9_2;
  output [0:0]rxusrclk2_en156_reg_rep__9_3;
  output [0:0]rxusrclk2_en156_reg_rep__9_4;
  output [0:0]rxusrclk2_en156_reg_rep__9_5;
  output [0:0]rxusrclk2_en156_reg_rep__9_6;
  output [0:0]SS;
  output [0:0]rxusrclk2_en156_reg_rep__9_7;
  output [65:0]D;
  input rxusrclk2;
  input \mcp1_r_type_next_reg_reg[2] ;
  input [0:0]DecodeWord;
  input [0:0]DecodeWord0;
  input [0:0]DecodeWord1;
  input [0:0]DecodeWord2;
  input [0:0]DecodeWord3;
  input [0:0]DecodeWord4;
  input [0:0]DecodeWord5;
  input \mcp1_dec_c7_reg[7] ;
  input [33:0]Q;
  input rxdatavalid;
  input rxheadervalid;

  wire [65:0]D;
  wire [0:0]DecodeWord;
  wire [0:0]DecodeWord0;
  wire [0:0]DecodeWord1;
  wire [0:0]DecodeWord2;
  wire [0:0]DecodeWord3;
  wire [0:0]DecodeWord4;
  wire [0:0]DecodeWord5;
  wire [0:0]E;
  wire [33:0]Q;
  wire [0:0]SR;
  wire [0:0]SS;
  wire \mcp1_dec_c7_reg[7] ;
  wire \mcp1_r_type_next_reg_reg[2] ;
  (* RTL_KEEP = "true" *) (* equivalent_register_removal = "no" *) wire out;
  wire rx_66_out_reg0;
  wire rxdatavalid;
  wire rxheadervalid;
  wire rxusrclk2;
  (* MAX_FANOUT = "50" *) (* RTL_MAX_FANOUT = "found" *) (* equivalent_register_removal = "no" *) wire rxusrclk2_en156_dup1_reg_n_0;
  (* MAX_FANOUT = "50" *) (* RTL_MAX_FANOUT = "found" *) (* equivalent_register_removal = "no" *) wire rxusrclk2_en156_dup2_reg_n_0;
  (* MAX_FANOUT = "50" *) (* RTL_MAX_FANOUT = "found" *) (* equivalent_register_removal = "no" *) wire rxusrclk2_en156_dup3_reg_n_0;
  wire rxusrclk2_en156_reg0;
  wire [0:0]rxusrclk2_en156_reg_rep__0_0;
  wire [2:0]rxusrclk2_en156_reg_rep__2_0;
  wire [2:0]rxusrclk2_en156_reg_rep__5_0;
  wire [1:0]rxusrclk2_en156_reg_rep__6_0;
  wire [0:0]rxusrclk2_en156_reg_rep__8_0;
  wire rxusrclk2_en156_reg_rep__9_0;
  wire rxusrclk2_en156_reg_rep__9_1;
  wire [0:0]rxusrclk2_en156_reg_rep__9_2;
  wire [0:0]rxusrclk2_en156_reg_rep__9_3;
  wire [0:0]rxusrclk2_en156_reg_rep__9_4;
  wire [0:0]rxusrclk2_en156_reg_rep__9_5;
  wire [0:0]rxusrclk2_en156_reg_rep__9_6;
  wire [0:0]rxusrclk2_en156_reg_rep__9_7;

  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE eq_rxusrclk2_en156_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rxusrclk2_en156_reg0),
        .Q(out),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h2)) 
    \mcp1_dec_c0[6]_i_1 
       (.I0(rxusrclk2_en156_reg_rep__9_0),
        .I1(DecodeWord),
        .O(SR));
  LUT2 #(
    .INIT(4'h2)) 
    \mcp1_dec_c1[7]_i_1 
       (.I0(rxusrclk2_en156_reg_rep__9_0),
        .I1(DecodeWord0),
        .O(rxusrclk2_en156_reg_rep__9_2));
  LUT2 #(
    .INIT(4'h2)) 
    \mcp1_dec_c2[6]_i_1 
       (.I0(rxusrclk2_en156_reg_rep__9_0),
        .I1(DecodeWord1),
        .O(rxusrclk2_en156_reg_rep__9_3));
  LUT2 #(
    .INIT(4'h2)) 
    \mcp1_dec_c3[5]_i_1 
       (.I0(rxusrclk2_en156_reg_rep__9_0),
        .I1(DecodeWord2),
        .O(rxusrclk2_en156_reg_rep__9_4));
  LUT2 #(
    .INIT(4'h2)) 
    \mcp1_dec_c4[7]_i_1 
       (.I0(rxusrclk2_en156_reg_rep__9_0),
        .I1(DecodeWord3),
        .O(rxusrclk2_en156_reg_rep__9_5));
  LUT2 #(
    .INIT(4'h2)) 
    \mcp1_dec_c5[5]_i_1 
       (.I0(rxusrclk2_en156_reg_rep__9_0),
        .I1(DecodeWord4),
        .O(rxusrclk2_en156_reg_rep__9_6));
  LUT2 #(
    .INIT(4'h2)) 
    \mcp1_dec_c6[5]_i_1 
       (.I0(rxusrclk2_en156_reg_rep__9_0),
        .I1(DecodeWord5),
        .O(SS));
  LUT2 #(
    .INIT(4'h8)) 
    \mcp1_dec_c7[7]_i_1 
       (.I0(rxusrclk2_en156_reg_rep__9_0),
        .I1(\mcp1_dec_c7_reg[7] ),
        .O(rxusrclk2_en156_reg_rep__9_7));
  LUT2 #(
    .INIT(4'hE)) 
    \mcp1_r_type_next_reg[2]_i_6 
       (.I0(rxusrclk2_en156_reg_rep__9_0),
        .I1(\mcp1_r_type_next_reg_reg[2] ),
        .O(rxusrclk2_en156_reg_rep__9_1));
  LUT2 #(
    .INIT(4'h8)) 
    \rx_66_out[33]_i_1 
       (.I0(rxdatavalid),
        .I1(rxheadervalid),
        .O(rx_66_out_reg0));
  FDRE \rx_66_out_reg[0] 
       (.C(rxusrclk2),
        .CE(rx_66_out_reg0),
        .D(Q[0]),
        .Q(D[0]),
        .R(1'b0));
  FDRE \rx_66_out_reg[10] 
       (.C(rxusrclk2),
        .CE(rx_66_out_reg0),
        .D(Q[10]),
        .Q(D[10]),
        .R(1'b0));
  FDRE \rx_66_out_reg[11] 
       (.C(rxusrclk2),
        .CE(rx_66_out_reg0),
        .D(Q[11]),
        .Q(D[11]),
        .R(1'b0));
  FDRE \rx_66_out_reg[12] 
       (.C(rxusrclk2),
        .CE(rx_66_out_reg0),
        .D(Q[12]),
        .Q(D[12]),
        .R(1'b0));
  FDRE \rx_66_out_reg[13] 
       (.C(rxusrclk2),
        .CE(rx_66_out_reg0),
        .D(Q[13]),
        .Q(D[13]),
        .R(1'b0));
  FDRE \rx_66_out_reg[14] 
       (.C(rxusrclk2),
        .CE(rx_66_out_reg0),
        .D(Q[14]),
        .Q(D[14]),
        .R(1'b0));
  FDRE \rx_66_out_reg[15] 
       (.C(rxusrclk2),
        .CE(rx_66_out_reg0),
        .D(Q[15]),
        .Q(D[15]),
        .R(1'b0));
  FDRE \rx_66_out_reg[16] 
       (.C(rxusrclk2),
        .CE(rx_66_out_reg0),
        .D(Q[16]),
        .Q(D[16]),
        .R(1'b0));
  FDRE \rx_66_out_reg[17] 
       (.C(rxusrclk2),
        .CE(rx_66_out_reg0),
        .D(Q[17]),
        .Q(D[17]),
        .R(1'b0));
  FDRE \rx_66_out_reg[18] 
       (.C(rxusrclk2),
        .CE(rx_66_out_reg0),
        .D(Q[18]),
        .Q(D[18]),
        .R(1'b0));
  FDRE \rx_66_out_reg[19] 
       (.C(rxusrclk2),
        .CE(rx_66_out_reg0),
        .D(Q[19]),
        .Q(D[19]),
        .R(1'b0));
  FDRE \rx_66_out_reg[1] 
       (.C(rxusrclk2),
        .CE(rx_66_out_reg0),
        .D(Q[1]),
        .Q(D[1]),
        .R(1'b0));
  FDRE \rx_66_out_reg[20] 
       (.C(rxusrclk2),
        .CE(rx_66_out_reg0),
        .D(Q[20]),
        .Q(D[20]),
        .R(1'b0));
  FDRE \rx_66_out_reg[21] 
       (.C(rxusrclk2),
        .CE(rx_66_out_reg0),
        .D(Q[21]),
        .Q(D[21]),
        .R(1'b0));
  FDRE \rx_66_out_reg[22] 
       (.C(rxusrclk2),
        .CE(rx_66_out_reg0),
        .D(Q[22]),
        .Q(D[22]),
        .R(1'b0));
  FDRE \rx_66_out_reg[23] 
       (.C(rxusrclk2),
        .CE(rx_66_out_reg0),
        .D(Q[23]),
        .Q(D[23]),
        .R(1'b0));
  FDRE \rx_66_out_reg[24] 
       (.C(rxusrclk2),
        .CE(rx_66_out_reg0),
        .D(Q[24]),
        .Q(D[24]),
        .R(1'b0));
  FDRE \rx_66_out_reg[25] 
       (.C(rxusrclk2),
        .CE(rx_66_out_reg0),
        .D(Q[25]),
        .Q(D[25]),
        .R(1'b0));
  FDRE \rx_66_out_reg[26] 
       (.C(rxusrclk2),
        .CE(rx_66_out_reg0),
        .D(Q[26]),
        .Q(D[26]),
        .R(1'b0));
  FDRE \rx_66_out_reg[27] 
       (.C(rxusrclk2),
        .CE(rx_66_out_reg0),
        .D(Q[27]),
        .Q(D[27]),
        .R(1'b0));
  FDRE \rx_66_out_reg[28] 
       (.C(rxusrclk2),
        .CE(rx_66_out_reg0),
        .D(Q[28]),
        .Q(D[28]),
        .R(1'b0));
  FDRE \rx_66_out_reg[29] 
       (.C(rxusrclk2),
        .CE(rx_66_out_reg0),
        .D(Q[29]),
        .Q(D[29]),
        .R(1'b0));
  FDRE \rx_66_out_reg[2] 
       (.C(rxusrclk2),
        .CE(rx_66_out_reg0),
        .D(Q[2]),
        .Q(D[2]),
        .R(1'b0));
  FDRE \rx_66_out_reg[30] 
       (.C(rxusrclk2),
        .CE(rx_66_out_reg0),
        .D(Q[30]),
        .Q(D[30]),
        .R(1'b0));
  FDRE \rx_66_out_reg[31] 
       (.C(rxusrclk2),
        .CE(rx_66_out_reg0),
        .D(Q[31]),
        .Q(D[31]),
        .R(1'b0));
  FDRE \rx_66_out_reg[32] 
       (.C(rxusrclk2),
        .CE(rx_66_out_reg0),
        .D(Q[32]),
        .Q(D[32]),
        .R(1'b0));
  FDRE \rx_66_out_reg[33] 
       (.C(rxusrclk2),
        .CE(rx_66_out_reg0),
        .D(Q[33]),
        .Q(D[33]),
        .R(1'b0));
  FDRE \rx_66_out_reg[34] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg0),
        .D(Q[2]),
        .Q(D[34]),
        .R(1'b0));
  FDRE \rx_66_out_reg[35] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg0),
        .D(Q[3]),
        .Q(D[35]),
        .R(1'b0));
  FDRE \rx_66_out_reg[36] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg0),
        .D(Q[4]),
        .Q(D[36]),
        .R(1'b0));
  FDRE \rx_66_out_reg[37] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg0),
        .D(Q[5]),
        .Q(D[37]),
        .R(1'b0));
  FDRE \rx_66_out_reg[38] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg0),
        .D(Q[6]),
        .Q(D[38]),
        .R(1'b0));
  FDRE \rx_66_out_reg[39] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg0),
        .D(Q[7]),
        .Q(D[39]),
        .R(1'b0));
  FDRE \rx_66_out_reg[3] 
       (.C(rxusrclk2),
        .CE(rx_66_out_reg0),
        .D(Q[3]),
        .Q(D[3]),
        .R(1'b0));
  FDRE \rx_66_out_reg[40] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg0),
        .D(Q[8]),
        .Q(D[40]),
        .R(1'b0));
  FDRE \rx_66_out_reg[41] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg0),
        .D(Q[9]),
        .Q(D[41]),
        .R(1'b0));
  FDRE \rx_66_out_reg[42] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg0),
        .D(Q[10]),
        .Q(D[42]),
        .R(1'b0));
  FDRE \rx_66_out_reg[43] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg0),
        .D(Q[11]),
        .Q(D[43]),
        .R(1'b0));
  FDRE \rx_66_out_reg[44] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg0),
        .D(Q[12]),
        .Q(D[44]),
        .R(1'b0));
  FDRE \rx_66_out_reg[45] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg0),
        .D(Q[13]),
        .Q(D[45]),
        .R(1'b0));
  FDRE \rx_66_out_reg[46] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg0),
        .D(Q[14]),
        .Q(D[46]),
        .R(1'b0));
  FDRE \rx_66_out_reg[47] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg0),
        .D(Q[15]),
        .Q(D[47]),
        .R(1'b0));
  FDRE \rx_66_out_reg[48] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg0),
        .D(Q[16]),
        .Q(D[48]),
        .R(1'b0));
  FDRE \rx_66_out_reg[49] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg0),
        .D(Q[17]),
        .Q(D[49]),
        .R(1'b0));
  FDRE \rx_66_out_reg[4] 
       (.C(rxusrclk2),
        .CE(rx_66_out_reg0),
        .D(Q[4]),
        .Q(D[4]),
        .R(1'b0));
  FDRE \rx_66_out_reg[50] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg0),
        .D(Q[18]),
        .Q(D[50]),
        .R(1'b0));
  FDRE \rx_66_out_reg[51] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg0),
        .D(Q[19]),
        .Q(D[51]),
        .R(1'b0));
  FDRE \rx_66_out_reg[52] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg0),
        .D(Q[20]),
        .Q(D[52]),
        .R(1'b0));
  FDRE \rx_66_out_reg[53] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg0),
        .D(Q[21]),
        .Q(D[53]),
        .R(1'b0));
  FDRE \rx_66_out_reg[54] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg0),
        .D(Q[22]),
        .Q(D[54]),
        .R(1'b0));
  FDRE \rx_66_out_reg[55] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg0),
        .D(Q[23]),
        .Q(D[55]),
        .R(1'b0));
  FDRE \rx_66_out_reg[56] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg0),
        .D(Q[24]),
        .Q(D[56]),
        .R(1'b0));
  FDRE \rx_66_out_reg[57] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg0),
        .D(Q[25]),
        .Q(D[57]),
        .R(1'b0));
  FDRE \rx_66_out_reg[58] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg0),
        .D(Q[26]),
        .Q(D[58]),
        .R(1'b0));
  FDRE \rx_66_out_reg[59] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg0),
        .D(Q[27]),
        .Q(D[59]),
        .R(1'b0));
  FDRE \rx_66_out_reg[5] 
       (.C(rxusrclk2),
        .CE(rx_66_out_reg0),
        .D(Q[5]),
        .Q(D[5]),
        .R(1'b0));
  FDRE \rx_66_out_reg[60] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg0),
        .D(Q[28]),
        .Q(D[60]),
        .R(1'b0));
  FDRE \rx_66_out_reg[61] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg0),
        .D(Q[29]),
        .Q(D[61]),
        .R(1'b0));
  FDRE \rx_66_out_reg[62] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg0),
        .D(Q[30]),
        .Q(D[62]),
        .R(1'b0));
  FDRE \rx_66_out_reg[63] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg0),
        .D(Q[31]),
        .Q(D[63]),
        .R(1'b0));
  FDRE \rx_66_out_reg[64] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg0),
        .D(Q[32]),
        .Q(D[64]),
        .R(1'b0));
  FDRE \rx_66_out_reg[65] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg0),
        .D(Q[33]),
        .Q(D[65]),
        .R(1'b0));
  FDRE \rx_66_out_reg[6] 
       (.C(rxusrclk2),
        .CE(rx_66_out_reg0),
        .D(Q[6]),
        .Q(D[6]),
        .R(1'b0));
  FDRE \rx_66_out_reg[7] 
       (.C(rxusrclk2),
        .CE(rx_66_out_reg0),
        .D(Q[7]),
        .Q(D[7]),
        .R(1'b0));
  FDRE \rx_66_out_reg[8] 
       (.C(rxusrclk2),
        .CE(rx_66_out_reg0),
        .D(Q[8]),
        .Q(D[8]),
        .R(1'b0));
  FDRE \rx_66_out_reg[9] 
       (.C(rxusrclk2),
        .CE(rx_66_out_reg0),
        .D(Q[9]),
        .Q(D[9]),
        .R(1'b0));
  (* RTL_MAX_FANOUT = "found" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE rxusrclk2_en156_dup1_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rxusrclk2_en156_reg0),
        .Q(rxusrclk2_en156_dup1_reg_n_0),
        .R(1'b0));
  (* RTL_MAX_FANOUT = "found" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE rxusrclk2_en156_dup2_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rxusrclk2_en156_reg0),
        .Q(rxusrclk2_en156_dup2_reg_n_0),
        .R(1'b0));
  (* RTL_MAX_FANOUT = "found" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE rxusrclk2_en156_dup3_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rxusrclk2_en156_reg0),
        .Q(rxusrclk2_en156_dup3_reg_n_0),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h2)) 
    rxusrclk2_en156_i_1
       (.I0(rxdatavalid),
        .I1(rxheadervalid),
        .O(rxusrclk2_en156_reg0));
  (* ORIG_CELL_NAME = "rxusrclk2_en156_reg" *) 
  FDRE rxusrclk2_en156_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rxusrclk2_en156_reg0),
        .Q(E),
        .R(1'b0));
  (* IS_FANOUT_CONSTRAINED = "1" *) 
  (* ORIG_CELL_NAME = "rxusrclk2_en156_reg" *) 
  FDRE rxusrclk2_en156_reg_rep
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rxusrclk2_en156_reg0),
        .Q(rxusrclk2_en156_reg_rep__2_0[0]),
        .R(1'b0));
  (* IS_FANOUT_CONSTRAINED = "1" *) 
  (* ORIG_CELL_NAME = "rxusrclk2_en156_reg" *) 
  FDRE rxusrclk2_en156_reg_rep__0
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rxusrclk2_en156_reg0),
        .Q(rxusrclk2_en156_reg_rep__0_0),
        .R(1'b0));
  (* IS_FANOUT_CONSTRAINED = "1" *) 
  (* ORIG_CELL_NAME = "rxusrclk2_en156_reg" *) 
  FDRE rxusrclk2_en156_reg_rep__1
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rxusrclk2_en156_reg0),
        .Q(rxusrclk2_en156_reg_rep__2_0[1]),
        .R(1'b0));
  (* IS_FANOUT_CONSTRAINED = "1" *) 
  (* ORIG_CELL_NAME = "rxusrclk2_en156_reg" *) 
  FDRE rxusrclk2_en156_reg_rep__2
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rxusrclk2_en156_reg0),
        .Q(rxusrclk2_en156_reg_rep__2_0[2]),
        .R(1'b0));
  (* IS_FANOUT_CONSTRAINED = "1" *) 
  (* ORIG_CELL_NAME = "rxusrclk2_en156_reg" *) 
  FDRE rxusrclk2_en156_reg_rep__3
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rxusrclk2_en156_reg0),
        .Q(rxusrclk2_en156_reg_rep__5_0[0]),
        .R(1'b0));
  (* IS_FANOUT_CONSTRAINED = "1" *) 
  (* ORIG_CELL_NAME = "rxusrclk2_en156_reg" *) 
  FDRE rxusrclk2_en156_reg_rep__4
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rxusrclk2_en156_reg0),
        .Q(rxusrclk2_en156_reg_rep__5_0[1]),
        .R(1'b0));
  (* IS_FANOUT_CONSTRAINED = "1" *) 
  (* ORIG_CELL_NAME = "rxusrclk2_en156_reg" *) 
  FDRE rxusrclk2_en156_reg_rep__5
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rxusrclk2_en156_reg0),
        .Q(rxusrclk2_en156_reg_rep__5_0[2]),
        .R(1'b0));
  (* IS_FANOUT_CONSTRAINED = "1" *) 
  (* ORIG_CELL_NAME = "rxusrclk2_en156_reg" *) 
  FDRE rxusrclk2_en156_reg_rep__6
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rxusrclk2_en156_reg0),
        .Q(rxusrclk2_en156_reg_rep__6_0[1]),
        .R(1'b0));
  (* IS_FANOUT_CONSTRAINED = "1" *) 
  (* ORIG_CELL_NAME = "rxusrclk2_en156_reg" *) 
  FDRE rxusrclk2_en156_reg_rep__7
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rxusrclk2_en156_reg0),
        .Q(rxusrclk2_en156_reg_rep__6_0[0]),
        .R(1'b0));
  (* IS_FANOUT_CONSTRAINED = "1" *) 
  (* ORIG_CELL_NAME = "rxusrclk2_en156_reg" *) 
  FDRE rxusrclk2_en156_reg_rep__8
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rxusrclk2_en156_reg0),
        .Q(rxusrclk2_en156_reg_rep__8_0),
        .R(1'b0));
  (* IS_FANOUT_CONSTRAINED = "1" *) 
  (* ORIG_CELL_NAME = "rxusrclk2_en156_reg" *) 
  FDRE rxusrclk2_en156_reg_rep__9
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rxusrclk2_en156_reg0),
        .Q(rxusrclk2_en156_reg_rep__9_0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_15_rxusrclk2_coreclk_counter_resync" *) 
module ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_rxusrclk2_coreclk_counter_resync
   (counter_out,
    rxusrclk2,
    coreclk,
    mcp1_counter_3_reg_0,
    rx_test_mode_int_reg,
    err_block_count_inc,
    rxreset_rxusrclk2);
  output counter_out;
  input rxusrclk2;
  input coreclk;
  input mcp1_counter_3_reg_0;
  input rx_test_mode_int_reg;
  input err_block_count_inc;
  input rxreset_rxusrclk2;

  wire coreclk;
  wire counter_out;
  wire counter_out0;
  wire counter_sync_1;
  wire counter_sync_2;
  wire counter_sync_3;
  wire counter_sync_extra;
  wire err_block_count_inc;
  wire mcp1_counter_1_i_1__0_n_0;
  wire mcp1_counter_1_reg_n_0;
  wire mcp1_counter_2_i_1__0_n_0;
  wire mcp1_counter_2_reg_n_0;
  wire mcp1_counter_3_i_1__0_n_0;
  wire mcp1_counter_3_reg_0;
  wire mcp1_counter_3_reg_n_0;
  wire psynch_1_n_1;
  wire rx_test_mode_int_reg;
  wire rxreset_rxusrclk2;
  wire rxusrclk2;

  FDRE counter_out_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(counter_out0),
        .Q(counter_out),
        .R(1'b0));
  FDRE counter_sync_extra_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(psynch_1_n_1),
        .Q(counter_sync_extra),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair153" *) 
  LUT5 #(
    .INIT(32'h55550020)) 
    mcp1_counter_1_i_1__0
       (.I0(mcp1_counter_3_reg_0),
        .I1(rx_test_mode_int_reg),
        .I2(err_block_count_inc),
        .I3(mcp1_counter_2_reg_n_0),
        .I4(mcp1_counter_1_reg_n_0),
        .O(mcp1_counter_1_i_1__0_n_0));
  FDRE mcp1_counter_1_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(mcp1_counter_1_i_1__0_n_0),
        .Q(mcp1_counter_1_reg_n_0),
        .R(rxreset_rxusrclk2));
  (* SOFT_HLUTNM = "soft_lutpair153" *) 
  LUT5 #(
    .INIT(32'h55552000)) 
    mcp1_counter_2_i_1__0
       (.I0(mcp1_counter_3_reg_0),
        .I1(rx_test_mode_int_reg),
        .I2(err_block_count_inc),
        .I3(mcp1_counter_1_reg_n_0),
        .I4(mcp1_counter_2_reg_n_0),
        .O(mcp1_counter_2_i_1__0_n_0));
  FDRE mcp1_counter_2_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(mcp1_counter_2_i_1__0_n_0),
        .Q(mcp1_counter_2_reg_n_0),
        .R(rxreset_rxusrclk2));
  LUT5 #(
    .INIT(32'h55552000)) 
    mcp1_counter_3_i_1__0
       (.I0(mcp1_counter_3_reg_0),
        .I1(rx_test_mode_int_reg),
        .I2(err_block_count_inc),
        .I3(mcp1_counter_2_reg_n_0),
        .I4(mcp1_counter_3_reg_n_0),
        .O(mcp1_counter_3_i_1__0_n_0));
  FDRE mcp1_counter_3_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(mcp1_counter_3_i_1__0_n_0),
        .Q(mcp1_counter_3_reg_n_0),
        .R(rxreset_rxusrclk2));
  ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_pulse_synchronizer_36 psynch_1
       (.coreclk(coreclk),
        .counter_sync_1(counter_sync_1),
        .counter_sync_2(counter_sync_2),
        .counter_sync_3(counter_sync_3),
        .counter_sync_extra(counter_sync_extra),
        .counter_sync_extra_reg(psynch_1_n_1),
        .dcapture_reg_0(mcp1_counter_1_reg_n_0),
        .rxusrclk2(rxusrclk2));
  ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_pulse_synchronizer_37 psynch_2
       (.coreclk(coreclk),
        .counter_sync_2(counter_sync_2),
        .dcapture_reg_0(mcp1_counter_2_reg_n_0),
        .rxusrclk2(rxusrclk2));
  ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_pulse_synchronizer_38 psynch_3
       (.coreclk(coreclk),
        .counter_out0(counter_out0),
        .counter_sync_1(counter_sync_1),
        .counter_sync_2(counter_sync_2),
        .counter_sync_3(counter_sync_3),
        .counter_sync_extra(counter_sync_extra),
        .dcapture_reg_0(mcp1_counter_3_reg_n_0),
        .rxusrclk2(rxusrclk2));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_15_rxusrclk2_coreclk_counter_resync" *) 
module ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_rxusrclk2_coreclk_counter_resync_23
   (counter_out,
    rxusrclk2,
    coreclk,
    mcp1_counter_3_reg_0,
    ber_count_inc,
    rxreset_rxusrclk2);
  output counter_out;
  input rxusrclk2;
  input coreclk;
  input mcp1_counter_3_reg_0;
  input ber_count_inc;
  input rxreset_rxusrclk2;

  wire ber_count_inc;
  wire coreclk;
  wire counter_out;
  wire counter_out0;
  wire counter_sync_1;
  wire counter_sync_2;
  wire counter_sync_3;
  wire counter_sync_extra;
  wire mcp1_counter_1_i_1_n_0;
  wire mcp1_counter_1_reg_n_0;
  wire mcp1_counter_2_i_1_n_0;
  wire mcp1_counter_2_reg_n_0;
  wire mcp1_counter_3_i_1_n_0;
  wire mcp1_counter_3_reg_0;
  wire mcp1_counter_3_reg_n_0;
  wire psynch_1_n_1;
  wire rxreset_rxusrclk2;
  wire rxusrclk2;

  FDRE counter_out_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(counter_out0),
        .Q(counter_out),
        .R(1'b0));
  FDRE counter_sync_extra_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(psynch_1_n_1),
        .Q(counter_sync_extra),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair154" *) 
  LUT4 #(
    .INIT(16'h5508)) 
    mcp1_counter_1_i_1
       (.I0(mcp1_counter_3_reg_0),
        .I1(ber_count_inc),
        .I2(mcp1_counter_2_reg_n_0),
        .I3(mcp1_counter_1_reg_n_0),
        .O(mcp1_counter_1_i_1_n_0));
  FDRE mcp1_counter_1_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(mcp1_counter_1_i_1_n_0),
        .Q(mcp1_counter_1_reg_n_0),
        .R(rxreset_rxusrclk2));
  (* SOFT_HLUTNM = "soft_lutpair154" *) 
  LUT4 #(
    .INIT(16'h5580)) 
    mcp1_counter_2_i_1
       (.I0(mcp1_counter_3_reg_0),
        .I1(ber_count_inc),
        .I2(mcp1_counter_1_reg_n_0),
        .I3(mcp1_counter_2_reg_n_0),
        .O(mcp1_counter_2_i_1_n_0));
  FDRE mcp1_counter_2_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(mcp1_counter_2_i_1_n_0),
        .Q(mcp1_counter_2_reg_n_0),
        .R(rxreset_rxusrclk2));
  LUT4 #(
    .INIT(16'h5580)) 
    mcp1_counter_3_i_1
       (.I0(mcp1_counter_3_reg_0),
        .I1(ber_count_inc),
        .I2(mcp1_counter_2_reg_n_0),
        .I3(mcp1_counter_3_reg_n_0),
        .O(mcp1_counter_3_i_1_n_0));
  FDRE mcp1_counter_3_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(mcp1_counter_3_i_1_n_0),
        .Q(mcp1_counter_3_reg_n_0),
        .R(rxreset_rxusrclk2));
  ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_pulse_synchronizer_33 psynch_1
       (.coreclk(coreclk),
        .counter_sync_1(counter_sync_1),
        .counter_sync_2(counter_sync_2),
        .counter_sync_3(counter_sync_3),
        .counter_sync_extra(counter_sync_extra),
        .counter_sync_extra_reg(psynch_1_n_1),
        .dcapture_reg_0(mcp1_counter_1_reg_n_0),
        .rxusrclk2(rxusrclk2));
  ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_pulse_synchronizer_34 psynch_2
       (.coreclk(coreclk),
        .counter_sync_2(counter_sync_2),
        .dcapture_reg_0(mcp1_counter_2_reg_n_0),
        .rxusrclk2(rxusrclk2));
  ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_pulse_synchronizer_35 psynch_3
       (.coreclk(coreclk),
        .counter_out0(counter_out0),
        .counter_sync_1(counter_sync_1),
        .counter_sync_2(counter_sync_2),
        .counter_sync_3(counter_sync_3),
        .counter_sync_extra(counter_sync_extra),
        .dcapture_reg_0(mcp1_counter_3_reg_n_0),
        .rxusrclk2(rxusrclk2));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_15_rxusrclk2_coreclk_counter_resync" *) 
module ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_rxusrclk2_coreclk_counter_resync_26
   (counter_out,
    rxusrclk2,
    coreclk,
    mcp1_counter_3_reg_0,
    rx_test_mode_int_reg,
    mcp1_counter_3_reg_1,
    err_block_count_inc,
    rxreset_rxusrclk2);
  output counter_out;
  input rxusrclk2;
  input coreclk;
  input mcp1_counter_3_reg_0;
  input rx_test_mode_int_reg;
  input [0:0]mcp1_counter_3_reg_1;
  input err_block_count_inc;
  input rxreset_rxusrclk2;

  wire coreclk;
  wire counter_out;
  wire counter_out0;
  wire counter_sync_1;
  wire counter_sync_2;
  wire counter_sync_3;
  wire counter_sync_extra;
  wire err_block_count_inc;
  wire mcp1_counter_1_i_1__1_n_0;
  wire mcp1_counter_1_reg_n_0;
  wire mcp1_counter_2_i_1__1_n_0;
  wire mcp1_counter_2_reg_n_0;
  wire mcp1_counter_3_i_1__1_n_0;
  wire mcp1_counter_3_reg_0;
  wire [0:0]mcp1_counter_3_reg_1;
  wire mcp1_counter_3_reg_n_0;
  wire psynch_1_n_1;
  wire rx_test_mode_int_reg;
  wire rxreset_rxusrclk2;
  wire rxusrclk2;

  FDRE counter_out_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(counter_out0),
        .Q(counter_out),
        .R(1'b0));
  FDRE counter_sync_extra_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(psynch_1_n_1),
        .Q(counter_sync_extra),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h5555555500000800)) 
    mcp1_counter_1_i_1__1
       (.I0(mcp1_counter_3_reg_0),
        .I1(rx_test_mode_int_reg),
        .I2(mcp1_counter_3_reg_1),
        .I3(err_block_count_inc),
        .I4(mcp1_counter_2_reg_n_0),
        .I5(mcp1_counter_1_reg_n_0),
        .O(mcp1_counter_1_i_1__1_n_0));
  FDRE mcp1_counter_1_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(mcp1_counter_1_i_1__1_n_0),
        .Q(mcp1_counter_1_reg_n_0),
        .R(rxreset_rxusrclk2));
  LUT6 #(
    .INIT(64'h5555555508000000)) 
    mcp1_counter_2_i_1__1
       (.I0(mcp1_counter_3_reg_0),
        .I1(rx_test_mode_int_reg),
        .I2(mcp1_counter_3_reg_1),
        .I3(err_block_count_inc),
        .I4(mcp1_counter_1_reg_n_0),
        .I5(mcp1_counter_2_reg_n_0),
        .O(mcp1_counter_2_i_1__1_n_0));
  FDRE mcp1_counter_2_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(mcp1_counter_2_i_1__1_n_0),
        .Q(mcp1_counter_2_reg_n_0),
        .R(rxreset_rxusrclk2));
  LUT6 #(
    .INIT(64'h5555555508000000)) 
    mcp1_counter_3_i_1__1
       (.I0(mcp1_counter_3_reg_0),
        .I1(rx_test_mode_int_reg),
        .I2(mcp1_counter_3_reg_1),
        .I3(err_block_count_inc),
        .I4(mcp1_counter_2_reg_n_0),
        .I5(mcp1_counter_3_reg_n_0),
        .O(mcp1_counter_3_i_1__1_n_0));
  FDRE mcp1_counter_3_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(mcp1_counter_3_i_1__1_n_0),
        .Q(mcp1_counter_3_reg_n_0),
        .R(rxreset_rxusrclk2));
  ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_pulse_synchronizer psynch_1
       (.coreclk(coreclk),
        .counter_sync_1(counter_sync_1),
        .counter_sync_2(counter_sync_2),
        .counter_sync_3(counter_sync_3),
        .counter_sync_extra(counter_sync_extra),
        .counter_sync_extra_reg(psynch_1_n_1),
        .dcapture_reg_0(mcp1_counter_1_reg_n_0),
        .rxusrclk2(rxusrclk2));
  ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_pulse_synchronizer_27 psynch_2
       (.coreclk(coreclk),
        .counter_sync_2(counter_sync_2),
        .dcapture_reg_0(mcp1_counter_2_reg_n_0),
        .rxusrclk2(rxusrclk2));
  ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_pulse_synchronizer_28 psynch_3
       (.coreclk(coreclk),
        .counter_out0(counter_out0),
        .counter_sync_1(counter_sync_1),
        .counter_sync_2(counter_sync_2),
        .counter_sync_3(counter_sync_3),
        .counter_sync_extra(counter_sync_extra),
        .dcapture_reg_0(mcp1_counter_3_reg_n_0),
        .rxusrclk2(rxusrclk2));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_15_seq_detect" *) 
module ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_seq_detect
   (D,
    comp_0_3,
    comp_1_4,
    comp_2);
  output [0:0]D;
  input comp_0_3;
  input comp_1_4;
  input comp_2;

  wire [0:0]D;
  wire comp_0_3;
  wire comp_1_4;
  wire comp_2;
  wire muxcyo_0;
  wire muxcyo_1;
  wire [3:3]NLW_muxcy_i0_CARRY4_CO_UNCONNECTED;
  wire [3:3]NLW_muxcy_i0_CARRY4_DI_UNCONNECTED;
  wire [3:0]NLW_muxcy_i0_CARRY4_O_UNCONNECTED;
  wire [3:3]NLW_muxcy_i0_CARRY4_S_UNCONNECTED;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* OPT_MODIFIED = "MLO" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  CARRY4 muxcy_i0_CARRY4
       (.CI(1'b0),
        .CO({NLW_muxcy_i0_CARRY4_CO_UNCONNECTED[3],D,muxcyo_1,muxcyo_0}),
        .CYINIT(1'b1),
        .DI({NLW_muxcy_i0_CARRY4_DI_UNCONNECTED[3],1'b0,1'b0,1'b0}),
        .O(NLW_muxcy_i0_CARRY4_O_UNCONNECTED[3:0]),
        .S({NLW_muxcy_i0_CARRY4_S_UNCONNECTED[3],comp_2,comp_1_4,comp_0_3}));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_15_seq_detect" *) 
module ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_seq_detect_62
   (D,
    comp_0_5,
    comp_1_6,
    comp_2_7);
  output [0:0]D;
  input comp_0_5;
  input comp_1_6;
  input comp_2_7;

  wire [0:0]D;
  wire comp_0_5;
  wire comp_1_6;
  wire comp_2_7;
  wire muxcyo_0;
  wire muxcyo_1;
  wire [3:3]NLW_muxcy_i0_CARRY4_CO_UNCONNECTED;
  wire [3:3]NLW_muxcy_i0_CARRY4_DI_UNCONNECTED;
  wire [3:0]NLW_muxcy_i0_CARRY4_O_UNCONNECTED;
  wire [3:3]NLW_muxcy_i0_CARRY4_S_UNCONNECTED;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* OPT_MODIFIED = "MLO" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  CARRY4 muxcy_i0_CARRY4
       (.CI(1'b0),
        .CO({NLW_muxcy_i0_CARRY4_CO_UNCONNECTED[3],D,muxcyo_1,muxcyo_0}),
        .CYINIT(1'b1),
        .DI({NLW_muxcy_i0_CARRY4_DI_UNCONNECTED[3],1'b0,1'b0,1'b0}),
        .O(NLW_muxcy_i0_CARRY4_O_UNCONNECTED[3:0]),
        .S({NLW_muxcy_i0_CARRY4_S_UNCONNECTED[3],comp_2_7,comp_1_6,comp_0_5}));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_15_synchronizer" *) 
module ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_synchronizer
   (pcs_rxreset_int,
    in0,
    rxusrclk2);
  output pcs_rxreset_int;
  input in0;
  input rxusrclk2;

  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d1;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d1b;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d2;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d3;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d4;
  wire in0;
  wire pcs_rxreset_int;
  wire rxusrclk2;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(in0),
        .Q(d1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1b_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(d1),
        .Q(d1b),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d2_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(d1b),
        .Q(d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d3_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(d2),
        .Q(d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d4_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(d3),
        .Q(d4),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    q_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(d4),
        .Q(pcs_rxreset_int),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_15_synchronizer" *) 
module ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_synchronizer_24
   (tx_disable,
    in0,
    txusrclk2);
  output tx_disable;
  input in0;
  input txusrclk2;

  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d1;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d1b;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d2;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d3;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d4;
  wire in0;
  wire tx_disable;
  wire txusrclk2;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1_reg
       (.C(txusrclk2),
        .CE(1'b1),
        .D(in0),
        .Q(d1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1b_reg
       (.C(txusrclk2),
        .CE(1'b1),
        .D(d1),
        .Q(d1b),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d2_reg
       (.C(txusrclk2),
        .CE(1'b1),
        .D(d1b),
        .Q(d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d3_reg
       (.C(txusrclk2),
        .CE(1'b1),
        .D(d2),
        .Q(d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d4_reg
       (.C(txusrclk2),
        .CE(1'b1),
        .D(d3),
        .Q(d4),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    q_reg
       (.C(txusrclk2),
        .CE(1'b1),
        .D(d4),
        .Q(tx_disable),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_15_synchronizer" *) 
module ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_synchronizer_25
   (signal_detect_sync,
    q_reg_0,
    signal_detect,
    coreclk,
    reg_1_0_15__0,
    reset);
  output signal_detect_sync;
  output q_reg_0;
  input signal_detect;
  input coreclk;
  input reg_1_0_15__0;
  input reset;

  wire coreclk;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d1;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d1b;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d2;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d3;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d4;
  wire q_reg_0;
  wire reg_1_0_15__0;
  wire reset;
  wire signal_detect;
  wire signal_detect_sync;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(signal_detect),
        .Q(d1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1b_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(d1),
        .Q(d1b),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d2_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(d1b),
        .Q(d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d3_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(d2),
        .Q(d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d4_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(d3),
        .Q(d4),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h02)) 
    \q[0]_i_1__5 
       (.I0(signal_detect_sync),
        .I1(reg_1_0_15__0),
        .I2(reset),
        .O(q_reg_0));
  FDRE #(
    .INIT(1'b0)) 
    q_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(d4),
        .Q(signal_detect_sync),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_15_synchronizer" *) 
module ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_synchronizer_29
   (core_status,
    b_lock,
    coreclk);
  output [0:0]core_status;
  input b_lock;
  input coreclk;

  wire b_lock;
  wire [0:0]core_status;
  wire coreclk;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d1;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d1b;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d2;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d3;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d4;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(b_lock),
        .Q(d1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1b_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(d1),
        .Q(d1b),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d2_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(d1b),
        .Q(d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d3_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(d2),
        .Q(d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d4_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(d3),
        .Q(d4),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    q_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(d4),
        .Q(core_status),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_15_synchronizer" *) 
module ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_synchronizer_30
   (pcs_hi_ber_core_int,
    hiber,
    coreclk);
  output pcs_hi_ber_core_int;
  input hiber;
  input coreclk;

  wire coreclk;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d1;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d1b;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d2;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d3;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d4;
  wire hiber;
  wire pcs_hi_ber_core_int;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(hiber),
        .Q(d1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1b_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(d1),
        .Q(d1b),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d2_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(d1b),
        .Q(d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d3_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(d2),
        .Q(d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d4_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(d3),
        .Q(d4),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    q_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(d4),
        .Q(pcs_hi_ber_core_int),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_15_synchronizer" *) 
module ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_synchronizer_31
   (pcs_rx_link_up_core_sync_int,
    in0,
    coreclk);
  output pcs_rx_link_up_core_sync_int;
  input in0;
  input coreclk;

  wire coreclk;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d1;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d1b;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d2;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d3;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d4;
  wire in0;
  wire pcs_rx_link_up_core_sync_int;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(in0),
        .Q(d1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1b_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(d1),
        .Q(d1b),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d2_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(d1b),
        .Q(d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d3_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(d2),
        .Q(d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d4_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(d3),
        .Q(d4),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    q_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(d4),
        .Q(pcs_rx_link_up_core_sync_int),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_15_synchronizer" *) 
module ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_synchronizer_32
   (mcp1_state0,
    signal_detect,
    rxusrclk2,
    out);
  output mcp1_state0;
  input signal_detect;
  input rxusrclk2;
  input out;

  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d1;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d1b;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d2;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d3;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d4;
  wire mcp1_state0;
  wire out;
  wire rxusrclk2;
  wire signal_detect;
  wire signal_ok_reg;

  LUT2 #(
    .INIT(4'hB)) 
    \FSM_sequential_mcp1_state[1]_i_1__2 
       (.I0(out),
        .I1(signal_ok_reg),
        .O(mcp1_state0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(signal_detect),
        .Q(d1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1b_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(d1),
        .Q(d1b),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d2_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(d1b),
        .Q(d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d3_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(d2),
        .Q(d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d4_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(d3),
        .Q(d4),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    q_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(d4),
        .Q(signal_ok_reg),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_15_synchronizer" *) 
module ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_synchronizer_58
   (toggle_rdclk,
    E,
    in0,
    coreclk,
    toggle_rdclk_reg);
  output toggle_rdclk;
  output [0:0]E;
  input in0;
  input coreclk;
  input toggle_rdclk_reg;

  wire [0:0]E;
  wire coreclk;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d1;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d1b;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d2;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d3;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d4;
  wire in0;
  wire toggle_rdclk;
  wire toggle_rdclk_reg;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(in0),
        .Q(d1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1b_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(d1),
        .Q(d1b),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d2_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(d1b),
        .Q(d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d3_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(d2),
        .Q(d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d4_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(d3),
        .Q(d4),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h6)) 
    \q[15]_i_1__7 
       (.I0(toggle_rdclk_reg),
        .I1(toggle_rdclk),
        .O(E));
  FDRE #(
    .INIT(1'b0)) 
    q_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(d4),
        .Q(toggle_rdclk),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_15_synchronizer" *) 
module ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_synchronizer_59
   (toggle_rdclk,
    E,
    in0,
    dclk,
    toggle_rdclk_reg);
  output toggle_rdclk;
  output [0:0]E;
  input in0;
  input dclk;
  input toggle_rdclk_reg;

  wire [0:0]E;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d1;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d1b;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d2;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d3;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d4;
  wire dclk;
  wire in0;
  wire toggle_rdclk;
  wire toggle_rdclk_reg;

  LUT2 #(
    .INIT(4'h6)) 
    control_out_i_1
       (.I0(toggle_rdclk_reg),
        .I1(toggle_rdclk),
        .O(E));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1_reg
       (.C(dclk),
        .CE(1'b1),
        .D(in0),
        .Q(d1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1b_reg
       (.C(dclk),
        .CE(1'b1),
        .D(d1),
        .Q(d1b),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d2_reg
       (.C(dclk),
        .CE(1'b1),
        .D(d1b),
        .Q(d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d3_reg
       (.C(dclk),
        .CE(1'b1),
        .D(d2),
        .Q(d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d4_reg
       (.C(dclk),
        .CE(1'b1),
        .D(d3),
        .Q(d4),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    q_reg
       (.C(dclk),
        .CE(1'b1),
        .D(d4),
        .Q(toggle_rdclk),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_15_synchronizer" *) 
module ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_synchronizer_60
   (q,
    in0,
    coreclk);
  output q;
  input in0;
  input coreclk;

  wire coreclk;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d1;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d1b;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d2;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d3;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d4;
  wire in0;
  wire q;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(in0),
        .Q(d1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1b_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(d1),
        .Q(d1b),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d2_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(d1b),
        .Q(d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d3_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(d2),
        .Q(d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d4_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(d3),
        .Q(d4),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    q_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(d4),
        .Q(q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_15_synchronizer" *) 
module ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_synchronizer_63
   (tx_prbs31_en,
    in0,
    txusrclk2);
  output tx_prbs31_en;
  input in0;
  input txusrclk2;

  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d1;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d1b;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d2;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d3;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d4;
  wire in0;
  wire tx_prbs31_en;
  wire txusrclk2;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1_reg
       (.C(txusrclk2),
        .CE(1'b1),
        .D(in0),
        .Q(d1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1b_reg
       (.C(txusrclk2),
        .CE(1'b1),
        .D(d1),
        .Q(d1b),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d2_reg
       (.C(txusrclk2),
        .CE(1'b1),
        .D(d1b),
        .Q(d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d3_reg
       (.C(txusrclk2),
        .CE(1'b1),
        .D(d2),
        .Q(d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d4_reg
       (.C(txusrclk2),
        .CE(1'b1),
        .D(d3),
        .Q(d4),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    q_reg
       (.C(txusrclk2),
        .CE(1'b1),
        .D(d4),
        .Q(tx_prbs31_en),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_15_synchronizer" *) 
module ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_synchronizer_64
   (q,
    pcs_loopback_core_int,
    txusrclk2);
  output q;
  input pcs_loopback_core_int;
  input txusrclk2;

  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d1;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d1b;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d2;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d3;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d4;
  wire pcs_loopback_core_int;
  wire q;
  wire txusrclk2;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1_reg
       (.C(txusrclk2),
        .CE(1'b1),
        .D(pcs_loopback_core_int),
        .Q(d1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1b_reg
       (.C(txusrclk2),
        .CE(1'b1),
        .D(d1),
        .Q(d1b),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d2_reg
       (.C(txusrclk2),
        .CE(1'b1),
        .D(d1b),
        .Q(d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d3_reg
       (.C(txusrclk2),
        .CE(1'b1),
        .D(d2),
        .Q(d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d4_reg
       (.C(txusrclk2),
        .CE(1'b1),
        .D(d3),
        .Q(d4),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    q_reg
       (.C(txusrclk2),
        .CE(1'b1),
        .D(d4),
        .Q(q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_15_synchronizer_enable" *) 
module ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_synchronizer_enable
   (clk,
    d,
    en,
    q);
  input clk;
  input d;
  input en;
  output q;

  wire clk;
  wire d;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d1;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d1b;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d2;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d3;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d4;
  wire en;
  wire q;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1_reg
       (.C(clk),
        .CE(en),
        .D(d),
        .Q(d1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1b_reg
       (.C(clk),
        .CE(en),
        .D(d1),
        .Q(d1b),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d2_reg
       (.C(clk),
        .CE(en),
        .D(d1b),
        .Q(d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d3_reg
       (.C(clk),
        .CE(en),
        .D(d2),
        .Q(d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d4_reg
       (.C(clk),
        .CE(en),
        .D(d3),
        .Q(d4),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    q_reg
       (.C(clk),
        .CE(en),
        .D(d4),
        .Q(q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_15_synchronizer_enable" *) 
module ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_synchronizer_enable__1
   (clk,
    d,
    en,
    q);
  input clk;
  input d;
  input en;
  output q;

  wire clk;
  wire d;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d1;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d1b;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d2;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d3;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d4;
  wire en;
  wire q;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1_reg
       (.C(clk),
        .CE(en),
        .D(d),
        .Q(d1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1b_reg
       (.C(clk),
        .CE(en),
        .D(d1),
        .Q(d1b),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d2_reg
       (.C(clk),
        .CE(en),
        .D(d1b),
        .Q(d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d3_reg
       (.C(clk),
        .CE(en),
        .D(d2),
        .Q(d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d4_reg
       (.C(clk),
        .CE(en),
        .D(d3),
        .Q(d4),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    q_reg
       (.C(clk),
        .CE(en),
        .D(d4),
        .Q(q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_15_synchronizer_enable" *) 
module ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_synchronizer_enable__10
   (clk,
    d,
    en,
    q);
  input clk;
  input d;
  input en;
  output q;

  wire clk;
  wire d;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d1;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d1b;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d2;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d3;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d4;
  wire en;
  wire q;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1_reg
       (.C(clk),
        .CE(en),
        .D(d),
        .Q(d1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1b_reg
       (.C(clk),
        .CE(en),
        .D(d1),
        .Q(d1b),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d2_reg
       (.C(clk),
        .CE(en),
        .D(d1b),
        .Q(d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d3_reg
       (.C(clk),
        .CE(en),
        .D(d2),
        .Q(d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d4_reg
       (.C(clk),
        .CE(en),
        .D(d3),
        .Q(d4),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    q_reg
       (.C(clk),
        .CE(en),
        .D(d4),
        .Q(q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_15_synchronizer_enable" *) 
module ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_synchronizer_enable__11
   (clk,
    d,
    en,
    q);
  input clk;
  input d;
  input en;
  output q;

  wire clk;
  wire d;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d1;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d1b;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d2;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d3;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d4;
  wire en;
  wire q;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1_reg
       (.C(clk),
        .CE(en),
        .D(d),
        .Q(d1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1b_reg
       (.C(clk),
        .CE(en),
        .D(d1),
        .Q(d1b),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d2_reg
       (.C(clk),
        .CE(en),
        .D(d1b),
        .Q(d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d3_reg
       (.C(clk),
        .CE(en),
        .D(d2),
        .Q(d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d4_reg
       (.C(clk),
        .CE(en),
        .D(d3),
        .Q(d4),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    q_reg
       (.C(clk),
        .CE(en),
        .D(d4),
        .Q(q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_15_synchronizer_enable" *) 
module ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_synchronizer_enable__12
   (clk,
    d,
    en,
    q);
  input clk;
  input d;
  input en;
  output q;

  wire clk;
  wire d;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d1;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d1b;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d2;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d3;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d4;
  wire en;
  wire q;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1_reg
       (.C(clk),
        .CE(en),
        .D(d),
        .Q(d1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1b_reg
       (.C(clk),
        .CE(en),
        .D(d1),
        .Q(d1b),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d2_reg
       (.C(clk),
        .CE(en),
        .D(d1b),
        .Q(d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d3_reg
       (.C(clk),
        .CE(en),
        .D(d2),
        .Q(d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d4_reg
       (.C(clk),
        .CE(en),
        .D(d3),
        .Q(d4),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    q_reg
       (.C(clk),
        .CE(en),
        .D(d4),
        .Q(q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_15_synchronizer_enable" *) 
module ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_synchronizer_enable__13
   (clk,
    d,
    en,
    q);
  input clk;
  input d;
  input en;
  output q;

  wire clk;
  wire d;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d1;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d1b;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d2;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d3;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d4;
  wire en;
  wire q;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1_reg
       (.C(clk),
        .CE(en),
        .D(d),
        .Q(d1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1b_reg
       (.C(clk),
        .CE(en),
        .D(d1),
        .Q(d1b),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d2_reg
       (.C(clk),
        .CE(en),
        .D(d1b),
        .Q(d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d3_reg
       (.C(clk),
        .CE(en),
        .D(d2),
        .Q(d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d4_reg
       (.C(clk),
        .CE(en),
        .D(d3),
        .Q(d4),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    q_reg
       (.C(clk),
        .CE(en),
        .D(d4),
        .Q(q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_15_synchronizer_enable" *) 
module ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_synchronizer_enable__14
   (clk,
    d,
    en,
    q);
  input clk;
  input d;
  input en;
  output q;

  wire clk;
  wire d;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d1;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d1b;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d2;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d3;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d4;
  wire en;
  wire q;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1_reg
       (.C(clk),
        .CE(en),
        .D(d),
        .Q(d1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1b_reg
       (.C(clk),
        .CE(en),
        .D(d1),
        .Q(d1b),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d2_reg
       (.C(clk),
        .CE(en),
        .D(d1b),
        .Q(d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d3_reg
       (.C(clk),
        .CE(en),
        .D(d2),
        .Q(d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d4_reg
       (.C(clk),
        .CE(en),
        .D(d3),
        .Q(d4),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    q_reg
       (.C(clk),
        .CE(en),
        .D(d4),
        .Q(q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_15_synchronizer_enable" *) 
module ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_synchronizer_enable__15
   (clk,
    d,
    en,
    q);
  input clk;
  input d;
  input en;
  output q;

  wire clk;
  wire d;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d1;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d1b;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d2;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d3;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d4;
  wire en;
  wire q;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1_reg
       (.C(clk),
        .CE(en),
        .D(d),
        .Q(d1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1b_reg
       (.C(clk),
        .CE(en),
        .D(d1),
        .Q(d1b),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d2_reg
       (.C(clk),
        .CE(en),
        .D(d1b),
        .Q(d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d3_reg
       (.C(clk),
        .CE(en),
        .D(d2),
        .Q(d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d4_reg
       (.C(clk),
        .CE(en),
        .D(d3),
        .Q(d4),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    q_reg
       (.C(clk),
        .CE(en),
        .D(d4),
        .Q(q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_15_synchronizer_enable" *) 
module ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_synchronizer_enable__16
   (clk,
    d,
    en,
    q);
  input clk;
  input d;
  input en;
  output q;

  wire clk;
  wire d;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d1;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d1b;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d2;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d3;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d4;
  wire en;
  wire q;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1_reg
       (.C(clk),
        .CE(en),
        .D(d),
        .Q(d1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1b_reg
       (.C(clk),
        .CE(en),
        .D(d1),
        .Q(d1b),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d2_reg
       (.C(clk),
        .CE(en),
        .D(d1b),
        .Q(d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d3_reg
       (.C(clk),
        .CE(en),
        .D(d2),
        .Q(d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d4_reg
       (.C(clk),
        .CE(en),
        .D(d3),
        .Q(d4),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    q_reg
       (.C(clk),
        .CE(en),
        .D(d4),
        .Q(q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_15_synchronizer_enable" *) 
module ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_synchronizer_enable__17
   (clk,
    d,
    en,
    q);
  input clk;
  input d;
  input en;
  output q;

  wire clk;
  wire d;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d1;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d1b;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d2;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d3;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d4;
  wire en;
  wire q;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1_reg
       (.C(clk),
        .CE(en),
        .D(d),
        .Q(d1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1b_reg
       (.C(clk),
        .CE(en),
        .D(d1),
        .Q(d1b),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d2_reg
       (.C(clk),
        .CE(en),
        .D(d1b),
        .Q(d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d3_reg
       (.C(clk),
        .CE(en),
        .D(d2),
        .Q(d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d4_reg
       (.C(clk),
        .CE(en),
        .D(d3),
        .Q(d4),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    q_reg
       (.C(clk),
        .CE(en),
        .D(d4),
        .Q(q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_15_synchronizer_enable" *) 
module ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_synchronizer_enable__18
   (clk,
    d,
    en,
    q);
  input clk;
  input d;
  input en;
  output q;

  wire clk;
  wire d;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d1;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d1b;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d2;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d3;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d4;
  wire en;
  wire q;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1_reg
       (.C(clk),
        .CE(en),
        .D(d),
        .Q(d1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1b_reg
       (.C(clk),
        .CE(en),
        .D(d1),
        .Q(d1b),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d2_reg
       (.C(clk),
        .CE(en),
        .D(d1b),
        .Q(d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d3_reg
       (.C(clk),
        .CE(en),
        .D(d2),
        .Q(d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d4_reg
       (.C(clk),
        .CE(en),
        .D(d3),
        .Q(d4),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    q_reg
       (.C(clk),
        .CE(en),
        .D(d4),
        .Q(q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_15_synchronizer_enable" *) 
module ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_synchronizer_enable__19
   (clk,
    d,
    en,
    q);
  input clk;
  input d;
  input en;
  output q;

  wire clk;
  wire d;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d1;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d1b;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d2;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d3;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d4;
  wire en;
  wire q;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1_reg
       (.C(clk),
        .CE(en),
        .D(d),
        .Q(d1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1b_reg
       (.C(clk),
        .CE(en),
        .D(d1),
        .Q(d1b),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d2_reg
       (.C(clk),
        .CE(en),
        .D(d1b),
        .Q(d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d3_reg
       (.C(clk),
        .CE(en),
        .D(d2),
        .Q(d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d4_reg
       (.C(clk),
        .CE(en),
        .D(d3),
        .Q(d4),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    q_reg
       (.C(clk),
        .CE(en),
        .D(d4),
        .Q(q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_15_synchronizer_enable" *) 
module ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_synchronizer_enable__2
   (clk,
    d,
    en,
    q);
  input clk;
  input d;
  input en;
  output q;

  wire clk;
  wire d;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d1;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d1b;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d2;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d3;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d4;
  wire en;
  wire q;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1_reg
       (.C(clk),
        .CE(en),
        .D(d),
        .Q(d1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1b_reg
       (.C(clk),
        .CE(en),
        .D(d1),
        .Q(d1b),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d2_reg
       (.C(clk),
        .CE(en),
        .D(d1b),
        .Q(d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d3_reg
       (.C(clk),
        .CE(en),
        .D(d2),
        .Q(d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d4_reg
       (.C(clk),
        .CE(en),
        .D(d3),
        .Q(d4),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    q_reg
       (.C(clk),
        .CE(en),
        .D(d4),
        .Q(q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_15_synchronizer_enable" *) 
module ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_synchronizer_enable__20
   (clk,
    d,
    en,
    q);
  input clk;
  input d;
  input en;
  output q;

  wire clk;
  wire d;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d1;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d1b;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d2;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d3;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d4;
  wire en;
  wire q;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1_reg
       (.C(clk),
        .CE(en),
        .D(d),
        .Q(d1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1b_reg
       (.C(clk),
        .CE(en),
        .D(d1),
        .Q(d1b),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d2_reg
       (.C(clk),
        .CE(en),
        .D(d1b),
        .Q(d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d3_reg
       (.C(clk),
        .CE(en),
        .D(d2),
        .Q(d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d4_reg
       (.C(clk),
        .CE(en),
        .D(d3),
        .Q(d4),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    q_reg
       (.C(clk),
        .CE(en),
        .D(d4),
        .Q(q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_15_synchronizer_enable" *) 
module ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_synchronizer_enable__3
   (clk,
    d,
    en,
    q);
  input clk;
  input d;
  input en;
  output q;

  wire clk;
  wire d;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d1;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d1b;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d2;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d3;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d4;
  wire en;
  wire q;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1_reg
       (.C(clk),
        .CE(en),
        .D(d),
        .Q(d1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1b_reg
       (.C(clk),
        .CE(en),
        .D(d1),
        .Q(d1b),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d2_reg
       (.C(clk),
        .CE(en),
        .D(d1b),
        .Q(d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d3_reg
       (.C(clk),
        .CE(en),
        .D(d2),
        .Q(d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d4_reg
       (.C(clk),
        .CE(en),
        .D(d3),
        .Q(d4),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    q_reg
       (.C(clk),
        .CE(en),
        .D(d4),
        .Q(q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_15_synchronizer_enable" *) 
module ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_synchronizer_enable__4
   (clk,
    d,
    en,
    q);
  input clk;
  input d;
  input en;
  output q;

  wire clk;
  wire d;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d1;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d1b;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d2;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d3;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d4;
  wire en;
  wire q;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1_reg
       (.C(clk),
        .CE(en),
        .D(d),
        .Q(d1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1b_reg
       (.C(clk),
        .CE(en),
        .D(d1),
        .Q(d1b),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d2_reg
       (.C(clk),
        .CE(en),
        .D(d1b),
        .Q(d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d3_reg
       (.C(clk),
        .CE(en),
        .D(d2),
        .Q(d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d4_reg
       (.C(clk),
        .CE(en),
        .D(d3),
        .Q(d4),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    q_reg
       (.C(clk),
        .CE(en),
        .D(d4),
        .Q(q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_15_synchronizer_enable" *) 
module ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_synchronizer_enable__5
   (clk,
    d,
    en,
    q);
  input clk;
  input d;
  input en;
  output q;

  wire clk;
  wire d;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d1;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d1b;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d2;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d3;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d4;
  wire en;
  wire q;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1_reg
       (.C(clk),
        .CE(en),
        .D(d),
        .Q(d1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1b_reg
       (.C(clk),
        .CE(en),
        .D(d1),
        .Q(d1b),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d2_reg
       (.C(clk),
        .CE(en),
        .D(d1b),
        .Q(d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d3_reg
       (.C(clk),
        .CE(en),
        .D(d2),
        .Q(d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d4_reg
       (.C(clk),
        .CE(en),
        .D(d3),
        .Q(d4),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    q_reg
       (.C(clk),
        .CE(en),
        .D(d4),
        .Q(q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_15_synchronizer_enable" *) 
module ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_synchronizer_enable__6
   (clk,
    d,
    en,
    q);
  input clk;
  input d;
  input en;
  output q;

  wire clk;
  wire d;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d1;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d1b;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d2;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d3;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d4;
  wire en;
  wire q;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1_reg
       (.C(clk),
        .CE(en),
        .D(d),
        .Q(d1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1b_reg
       (.C(clk),
        .CE(en),
        .D(d1),
        .Q(d1b),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d2_reg
       (.C(clk),
        .CE(en),
        .D(d1b),
        .Q(d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d3_reg
       (.C(clk),
        .CE(en),
        .D(d2),
        .Q(d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d4_reg
       (.C(clk),
        .CE(en),
        .D(d3),
        .Q(d4),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    q_reg
       (.C(clk),
        .CE(en),
        .D(d4),
        .Q(q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_15_synchronizer_enable" *) 
module ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_synchronizer_enable__7
   (clk,
    d,
    en,
    q);
  input clk;
  input d;
  input en;
  output q;

  wire clk;
  wire d;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d1;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d1b;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d2;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d3;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d4;
  wire en;
  wire q;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1_reg
       (.C(clk),
        .CE(en),
        .D(d),
        .Q(d1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1b_reg
       (.C(clk),
        .CE(en),
        .D(d1),
        .Q(d1b),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d2_reg
       (.C(clk),
        .CE(en),
        .D(d1b),
        .Q(d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d3_reg
       (.C(clk),
        .CE(en),
        .D(d2),
        .Q(d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d4_reg
       (.C(clk),
        .CE(en),
        .D(d3),
        .Q(d4),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    q_reg
       (.C(clk),
        .CE(en),
        .D(d4),
        .Q(q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_15_synchronizer_enable" *) 
module ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_synchronizer_enable__8
   (clk,
    d,
    en,
    q);
  input clk;
  input d;
  input en;
  output q;

  wire clk;
  wire d;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d1;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d1b;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d2;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d3;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d4;
  wire en;
  wire q;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1_reg
       (.C(clk),
        .CE(en),
        .D(d),
        .Q(d1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1b_reg
       (.C(clk),
        .CE(en),
        .D(d1),
        .Q(d1b),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d2_reg
       (.C(clk),
        .CE(en),
        .D(d1b),
        .Q(d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d3_reg
       (.C(clk),
        .CE(en),
        .D(d2),
        .Q(d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d4_reg
       (.C(clk),
        .CE(en),
        .D(d3),
        .Q(d4),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    q_reg
       (.C(clk),
        .CE(en),
        .D(d4),
        .Q(q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_15_synchronizer_enable" *) 
module ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_synchronizer_enable__9
   (clk,
    d,
    en,
    q);
  input clk;
  input d;
  input en;
  output q;

  wire clk;
  wire d;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d1;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d1b;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d2;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d3;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d4;
  wire en;
  wire q;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1_reg
       (.C(clk),
        .CE(en),
        .D(d),
        .Q(d1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1b_reg
       (.C(clk),
        .CE(en),
        .D(d1),
        .Q(d1b),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d2_reg
       (.C(clk),
        .CE(en),
        .D(d1b),
        .Q(d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d3_reg
       (.C(clk),
        .CE(en),
        .D(d2),
        .Q(d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d4_reg
       (.C(clk),
        .CE(en),
        .D(d3),
        .Q(d4),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    q_reg
       (.C(clk),
        .CE(en),
        .D(d4),
        .Q(q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_15_toggle_synchronizer" *) 
module ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_toggle_synchronizer
   (in0,
    control_reg,
    control_out_reg_0,
    drp_gnt_0,
    E,
    Q,
    dclk,
    mgmt_drp_cs,
    coreclk,
    toggle_reg_reg_0,
    dclk_reset,
    drp_gnt,
    state,
    drp_drdy,
    ipif_cs_dclk_reg,
    D);
  output in0;
  output control_reg;
  output control_out_reg_0;
  output drp_gnt_0;
  output [0:0]E;
  output [32:0]Q;
  input dclk;
  input mgmt_drp_cs;
  input coreclk;
  input toggle_reg_reg_0;
  input dclk_reset;
  input drp_gnt;
  input [1:0]state;
  input drp_drdy;
  input ipif_cs_dclk_reg;
  input [32:0]D;

  wire [32:0]D;
  wire [0:0]E;
  wire [32:0]Q;
  wire control_out_reg_0;
  wire control_reg;
  wire coreclk;
  wire [32:0]d_reg;
  wire dclk;
  wire dclk_reset;
  wire drp_drdy;
  wire drp_gnt;
  wire drp_gnt_0;
  wire in0;
  wire ipif_cs_dclk;
  wire ipif_cs_dclk_reg;
  wire mgmt_drp_cs;
  wire [1:0]state;
  wire toggle_rdclk;
  wire toggle_rdclk_reg;
  wire toggle_reg_reg_0;
  wire toggle_sync_n_1;

  LUT6 #(
    .INIT(64'h000000003734F7F4)) 
    \FSM_sequential_state[0]_i_1__0 
       (.I0(drp_gnt),
        .I1(state[0]),
        .I2(state[1]),
        .I3(E),
        .I4(drp_drdy),
        .I5(dclk_reset),
        .O(drp_gnt_0));
  FDRE #(
    .INIT(1'b0)) 
    control_out_reg
       (.C(dclk),
        .CE(1'b1),
        .D(toggle_sync_n_1),
        .Q(ipif_cs_dclk),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    control_reg_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(mgmt_drp_cs),
        .Q(control_reg),
        .R(1'b0));
  FDRE \d_reg_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(D[0]),
        .Q(d_reg[0]),
        .R(1'b0));
  FDRE \d_reg_reg[10] 
       (.C(coreclk),
        .CE(1'b1),
        .D(D[10]),
        .Q(d_reg[10]),
        .R(1'b0));
  FDRE \d_reg_reg[11] 
       (.C(coreclk),
        .CE(1'b1),
        .D(D[11]),
        .Q(d_reg[11]),
        .R(1'b0));
  FDRE \d_reg_reg[12] 
       (.C(coreclk),
        .CE(1'b1),
        .D(D[12]),
        .Q(d_reg[12]),
        .R(1'b0));
  FDRE \d_reg_reg[13] 
       (.C(coreclk),
        .CE(1'b1),
        .D(D[13]),
        .Q(d_reg[13]),
        .R(1'b0));
  FDRE \d_reg_reg[14] 
       (.C(coreclk),
        .CE(1'b1),
        .D(D[14]),
        .Q(d_reg[14]),
        .R(1'b0));
  FDRE \d_reg_reg[15] 
       (.C(coreclk),
        .CE(1'b1),
        .D(D[15]),
        .Q(d_reg[15]),
        .R(1'b0));
  FDRE \d_reg_reg[16] 
       (.C(coreclk),
        .CE(1'b1),
        .D(D[16]),
        .Q(d_reg[16]),
        .R(1'b0));
  FDRE \d_reg_reg[17] 
       (.C(coreclk),
        .CE(1'b1),
        .D(D[17]),
        .Q(d_reg[17]),
        .R(1'b0));
  FDRE \d_reg_reg[18] 
       (.C(coreclk),
        .CE(1'b1),
        .D(D[18]),
        .Q(d_reg[18]),
        .R(1'b0));
  FDRE \d_reg_reg[19] 
       (.C(coreclk),
        .CE(1'b1),
        .D(D[19]),
        .Q(d_reg[19]),
        .R(1'b0));
  FDRE \d_reg_reg[1] 
       (.C(coreclk),
        .CE(1'b1),
        .D(D[1]),
        .Q(d_reg[1]),
        .R(1'b0));
  FDRE \d_reg_reg[20] 
       (.C(coreclk),
        .CE(1'b1),
        .D(D[20]),
        .Q(d_reg[20]),
        .R(1'b0));
  FDRE \d_reg_reg[21] 
       (.C(coreclk),
        .CE(1'b1),
        .D(D[21]),
        .Q(d_reg[21]),
        .R(1'b0));
  FDRE \d_reg_reg[22] 
       (.C(coreclk),
        .CE(1'b1),
        .D(D[22]),
        .Q(d_reg[22]),
        .R(1'b0));
  FDRE \d_reg_reg[23] 
       (.C(coreclk),
        .CE(1'b1),
        .D(D[23]),
        .Q(d_reg[23]),
        .R(1'b0));
  FDRE \d_reg_reg[24] 
       (.C(coreclk),
        .CE(1'b1),
        .D(D[24]),
        .Q(d_reg[24]),
        .R(1'b0));
  FDRE \d_reg_reg[25] 
       (.C(coreclk),
        .CE(1'b1),
        .D(D[25]),
        .Q(d_reg[25]),
        .R(1'b0));
  FDRE \d_reg_reg[26] 
       (.C(coreclk),
        .CE(1'b1),
        .D(D[26]),
        .Q(d_reg[26]),
        .R(1'b0));
  FDRE \d_reg_reg[27] 
       (.C(coreclk),
        .CE(1'b1),
        .D(D[27]),
        .Q(d_reg[27]),
        .R(1'b0));
  FDRE \d_reg_reg[28] 
       (.C(coreclk),
        .CE(1'b1),
        .D(D[28]),
        .Q(d_reg[28]),
        .R(1'b0));
  FDRE \d_reg_reg[29] 
       (.C(coreclk),
        .CE(1'b1),
        .D(D[29]),
        .Q(d_reg[29]),
        .R(1'b0));
  FDRE \d_reg_reg[2] 
       (.C(coreclk),
        .CE(1'b1),
        .D(D[2]),
        .Q(d_reg[2]),
        .R(1'b0));
  FDRE \d_reg_reg[30] 
       (.C(coreclk),
        .CE(1'b1),
        .D(D[30]),
        .Q(d_reg[30]),
        .R(1'b0));
  FDRE \d_reg_reg[31] 
       (.C(coreclk),
        .CE(1'b1),
        .D(D[31]),
        .Q(d_reg[31]),
        .R(1'b0));
  FDRE \d_reg_reg[32] 
       (.C(coreclk),
        .CE(1'b1),
        .D(D[32]),
        .Q(d_reg[32]),
        .R(1'b0));
  FDRE \d_reg_reg[3] 
       (.C(coreclk),
        .CE(1'b1),
        .D(D[3]),
        .Q(d_reg[3]),
        .R(1'b0));
  FDRE \d_reg_reg[4] 
       (.C(coreclk),
        .CE(1'b1),
        .D(D[4]),
        .Q(d_reg[4]),
        .R(1'b0));
  FDRE \d_reg_reg[5] 
       (.C(coreclk),
        .CE(1'b1),
        .D(D[5]),
        .Q(d_reg[5]),
        .R(1'b0));
  FDRE \d_reg_reg[6] 
       (.C(coreclk),
        .CE(1'b1),
        .D(D[6]),
        .Q(d_reg[6]),
        .R(1'b0));
  FDRE \d_reg_reg[7] 
       (.C(coreclk),
        .CE(1'b1),
        .D(D[7]),
        .Q(d_reg[7]),
        .R(1'b0));
  FDRE \d_reg_reg[8] 
       (.C(coreclk),
        .CE(1'b1),
        .D(D[8]),
        .Q(d_reg[8]),
        .R(1'b0));
  FDRE \d_reg_reg[9] 
       (.C(coreclk),
        .CE(1'b1),
        .D(D[9]),
        .Q(d_reg[9]),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair54" *) 
  LUT2 #(
    .INIT(4'h2)) 
    ipif_cs_dclk_reg_i_1
       (.I0(ipif_cs_dclk),
        .I1(dclk_reset),
        .O(control_out_reg_0));
  (* SOFT_HLUTNM = "soft_lutpair54" *) 
  LUT2 #(
    .INIT(4'h2)) 
    ipif_rnw_dclk_i_1
       (.I0(ipif_cs_dclk),
        .I1(ipif_cs_dclk_reg),
        .O(E));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[0] 
       (.C(dclk),
        .CE(toggle_sync_n_1),
        .D(d_reg[0]),
        .Q(Q[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[10] 
       (.C(dclk),
        .CE(toggle_sync_n_1),
        .D(d_reg[10]),
        .Q(Q[10]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[11] 
       (.C(dclk),
        .CE(toggle_sync_n_1),
        .D(d_reg[11]),
        .Q(Q[11]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[12] 
       (.C(dclk),
        .CE(toggle_sync_n_1),
        .D(d_reg[12]),
        .Q(Q[12]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[13] 
       (.C(dclk),
        .CE(toggle_sync_n_1),
        .D(d_reg[13]),
        .Q(Q[13]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[14] 
       (.C(dclk),
        .CE(toggle_sync_n_1),
        .D(d_reg[14]),
        .Q(Q[14]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[15] 
       (.C(dclk),
        .CE(toggle_sync_n_1),
        .D(d_reg[15]),
        .Q(Q[15]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[16] 
       (.C(dclk),
        .CE(toggle_sync_n_1),
        .D(d_reg[16]),
        .Q(Q[16]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[17] 
       (.C(dclk),
        .CE(toggle_sync_n_1),
        .D(d_reg[17]),
        .Q(Q[17]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[18] 
       (.C(dclk),
        .CE(toggle_sync_n_1),
        .D(d_reg[18]),
        .Q(Q[18]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[19] 
       (.C(dclk),
        .CE(toggle_sync_n_1),
        .D(d_reg[19]),
        .Q(Q[19]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[1] 
       (.C(dclk),
        .CE(toggle_sync_n_1),
        .D(d_reg[1]),
        .Q(Q[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[20] 
       (.C(dclk),
        .CE(toggle_sync_n_1),
        .D(d_reg[20]),
        .Q(Q[20]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[21] 
       (.C(dclk),
        .CE(toggle_sync_n_1),
        .D(d_reg[21]),
        .Q(Q[21]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[22] 
       (.C(dclk),
        .CE(toggle_sync_n_1),
        .D(d_reg[22]),
        .Q(Q[22]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[23] 
       (.C(dclk),
        .CE(toggle_sync_n_1),
        .D(d_reg[23]),
        .Q(Q[23]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[24] 
       (.C(dclk),
        .CE(toggle_sync_n_1),
        .D(d_reg[24]),
        .Q(Q[24]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[25] 
       (.C(dclk),
        .CE(toggle_sync_n_1),
        .D(d_reg[25]),
        .Q(Q[25]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[26] 
       (.C(dclk),
        .CE(toggle_sync_n_1),
        .D(d_reg[26]),
        .Q(Q[26]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[27] 
       (.C(dclk),
        .CE(toggle_sync_n_1),
        .D(d_reg[27]),
        .Q(Q[27]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[28] 
       (.C(dclk),
        .CE(toggle_sync_n_1),
        .D(d_reg[28]),
        .Q(Q[28]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[29] 
       (.C(dclk),
        .CE(toggle_sync_n_1),
        .D(d_reg[29]),
        .Q(Q[29]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[2] 
       (.C(dclk),
        .CE(toggle_sync_n_1),
        .D(d_reg[2]),
        .Q(Q[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[30] 
       (.C(dclk),
        .CE(toggle_sync_n_1),
        .D(d_reg[30]),
        .Q(Q[30]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[31] 
       (.C(dclk),
        .CE(toggle_sync_n_1),
        .D(d_reg[31]),
        .Q(Q[31]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[32] 
       (.C(dclk),
        .CE(toggle_sync_n_1),
        .D(d_reg[32]),
        .Q(Q[32]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[3] 
       (.C(dclk),
        .CE(toggle_sync_n_1),
        .D(d_reg[3]),
        .Q(Q[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[4] 
       (.C(dclk),
        .CE(toggle_sync_n_1),
        .D(d_reg[4]),
        .Q(Q[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[5] 
       (.C(dclk),
        .CE(toggle_sync_n_1),
        .D(d_reg[5]),
        .Q(Q[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[6] 
       (.C(dclk),
        .CE(toggle_sync_n_1),
        .D(d_reg[6]),
        .Q(Q[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[7] 
       (.C(dclk),
        .CE(toggle_sync_n_1),
        .D(d_reg[7]),
        .Q(Q[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[8] 
       (.C(dclk),
        .CE(toggle_sync_n_1),
        .D(d_reg[8]),
        .Q(Q[8]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[9] 
       (.C(dclk),
        .CE(toggle_sync_n_1),
        .D(d_reg[9]),
        .Q(Q[9]),
        .R(1'b0));
  FDRE toggle_rdclk_reg_reg
       (.C(dclk),
        .CE(1'b1),
        .D(toggle_rdclk),
        .Q(toggle_rdclk_reg),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    toggle_reg_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(toggle_reg_reg_0),
        .Q(in0),
        .R(1'b0));
  ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_synchronizer_59 toggle_sync
       (.E(toggle_sync_n_1),
        .dclk(dclk),
        .in0(in0),
        .toggle_rdclk(toggle_rdclk),
        .toggle_rdclk_reg(toggle_rdclk_reg));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_15_toggle_synchronizer" *) 
module ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_toggle_synchronizer__parameterized0
   (drp_ack,
    \q_reg[15]_0 ,
    coreclk,
    drp_drdy,
    dclk,
    Q);
  output drp_ack;
  output [15:0]\q_reg[15]_0 ;
  input coreclk;
  input drp_drdy;
  input dclk;
  input [15:0]Q;

  wire [15:0]Q;
  wire control_reg;
  wire coreclk;
  wire \d_reg_reg_n_0_[0] ;
  wire \d_reg_reg_n_0_[10] ;
  wire \d_reg_reg_n_0_[11] ;
  wire \d_reg_reg_n_0_[12] ;
  wire \d_reg_reg_n_0_[13] ;
  wire \d_reg_reg_n_0_[14] ;
  wire \d_reg_reg_n_0_[15] ;
  wire \d_reg_reg_n_0_[1] ;
  wire \d_reg_reg_n_0_[2] ;
  wire \d_reg_reg_n_0_[3] ;
  wire \d_reg_reg_n_0_[4] ;
  wire \d_reg_reg_n_0_[5] ;
  wire \d_reg_reg_n_0_[6] ;
  wire \d_reg_reg_n_0_[7] ;
  wire \d_reg_reg_n_0_[8] ;
  wire \d_reg_reg_n_0_[9] ;
  wire dclk;
  wire drp_ack;
  wire drp_drdy;
  wire [15:0]\q_reg[15]_0 ;
  wire toggle_rdclk;
  wire toggle_rdclk_reg;
  wire toggle_reg;
  wire toggle_reg_i_1__0_n_0;
  wire toggle_sync_n_1;

  FDRE #(
    .INIT(1'b0)) 
    control_out_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(toggle_sync_n_1),
        .Q(drp_ack),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    control_reg_reg
       (.C(dclk),
        .CE(1'b1),
        .D(drp_drdy),
        .Q(control_reg),
        .R(1'b0));
  FDRE \d_reg_reg[0] 
       (.C(dclk),
        .CE(1'b1),
        .D(Q[0]),
        .Q(\d_reg_reg_n_0_[0] ),
        .R(1'b0));
  FDRE \d_reg_reg[10] 
       (.C(dclk),
        .CE(1'b1),
        .D(Q[10]),
        .Q(\d_reg_reg_n_0_[10] ),
        .R(1'b0));
  FDRE \d_reg_reg[11] 
       (.C(dclk),
        .CE(1'b1),
        .D(Q[11]),
        .Q(\d_reg_reg_n_0_[11] ),
        .R(1'b0));
  FDRE \d_reg_reg[12] 
       (.C(dclk),
        .CE(1'b1),
        .D(Q[12]),
        .Q(\d_reg_reg_n_0_[12] ),
        .R(1'b0));
  FDRE \d_reg_reg[13] 
       (.C(dclk),
        .CE(1'b1),
        .D(Q[13]),
        .Q(\d_reg_reg_n_0_[13] ),
        .R(1'b0));
  FDRE \d_reg_reg[14] 
       (.C(dclk),
        .CE(1'b1),
        .D(Q[14]),
        .Q(\d_reg_reg_n_0_[14] ),
        .R(1'b0));
  FDRE \d_reg_reg[15] 
       (.C(dclk),
        .CE(1'b1),
        .D(Q[15]),
        .Q(\d_reg_reg_n_0_[15] ),
        .R(1'b0));
  FDRE \d_reg_reg[1] 
       (.C(dclk),
        .CE(1'b1),
        .D(Q[1]),
        .Q(\d_reg_reg_n_0_[1] ),
        .R(1'b0));
  FDRE \d_reg_reg[2] 
       (.C(dclk),
        .CE(1'b1),
        .D(Q[2]),
        .Q(\d_reg_reg_n_0_[2] ),
        .R(1'b0));
  FDRE \d_reg_reg[3] 
       (.C(dclk),
        .CE(1'b1),
        .D(Q[3]),
        .Q(\d_reg_reg_n_0_[3] ),
        .R(1'b0));
  FDRE \d_reg_reg[4] 
       (.C(dclk),
        .CE(1'b1),
        .D(Q[4]),
        .Q(\d_reg_reg_n_0_[4] ),
        .R(1'b0));
  FDRE \d_reg_reg[5] 
       (.C(dclk),
        .CE(1'b1),
        .D(Q[5]),
        .Q(\d_reg_reg_n_0_[5] ),
        .R(1'b0));
  FDRE \d_reg_reg[6] 
       (.C(dclk),
        .CE(1'b1),
        .D(Q[6]),
        .Q(\d_reg_reg_n_0_[6] ),
        .R(1'b0));
  FDRE \d_reg_reg[7] 
       (.C(dclk),
        .CE(1'b1),
        .D(Q[7]),
        .Q(\d_reg_reg_n_0_[7] ),
        .R(1'b0));
  FDRE \d_reg_reg[8] 
       (.C(dclk),
        .CE(1'b1),
        .D(Q[8]),
        .Q(\d_reg_reg_n_0_[8] ),
        .R(1'b0));
  FDRE \d_reg_reg[9] 
       (.C(dclk),
        .CE(1'b1),
        .D(Q[9]),
        .Q(\d_reg_reg_n_0_[9] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[0] 
       (.C(coreclk),
        .CE(toggle_sync_n_1),
        .D(\d_reg_reg_n_0_[0] ),
        .Q(\q_reg[15]_0 [0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[10] 
       (.C(coreclk),
        .CE(toggle_sync_n_1),
        .D(\d_reg_reg_n_0_[10] ),
        .Q(\q_reg[15]_0 [10]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[11] 
       (.C(coreclk),
        .CE(toggle_sync_n_1),
        .D(\d_reg_reg_n_0_[11] ),
        .Q(\q_reg[15]_0 [11]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[12] 
       (.C(coreclk),
        .CE(toggle_sync_n_1),
        .D(\d_reg_reg_n_0_[12] ),
        .Q(\q_reg[15]_0 [12]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[13] 
       (.C(coreclk),
        .CE(toggle_sync_n_1),
        .D(\d_reg_reg_n_0_[13] ),
        .Q(\q_reg[15]_0 [13]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[14] 
       (.C(coreclk),
        .CE(toggle_sync_n_1),
        .D(\d_reg_reg_n_0_[14] ),
        .Q(\q_reg[15]_0 [14]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[15] 
       (.C(coreclk),
        .CE(toggle_sync_n_1),
        .D(\d_reg_reg_n_0_[15] ),
        .Q(\q_reg[15]_0 [15]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[1] 
       (.C(coreclk),
        .CE(toggle_sync_n_1),
        .D(\d_reg_reg_n_0_[1] ),
        .Q(\q_reg[15]_0 [1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[2] 
       (.C(coreclk),
        .CE(toggle_sync_n_1),
        .D(\d_reg_reg_n_0_[2] ),
        .Q(\q_reg[15]_0 [2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[3] 
       (.C(coreclk),
        .CE(toggle_sync_n_1),
        .D(\d_reg_reg_n_0_[3] ),
        .Q(\q_reg[15]_0 [3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[4] 
       (.C(coreclk),
        .CE(toggle_sync_n_1),
        .D(\d_reg_reg_n_0_[4] ),
        .Q(\q_reg[15]_0 [4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[5] 
       (.C(coreclk),
        .CE(toggle_sync_n_1),
        .D(\d_reg_reg_n_0_[5] ),
        .Q(\q_reg[15]_0 [5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[6] 
       (.C(coreclk),
        .CE(toggle_sync_n_1),
        .D(\d_reg_reg_n_0_[6] ),
        .Q(\q_reg[15]_0 [6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[7] 
       (.C(coreclk),
        .CE(toggle_sync_n_1),
        .D(\d_reg_reg_n_0_[7] ),
        .Q(\q_reg[15]_0 [7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[8] 
       (.C(coreclk),
        .CE(toggle_sync_n_1),
        .D(\d_reg_reg_n_0_[8] ),
        .Q(\q_reg[15]_0 [8]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[9] 
       (.C(coreclk),
        .CE(toggle_sync_n_1),
        .D(\d_reg_reg_n_0_[9] ),
        .Q(\q_reg[15]_0 [9]),
        .R(1'b0));
  FDRE toggle_rdclk_reg_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(toggle_rdclk),
        .Q(toggle_rdclk_reg),
        .R(1'b0));
  LUT3 #(
    .INIT(8'hB4)) 
    toggle_reg_i_1__0
       (.I0(control_reg),
        .I1(drp_drdy),
        .I2(toggle_reg),
        .O(toggle_reg_i_1__0_n_0));
  FDRE #(
    .INIT(1'b0)) 
    toggle_reg_reg
       (.C(dclk),
        .CE(1'b1),
        .D(toggle_reg_i_1__0_n_0),
        .Q(toggle_reg),
        .R(1'b0));
  ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_synchronizer_58 toggle_sync
       (.E(toggle_sync_n_1),
        .coreclk(coreclk),
        .in0(toggle_reg),
        .toggle_rdclk(toggle_rdclk),
        .toggle_rdclk_reg(toggle_rdclk_reg));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_15_tx_encoder" *) 
module ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_tx_encoder
   (D,
    \FSM_sequential_state_reg[0] ,
    \t_type_reg[2]_0 ,
    coreclk,
    out,
    \tx_66_enc_out_reg[0] ,
    Q,
    \tx_xgmii_ctrl_reg2_reg[7]_0 ,
    \tx_xgmii_data_reg2_reg[63]_0 );
  output [65:0]D;
  output [0:0]\FSM_sequential_state_reg[0] ;
  output [2:0]\t_type_reg[2]_0 ;
  input coreclk;
  input out;
  input \tx_66_enc_out_reg[0] ;
  input [1:0]Q;
  input [7:0]\tx_xgmii_ctrl_reg2_reg[7]_0 ;
  input [63:0]\tx_xgmii_data_reg2_reg[63]_0 ;

  wire [65:0]D;
  wire [0:0]\FSM_sequential_state_reg[0] ;
  wire [1:0]Q;
  wire \block_field[0]_i_10_n_0 ;
  wire \block_field[0]_i_11_n_0 ;
  wire \block_field[0]_i_1_n_0 ;
  wire \block_field[0]_i_2_n_0 ;
  wire \block_field[0]_i_3_n_0 ;
  wire \block_field[0]_i_4_n_0 ;
  wire \block_field[0]_i_5_n_0 ;
  wire \block_field[0]_i_6_n_0 ;
  wire \block_field[0]_i_7_n_0 ;
  wire \block_field[0]_i_8_n_0 ;
  wire \block_field[0]_i_9_n_0 ;
  wire \block_field[1]_i_1_n_0 ;
  wire \block_field[1]_i_2_n_0 ;
  wire \block_field[1]_i_3_n_0 ;
  wire \block_field[1]_i_4_n_0 ;
  wire \block_field[2]_i_10_n_0 ;
  wire \block_field[2]_i_1_n_0 ;
  wire \block_field[2]_i_2_n_0 ;
  wire \block_field[2]_i_3_n_0 ;
  wire \block_field[2]_i_4_n_0 ;
  wire \block_field[2]_i_5_n_0 ;
  wire \block_field[2]_i_6_n_0 ;
  wire \block_field[2]_i_7_n_0 ;
  wire \block_field[2]_i_8_n_0 ;
  wire \block_field[2]_i_9_n_0 ;
  wire \block_field[3]_i_1_n_0 ;
  wire \block_field[3]_i_2_n_0 ;
  wire \block_field[3]_i_3_n_0 ;
  wire \block_field[3]_i_4_n_0 ;
  wire \block_field[3]_i_5_n_0 ;
  wire \block_field[4]_i_10_n_0 ;
  wire \block_field[4]_i_11_n_0 ;
  wire \block_field[4]_i_12_n_0 ;
  wire \block_field[4]_i_13_n_0 ;
  wire \block_field[4]_i_1_n_0 ;
  wire \block_field[4]_i_2_n_0 ;
  wire \block_field[4]_i_3_n_0 ;
  wire \block_field[4]_i_4_n_0 ;
  wire \block_field[4]_i_5_n_0 ;
  wire \block_field[4]_i_6_n_0 ;
  wire \block_field[4]_i_7_n_0 ;
  wire \block_field[4]_i_8_n_0 ;
  wire \block_field[4]_i_9_n_0 ;
  wire \block_field[5]_i_1_n_0 ;
  wire \block_field[5]_i_2_n_0 ;
  wire \block_field[5]_i_3_n_0 ;
  wire \block_field[5]_i_4_n_0 ;
  wire \block_field[5]_i_5_n_0 ;
  wire \block_field[5]_i_6_n_0 ;
  wire \block_field[6]_i_1_n_0 ;
  wire \block_field[6]_i_2_n_0 ;
  wire \block_field[6]_i_3_n_0 ;
  wire \block_field[6]_i_4_n_0 ;
  wire \block_field[6]_i_5_n_0 ;
  wire \block_field[6]_i_6_n_0 ;
  wire \block_field[6]_i_7_n_0 ;
  wire \block_field[7]_i_1_n_0 ;
  wire \block_field[7]_i_2_n_0 ;
  wire [6:0]c0;
  wire \c0[0]_i_1_n_0 ;
  wire \c0[0]_i_2_n_0 ;
  wire \c0[1]_i_1_n_0 ;
  wire \c0[1]_i_2_n_0 ;
  wire \c0[2]_i_1_n_0 ;
  wire \c0[2]_i_2_n_0 ;
  wire \c0[3]_i_1_n_0 ;
  wire \c0[3]_i_2_n_0 ;
  wire \c0[4]_i_1_n_0 ;
  wire \c0[4]_i_2_n_0 ;
  wire \c0[4]_i_3_n_0 ;
  wire \c0[4]_i_4_n_0 ;
  wire \c0[4]_i_5_n_0 ;
  wire \c0[4]_i_6_n_0 ;
  wire \c0[5]_i_1_n_0 ;
  wire \c0[5]_i_2_n_0 ;
  wire \c0[5]_i_3_n_0 ;
  wire \c0[5]_i_4_n_0 ;
  wire \c0[5]_i_5_n_0 ;
  wire \c0[5]_i_6_n_0 ;
  wire \c0[6]_i_1_n_0 ;
  wire \c0[6]_i_2_n_0 ;
  wire \c0[6]_i_3_n_0 ;
  wire \c0[6]_i_4_n_0 ;
  wire \c0[6]_i_5_n_0 ;
  wire \c0[6]_i_6_n_0 ;
  wire [6:0]c1;
  wire \c1[0]_i_1_n_0 ;
  wire \c1[0]_i_2_n_0 ;
  wire \c1[1]_i_1_n_0 ;
  wire \c1[1]_i_2_n_0 ;
  wire \c1[2]_i_1_n_0 ;
  wire \c1[2]_i_2_n_0 ;
  wire \c1[2]_i_3_n_0 ;
  wire \c1[3]_i_1_n_0 ;
  wire \c1[4]_i_1_n_0 ;
  wire \c1[4]_i_2_n_0 ;
  wire \c1[4]_i_3_n_0 ;
  wire \c1[5]_i_1_n_0 ;
  wire \c1[5]_i_2_n_0 ;
  wire \c1[5]_i_3_n_0 ;
  wire \c1[5]_i_4_n_0 ;
  wire \c1[6]_i_1_n_0 ;
  wire \c1[6]_i_2_n_0 ;
  wire \c1[6]_i_3_n_0 ;
  wire \c1[6]_i_4_n_0 ;
  wire [6:0]c2;
  wire \c2[0]_i_1_n_0 ;
  wire \c2[0]_i_2_n_0 ;
  wire \c2[1]_i_1_n_0 ;
  wire \c2[1]_i_2_n_0 ;
  wire \c2[2]_i_1_n_0 ;
  wire \c2[2]_i_2_n_0 ;
  wire \c2[2]_i_3_n_0 ;
  wire \c2[3]_i_1_n_0 ;
  wire \c2[4]_i_1_n_0 ;
  wire \c2[4]_i_2_n_0 ;
  wire \c2[4]_i_3_n_0 ;
  wire \c2[5]_i_1_n_0 ;
  wire \c2[5]_i_2_n_0 ;
  wire \c2[5]_i_3_n_0 ;
  wire \c2[5]_i_4_n_0 ;
  wire \c2[6]_i_1_n_0 ;
  wire \c2[6]_i_2_n_0 ;
  wire \c2[6]_i_3_n_0 ;
  wire \c2[6]_i_4_n_0 ;
  wire [6:0]c3;
  wire \c3[0]_i_1_n_0 ;
  wire \c3[0]_i_2_n_0 ;
  wire \c3[1]_i_1_n_0 ;
  wire \c3[1]_i_2_n_0 ;
  wire \c3[2]_i_1_n_0 ;
  wire \c3[2]_i_2_n_0 ;
  wire \c3[2]_i_3_n_0 ;
  wire \c3[3]_i_1_n_0 ;
  wire \c3[4]_i_1_n_0 ;
  wire \c3[4]_i_2_n_0 ;
  wire \c3[4]_i_3_n_0 ;
  wire \c3[5]_i_1_n_0 ;
  wire \c3[5]_i_2_n_0 ;
  wire \c3[5]_i_3_n_0 ;
  wire \c3[5]_i_4_n_0 ;
  wire \c3[6]_i_1_n_0 ;
  wire \c3[6]_i_2_n_0 ;
  wire \c3[6]_i_3_n_0 ;
  wire \c3[6]_i_4_n_0 ;
  wire [6:0]c4;
  wire \c4[0]_i_1_n_0 ;
  wire \c4[0]_i_2_n_0 ;
  wire \c4[1]_i_1_n_0 ;
  wire \c4[1]_i_2_n_0 ;
  wire \c4[2]_i_1_n_0 ;
  wire \c4[2]_i_2_n_0 ;
  wire \c4[3]_i_1_n_0 ;
  wire \c4[3]_i_2_n_0 ;
  wire \c4[4]_i_1_n_0 ;
  wire \c4[4]_i_2_n_0 ;
  wire \c4[4]_i_3_n_0 ;
  wire \c4[4]_i_4_n_0 ;
  wire \c4[4]_i_5_n_0 ;
  wire \c4[4]_i_6_n_0 ;
  wire \c4[5]_i_1_n_0 ;
  wire \c4[5]_i_2_n_0 ;
  wire \c4[5]_i_3_n_0 ;
  wire \c4[5]_i_4_n_0 ;
  wire \c4[5]_i_5_n_0 ;
  wire \c4[5]_i_6_n_0 ;
  wire \c4[6]_i_1_n_0 ;
  wire \c4[6]_i_2_n_0 ;
  wire \c4[6]_i_3_n_0 ;
  wire \c4[6]_i_4_n_0 ;
  wire \c4[6]_i_5_n_0 ;
  wire \c4[6]_i_6_n_0 ;
  wire [6:0]c5;
  wire \c5[0]_i_1_n_0 ;
  wire \c5[0]_i_2_n_0 ;
  wire \c5[1]_i_1_n_0 ;
  wire \c5[1]_i_2_n_0 ;
  wire \c5[2]_i_1_n_0 ;
  wire \c5[2]_i_2_n_0 ;
  wire \c5[2]_i_3_n_0 ;
  wire \c5[3]_i_1_n_0 ;
  wire \c5[4]_i_1_n_0 ;
  wire \c5[4]_i_2_n_0 ;
  wire \c5[4]_i_3_n_0 ;
  wire \c5[5]_i_1_n_0 ;
  wire \c5[5]_i_2_n_0 ;
  wire \c5[5]_i_3_n_0 ;
  wire \c5[5]_i_4_n_0 ;
  wire \c5[6]_i_1_n_0 ;
  wire \c5[6]_i_2_n_0 ;
  wire \c5[6]_i_3_n_0 ;
  wire \c5[6]_i_4_n_0 ;
  wire [6:0]c6;
  wire \c6[0]_i_1_n_0 ;
  wire \c6[0]_i_2_n_0 ;
  wire \c6[1]_i_1_n_0 ;
  wire \c6[1]_i_2_n_0 ;
  wire \c6[2]_i_1_n_0 ;
  wire \c6[2]_i_2_n_0 ;
  wire \c6[2]_i_3_n_0 ;
  wire \c6[3]_i_1_n_0 ;
  wire \c6[4]_i_1_n_0 ;
  wire \c6[4]_i_2_n_0 ;
  wire \c6[4]_i_3_n_0 ;
  wire \c6[5]_i_1_n_0 ;
  wire \c6[5]_i_2_n_0 ;
  wire \c6[5]_i_3_n_0 ;
  wire \c6[5]_i_4_n_0 ;
  wire \c6[6]_i_1_n_0 ;
  wire \c6[6]_i_2_n_0 ;
  wire \c6[6]_i_3_n_0 ;
  wire \c6[6]_i_4_n_0 ;
  wire \c7[0]_i_1_n_0 ;
  wire \c7[0]_i_2_n_0 ;
  wire \c7[1]_i_1_n_0 ;
  wire \c7[1]_i_2_n_0 ;
  wire \c7[2]_i_1_n_0 ;
  wire \c7[2]_i_2_n_0 ;
  wire \c7[2]_i_3_n_0 ;
  wire \c7[3]_i_1_n_0 ;
  wire \c7[4]_i_1_n_0 ;
  wire \c7[4]_i_2_n_0 ;
  wire \c7[4]_i_3_n_0 ;
  wire \c7[5]_i_1_n_0 ;
  wire \c7[5]_i_2_n_0 ;
  wire \c7[5]_i_3_n_0 ;
  wire \c7[5]_i_4_n_0 ;
  wire \c7[6]_i_1_n_0 ;
  wire \c7[6]_i_2_n_0 ;
  wire \c7[6]_i_3_n_0 ;
  wire \c7[6]_i_4_n_0 ;
  wire coreclk;
  wire \d0[7]_i_1_n_0 ;
  wire \d1[7]_i_1_n_0 ;
  wire \d2[7]_i_1_n_0 ;
  wire \d3[7]_i_1_n_0 ;
  wire \d4[7]_i_1_n_0 ;
  wire \d5[7]_i_1_n_0 ;
  wire [7:0]d6;
  wire \d6[7]_i_1_n_0 ;
  wire [7:0]d7;
  wire \d7[7]_i_1_n_0 ;
  wire [65:2]data7;
  wire \o0[3]_i_1_n_0 ;
  wire \o0_reg_n_0_[3] ;
  wire \o4[3]_i_1_n_0 ;
  wire \o4_reg_n_0_[3] ;
  wire o_code_c0;
  wire o_code_c00;
  wire o_code_c0_i_2_n_0;
  wire o_code_c4;
  wire o_code_c40;
  wire o_code_c4_i_2_n_0;
  wire out;
  wire p_12_in;
  wire p_14_in;
  wire p_17_in;
  wire p_20_in;
  wire p_3_in;
  wire p_5_in;
  wire p_9_in;
  wire s_code_c0_i_1_n_0;
  wire s_code_c0_reg_n_0;
  wire s_code_c4_i_1_n_0;
  wire s_code_c4_i_2_n_0;
  wire s_code_c4_i_3_n_0;
  wire s_code_c4_reg_n_0;
  wire \t_code[0]_i_1_n_0 ;
  wire \t_code[0]_i_2_n_0 ;
  wire \t_code[1]_i_1_n_0 ;
  wire \t_code[1]_i_2_n_0 ;
  wire \t_code[2]_i_1_n_0 ;
  wire \t_code[2]_i_2_n_0 ;
  wire \t_code[3]_i_1_n_0 ;
  wire \t_code[3]_i_2_n_0 ;
  wire \t_code[4]_i_1_n_0 ;
  wire \t_code[4]_i_2_n_0 ;
  wire \t_code[5]_i_1_n_0 ;
  wire \t_code[5]_i_2_n_0 ;
  wire \t_code[6]_i_1_n_0 ;
  wire \t_code[6]_i_2_n_0 ;
  wire \t_code[7]_i_1_n_0 ;
  wire \t_code[7]_i_2_n_0 ;
  wire \t_code_reg_n_0_[0] ;
  wire \t_code_reg_n_0_[6] ;
  wire \t_type_reg[0]_i_1_n_0 ;
  wire \t_type_reg[0]_i_2_n_0 ;
  wire \t_type_reg[0]_i_3_n_0 ;
  wire \t_type_reg[0]_i_4_n_0 ;
  wire \t_type_reg[1]_i_10_n_0 ;
  wire \t_type_reg[1]_i_11_n_0 ;
  wire \t_type_reg[1]_i_12_n_0 ;
  wire \t_type_reg[1]_i_13_n_0 ;
  wire \t_type_reg[1]_i_14_n_0 ;
  wire \t_type_reg[1]_i_15_n_0 ;
  wire \t_type_reg[1]_i_16_n_0 ;
  wire \t_type_reg[1]_i_17_n_0 ;
  wire \t_type_reg[1]_i_1_n_0 ;
  wire \t_type_reg[1]_i_2_n_0 ;
  wire \t_type_reg[1]_i_3_n_0 ;
  wire \t_type_reg[1]_i_4_n_0 ;
  wire \t_type_reg[1]_i_5_n_0 ;
  wire \t_type_reg[1]_i_6_n_0 ;
  wire \t_type_reg[1]_i_7_n_0 ;
  wire \t_type_reg[1]_i_8_n_0 ;
  wire \t_type_reg[1]_i_9_n_0 ;
  wire [2:0]\t_type_reg[2]_0 ;
  wire \t_type_reg[2]_i_10_n_0 ;
  wire \t_type_reg[2]_i_11_n_0 ;
  wire \t_type_reg[2]_i_1_n_0 ;
  wire \t_type_reg[2]_i_2_n_0 ;
  wire \t_type_reg[2]_i_3_n_0 ;
  wire \t_type_reg[2]_i_4_n_0 ;
  wire \t_type_reg[2]_i_5_n_0 ;
  wire \t_type_reg[2]_i_6_n_0 ;
  wire \t_type_reg[2]_i_7_n_0 ;
  wire \t_type_reg[2]_i_8_n_0 ;
  wire \t_type_reg[2]_i_9_n_0 ;
  wire \t_type_reg_reg_n_0_[0] ;
  wire \t_type_reg_reg_n_0_[1] ;
  wire \t_type_reg_reg_n_0_[2] ;
  wire [65:0]tx_66_enc;
  wire \tx_66_enc_out_reg[0] ;
  wire \tx_encoded_data[0]_i_1_n_0 ;
  wire \tx_encoded_data[10]_i_1_n_0 ;
  wire \tx_encoded_data[10]_i_2_n_0 ;
  wire \tx_encoded_data[11]_i_1_n_0 ;
  wire \tx_encoded_data[11]_i_2_n_0 ;
  wire \tx_encoded_data[12]_i_1_n_0 ;
  wire \tx_encoded_data[12]_i_2_n_0 ;
  wire \tx_encoded_data[13]_i_1_n_0 ;
  wire \tx_encoded_data[13]_i_2_n_0 ;
  wire \tx_encoded_data[14]_i_1_n_0 ;
  wire \tx_encoded_data[14]_i_2_n_0 ;
  wire \tx_encoded_data[14]_i_3_n_0 ;
  wire \tx_encoded_data[15]_i_1_n_0 ;
  wire \tx_encoded_data[15]_i_2_n_0 ;
  wire \tx_encoded_data[16]_i_1_n_0 ;
  wire \tx_encoded_data[16]_i_2_n_0 ;
  wire \tx_encoded_data[16]_i_3_n_0 ;
  wire \tx_encoded_data[17]_i_1_n_0 ;
  wire \tx_encoded_data[17]_i_2_n_0 ;
  wire \tx_encoded_data[17]_i_3_n_0 ;
  wire \tx_encoded_data[18]_i_1_n_0 ;
  wire \tx_encoded_data[18]_i_2_n_0 ;
  wire \tx_encoded_data[19]_i_1_n_0 ;
  wire \tx_encoded_data[19]_i_2_n_0 ;
  wire \tx_encoded_data[1]_i_1_n_0 ;
  wire \tx_encoded_data[1]_i_2_n_0 ;
  wire \tx_encoded_data[20]_i_1_n_0 ;
  wire \tx_encoded_data[20]_i_2_n_0 ;
  wire \tx_encoded_data[21]_i_1_n_0 ;
  wire \tx_encoded_data[21]_i_2_n_0 ;
  wire \tx_encoded_data[21]_i_3_n_0 ;
  wire \tx_encoded_data[22]_i_1_n_0 ;
  wire \tx_encoded_data[22]_i_2_n_0 ;
  wire \tx_encoded_data[23]_i_1_n_0 ;
  wire \tx_encoded_data[23]_i_2_n_0 ;
  wire \tx_encoded_data[23]_i_3_n_0 ;
  wire \tx_encoded_data[24]_i_1_n_0 ;
  wire \tx_encoded_data[24]_i_2_n_0 ;
  wire \tx_encoded_data[24]_i_3_n_0 ;
  wire \tx_encoded_data[25]_i_1_n_0 ;
  wire \tx_encoded_data[25]_i_2_n_0 ;
  wire \tx_encoded_data[26]_i_1_n_0 ;
  wire \tx_encoded_data[26]_i_2_n_0 ;
  wire \tx_encoded_data[27]_i_1_n_0 ;
  wire \tx_encoded_data[27]_i_2_n_0 ;
  wire \tx_encoded_data[28]_i_1_n_0 ;
  wire \tx_encoded_data[28]_i_2_n_0 ;
  wire \tx_encoded_data[29]_i_1_n_0 ;
  wire \tx_encoded_data[29]_i_2_n_0 ;
  wire \tx_encoded_data[2]_i_1_n_0 ;
  wire \tx_encoded_data[30]_i_1_n_0 ;
  wire \tx_encoded_data[30]_i_2_n_0 ;
  wire \tx_encoded_data[30]_i_3_n_0 ;
  wire \tx_encoded_data[31]_i_1_n_0 ;
  wire \tx_encoded_data[31]_i_2_n_0 ;
  wire \tx_encoded_data[31]_i_3_n_0 ;
  wire \tx_encoded_data[32]_i_1_n_0 ;
  wire \tx_encoded_data[32]_i_2_n_0 ;
  wire \tx_encoded_data[33]_i_1_n_0 ;
  wire \tx_encoded_data[33]_i_2_n_0 ;
  wire \tx_encoded_data[33]_i_3_n_0 ;
  wire \tx_encoded_data[34]_i_1_n_0 ;
  wire \tx_encoded_data[34]_i_2_n_0 ;
  wire \tx_encoded_data[35]_i_1_n_0 ;
  wire \tx_encoded_data[35]_i_2_n_0 ;
  wire \tx_encoded_data[35]_i_3_n_0 ;
  wire \tx_encoded_data[36]_i_1_n_0 ;
  wire \tx_encoded_data[36]_i_2_n_0 ;
  wire \tx_encoded_data[37]_i_1_n_0 ;
  wire \tx_encoded_data[37]_i_2_n_0 ;
  wire \tx_encoded_data[37]_i_3_n_0 ;
  wire \tx_encoded_data[37]_i_4_n_0 ;
  wire \tx_encoded_data[37]_i_5_n_0 ;
  wire \tx_encoded_data[37]_i_6_n_0 ;
  wire \tx_encoded_data[37]_i_7_n_0 ;
  wire \tx_encoded_data[38]_i_1_n_0 ;
  wire \tx_encoded_data[38]_i_2_n_0 ;
  wire \tx_encoded_data[38]_i_3_n_0 ;
  wire \tx_encoded_data[38]_i_4_n_0 ;
  wire \tx_encoded_data[38]_i_5_n_0 ;
  wire \tx_encoded_data[39]_i_1_n_0 ;
  wire \tx_encoded_data[39]_i_2_n_0 ;
  wire \tx_encoded_data[3]_i_1_n_0 ;
  wire \tx_encoded_data[40]_i_1_n_0 ;
  wire \tx_encoded_data[40]_i_2_n_0 ;
  wire \tx_encoded_data[41]_i_1_n_0 ;
  wire \tx_encoded_data[41]_i_2_n_0 ;
  wire \tx_encoded_data[41]_i_3_n_0 ;
  wire \tx_encoded_data[41]_i_4_n_0 ;
  wire \tx_encoded_data[41]_i_5_n_0 ;
  wire \tx_encoded_data[41]_i_6_n_0 ;
  wire \tx_encoded_data[42]_i_1_n_0 ;
  wire \tx_encoded_data[42]_i_2_n_0 ;
  wire \tx_encoded_data[43]_i_1_n_0 ;
  wire \tx_encoded_data[43]_i_2_n_0 ;
  wire \tx_encoded_data[44]_i_1_n_0 ;
  wire \tx_encoded_data[44]_i_2_n_0 ;
  wire \tx_encoded_data[44]_i_3_n_0 ;
  wire \tx_encoded_data[44]_i_4_n_0 ;
  wire \tx_encoded_data[44]_i_5_n_0 ;
  wire \tx_encoded_data[44]_i_6_n_0 ;
  wire \tx_encoded_data[45]_i_1_n_0 ;
  wire \tx_encoded_data[45]_i_2_n_0 ;
  wire \tx_encoded_data[45]_i_3_n_0 ;
  wire \tx_encoded_data[45]_i_4_n_0 ;
  wire \tx_encoded_data[45]_i_5_n_0 ;
  wire \tx_encoded_data[46]_i_1_n_0 ;
  wire \tx_encoded_data[46]_i_2_n_0 ;
  wire \tx_encoded_data[47]_i_1_n_0 ;
  wire \tx_encoded_data[47]_i_2_n_0 ;
  wire \tx_encoded_data[48]_i_1_n_0 ;
  wire \tx_encoded_data[48]_i_2_n_0 ;
  wire \tx_encoded_data[49]_i_1_n_0 ;
  wire \tx_encoded_data[49]_i_2_n_0 ;
  wire \tx_encoded_data[4]_i_1_n_0 ;
  wire \tx_encoded_data[50]_i_1_n_0 ;
  wire \tx_encoded_data[50]_i_2_n_0 ;
  wire \tx_encoded_data[51]_i_1_n_0 ;
  wire \tx_encoded_data[51]_i_2_n_0 ;
  wire \tx_encoded_data[51]_i_3_n_0 ;
  wire \tx_encoded_data[52]_i_1_n_0 ;
  wire \tx_encoded_data[53]_i_1_n_0 ;
  wire \tx_encoded_data[54]_i_1_n_0 ;
  wire \tx_encoded_data[55]_i_1_n_0 ;
  wire \tx_encoded_data[56]_i_1_n_0 ;
  wire \tx_encoded_data[57]_i_1_n_0 ;
  wire \tx_encoded_data[57]_i_2_n_0 ;
  wire \tx_encoded_data[58]_i_1_n_0 ;
  wire \tx_encoded_data[58]_i_2_n_0 ;
  wire \tx_encoded_data[59]_i_1_n_0 ;
  wire \tx_encoded_data[5]_i_1_n_0 ;
  wire \tx_encoded_data[60]_i_1_n_0 ;
  wire \tx_encoded_data[61]_i_1_n_0 ;
  wire \tx_encoded_data[62]_i_1_n_0 ;
  wire \tx_encoded_data[63]_i_1_n_0 ;
  wire \tx_encoded_data[63]_i_2_n_0 ;
  wire \tx_encoded_data[63]_i_3_n_0 ;
  wire \tx_encoded_data[63]_i_4_n_0 ;
  wire \tx_encoded_data[63]_i_5_n_0 ;
  wire \tx_encoded_data[64]_i_1_n_0 ;
  wire \tx_encoded_data[65]_i_1_n_0 ;
  wire \tx_encoded_data[65]_i_2_n_0 ;
  wire \tx_encoded_data[65]_i_3_n_0 ;
  wire \tx_encoded_data[65]_i_4_n_0 ;
  wire \tx_encoded_data[65]_i_5_n_0 ;
  wire \tx_encoded_data[6]_i_1_n_0 ;
  wire \tx_encoded_data[7]_i_1_n_0 ;
  wire \tx_encoded_data[8]_i_1_n_0 ;
  wire \tx_encoded_data[9]_i_1_n_0 ;
  wire \tx_encoded_data[9]_i_2_n_0 ;
  wire \tx_encoded_data[9]_i_3_n_0 ;
  wire \tx_encoded_data[9]_i_4_n_0 ;
  (* DONT_TOUCH *) (* equivalent_register_removal = "no" *) wire [7:0]tx_xgmii_ctrl_reg1;
  (* DONT_TOUCH *) (* equivalent_register_removal = "no" *) wire [7:0]tx_xgmii_ctrl_reg2;
  wire [7:0]tx_xgmii_ctrl_reg2_reg;
  wire [7:0]\tx_xgmii_ctrl_reg2_reg[7]_0 ;
  (* DONT_TOUCH *) (* equivalent_register_removal = "no" *) wire [63:0]tx_xgmii_data_reg2;
  wire [63:0]\tx_xgmii_data_reg2_reg[63]_0 ;
  wire tx_xgmii_valid_code1__11;
  wire tx_xgmii_valid_code70_in;
  wire tx_xgmii_valid_code71_in;
  wire tx_xgmii_valid_code72_in;
  wire tx_xgmii_valid_code73_in;
  wire tx_xgmii_valid_code74_in;
  wire tx_xgmii_valid_code76_in;
  wire tx_xgmii_valid_code7__5;
  wire \tx_xgmii_valid_code[0]_i_1_n_0 ;
  wire \tx_xgmii_valid_code[0]_i_2_n_0 ;
  wire \tx_xgmii_valid_code[0]_i_3_n_0 ;
  wire \tx_xgmii_valid_code[1]_i_1_n_0 ;
  wire \tx_xgmii_valid_code[1]_i_2_n_0 ;
  wire \tx_xgmii_valid_code[1]_i_3_n_0 ;
  wire \tx_xgmii_valid_code[1]_i_4_n_0 ;
  wire \tx_xgmii_valid_code[2]_i_1_n_0 ;
  wire \tx_xgmii_valid_code[2]_i_2_n_0 ;
  wire \tx_xgmii_valid_code[2]_i_3_n_0 ;
  wire \tx_xgmii_valid_code[2]_i_4_n_0 ;
  wire \tx_xgmii_valid_code[3]_i_1_n_0 ;
  wire \tx_xgmii_valid_code[3]_i_2_n_0 ;
  wire \tx_xgmii_valid_code[3]_i_3_n_0 ;
  wire \tx_xgmii_valid_code[3]_i_4_n_0 ;
  wire \tx_xgmii_valid_code[4]_i_1_n_0 ;
  wire \tx_xgmii_valid_code[4]_i_2_n_0 ;
  wire \tx_xgmii_valid_code[4]_i_3_n_0 ;
  wire \tx_xgmii_valid_code[5]_i_1_n_0 ;
  wire \tx_xgmii_valid_code[5]_i_2_n_0 ;
  wire \tx_xgmii_valid_code[5]_i_3_n_0 ;
  wire \tx_xgmii_valid_code[5]_i_4_n_0 ;
  wire \tx_xgmii_valid_code[6]_i_1_n_0 ;
  wire \tx_xgmii_valid_code[6]_i_2_n_0 ;
  wire \tx_xgmii_valid_code[6]_i_3_n_0 ;
  wire \tx_xgmii_valid_code[6]_i_4_n_0 ;
  wire \tx_xgmii_valid_code[7]_i_10_n_0 ;
  wire \tx_xgmii_valid_code[7]_i_15_n_0 ;
  wire \tx_xgmii_valid_code[7]_i_17_n_0 ;
  wire \tx_xgmii_valid_code[7]_i_2_n_0 ;
  wire \tx_xgmii_valid_code[7]_i_3_n_0 ;
  wire \tx_xgmii_valid_code[7]_i_4_n_0 ;
  wire \tx_xgmii_valid_code[7]_i_5_n_0 ;
  wire \tx_xgmii_valid_code[7]_i_8_n_0 ;
  wire \tx_xgmii_valid_code[7]_i_9_n_0 ;
  wire \tx_xgmii_valid_code_reg_n_0_[0] ;
  wire \tx_xgmii_valid_code_reg_n_0_[1] ;
  wire \tx_xgmii_valid_code_reg_n_0_[2] ;
  wire \tx_xgmii_valid_code_reg_n_0_[3] ;
  wire \tx_xgmii_valid_code_reg_n_0_[4] ;
  wire \tx_xgmii_valid_code_reg_n_0_[5] ;
  wire \tx_xgmii_valid_code_reg_n_0_[6] ;

  LUT5 #(
    .INIT(32'h00000800)) 
    \FSM_sequential_state[2]_i_1 
       (.I0(Q[0]),
        .I1(\t_type_reg[2]_0 [0]),
        .I2(\t_type_reg[2]_0 [2]),
        .I3(\t_type_reg[2]_0 [1]),
        .I4(Q[1]),
        .O(\FSM_sequential_state_reg[0] ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFF8A)) 
    \block_field[0]_i_1 
       (.I0(\block_field[0]_i_2_n_0 ),
        .I1(\block_field[0]_i_3_n_0 ),
        .I2(\block_field[0]_i_4_n_0 ),
        .I3(\block_field[0]_i_5_n_0 ),
        .I4(\block_field[0]_i_6_n_0 ),
        .I5(\block_field[0]_i_7_n_0 ),
        .O(\block_field[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFEFFFF)) 
    \block_field[0]_i_10 
       (.I0(tx_xgmii_ctrl_reg1[3]),
        .I1(tx_xgmii_ctrl_reg1[2]),
        .I2(tx_xgmii_ctrl_reg1[1]),
        .I3(tx_xgmii_ctrl_reg1[0]),
        .I4(tx_xgmii_ctrl_reg1[7]),
        .O(\block_field[0]_i_10_n_0 ));
  LUT3 #(
    .INIT(8'hFE)) 
    \block_field[0]_i_11 
       (.I0(tx_xgmii_ctrl_reg1[1]),
        .I1(tx_xgmii_ctrl_reg1[2]),
        .I2(tx_xgmii_ctrl_reg1[3]),
        .O(\block_field[0]_i_11_n_0 ));
  LUT5 #(
    .INIT(32'h040404FF)) 
    \block_field[0]_i_2 
       (.I0(\block_field[6]_i_7_n_0 ),
        .I1(o_code_c0),
        .I2(\t_type_reg[1]_i_12_n_0 ),
        .I3(\block_field[2]_i_8_n_0 ),
        .I4(\block_field[6]_i_3_n_0 ),
        .O(\block_field[0]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair257" *) 
  LUT4 #(
    .INIT(16'h0400)) 
    \block_field[0]_i_3 
       (.I0(\block_field[6]_i_7_n_0 ),
        .I1(o_code_c0),
        .I2(s_code_c4_reg_n_0),
        .I3(o_code_c4),
        .O(\block_field[0]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair231" *) 
  LUT5 #(
    .INIT(32'h000057FF)) 
    \block_field[0]_i_4 
       (.I0(\block_field[0]_i_8_n_0 ),
        .I1(o_code_c4),
        .I2(s_code_c4_reg_n_0),
        .I3(\block_field[0]_i_9_n_0 ),
        .I4(\block_field[6]_i_3_n_0 ),
        .O(\block_field[0]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF00010000)) 
    \block_field[0]_i_5 
       (.I0(tx_xgmii_ctrl_reg1[5]),
        .I1(tx_xgmii_ctrl_reg1[6]),
        .I2(tx_xgmii_ctrl_reg1[4]),
        .I3(\block_field[0]_i_10_n_0 ),
        .I4(p_3_in),
        .I5(\block_field[4]_i_8_n_0 ),
        .O(\block_field[0]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h0000000020000000)) 
    \block_field[0]_i_6 
       (.I0(\t_type_reg[1]_i_4_n_0 ),
        .I1(\t_type_reg[1]_i_12_n_0 ),
        .I2(p_20_in),
        .I3(\tx_xgmii_valid_code_reg_n_0_[3] ),
        .I4(\tx_xgmii_valid_code_reg_n_0_[2] ),
        .I5(\block_field[5]_i_3_n_0 ),
        .O(\block_field[0]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h2000000000000000)) 
    \block_field[0]_i_7 
       (.I0(\t_type_reg[0]_i_2_n_0 ),
        .I1(\t_type_reg[1]_i_12_n_0 ),
        .I2(\tx_xgmii_valid_code_reg_n_0_[1] ),
        .I3(\tx_xgmii_valid_code_reg_n_0_[3] ),
        .I4(\tx_xgmii_valid_code_reg_n_0_[2] ),
        .I5(\t_code_reg_n_0_[0] ),
        .O(\block_field[0]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF7EFFFFFF)) 
    \block_field[0]_i_8 
       (.I0(tx_xgmii_ctrl_reg1[7]),
        .I1(tx_xgmii_ctrl_reg1[6]),
        .I2(tx_xgmii_ctrl_reg1[5]),
        .I3(tx_xgmii_ctrl_reg1[4]),
        .I4(tx_xgmii_ctrl_reg1[0]),
        .I5(\block_field[0]_i_11_n_0 ),
        .O(\block_field[0]_i_8_n_0 ));
  LUT4 #(
    .INIT(16'h8000)) 
    \block_field[0]_i_9 
       (.I0(\tx_xgmii_valid_code_reg_n_0_[2] ),
        .I1(\tx_xgmii_valid_code_reg_n_0_[3] ),
        .I2(\tx_xgmii_valid_code_reg_n_0_[0] ),
        .I3(\tx_xgmii_valid_code_reg_n_0_[1] ),
        .O(\block_field[0]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'h000000000000FFA2)) 
    \block_field[1]_i_1 
       (.I0(\block_field[1]_i_2_n_0 ),
        .I1(\block_field[1]_i_3_n_0 ),
        .I2(\block_field[1]_i_4_n_0 ),
        .I3(\t_type_reg[0]_i_2_n_0 ),
        .I4(\t_type_reg[0]_i_3_n_0 ),
        .I5(out),
        .O(\block_field[1]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hBFBBAAAA)) 
    \block_field[1]_i_2 
       (.I0(\block_field[4]_i_3_n_0 ),
        .I1(\block_field[5]_i_6_n_0 ),
        .I2(\block_field[0]_i_3_n_0 ),
        .I3(\block_field[4]_i_10_n_0 ),
        .I4(\block_field[2]_i_9_n_0 ),
        .O(\block_field[1]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h8A88888888888888)) 
    \block_field[1]_i_3 
       (.I0(\t_type_reg[1]_i_3_n_0 ),
        .I1(\block_field[5]_i_3_n_0 ),
        .I2(\t_type_reg[1]_i_12_n_0 ),
        .I3(p_20_in),
        .I4(\tx_xgmii_valid_code_reg_n_0_[3] ),
        .I5(\tx_xgmii_valid_code_reg_n_0_[2] ),
        .O(\block_field[1]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hD0D0D0FFD0D0D0D0)) 
    \block_field[1]_i_4 
       (.I0(p_14_in),
        .I1(\t_type_reg[1]_i_12_n_0 ),
        .I2(\block_field[2]_i_3_n_0 ),
        .I3(tx_xgmii_ctrl_reg1[1]),
        .I4(tx_xgmii_ctrl_reg1[0]),
        .I5(\block_field[4]_i_12_n_0 ),
        .O(\block_field[1]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair236" *) 
  LUT5 #(
    .INIT(32'hFF0EFF00)) 
    \block_field[2]_i_1 
       (.I0(\block_field[2]_i_2_n_0 ),
        .I1(\block_field[2]_i_3_n_0 ),
        .I2(\t_type_reg[0]_i_3_n_0 ),
        .I3(\t_type_reg[0]_i_2_n_0 ),
        .I4(\block_field[2]_i_4_n_0 ),
        .O(\block_field[2]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h7EFF)) 
    \block_field[2]_i_10 
       (.I0(tx_xgmii_ctrl_reg1[1]),
        .I1(tx_xgmii_ctrl_reg1[2]),
        .I2(tx_xgmii_ctrl_reg1[3]),
        .I3(tx_xgmii_ctrl_reg1[0]),
        .O(\block_field[2]_i_10_n_0 ));
  LUT5 #(
    .INIT(32'h5515FFFF)) 
    \block_field[2]_i_2 
       (.I0(\block_field[2]_i_5_n_0 ),
        .I1(\tx_xgmii_valid_code_reg_n_0_[3] ),
        .I2(p_17_in),
        .I3(\t_type_reg[1]_i_12_n_0 ),
        .I4(\block_field[1]_i_3_n_0 ),
        .O(\block_field[2]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h00000010)) 
    \block_field[2]_i_3 
       (.I0(\t_type_reg[1]_i_11_n_0 ),
        .I1(tx_xgmii_ctrl_reg1[2]),
        .I2(tx_xgmii_ctrl_reg1[3]),
        .I3(tx_xgmii_ctrl_reg1[1]),
        .I4(tx_xgmii_ctrl_reg1[0]),
        .O(\block_field[2]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFABAAAAAAAA)) 
    \block_field[2]_i_4 
       (.I0(\block_field[3]_i_4_n_0 ),
        .I1(\block_field[2]_i_6_n_0 ),
        .I2(\block_field[6]_i_3_n_0 ),
        .I3(\block_field[2]_i_7_n_0 ),
        .I4(\block_field[2]_i_8_n_0 ),
        .I5(\block_field[2]_i_9_n_0 ),
        .O(\block_field[2]_i_4_n_0 ));
  LUT3 #(
    .INIT(8'hFB)) 
    \block_field[2]_i_5 
       (.I0(tx_xgmii_ctrl_reg1[1]),
        .I1(\block_field[4]_i_12_n_0 ),
        .I2(tx_xgmii_ctrl_reg1[0]),
        .O(\block_field[2]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \block_field[2]_i_6 
       (.I0(\block_field[0]_i_8_n_0 ),
        .I1(\tx_xgmii_valid_code_reg_n_0_[2] ),
        .I2(\tx_xgmii_valid_code_reg_n_0_[3] ),
        .I3(\tx_xgmii_valid_code_reg_n_0_[0] ),
        .I4(\tx_xgmii_valid_code_reg_n_0_[1] ),
        .I5(s_code_c4_reg_n_0),
        .O(\block_field[2]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h7070707070007070)) 
    \block_field[2]_i_7 
       (.I0(s_code_c0_reg_n_0),
        .I1(\block_field[6]_i_2_n_0 ),
        .I2(\block_field[6]_i_3_n_0 ),
        .I3(\block_field[6]_i_7_n_0 ),
        .I4(o_code_c0),
        .I5(\t_type_reg[1]_i_12_n_0 ),
        .O(\block_field[2]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hFFFEBFFEFFFFFFFE)) 
    \block_field[2]_i_8 
       (.I0(\block_field[2]_i_10_n_0 ),
        .I1(tx_xgmii_ctrl_reg1[6]),
        .I2(tx_xgmii_ctrl_reg1[7]),
        .I3(tx_xgmii_ctrl_reg1[5]),
        .I4(tx_xgmii_ctrl_reg1[3]),
        .I5(tx_xgmii_ctrl_reg1[4]),
        .O(\block_field[2]_i_8_n_0 ));
  LUT4 #(
    .INIT(16'h00BF)) 
    \block_field[2]_i_9 
       (.I0(\block_field[0]_i_10_n_0 ),
        .I1(tx_xgmii_ctrl_reg1[5]),
        .I2(tx_xgmii_ctrl_reg1[6]),
        .I3(\block_field[4]_i_8_n_0 ),
        .O(\block_field[2]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'h0001000100000001)) 
    \block_field[3]_i_1 
       (.I0(out),
        .I1(\block_field[0]_i_7_n_0 ),
        .I2(\t_type_reg[0]_i_3_n_0 ),
        .I3(\block_field[3]_i_2_n_0 ),
        .I4(\block_field[3]_i_3_n_0 ),
        .I5(\block_field[3]_i_4_n_0 ),
        .O(\block_field[3]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000FD0000000000)) 
    \block_field[3]_i_2 
       (.I0(\block_field[4]_i_12_n_0 ),
        .I1(tx_xgmii_ctrl_reg1[0]),
        .I2(tx_xgmii_ctrl_reg1[1]),
        .I3(\block_field[2]_i_3_n_0 ),
        .I4(\t_type_reg[1]_i_12_n_0 ),
        .I5(p_14_in),
        .O(\block_field[3]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFF1110)) 
    \block_field[3]_i_3 
       (.I0(\block_field[6]_i_3_n_0 ),
        .I1(\block_field[2]_i_8_n_0 ),
        .I2(\block_field[2]_i_6_n_0 ),
        .I3(\block_field[6]_i_5_n_0 ),
        .I4(\block_field[4]_i_8_n_0 ),
        .I5(\block_field[3]_i_5_n_0 ),
        .O(\block_field[3]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hEEFEFEFEFEFEFEFE)) 
    \block_field[3]_i_4 
       (.I0(\t_type_reg[1]_i_3_n_0 ),
        .I1(\block_field[4]_i_7_n_0 ),
        .I2(\block_field[3]_i_5_n_0 ),
        .I3(p_5_in),
        .I4(\tx_xgmii_valid_code_reg_n_0_[6] ),
        .I5(p_9_in),
        .O(\block_field[3]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'h00000080)) 
    \block_field[3]_i_5 
       (.I0(tx_xgmii_ctrl_reg1[7]),
        .I1(tx_xgmii_ctrl_reg1[6]),
        .I2(tx_xgmii_ctrl_reg1[5]),
        .I3(\t_type_reg[0]_i_4_n_0 ),
        .I4(tx_xgmii_ctrl_reg1[4]),
        .O(\block_field[3]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h00D0FFFF00D000D0)) 
    \block_field[4]_i_1 
       (.I0(\block_field[4]_i_2_n_0 ),
        .I1(\block_field[4]_i_3_n_0 ),
        .I2(\t_type_reg[1]_i_4_n_0 ),
        .I3(\block_field[4]_i_4_n_0 ),
        .I4(\block_field[4]_i_5_n_0 ),
        .I5(\block_field[4]_i_6_n_0 ),
        .O(\block_field[4]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair231" *) 
  LUT5 #(
    .INIT(32'h51555555)) 
    \block_field[4]_i_10 
       (.I0(\block_field[6]_i_3_n_0 ),
        .I1(o_code_c4),
        .I2(s_code_c4_reg_n_0),
        .I3(\block_field[0]_i_9_n_0 ),
        .I4(\block_field[0]_i_8_n_0 ),
        .O(\block_field[4]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'hAEEEEEEEEEEEEEEE)) 
    \block_field[4]_i_11 
       (.I0(\t_type_reg[1]_i_3_n_0 ),
        .I1(\block_field[4]_i_7_n_0 ),
        .I2(p_12_in),
        .I3(p_5_in),
        .I4(\tx_xgmii_valid_code_reg_n_0_[6] ),
        .I5(\tx_xgmii_valid_code_reg_n_0_[5] ),
        .O(\block_field[4]_i_11_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \block_field[4]_i_12 
       (.I0(tx_xgmii_ctrl_reg1[6]),
        .I1(tx_xgmii_ctrl_reg1[7]),
        .I2(tx_xgmii_ctrl_reg1[4]),
        .I3(tx_xgmii_ctrl_reg1[5]),
        .I4(tx_xgmii_ctrl_reg1[2]),
        .I5(tx_xgmii_ctrl_reg1[3]),
        .O(\block_field[4]_i_12_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \block_field[4]_i_13 
       (.I0(tx_xgmii_ctrl_reg1[3]),
        .I1(tx_xgmii_ctrl_reg1[2]),
        .I2(tx_xgmii_ctrl_reg1[1]),
        .I3(tx_xgmii_ctrl_reg1[0]),
        .I4(tx_xgmii_ctrl_reg1[4]),
        .I5(tx_xgmii_ctrl_reg1[5]),
        .O(\block_field[4]_i_13_n_0 ));
  LUT5 #(
    .INIT(32'hEEFEFEFE)) 
    \block_field[4]_i_2 
       (.I0(\block_field[4]_i_7_n_0 ),
        .I1(\block_field[4]_i_8_n_0 ),
        .I2(\block_field[0]_i_2_n_0 ),
        .I3(\block_field[4]_i_9_n_0 ),
        .I4(\block_field[4]_i_10_n_0 ),
        .O(\block_field[4]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF10000000)) 
    \block_field[4]_i_3 
       (.I0(tx_xgmii_ctrl_reg1[4]),
        .I1(\t_type_reg[0]_i_4_n_0 ),
        .I2(tx_xgmii_ctrl_reg1[5]),
        .I3(tx_xgmii_ctrl_reg1[6]),
        .I4(tx_xgmii_ctrl_reg1[7]),
        .I5(\block_field[4]_i_11_n_0 ),
        .O(\block_field[4]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000400000)) 
    \block_field[4]_i_4 
       (.I0(\t_type_reg[1]_i_12_n_0 ),
        .I1(p_17_in),
        .I2(\tx_xgmii_valid_code_reg_n_0_[3] ),
        .I3(tx_xgmii_ctrl_reg1[0]),
        .I4(\block_field[4]_i_12_n_0 ),
        .I5(tx_xgmii_ctrl_reg1[1]),
        .O(\block_field[4]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'h00008000)) 
    \block_field[4]_i_5 
       (.I0(\t_code_reg_n_0_[0] ),
        .I1(\tx_xgmii_valid_code_reg_n_0_[2] ),
        .I2(\tx_xgmii_valid_code_reg_n_0_[3] ),
        .I3(\tx_xgmii_valid_code_reg_n_0_[1] ),
        .I4(\t_type_reg[1]_i_12_n_0 ),
        .O(\block_field[4]_i_5_n_0 ));
  LUT5 #(
    .INIT(32'h40000000)) 
    \block_field[4]_i_6 
       (.I0(\t_type_reg[1]_i_11_n_0 ),
        .I1(tx_xgmii_ctrl_reg1[1]),
        .I2(tx_xgmii_ctrl_reg1[0]),
        .I3(tx_xgmii_ctrl_reg1[3]),
        .I4(tx_xgmii_ctrl_reg1[2]),
        .O(\block_field[4]_i_6_n_0 ));
  LUT4 #(
    .INIT(16'h0080)) 
    \block_field[4]_i_7 
       (.I0(tx_xgmii_ctrl_reg1[4]),
        .I1(tx_xgmii_ctrl_reg1[5]),
        .I2(tx_xgmii_ctrl_reg1[6]),
        .I3(\block_field[0]_i_10_n_0 ),
        .O(\block_field[4]_i_7_n_0 ));
  LUT5 #(
    .INIT(32'h40000000)) 
    \block_field[4]_i_8 
       (.I0(\block_field[4]_i_13_n_0 ),
        .I1(tx_xgmii_ctrl_reg1[7]),
        .I2(tx_xgmii_ctrl_reg1[6]),
        .I3(\t_code_reg_n_0_[6] ),
        .I4(p_5_in),
        .O(\block_field[4]_i_8_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair235" *) 
  LUT3 #(
    .INIT(8'hBF)) 
    \block_field[4]_i_9 
       (.I0(\block_field[6]_i_7_n_0 ),
        .I1(o_code_c0),
        .I2(s_code_c4_reg_n_0),
        .O(\block_field[4]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'h1010101030300030)) 
    \block_field[5]_i_1 
       (.I0(\block_field[5]_i_2_n_0 ),
        .I1(\block_field[7]_i_2_n_0 ),
        .I2(\block_field[5]_i_3_n_0 ),
        .I3(\block_field[5]_i_4_n_0 ),
        .I4(\block_field[0]_i_5_n_0 ),
        .I5(\t_type_reg[1]_i_3_n_0 ),
        .O(\block_field[5]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF00BFFFFFBFBF)) 
    \block_field[5]_i_2 
       (.I0(\block_field[2]_i_5_n_0 ),
        .I1(\tx_xgmii_valid_code_reg_n_0_[3] ),
        .I2(p_17_in),
        .I3(p_14_in),
        .I4(\t_type_reg[1]_i_12_n_0 ),
        .I5(\block_field[2]_i_3_n_0 ),
        .O(\block_field[5]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hF7FFFFFFFFFFFFFF)) 
    \block_field[5]_i_3 
       (.I0(tx_xgmii_ctrl_reg1[5]),
        .I1(tx_xgmii_ctrl_reg1[4]),
        .I2(\block_field[5]_i_5_n_0 ),
        .I3(tx_xgmii_ctrl_reg1[1]),
        .I4(tx_xgmii_ctrl_reg1[3]),
        .I5(tx_xgmii_ctrl_reg1[2]),
        .O(\block_field[5]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair235" *) 
  LUT5 #(
    .INIT(32'hBF00FFFF)) 
    \block_field[5]_i_4 
       (.I0(\block_field[6]_i_7_n_0 ),
        .I1(o_code_c0),
        .I2(s_code_c4_reg_n_0),
        .I3(\block_field[0]_i_4_n_0 ),
        .I4(\block_field[5]_i_6_n_0 ),
        .O(\block_field[5]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h7)) 
    \block_field[5]_i_5 
       (.I0(tx_xgmii_ctrl_reg1[7]),
        .I1(tx_xgmii_ctrl_reg1[6]),
        .O(\block_field[5]_i_5_n_0 ));
  LUT4 #(
    .INIT(16'h4055)) 
    \block_field[5]_i_6 
       (.I0(\block_field[2]_i_8_n_0 ),
        .I1(s_code_c0_reg_n_0),
        .I2(\block_field[6]_i_2_n_0 ),
        .I3(\block_field[6]_i_3_n_0 ),
        .O(\block_field[5]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFEAFFFFAAEAAA)) 
    \block_field[6]_i_1 
       (.I0(\t_type_reg[1]_i_2_n_0 ),
        .I1(s_code_c0_reg_n_0),
        .I2(\block_field[6]_i_2_n_0 ),
        .I3(\block_field[6]_i_3_n_0 ),
        .I4(\block_field[6]_i_4_n_0 ),
        .I5(\block_field[6]_i_5_n_0 ),
        .O(\block_field[6]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h7EFF)) 
    \block_field[6]_i_2 
       (.I0(tx_xgmii_ctrl_reg1[7]),
        .I1(tx_xgmii_ctrl_reg1[6]),
        .I2(tx_xgmii_ctrl_reg1[5]),
        .I3(tx_xgmii_ctrl_reg1[4]),
        .O(\block_field[6]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h40000001)) 
    \block_field[6]_i_3 
       (.I0(\block_field[6]_i_6_n_0 ),
        .I1(tx_xgmii_ctrl_reg1[4]),
        .I2(tx_xgmii_ctrl_reg1[5]),
        .I3(tx_xgmii_ctrl_reg1[6]),
        .I4(tx_xgmii_ctrl_reg1[7]),
        .O(\block_field[6]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h0000000080000000)) 
    \block_field[6]_i_4 
       (.I0(\tx_xgmii_valid_code_reg_n_0_[6] ),
        .I1(p_5_in),
        .I2(\tx_xgmii_valid_code_reg_n_0_[4] ),
        .I3(\tx_xgmii_valid_code_reg_n_0_[5] ),
        .I4(o_code_c0),
        .I5(\block_field[6]_i_7_n_0 ),
        .O(\block_field[6]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair257" *) 
  LUT4 #(
    .INIT(16'h00E0)) 
    \block_field[6]_i_5 
       (.I0(s_code_c4_reg_n_0),
        .I1(o_code_c4),
        .I2(o_code_c0),
        .I3(\block_field[6]_i_7_n_0 ),
        .O(\block_field[6]_i_5_n_0 ));
  LUT4 #(
    .INIT(16'hFEFF)) 
    \block_field[6]_i_6 
       (.I0(tx_xgmii_ctrl_reg1[2]),
        .I1(tx_xgmii_ctrl_reg1[3]),
        .I2(tx_xgmii_ctrl_reg1[1]),
        .I3(tx_xgmii_ctrl_reg1[0]),
        .O(\block_field[6]_i_6_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFB)) 
    \block_field[6]_i_7 
       (.I0(\block_field[6]_i_2_n_0 ),
        .I1(tx_xgmii_ctrl_reg1[0]),
        .I2(tx_xgmii_ctrl_reg1[1]),
        .I3(tx_xgmii_ctrl_reg1[3]),
        .I4(tx_xgmii_ctrl_reg1[2]),
        .O(\block_field[6]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h00000000FFFFEAAA)) 
    \block_field[7]_i_1 
       (.I0(\t_type_reg[1]_i_2_n_0 ),
        .I1(\t_type_reg[1]_i_3_n_0 ),
        .I2(\t_type_reg[1]_i_4_n_0 ),
        .I3(\t_type_reg[1]_i_5_n_0 ),
        .I4(\t_type_reg[1]_i_6_n_0 ),
        .I5(\block_field[7]_i_2_n_0 ),
        .O(\block_field[7]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair265" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \block_field[7]_i_2 
       (.I0(out),
        .I1(\t_type_reg[0]_i_3_n_0 ),
        .O(\block_field[7]_i_2_n_0 ));
  FDSE \block_field_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\block_field[0]_i_1_n_0 ),
        .Q(data7[2]),
        .S(out));
  FDRE \block_field_reg[1] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\block_field[1]_i_1_n_0 ),
        .Q(data7[3]),
        .R(1'b0));
  FDSE \block_field_reg[2] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\block_field[2]_i_1_n_0 ),
        .Q(data7[4]),
        .S(out));
  FDRE \block_field_reg[3] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\block_field[3]_i_1_n_0 ),
        .Q(data7[5]),
        .R(1'b0));
  FDSE \block_field_reg[4] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\block_field[4]_i_1_n_0 ),
        .Q(data7[6]),
        .S(out));
  FDRE \block_field_reg[5] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\block_field[5]_i_1_n_0 ),
        .Q(data7[7]),
        .R(1'b0));
  FDSE \block_field_reg[6] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\block_field[6]_i_1_n_0 ),
        .Q(data7[8]),
        .S(out));
  FDRE \block_field_reg[7] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\block_field[7]_i_1_n_0 ),
        .Q(data7[9]),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair262" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \c0[0]_i_1 
       (.I0(\c0[0]_i_2_n_0 ),
        .I1(\c0[5]_i_3_n_0 ),
        .O(\c0[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h55F5F5F5008080A0)) 
    \c0[0]_i_2 
       (.I0(tx_xgmii_ctrl_reg2[0]),
        .I1(tx_xgmii_data_reg2[5]),
        .I2(\c0[4]_i_6_n_0 ),
        .I3(tx_xgmii_data_reg2[6]),
        .I4(tx_xgmii_data_reg2[7]),
        .I5(c0[0]),
        .O(\c0[0]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hAFFB)) 
    \c0[1]_i_1 
       (.I0(\c0[1]_i_2_n_0 ),
        .I1(tx_xgmii_data_reg2[3]),
        .I2(tx_xgmii_data_reg2[5]),
        .I3(tx_xgmii_data_reg2[7]),
        .O(\c0[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hDFFBFFFFFFFFFFFF)) 
    \c0[1]_i_2 
       (.I0(tx_xgmii_data_reg2[6]),
        .I1(tx_xgmii_data_reg2[3]),
        .I2(tx_xgmii_data_reg2[1]),
        .I3(tx_xgmii_data_reg2[0]),
        .I4(tx_xgmii_data_reg2[2]),
        .I5(tx_xgmii_data_reg2[4]),
        .O(\c0[1]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hEBFBFFFF)) 
    \c0[2]_i_1 
       (.I0(\c0[2]_i_2_n_0 ),
        .I1(tx_xgmii_data_reg2[3]),
        .I2(tx_xgmii_data_reg2[7]),
        .I3(tx_xgmii_data_reg2[6]),
        .I4(tx_xgmii_data_reg2[5]),
        .O(\c0[2]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hF7FFFF7F)) 
    \c0[2]_i_2 
       (.I0(tx_xgmii_data_reg2[4]),
        .I1(tx_xgmii_data_reg2[2]),
        .I2(tx_xgmii_data_reg2[3]),
        .I3(tx_xgmii_data_reg2[1]),
        .I4(tx_xgmii_data_reg2[0]),
        .O(\c0[2]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFEFEEFF)) 
    \c0[3]_i_1 
       (.I0(tx_xgmii_data_reg2[1]),
        .I1(tx_xgmii_data_reg2[0]),
        .I2(tx_xgmii_data_reg2[7]),
        .I3(tx_xgmii_data_reg2[5]),
        .I4(tx_xgmii_data_reg2[6]),
        .I5(\c0[3]_i_2_n_0 ),
        .O(\c0[3]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h7F)) 
    \c0[3]_i_2 
       (.I0(tx_xgmii_data_reg2[4]),
        .I1(tx_xgmii_data_reg2[2]),
        .I2(tx_xgmii_data_reg2[3]),
        .O(\c0[3]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0020000000000000)) 
    \c0[4]_i_1 
       (.I0(\c0[4]_i_4_n_0 ),
        .I1(\c0[4]_i_5_n_0 ),
        .I2(tx_xgmii_data_reg2[2]),
        .I3(tx_xgmii_data_reg2[7]),
        .I4(tx_xgmii_ctrl_reg2[0]),
        .I5(tx_xgmii_data_reg2[1]),
        .O(\c0[4]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hAA8A8AAA)) 
    \c0[4]_i_2 
       (.I0(tx_xgmii_ctrl_reg2[0]),
        .I1(tx_xgmii_data_reg2[5]),
        .I2(\c0[4]_i_6_n_0 ),
        .I3(tx_xgmii_data_reg2[6]),
        .I4(tx_xgmii_data_reg2[7]),
        .O(\c0[4]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hD7FD)) 
    \c0[4]_i_3 
       (.I0(\c0[4]_i_6_n_0 ),
        .I1(tx_xgmii_data_reg2[5]),
        .I2(tx_xgmii_data_reg2[7]),
        .I3(tx_xgmii_data_reg2[6]),
        .O(\c0[4]_i_3_n_0 ));
  LUT3 #(
    .INIT(8'h01)) 
    \c0[4]_i_4 
       (.I0(tx_xgmii_data_reg2[4]),
        .I1(tx_xgmii_data_reg2[5]),
        .I2(tx_xgmii_data_reg2[6]),
        .O(\c0[4]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'hB)) 
    \c0[4]_i_5 
       (.I0(tx_xgmii_data_reg2[3]),
        .I1(tx_xgmii_data_reg2[0]),
        .O(\c0[4]_i_5_n_0 ));
  LUT5 #(
    .INIT(32'h00000080)) 
    \c0[4]_i_6 
       (.I0(tx_xgmii_data_reg2[3]),
        .I1(tx_xgmii_data_reg2[2]),
        .I2(tx_xgmii_data_reg2[4]),
        .I3(tx_xgmii_data_reg2[0]),
        .I4(tx_xgmii_data_reg2[1]),
        .O(\c0[4]_i_6_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair262" *) 
  LUT4 #(
    .INIT(16'h00E2)) 
    \c0[5]_i_1 
       (.I0(c0[5]),
        .I1(\c0[4]_i_2_n_0 ),
        .I2(\c0[5]_i_2_n_0 ),
        .I3(\c0[5]_i_3_n_0 ),
        .O(\c0[5]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000001020000000)) 
    \c0[5]_i_2 
       (.I0(\c0[5]_i_4_n_0 ),
        .I1(\c0[5]_i_5_n_0 ),
        .I2(tx_xgmii_data_reg2[4]),
        .I3(tx_xgmii_data_reg2[0]),
        .I4(tx_xgmii_data_reg2[1]),
        .I5(tx_xgmii_data_reg2[3]),
        .O(\c0[5]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000080000008)) 
    \c0[5]_i_3 
       (.I0(tx_xgmii_ctrl_reg2[0]),
        .I1(tx_xgmii_data_reg2[1]),
        .I2(tx_xgmii_data_reg2[4]),
        .I3(tx_xgmii_data_reg2[6]),
        .I4(tx_xgmii_data_reg2[5]),
        .I5(\c0[5]_i_6_n_0 ),
        .O(\c0[5]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \c0[5]_i_4 
       (.I0(tx_xgmii_data_reg2[6]),
        .I1(tx_xgmii_data_reg2[5]),
        .O(\c0[5]_i_4_n_0 ));
  LUT3 #(
    .INIT(8'h6F)) 
    \c0[5]_i_5 
       (.I0(tx_xgmii_data_reg2[7]),
        .I1(tx_xgmii_data_reg2[6]),
        .I2(tx_xgmii_data_reg2[2]),
        .O(\c0[5]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF7DFFFF7DFFFF)) 
    \c0[5]_i_6 
       (.I0(tx_xgmii_data_reg2[2]),
        .I1(tx_xgmii_data_reg2[6]),
        .I2(tx_xgmii_data_reg2[7]),
        .I3(tx_xgmii_data_reg2[4]),
        .I4(tx_xgmii_data_reg2[0]),
        .I5(tx_xgmii_data_reg2[3]),
        .O(\c0[5]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h00000000FEAA02AA)) 
    \c0[6]_i_1 
       (.I0(c0[6]),
        .I1(\c0[6]_i_2_n_0 ),
        .I2(\c0[6]_i_3_n_0 ),
        .I3(tx_xgmii_ctrl_reg2[0]),
        .I4(\c0[6]_i_4_n_0 ),
        .I5(\c0[6]_i_5_n_0 ),
        .O(\c0[6]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \c0[6]_i_2 
       (.I0(tx_xgmii_data_reg2[6]),
        .I1(tx_xgmii_data_reg2[7]),
        .O(\c0[6]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFEFFFFFFFFFFFFFF)) 
    \c0[6]_i_3 
       (.I0(tx_xgmii_data_reg2[5]),
        .I1(tx_xgmii_data_reg2[1]),
        .I2(tx_xgmii_data_reg2[0]),
        .I3(tx_xgmii_data_reg2[4]),
        .I4(tx_xgmii_data_reg2[2]),
        .I5(tx_xgmii_data_reg2[3]),
        .O(\c0[6]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'h00006A80)) 
    \c0[6]_i_4 
       (.I0(tx_xgmii_data_reg2[5]),
        .I1(tx_xgmii_data_reg2[6]),
        .I2(tx_xgmii_data_reg2[7]),
        .I3(tx_xgmii_data_reg2[3]),
        .I4(\c0[2]_i_2_n_0 ),
        .O(\c0[6]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h0000000004800420)) 
    \c0[6]_i_5 
       (.I0(tx_xgmii_data_reg2[4]),
        .I1(tx_xgmii_data_reg2[1]),
        .I2(tx_xgmii_data_reg2[3]),
        .I3(tx_xgmii_data_reg2[0]),
        .I4(tx_xgmii_data_reg2[6]),
        .I5(\c0[6]_i_6_n_0 ),
        .O(\c0[6]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h7FDFFFFFFFDFFFDF)) 
    \c0[6]_i_6 
       (.I0(tx_xgmii_data_reg2[2]),
        .I1(tx_xgmii_data_reg2[7]),
        .I2(tx_xgmii_ctrl_reg2[0]),
        .I3(tx_xgmii_data_reg2[6]),
        .I4(tx_xgmii_data_reg2[4]),
        .I5(tx_xgmii_data_reg2[5]),
        .O(\c0[6]_i_6_n_0 ));
  FDRE \c0_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\c0[0]_i_1_n_0 ),
        .Q(c0[0]),
        .R(1'b0));
  FDRE \c0_reg[1] 
       (.C(coreclk),
        .CE(\c0[4]_i_2_n_0 ),
        .D(\c0[1]_i_1_n_0 ),
        .Q(c0[1]),
        .R(\c0[4]_i_1_n_0 ));
  FDRE \c0_reg[2] 
       (.C(coreclk),
        .CE(\c0[4]_i_2_n_0 ),
        .D(\c0[2]_i_1_n_0 ),
        .Q(c0[2]),
        .R(\c0[4]_i_1_n_0 ));
  FDRE \c0_reg[3] 
       (.C(coreclk),
        .CE(\c0[4]_i_2_n_0 ),
        .D(\c0[3]_i_1_n_0 ),
        .Q(c0[3]),
        .R(\c0[4]_i_1_n_0 ));
  FDRE \c0_reg[4] 
       (.C(coreclk),
        .CE(\c0[4]_i_2_n_0 ),
        .D(\c0[4]_i_3_n_0 ),
        .Q(c0[4]),
        .R(\c0[4]_i_1_n_0 ));
  FDRE \c0_reg[5] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\c0[5]_i_1_n_0 ),
        .Q(c0[5]),
        .R(1'b0));
  FDRE \c0_reg[6] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\c0[6]_i_1_n_0 ),
        .Q(c0[6]),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h2)) 
    \c1[0]_i_1 
       (.I0(\c1[0]_i_2_n_0 ),
        .I1(\c1[5]_i_3_n_0 ),
        .O(\c1[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h005DFFFF005D0000)) 
    \c1[0]_i_2 
       (.I0(tx_xgmii_data_reg2[14]),
        .I1(tx_xgmii_data_reg2[13]),
        .I2(tx_xgmii_data_reg2[15]),
        .I3(\c1[4]_i_3_n_0 ),
        .I4(tx_xgmii_ctrl_reg2[1]),
        .I5(c1[0]),
        .O(\c1[0]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hFF3D)) 
    \c1[1]_i_1 
       (.I0(tx_xgmii_data_reg2[11]),
        .I1(tx_xgmii_data_reg2[13]),
        .I2(tx_xgmii_data_reg2[15]),
        .I3(\c1[1]_i_2_n_0 ),
        .O(\c1[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFF7FEFFFFFFFFFFF)) 
    \c1[1]_i_2 
       (.I0(tx_xgmii_data_reg2[8]),
        .I1(tx_xgmii_data_reg2[9]),
        .I2(tx_xgmii_data_reg2[10]),
        .I3(tx_xgmii_data_reg2[11]),
        .I4(tx_xgmii_data_reg2[14]),
        .I5(tx_xgmii_data_reg2[12]),
        .O(\c1[1]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0002000000000000)) 
    \c1[2]_i_1 
       (.I0(\c1[4]_i_2_n_0 ),
        .I1(tx_xgmii_data_reg2[14]),
        .I2(tx_xgmii_data_reg2[13]),
        .I3(tx_xgmii_data_reg2[15]),
        .I4(tx_xgmii_ctrl_reg2[1]),
        .I5(tx_xgmii_data_reg2[10]),
        .O(\c1[2]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFBBFFFBF)) 
    \c1[2]_i_2 
       (.I0(\c1[2]_i_3_n_0 ),
        .I1(tx_xgmii_data_reg2[13]),
        .I2(tx_xgmii_data_reg2[11]),
        .I3(tx_xgmii_data_reg2[15]),
        .I4(tx_xgmii_data_reg2[14]),
        .O(\c1[2]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFF7FF7FF)) 
    \c1[2]_i_3 
       (.I0(tx_xgmii_data_reg2[12]),
        .I1(tx_xgmii_data_reg2[10]),
        .I2(tx_xgmii_data_reg2[9]),
        .I3(tx_xgmii_data_reg2[11]),
        .I4(tx_xgmii_data_reg2[8]),
        .O(\c1[2]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFDFFFFC3CDC3CF)) 
    \c1[3]_i_1 
       (.I0(\c1[4]_i_2_n_0 ),
        .I1(tx_xgmii_data_reg2[14]),
        .I2(tx_xgmii_data_reg2[13]),
        .I3(tx_xgmii_data_reg2[15]),
        .I4(tx_xgmii_data_reg2[10]),
        .I5(\c1[4]_i_3_n_0 ),
        .O(\c1[3]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFDFFFFF33CF33C)) 
    \c1[4]_i_1 
       (.I0(\c1[4]_i_2_n_0 ),
        .I1(tx_xgmii_data_reg2[14]),
        .I2(tx_xgmii_data_reg2[13]),
        .I3(tx_xgmii_data_reg2[15]),
        .I4(tx_xgmii_data_reg2[10]),
        .I5(\c1[4]_i_3_n_0 ),
        .O(\c1[4]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h0040)) 
    \c1[4]_i_2 
       (.I0(tx_xgmii_data_reg2[12]),
        .I1(tx_xgmii_data_reg2[9]),
        .I2(tx_xgmii_data_reg2[8]),
        .I3(tx_xgmii_data_reg2[11]),
        .O(\c1[4]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFF7F)) 
    \c1[4]_i_3 
       (.I0(tx_xgmii_data_reg2[11]),
        .I1(tx_xgmii_data_reg2[10]),
        .I2(tx_xgmii_data_reg2[12]),
        .I3(tx_xgmii_data_reg2[8]),
        .I4(tx_xgmii_data_reg2[9]),
        .O(\c1[4]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'h00E2)) 
    \c1[5]_i_1 
       (.I0(c1[5]),
        .I1(tx_xgmii_ctrl_reg2[1]),
        .I2(\c1[5]_i_2_n_0 ),
        .I3(\c1[5]_i_3_n_0 ),
        .O(\c1[5]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h0000600A)) 
    \c1[5]_i_2 
       (.I0(tx_xgmii_data_reg2[11]),
        .I1(tx_xgmii_data_reg2[13]),
        .I2(tx_xgmii_data_reg2[15]),
        .I3(tx_xgmii_data_reg2[14]),
        .I4(\c1[2]_i_3_n_0 ),
        .O(\c1[5]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000018100008)) 
    \c1[5]_i_3 
       (.I0(tx_xgmii_data_reg2[12]),
        .I1(tx_xgmii_data_reg2[11]),
        .I2(tx_xgmii_data_reg2[8]),
        .I3(tx_xgmii_data_reg2[13]),
        .I4(tx_xgmii_data_reg2[9]),
        .I5(\c1[5]_i_4_n_0 ),
        .O(\c1[5]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFFFFFF7FF7)) 
    \c1[5]_i_4 
       (.I0(tx_xgmii_ctrl_reg2[1]),
        .I1(tx_xgmii_data_reg2[10]),
        .I2(tx_xgmii_data_reg2[12]),
        .I3(tx_xgmii_data_reg2[15]),
        .I4(tx_xgmii_data_reg2[14]),
        .I5(tx_xgmii_data_reg2[13]),
        .O(\c1[5]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h2E2200002E222E22)) 
    \c1[6]_i_1 
       (.I0(c1[6]),
        .I1(tx_xgmii_ctrl_reg2[1]),
        .I2(\c1[2]_i_3_n_0 ),
        .I3(\c1[6]_i_2_n_0 ),
        .I4(\c1[6]_i_3_n_0 ),
        .I5(\c1[6]_i_4_n_0 ),
        .O(\c1[6]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h6A8A)) 
    \c1[6]_i_2 
       (.I0(tx_xgmii_data_reg2[11]),
        .I1(tx_xgmii_data_reg2[13]),
        .I2(tx_xgmii_data_reg2[14]),
        .I3(tx_xgmii_data_reg2[15]),
        .O(\c1[6]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h6AFEFFFFFFFFFFFF)) 
    \c1[6]_i_3 
       (.I0(tx_xgmii_data_reg2[14]),
        .I1(tx_xgmii_data_reg2[13]),
        .I2(tx_xgmii_data_reg2[15]),
        .I3(tx_xgmii_data_reg2[12]),
        .I4(tx_xgmii_ctrl_reg2[1]),
        .I5(tx_xgmii_data_reg2[10]),
        .O(\c1[6]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'h090000C0)) 
    \c1[6]_i_4 
       (.I0(tx_xgmii_data_reg2[14]),
        .I1(tx_xgmii_data_reg2[9]),
        .I2(tx_xgmii_data_reg2[8]),
        .I3(tx_xgmii_data_reg2[11]),
        .I4(tx_xgmii_data_reg2[12]),
        .O(\c1[6]_i_4_n_0 ));
  FDRE \c1_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\c1[0]_i_1_n_0 ),
        .Q(c1[0]),
        .R(1'b0));
  FDRE \c1_reg[1] 
       (.C(coreclk),
        .CE(tx_xgmii_ctrl_reg2[1]),
        .D(\c1[1]_i_1_n_0 ),
        .Q(c1[1]),
        .R(\c1[2]_i_1_n_0 ));
  FDRE \c1_reg[2] 
       (.C(coreclk),
        .CE(tx_xgmii_ctrl_reg2[1]),
        .D(\c1[2]_i_2_n_0 ),
        .Q(c1[2]),
        .R(\c1[2]_i_1_n_0 ));
  FDRE \c1_reg[3] 
       (.C(coreclk),
        .CE(tx_xgmii_ctrl_reg2[1]),
        .D(\c1[3]_i_1_n_0 ),
        .Q(c1[3]),
        .R(1'b0));
  FDRE \c1_reg[4] 
       (.C(coreclk),
        .CE(tx_xgmii_ctrl_reg2[1]),
        .D(\c1[4]_i_1_n_0 ),
        .Q(c1[4]),
        .R(1'b0));
  FDRE \c1_reg[5] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\c1[5]_i_1_n_0 ),
        .Q(c1[5]),
        .R(1'b0));
  FDRE \c1_reg[6] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\c1[6]_i_1_n_0 ),
        .Q(c1[6]),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h2)) 
    \c2[0]_i_1 
       (.I0(\c2[0]_i_2_n_0 ),
        .I1(\c2[5]_i_3_n_0 ),
        .O(\c2[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h005DFFFF005D0000)) 
    \c2[0]_i_2 
       (.I0(tx_xgmii_data_reg2[22]),
        .I1(tx_xgmii_data_reg2[21]),
        .I2(tx_xgmii_data_reg2[23]),
        .I3(\c2[4]_i_3_n_0 ),
        .I4(tx_xgmii_ctrl_reg2[2]),
        .I5(c2[0]),
        .O(\c2[0]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hBEBF)) 
    \c2[1]_i_1 
       (.I0(\c2[1]_i_2_n_0 ),
        .I1(tx_xgmii_data_reg2[21]),
        .I2(tx_xgmii_data_reg2[23]),
        .I3(tx_xgmii_data_reg2[19]),
        .O(\c2[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hDFFBFFFFFFFFFFFF)) 
    \c2[1]_i_2 
       (.I0(tx_xgmii_data_reg2[22]),
        .I1(tx_xgmii_data_reg2[19]),
        .I2(tx_xgmii_data_reg2[17]),
        .I3(tx_xgmii_data_reg2[16]),
        .I4(tx_xgmii_data_reg2[20]),
        .I5(tx_xgmii_data_reg2[18]),
        .O(\c2[1]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0002000000000000)) 
    \c2[2]_i_1 
       (.I0(\c2[4]_i_2_n_0 ),
        .I1(tx_xgmii_data_reg2[22]),
        .I2(tx_xgmii_data_reg2[23]),
        .I3(tx_xgmii_data_reg2[21]),
        .I4(tx_xgmii_ctrl_reg2[2]),
        .I5(tx_xgmii_data_reg2[18]),
        .O(\c2[2]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFBFFBFBF)) 
    \c2[2]_i_2 
       (.I0(\c2[2]_i_3_n_0 ),
        .I1(tx_xgmii_data_reg2[21]),
        .I2(tx_xgmii_data_reg2[19]),
        .I3(tx_xgmii_data_reg2[22]),
        .I4(tx_xgmii_data_reg2[23]),
        .O(\c2[2]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFF7FF7FF)) 
    \c2[2]_i_3 
       (.I0(tx_xgmii_data_reg2[18]),
        .I1(tx_xgmii_data_reg2[20]),
        .I2(tx_xgmii_data_reg2[17]),
        .I3(tx_xgmii_data_reg2[19]),
        .I4(tx_xgmii_data_reg2[16]),
        .O(\c2[2]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFDFFFFCC3DCC3F)) 
    \c2[3]_i_1 
       (.I0(\c2[4]_i_2_n_0 ),
        .I1(tx_xgmii_data_reg2[22]),
        .I2(tx_xgmii_data_reg2[23]),
        .I3(tx_xgmii_data_reg2[21]),
        .I4(tx_xgmii_data_reg2[18]),
        .I5(\c2[4]_i_3_n_0 ),
        .O(\c2[3]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFDFFFFF33CF33C)) 
    \c2[4]_i_1 
       (.I0(\c2[4]_i_2_n_0 ),
        .I1(tx_xgmii_data_reg2[22]),
        .I2(tx_xgmii_data_reg2[23]),
        .I3(tx_xgmii_data_reg2[21]),
        .I4(tx_xgmii_data_reg2[18]),
        .I5(\c2[4]_i_3_n_0 ),
        .O(\c2[4]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h0008)) 
    \c2[4]_i_2 
       (.I0(tx_xgmii_data_reg2[17]),
        .I1(tx_xgmii_data_reg2[16]),
        .I2(tx_xgmii_data_reg2[19]),
        .I3(tx_xgmii_data_reg2[20]),
        .O(\c2[4]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFF7F)) 
    \c2[4]_i_3 
       (.I0(tx_xgmii_data_reg2[19]),
        .I1(tx_xgmii_data_reg2[20]),
        .I2(tx_xgmii_data_reg2[18]),
        .I3(tx_xgmii_data_reg2[16]),
        .I4(tx_xgmii_data_reg2[17]),
        .O(\c2[4]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'h00E2)) 
    \c2[5]_i_1 
       (.I0(c2[5]),
        .I1(tx_xgmii_ctrl_reg2[2]),
        .I2(\c2[5]_i_2_n_0 ),
        .I3(\c2[5]_i_3_n_0 ),
        .O(\c2[5]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00002580)) 
    \c2[5]_i_2 
       (.I0(tx_xgmii_data_reg2[22]),
        .I1(tx_xgmii_data_reg2[21]),
        .I2(tx_xgmii_data_reg2[23]),
        .I3(tx_xgmii_data_reg2[19]),
        .I4(\c2[2]_i_3_n_0 ),
        .O(\c2[5]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000018100008)) 
    \c2[5]_i_3 
       (.I0(tx_xgmii_data_reg2[20]),
        .I1(tx_xgmii_data_reg2[19]),
        .I2(tx_xgmii_data_reg2[16]),
        .I3(tx_xgmii_data_reg2[21]),
        .I4(tx_xgmii_data_reg2[17]),
        .I5(\c2[5]_i_4_n_0 ),
        .O(\c2[5]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFFFFFF7FF7)) 
    \c2[5]_i_4 
       (.I0(tx_xgmii_ctrl_reg2[2]),
        .I1(tx_xgmii_data_reg2[18]),
        .I2(tx_xgmii_data_reg2[20]),
        .I3(tx_xgmii_data_reg2[23]),
        .I4(tx_xgmii_data_reg2[22]),
        .I5(tx_xgmii_data_reg2[21]),
        .O(\c2[5]_i_4_n_0 ));
  LUT4 #(
    .INIT(16'h00E2)) 
    \c2[6]_i_1 
       (.I0(c2[6]),
        .I1(tx_xgmii_ctrl_reg2[2]),
        .I2(\c2[6]_i_2_n_0 ),
        .I3(\c2[6]_i_3_n_0 ),
        .O(\c2[6]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00006AA2)) 
    \c2[6]_i_2 
       (.I0(tx_xgmii_data_reg2[19]),
        .I1(tx_xgmii_data_reg2[22]),
        .I2(tx_xgmii_data_reg2[21]),
        .I3(tx_xgmii_data_reg2[23]),
        .I4(\c2[2]_i_3_n_0 ),
        .O(\c2[6]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000018100008)) 
    \c2[6]_i_3 
       (.I0(tx_xgmii_data_reg2[20]),
        .I1(tx_xgmii_data_reg2[19]),
        .I2(tx_xgmii_data_reg2[16]),
        .I3(tx_xgmii_data_reg2[22]),
        .I4(tx_xgmii_data_reg2[17]),
        .I5(\c2[6]_i_4_n_0 ),
        .O(\c2[6]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h6AFEFFFFFFFFFFFF)) 
    \c2[6]_i_4 
       (.I0(tx_xgmii_data_reg2[22]),
        .I1(tx_xgmii_data_reg2[23]),
        .I2(tx_xgmii_data_reg2[21]),
        .I3(tx_xgmii_data_reg2[20]),
        .I4(tx_xgmii_ctrl_reg2[2]),
        .I5(tx_xgmii_data_reg2[18]),
        .O(\c2[6]_i_4_n_0 ));
  FDRE \c2_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\c2[0]_i_1_n_0 ),
        .Q(c2[0]),
        .R(1'b0));
  FDRE \c2_reg[1] 
       (.C(coreclk),
        .CE(tx_xgmii_ctrl_reg2[2]),
        .D(\c2[1]_i_1_n_0 ),
        .Q(c2[1]),
        .R(\c2[2]_i_1_n_0 ));
  FDRE \c2_reg[2] 
       (.C(coreclk),
        .CE(tx_xgmii_ctrl_reg2[2]),
        .D(\c2[2]_i_2_n_0 ),
        .Q(c2[2]),
        .R(\c2[2]_i_1_n_0 ));
  FDRE \c2_reg[3] 
       (.C(coreclk),
        .CE(tx_xgmii_ctrl_reg2[2]),
        .D(\c2[3]_i_1_n_0 ),
        .Q(c2[3]),
        .R(1'b0));
  FDRE \c2_reg[4] 
       (.C(coreclk),
        .CE(tx_xgmii_ctrl_reg2[2]),
        .D(\c2[4]_i_1_n_0 ),
        .Q(c2[4]),
        .R(1'b0));
  FDRE \c2_reg[5] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\c2[5]_i_1_n_0 ),
        .Q(c2[5]),
        .R(1'b0));
  FDRE \c2_reg[6] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\c2[6]_i_1_n_0 ),
        .Q(c2[6]),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h2)) 
    \c3[0]_i_1 
       (.I0(\c3[0]_i_2_n_0 ),
        .I1(\c3[5]_i_3_n_0 ),
        .O(\c3[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h005DFFFF005D0000)) 
    \c3[0]_i_2 
       (.I0(tx_xgmii_data_reg2[30]),
        .I1(tx_xgmii_data_reg2[29]),
        .I2(tx_xgmii_data_reg2[31]),
        .I3(\c3[4]_i_3_n_0 ),
        .I4(tx_xgmii_ctrl_reg2[3]),
        .I5(c3[0]),
        .O(\c3[0]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hFF3D)) 
    \c3[1]_i_1 
       (.I0(tx_xgmii_data_reg2[27]),
        .I1(tx_xgmii_data_reg2[29]),
        .I2(tx_xgmii_data_reg2[31]),
        .I3(\c3[1]_i_2_n_0 ),
        .O(\c3[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFF7FEFFFFFFFFFFF)) 
    \c3[1]_i_2 
       (.I0(tx_xgmii_data_reg2[24]),
        .I1(tx_xgmii_data_reg2[25]),
        .I2(tx_xgmii_data_reg2[26]),
        .I3(tx_xgmii_data_reg2[27]),
        .I4(tx_xgmii_data_reg2[30]),
        .I5(tx_xgmii_data_reg2[28]),
        .O(\c3[1]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0002000000000000)) 
    \c3[2]_i_1 
       (.I0(\c3[4]_i_2_n_0 ),
        .I1(tx_xgmii_data_reg2[30]),
        .I2(tx_xgmii_data_reg2[29]),
        .I3(tx_xgmii_data_reg2[31]),
        .I4(tx_xgmii_ctrl_reg2[3]),
        .I5(tx_xgmii_data_reg2[26]),
        .O(\c3[2]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFBBFFFBF)) 
    \c3[2]_i_2 
       (.I0(\c3[2]_i_3_n_0 ),
        .I1(tx_xgmii_data_reg2[29]),
        .I2(tx_xgmii_data_reg2[27]),
        .I3(tx_xgmii_data_reg2[31]),
        .I4(tx_xgmii_data_reg2[30]),
        .O(\c3[2]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFF7FF7FF)) 
    \c3[2]_i_3 
       (.I0(tx_xgmii_data_reg2[28]),
        .I1(tx_xgmii_data_reg2[26]),
        .I2(tx_xgmii_data_reg2[25]),
        .I3(tx_xgmii_data_reg2[27]),
        .I4(tx_xgmii_data_reg2[24]),
        .O(\c3[2]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFDFFFFC3CDC3CF)) 
    \c3[3]_i_1 
       (.I0(\c3[4]_i_2_n_0 ),
        .I1(tx_xgmii_data_reg2[30]),
        .I2(tx_xgmii_data_reg2[29]),
        .I3(tx_xgmii_data_reg2[31]),
        .I4(tx_xgmii_data_reg2[26]),
        .I5(\c3[4]_i_3_n_0 ),
        .O(\c3[3]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFDFFFFF33CF33C)) 
    \c3[4]_i_1 
       (.I0(\c3[4]_i_2_n_0 ),
        .I1(tx_xgmii_data_reg2[30]),
        .I2(tx_xgmii_data_reg2[29]),
        .I3(tx_xgmii_data_reg2[31]),
        .I4(tx_xgmii_data_reg2[26]),
        .I5(\c3[4]_i_3_n_0 ),
        .O(\c3[4]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h0040)) 
    \c3[4]_i_2 
       (.I0(tx_xgmii_data_reg2[28]),
        .I1(tx_xgmii_data_reg2[25]),
        .I2(tx_xgmii_data_reg2[24]),
        .I3(tx_xgmii_data_reg2[27]),
        .O(\c3[4]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFF7F)) 
    \c3[4]_i_3 
       (.I0(tx_xgmii_data_reg2[27]),
        .I1(tx_xgmii_data_reg2[26]),
        .I2(tx_xgmii_data_reg2[28]),
        .I3(tx_xgmii_data_reg2[24]),
        .I4(tx_xgmii_data_reg2[25]),
        .O(\c3[4]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'h00E2)) 
    \c3[5]_i_1 
       (.I0(c3[5]),
        .I1(tx_xgmii_ctrl_reg2[3]),
        .I2(\c3[5]_i_2_n_0 ),
        .I3(\c3[5]_i_3_n_0 ),
        .O(\c3[5]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h0000600A)) 
    \c3[5]_i_2 
       (.I0(tx_xgmii_data_reg2[27]),
        .I1(tx_xgmii_data_reg2[29]),
        .I2(tx_xgmii_data_reg2[31]),
        .I3(tx_xgmii_data_reg2[30]),
        .I4(\c3[2]_i_3_n_0 ),
        .O(\c3[5]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000018100008)) 
    \c3[5]_i_3 
       (.I0(tx_xgmii_data_reg2[28]),
        .I1(tx_xgmii_data_reg2[27]),
        .I2(tx_xgmii_data_reg2[24]),
        .I3(tx_xgmii_data_reg2[29]),
        .I4(tx_xgmii_data_reg2[25]),
        .I5(\c3[5]_i_4_n_0 ),
        .O(\c3[5]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFFFFFF7FF7)) 
    \c3[5]_i_4 
       (.I0(tx_xgmii_ctrl_reg2[3]),
        .I1(tx_xgmii_data_reg2[26]),
        .I2(tx_xgmii_data_reg2[28]),
        .I3(tx_xgmii_data_reg2[31]),
        .I4(tx_xgmii_data_reg2[30]),
        .I5(tx_xgmii_data_reg2[29]),
        .O(\c3[5]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h2E2200002E222E22)) 
    \c3[6]_i_1 
       (.I0(c3[6]),
        .I1(tx_xgmii_ctrl_reg2[3]),
        .I2(\c3[2]_i_3_n_0 ),
        .I3(\c3[6]_i_2_n_0 ),
        .I4(\c3[6]_i_3_n_0 ),
        .I5(\c3[6]_i_4_n_0 ),
        .O(\c3[6]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h6A8A)) 
    \c3[6]_i_2 
       (.I0(tx_xgmii_data_reg2[27]),
        .I1(tx_xgmii_data_reg2[29]),
        .I2(tx_xgmii_data_reg2[30]),
        .I3(tx_xgmii_data_reg2[31]),
        .O(\c3[6]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h6AFEFFFFFFFFFFFF)) 
    \c3[6]_i_3 
       (.I0(tx_xgmii_data_reg2[30]),
        .I1(tx_xgmii_data_reg2[29]),
        .I2(tx_xgmii_data_reg2[31]),
        .I3(tx_xgmii_data_reg2[28]),
        .I4(tx_xgmii_ctrl_reg2[3]),
        .I5(tx_xgmii_data_reg2[26]),
        .O(\c3[6]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'h090000C0)) 
    \c3[6]_i_4 
       (.I0(tx_xgmii_data_reg2[30]),
        .I1(tx_xgmii_data_reg2[25]),
        .I2(tx_xgmii_data_reg2[24]),
        .I3(tx_xgmii_data_reg2[27]),
        .I4(tx_xgmii_data_reg2[28]),
        .O(\c3[6]_i_4_n_0 ));
  FDRE \c3_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\c3[0]_i_1_n_0 ),
        .Q(c3[0]),
        .R(1'b0));
  FDRE \c3_reg[1] 
       (.C(coreclk),
        .CE(tx_xgmii_ctrl_reg2[3]),
        .D(\c3[1]_i_1_n_0 ),
        .Q(c3[1]),
        .R(\c3[2]_i_1_n_0 ));
  FDRE \c3_reg[2] 
       (.C(coreclk),
        .CE(tx_xgmii_ctrl_reg2[3]),
        .D(\c3[2]_i_2_n_0 ),
        .Q(c3[2]),
        .R(\c3[2]_i_1_n_0 ));
  FDRE \c3_reg[3] 
       (.C(coreclk),
        .CE(tx_xgmii_ctrl_reg2[3]),
        .D(\c3[3]_i_1_n_0 ),
        .Q(c3[3]),
        .R(1'b0));
  FDRE \c3_reg[4] 
       (.C(coreclk),
        .CE(tx_xgmii_ctrl_reg2[3]),
        .D(\c3[4]_i_1_n_0 ),
        .Q(c3[4]),
        .R(1'b0));
  FDRE \c3_reg[5] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\c3[5]_i_1_n_0 ),
        .Q(c3[5]),
        .R(1'b0));
  FDRE \c3_reg[6] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\c3[6]_i_1_n_0 ),
        .Q(c3[6]),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair263" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \c4[0]_i_1 
       (.I0(\c4[0]_i_2_n_0 ),
        .I1(\c4[5]_i_3_n_0 ),
        .O(\c4[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h55F5F5F5008080A0)) 
    \c4[0]_i_2 
       (.I0(tx_xgmii_ctrl_reg2[4]),
        .I1(tx_xgmii_data_reg2[37]),
        .I2(\c4[4]_i_6_n_0 ),
        .I3(tx_xgmii_data_reg2[38]),
        .I4(tx_xgmii_data_reg2[39]),
        .I5(c4[0]),
        .O(\c4[0]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hAFFB)) 
    \c4[1]_i_1 
       (.I0(\c4[1]_i_2_n_0 ),
        .I1(tx_xgmii_data_reg2[35]),
        .I2(tx_xgmii_data_reg2[37]),
        .I3(tx_xgmii_data_reg2[39]),
        .O(\c4[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hDFFBFFFFFFFFFFFF)) 
    \c4[1]_i_2 
       (.I0(tx_xgmii_data_reg2[38]),
        .I1(tx_xgmii_data_reg2[35]),
        .I2(tx_xgmii_data_reg2[33]),
        .I3(tx_xgmii_data_reg2[32]),
        .I4(tx_xgmii_data_reg2[34]),
        .I5(tx_xgmii_data_reg2[36]),
        .O(\c4[1]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hEBFBFFFF)) 
    \c4[2]_i_1 
       (.I0(\c4[2]_i_2_n_0 ),
        .I1(tx_xgmii_data_reg2[35]),
        .I2(tx_xgmii_data_reg2[39]),
        .I3(tx_xgmii_data_reg2[38]),
        .I4(tx_xgmii_data_reg2[37]),
        .O(\c4[2]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hF7FFFF7F)) 
    \c4[2]_i_2 
       (.I0(tx_xgmii_data_reg2[36]),
        .I1(tx_xgmii_data_reg2[34]),
        .I2(tx_xgmii_data_reg2[35]),
        .I3(tx_xgmii_data_reg2[33]),
        .I4(tx_xgmii_data_reg2[32]),
        .O(\c4[2]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFEFEEFF)) 
    \c4[3]_i_1 
       (.I0(tx_xgmii_data_reg2[33]),
        .I1(tx_xgmii_data_reg2[32]),
        .I2(tx_xgmii_data_reg2[39]),
        .I3(tx_xgmii_data_reg2[37]),
        .I4(tx_xgmii_data_reg2[38]),
        .I5(\c4[3]_i_2_n_0 ),
        .O(\c4[3]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h7F)) 
    \c4[3]_i_2 
       (.I0(tx_xgmii_data_reg2[36]),
        .I1(tx_xgmii_data_reg2[34]),
        .I2(tx_xgmii_data_reg2[35]),
        .O(\c4[3]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0020000000000000)) 
    \c4[4]_i_1 
       (.I0(\c4[4]_i_4_n_0 ),
        .I1(\c4[4]_i_5_n_0 ),
        .I2(tx_xgmii_data_reg2[34]),
        .I3(tx_xgmii_data_reg2[39]),
        .I4(tx_xgmii_ctrl_reg2[4]),
        .I5(tx_xgmii_data_reg2[33]),
        .O(\c4[4]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hAA8A8AAA)) 
    \c4[4]_i_2 
       (.I0(tx_xgmii_ctrl_reg2[4]),
        .I1(tx_xgmii_data_reg2[37]),
        .I2(\c4[4]_i_6_n_0 ),
        .I3(tx_xgmii_data_reg2[38]),
        .I4(tx_xgmii_data_reg2[39]),
        .O(\c4[4]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hD7FD)) 
    \c4[4]_i_3 
       (.I0(\c4[4]_i_6_n_0 ),
        .I1(tx_xgmii_data_reg2[37]),
        .I2(tx_xgmii_data_reg2[39]),
        .I3(tx_xgmii_data_reg2[38]),
        .O(\c4[4]_i_3_n_0 ));
  LUT3 #(
    .INIT(8'h01)) 
    \c4[4]_i_4 
       (.I0(tx_xgmii_data_reg2[36]),
        .I1(tx_xgmii_data_reg2[37]),
        .I2(tx_xgmii_data_reg2[38]),
        .O(\c4[4]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'hB)) 
    \c4[4]_i_5 
       (.I0(tx_xgmii_data_reg2[35]),
        .I1(tx_xgmii_data_reg2[32]),
        .O(\c4[4]_i_5_n_0 ));
  LUT5 #(
    .INIT(32'h00000080)) 
    \c4[4]_i_6 
       (.I0(tx_xgmii_data_reg2[35]),
        .I1(tx_xgmii_data_reg2[34]),
        .I2(tx_xgmii_data_reg2[36]),
        .I3(tx_xgmii_data_reg2[32]),
        .I4(tx_xgmii_data_reg2[33]),
        .O(\c4[4]_i_6_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair263" *) 
  LUT4 #(
    .INIT(16'h00E2)) 
    \c4[5]_i_1 
       (.I0(c4[5]),
        .I1(\c4[4]_i_2_n_0 ),
        .I2(\c4[5]_i_2_n_0 ),
        .I3(\c4[5]_i_3_n_0 ),
        .O(\c4[5]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000001020000000)) 
    \c4[5]_i_2 
       (.I0(\c4[5]_i_4_n_0 ),
        .I1(\c4[5]_i_5_n_0 ),
        .I2(tx_xgmii_data_reg2[36]),
        .I3(tx_xgmii_data_reg2[32]),
        .I4(tx_xgmii_data_reg2[33]),
        .I5(tx_xgmii_data_reg2[35]),
        .O(\c4[5]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000080000008)) 
    \c4[5]_i_3 
       (.I0(tx_xgmii_ctrl_reg2[4]),
        .I1(tx_xgmii_data_reg2[33]),
        .I2(tx_xgmii_data_reg2[36]),
        .I3(tx_xgmii_data_reg2[38]),
        .I4(tx_xgmii_data_reg2[37]),
        .I5(\c4[5]_i_6_n_0 ),
        .O(\c4[5]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \c4[5]_i_4 
       (.I0(tx_xgmii_data_reg2[38]),
        .I1(tx_xgmii_data_reg2[37]),
        .O(\c4[5]_i_4_n_0 ));
  LUT3 #(
    .INIT(8'h6F)) 
    \c4[5]_i_5 
       (.I0(tx_xgmii_data_reg2[39]),
        .I1(tx_xgmii_data_reg2[38]),
        .I2(tx_xgmii_data_reg2[34]),
        .O(\c4[5]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF7DFFFF7DFFFF)) 
    \c4[5]_i_6 
       (.I0(tx_xgmii_data_reg2[34]),
        .I1(tx_xgmii_data_reg2[38]),
        .I2(tx_xgmii_data_reg2[39]),
        .I3(tx_xgmii_data_reg2[36]),
        .I4(tx_xgmii_data_reg2[32]),
        .I5(tx_xgmii_data_reg2[35]),
        .O(\c4[5]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h00000000FEAA02AA)) 
    \c4[6]_i_1 
       (.I0(c4[6]),
        .I1(\c4[6]_i_2_n_0 ),
        .I2(\c4[6]_i_3_n_0 ),
        .I3(tx_xgmii_ctrl_reg2[4]),
        .I4(\c4[6]_i_4_n_0 ),
        .I5(\c4[6]_i_5_n_0 ),
        .O(\c4[6]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \c4[6]_i_2 
       (.I0(tx_xgmii_data_reg2[38]),
        .I1(tx_xgmii_data_reg2[39]),
        .O(\c4[6]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFEFFFFFFFFFFFFFF)) 
    \c4[6]_i_3 
       (.I0(tx_xgmii_data_reg2[37]),
        .I1(tx_xgmii_data_reg2[33]),
        .I2(tx_xgmii_data_reg2[32]),
        .I3(tx_xgmii_data_reg2[36]),
        .I4(tx_xgmii_data_reg2[34]),
        .I5(tx_xgmii_data_reg2[35]),
        .O(\c4[6]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'h00006A80)) 
    \c4[6]_i_4 
       (.I0(tx_xgmii_data_reg2[37]),
        .I1(tx_xgmii_data_reg2[38]),
        .I2(tx_xgmii_data_reg2[39]),
        .I3(tx_xgmii_data_reg2[35]),
        .I4(\c4[2]_i_2_n_0 ),
        .O(\c4[6]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h0000000004800420)) 
    \c4[6]_i_5 
       (.I0(tx_xgmii_data_reg2[36]),
        .I1(tx_xgmii_data_reg2[33]),
        .I2(tx_xgmii_data_reg2[35]),
        .I3(tx_xgmii_data_reg2[32]),
        .I4(tx_xgmii_data_reg2[38]),
        .I5(\c4[6]_i_6_n_0 ),
        .O(\c4[6]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h7FDFFFFFFFDFFFDF)) 
    \c4[6]_i_6 
       (.I0(tx_xgmii_data_reg2[34]),
        .I1(tx_xgmii_data_reg2[39]),
        .I2(tx_xgmii_ctrl_reg2[4]),
        .I3(tx_xgmii_data_reg2[38]),
        .I4(tx_xgmii_data_reg2[36]),
        .I5(tx_xgmii_data_reg2[37]),
        .O(\c4[6]_i_6_n_0 ));
  FDRE \c4_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\c4[0]_i_1_n_0 ),
        .Q(c4[0]),
        .R(1'b0));
  FDRE \c4_reg[1] 
       (.C(coreclk),
        .CE(\c4[4]_i_2_n_0 ),
        .D(\c4[1]_i_1_n_0 ),
        .Q(c4[1]),
        .R(\c4[4]_i_1_n_0 ));
  FDRE \c4_reg[2] 
       (.C(coreclk),
        .CE(\c4[4]_i_2_n_0 ),
        .D(\c4[2]_i_1_n_0 ),
        .Q(c4[2]),
        .R(\c4[4]_i_1_n_0 ));
  FDRE \c4_reg[3] 
       (.C(coreclk),
        .CE(\c4[4]_i_2_n_0 ),
        .D(\c4[3]_i_1_n_0 ),
        .Q(c4[3]),
        .R(\c4[4]_i_1_n_0 ));
  FDRE \c4_reg[4] 
       (.C(coreclk),
        .CE(\c4[4]_i_2_n_0 ),
        .D(\c4[4]_i_3_n_0 ),
        .Q(c4[4]),
        .R(\c4[4]_i_1_n_0 ));
  FDRE \c4_reg[5] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\c4[5]_i_1_n_0 ),
        .Q(c4[5]),
        .R(1'b0));
  FDRE \c4_reg[6] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\c4[6]_i_1_n_0 ),
        .Q(c4[6]),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h2)) 
    \c5[0]_i_1 
       (.I0(\c5[0]_i_2_n_0 ),
        .I1(\c5[5]_i_3_n_0 ),
        .O(\c5[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h005DFFFF005D0000)) 
    \c5[0]_i_2 
       (.I0(tx_xgmii_data_reg2[46]),
        .I1(tx_xgmii_data_reg2[45]),
        .I2(tx_xgmii_data_reg2[47]),
        .I3(\c5[4]_i_3_n_0 ),
        .I4(tx_xgmii_ctrl_reg2[5]),
        .I5(c5[0]),
        .O(\c5[0]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hFF3D)) 
    \c5[1]_i_1 
       (.I0(tx_xgmii_data_reg2[43]),
        .I1(tx_xgmii_data_reg2[45]),
        .I2(tx_xgmii_data_reg2[47]),
        .I3(\c5[1]_i_2_n_0 ),
        .O(\c5[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFF7FEFFFFFFFFFFF)) 
    \c5[1]_i_2 
       (.I0(tx_xgmii_data_reg2[40]),
        .I1(tx_xgmii_data_reg2[41]),
        .I2(tx_xgmii_data_reg2[42]),
        .I3(tx_xgmii_data_reg2[43]),
        .I4(tx_xgmii_data_reg2[46]),
        .I5(tx_xgmii_data_reg2[44]),
        .O(\c5[1]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0002000000000000)) 
    \c5[2]_i_1 
       (.I0(\c5[4]_i_2_n_0 ),
        .I1(tx_xgmii_data_reg2[46]),
        .I2(tx_xgmii_data_reg2[45]),
        .I3(tx_xgmii_data_reg2[47]),
        .I4(tx_xgmii_ctrl_reg2[5]),
        .I5(tx_xgmii_data_reg2[42]),
        .O(\c5[2]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFBBFFFBF)) 
    \c5[2]_i_2 
       (.I0(\c5[2]_i_3_n_0 ),
        .I1(tx_xgmii_data_reg2[45]),
        .I2(tx_xgmii_data_reg2[43]),
        .I3(tx_xgmii_data_reg2[47]),
        .I4(tx_xgmii_data_reg2[46]),
        .O(\c5[2]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFF7FF7FF)) 
    \c5[2]_i_3 
       (.I0(tx_xgmii_data_reg2[44]),
        .I1(tx_xgmii_data_reg2[42]),
        .I2(tx_xgmii_data_reg2[41]),
        .I3(tx_xgmii_data_reg2[43]),
        .I4(tx_xgmii_data_reg2[40]),
        .O(\c5[2]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFDFFFFC3CDC3CF)) 
    \c5[3]_i_1 
       (.I0(\c5[4]_i_2_n_0 ),
        .I1(tx_xgmii_data_reg2[46]),
        .I2(tx_xgmii_data_reg2[45]),
        .I3(tx_xgmii_data_reg2[47]),
        .I4(tx_xgmii_data_reg2[42]),
        .I5(\c5[4]_i_3_n_0 ),
        .O(\c5[3]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFDFFFFF33CF33C)) 
    \c5[4]_i_1 
       (.I0(\c5[4]_i_2_n_0 ),
        .I1(tx_xgmii_data_reg2[46]),
        .I2(tx_xgmii_data_reg2[45]),
        .I3(tx_xgmii_data_reg2[47]),
        .I4(tx_xgmii_data_reg2[42]),
        .I5(\c5[4]_i_3_n_0 ),
        .O(\c5[4]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h0040)) 
    \c5[4]_i_2 
       (.I0(tx_xgmii_data_reg2[44]),
        .I1(tx_xgmii_data_reg2[41]),
        .I2(tx_xgmii_data_reg2[40]),
        .I3(tx_xgmii_data_reg2[43]),
        .O(\c5[4]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFF7F)) 
    \c5[4]_i_3 
       (.I0(tx_xgmii_data_reg2[43]),
        .I1(tx_xgmii_data_reg2[42]),
        .I2(tx_xgmii_data_reg2[44]),
        .I3(tx_xgmii_data_reg2[40]),
        .I4(tx_xgmii_data_reg2[41]),
        .O(\c5[4]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'h00E2)) 
    \c5[5]_i_1 
       (.I0(c5[5]),
        .I1(tx_xgmii_ctrl_reg2[5]),
        .I2(\c5[5]_i_2_n_0 ),
        .I3(\c5[5]_i_3_n_0 ),
        .O(\c5[5]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h0000600A)) 
    \c5[5]_i_2 
       (.I0(tx_xgmii_data_reg2[43]),
        .I1(tx_xgmii_data_reg2[45]),
        .I2(tx_xgmii_data_reg2[47]),
        .I3(tx_xgmii_data_reg2[46]),
        .I4(\c5[2]_i_3_n_0 ),
        .O(\c5[5]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000018100008)) 
    \c5[5]_i_3 
       (.I0(tx_xgmii_data_reg2[44]),
        .I1(tx_xgmii_data_reg2[43]),
        .I2(tx_xgmii_data_reg2[40]),
        .I3(tx_xgmii_data_reg2[45]),
        .I4(tx_xgmii_data_reg2[41]),
        .I5(\c5[5]_i_4_n_0 ),
        .O(\c5[5]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFFFFFF7FF7)) 
    \c5[5]_i_4 
       (.I0(tx_xgmii_ctrl_reg2[5]),
        .I1(tx_xgmii_data_reg2[42]),
        .I2(tx_xgmii_data_reg2[44]),
        .I3(tx_xgmii_data_reg2[47]),
        .I4(tx_xgmii_data_reg2[46]),
        .I5(tx_xgmii_data_reg2[45]),
        .O(\c5[5]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h2E2200002E222E22)) 
    \c5[6]_i_1 
       (.I0(c5[6]),
        .I1(tx_xgmii_ctrl_reg2[5]),
        .I2(\c5[2]_i_3_n_0 ),
        .I3(\c5[6]_i_2_n_0 ),
        .I4(\c5[6]_i_3_n_0 ),
        .I5(\c5[6]_i_4_n_0 ),
        .O(\c5[6]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h6A8A)) 
    \c5[6]_i_2 
       (.I0(tx_xgmii_data_reg2[43]),
        .I1(tx_xgmii_data_reg2[45]),
        .I2(tx_xgmii_data_reg2[46]),
        .I3(tx_xgmii_data_reg2[47]),
        .O(\c5[6]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h6AFEFFFFFFFFFFFF)) 
    \c5[6]_i_3 
       (.I0(tx_xgmii_data_reg2[46]),
        .I1(tx_xgmii_data_reg2[45]),
        .I2(tx_xgmii_data_reg2[47]),
        .I3(tx_xgmii_data_reg2[44]),
        .I4(tx_xgmii_ctrl_reg2[5]),
        .I5(tx_xgmii_data_reg2[42]),
        .O(\c5[6]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'h090000C0)) 
    \c5[6]_i_4 
       (.I0(tx_xgmii_data_reg2[46]),
        .I1(tx_xgmii_data_reg2[41]),
        .I2(tx_xgmii_data_reg2[40]),
        .I3(tx_xgmii_data_reg2[43]),
        .I4(tx_xgmii_data_reg2[44]),
        .O(\c5[6]_i_4_n_0 ));
  FDRE \c5_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\c5[0]_i_1_n_0 ),
        .Q(c5[0]),
        .R(1'b0));
  FDRE \c5_reg[1] 
       (.C(coreclk),
        .CE(tx_xgmii_ctrl_reg2[5]),
        .D(\c5[1]_i_1_n_0 ),
        .Q(c5[1]),
        .R(\c5[2]_i_1_n_0 ));
  FDRE \c5_reg[2] 
       (.C(coreclk),
        .CE(tx_xgmii_ctrl_reg2[5]),
        .D(\c5[2]_i_2_n_0 ),
        .Q(c5[2]),
        .R(\c5[2]_i_1_n_0 ));
  FDRE \c5_reg[3] 
       (.C(coreclk),
        .CE(tx_xgmii_ctrl_reg2[5]),
        .D(\c5[3]_i_1_n_0 ),
        .Q(c5[3]),
        .R(1'b0));
  FDRE \c5_reg[4] 
       (.C(coreclk),
        .CE(tx_xgmii_ctrl_reg2[5]),
        .D(\c5[4]_i_1_n_0 ),
        .Q(c5[4]),
        .R(1'b0));
  FDRE \c5_reg[5] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\c5[5]_i_1_n_0 ),
        .Q(c5[5]),
        .R(1'b0));
  FDRE \c5_reg[6] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\c5[6]_i_1_n_0 ),
        .Q(c5[6]),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h2)) 
    \c6[0]_i_1 
       (.I0(\c6[0]_i_2_n_0 ),
        .I1(\c6[5]_i_3_n_0 ),
        .O(\c6[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h005DFFFF005D0000)) 
    \c6[0]_i_2 
       (.I0(tx_xgmii_data_reg2[54]),
        .I1(tx_xgmii_data_reg2[53]),
        .I2(tx_xgmii_data_reg2[55]),
        .I3(\c6[4]_i_3_n_0 ),
        .I4(tx_xgmii_ctrl_reg2[6]),
        .I5(c6[0]),
        .O(\c6[0]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hFF3D)) 
    \c6[1]_i_1 
       (.I0(tx_xgmii_data_reg2[51]),
        .I1(tx_xgmii_data_reg2[53]),
        .I2(tx_xgmii_data_reg2[55]),
        .I3(\c6[1]_i_2_n_0 ),
        .O(\c6[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFF7FEFFFFFFFFFFF)) 
    \c6[1]_i_2 
       (.I0(tx_xgmii_data_reg2[48]),
        .I1(tx_xgmii_data_reg2[49]),
        .I2(tx_xgmii_data_reg2[50]),
        .I3(tx_xgmii_data_reg2[51]),
        .I4(tx_xgmii_data_reg2[54]),
        .I5(tx_xgmii_data_reg2[52]),
        .O(\c6[1]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0002000000000000)) 
    \c6[2]_i_1 
       (.I0(\c6[4]_i_2_n_0 ),
        .I1(tx_xgmii_data_reg2[54]),
        .I2(tx_xgmii_data_reg2[53]),
        .I3(tx_xgmii_data_reg2[55]),
        .I4(tx_xgmii_ctrl_reg2[6]),
        .I5(tx_xgmii_data_reg2[50]),
        .O(\c6[2]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFBBFFFBF)) 
    \c6[2]_i_2 
       (.I0(\c6[2]_i_3_n_0 ),
        .I1(tx_xgmii_data_reg2[53]),
        .I2(tx_xgmii_data_reg2[51]),
        .I3(tx_xgmii_data_reg2[55]),
        .I4(tx_xgmii_data_reg2[54]),
        .O(\c6[2]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFF7FF7FF)) 
    \c6[2]_i_3 
       (.I0(tx_xgmii_data_reg2[52]),
        .I1(tx_xgmii_data_reg2[50]),
        .I2(tx_xgmii_data_reg2[49]),
        .I3(tx_xgmii_data_reg2[51]),
        .I4(tx_xgmii_data_reg2[48]),
        .O(\c6[2]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFDFFFFC3CDC3CF)) 
    \c6[3]_i_1 
       (.I0(\c6[4]_i_2_n_0 ),
        .I1(tx_xgmii_data_reg2[54]),
        .I2(tx_xgmii_data_reg2[53]),
        .I3(tx_xgmii_data_reg2[55]),
        .I4(tx_xgmii_data_reg2[50]),
        .I5(\c6[4]_i_3_n_0 ),
        .O(\c6[3]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFDFFFFF33CF33C)) 
    \c6[4]_i_1 
       (.I0(\c6[4]_i_2_n_0 ),
        .I1(tx_xgmii_data_reg2[54]),
        .I2(tx_xgmii_data_reg2[53]),
        .I3(tx_xgmii_data_reg2[55]),
        .I4(tx_xgmii_data_reg2[50]),
        .I5(\c6[4]_i_3_n_0 ),
        .O(\c6[4]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h0040)) 
    \c6[4]_i_2 
       (.I0(tx_xgmii_data_reg2[52]),
        .I1(tx_xgmii_data_reg2[49]),
        .I2(tx_xgmii_data_reg2[48]),
        .I3(tx_xgmii_data_reg2[51]),
        .O(\c6[4]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFF7F)) 
    \c6[4]_i_3 
       (.I0(tx_xgmii_data_reg2[51]),
        .I1(tx_xgmii_data_reg2[50]),
        .I2(tx_xgmii_data_reg2[52]),
        .I3(tx_xgmii_data_reg2[48]),
        .I4(tx_xgmii_data_reg2[49]),
        .O(\c6[4]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'h00E2)) 
    \c6[5]_i_1 
       (.I0(c6[5]),
        .I1(tx_xgmii_ctrl_reg2[6]),
        .I2(\c6[5]_i_2_n_0 ),
        .I3(\c6[5]_i_3_n_0 ),
        .O(\c6[5]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h0000600A)) 
    \c6[5]_i_2 
       (.I0(tx_xgmii_data_reg2[51]),
        .I1(tx_xgmii_data_reg2[53]),
        .I2(tx_xgmii_data_reg2[55]),
        .I3(tx_xgmii_data_reg2[54]),
        .I4(\c6[2]_i_3_n_0 ),
        .O(\c6[5]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000018100008)) 
    \c6[5]_i_3 
       (.I0(tx_xgmii_data_reg2[52]),
        .I1(tx_xgmii_data_reg2[51]),
        .I2(tx_xgmii_data_reg2[48]),
        .I3(tx_xgmii_data_reg2[53]),
        .I4(tx_xgmii_data_reg2[49]),
        .I5(\c6[5]_i_4_n_0 ),
        .O(\c6[5]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFFFFFF7FF7)) 
    \c6[5]_i_4 
       (.I0(tx_xgmii_ctrl_reg2[6]),
        .I1(tx_xgmii_data_reg2[50]),
        .I2(tx_xgmii_data_reg2[52]),
        .I3(tx_xgmii_data_reg2[55]),
        .I4(tx_xgmii_data_reg2[54]),
        .I5(tx_xgmii_data_reg2[53]),
        .O(\c6[5]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h2E2200002E222E22)) 
    \c6[6]_i_1 
       (.I0(c6[6]),
        .I1(tx_xgmii_ctrl_reg2[6]),
        .I2(\c6[2]_i_3_n_0 ),
        .I3(\c6[6]_i_2_n_0 ),
        .I4(\c6[6]_i_3_n_0 ),
        .I5(\c6[6]_i_4_n_0 ),
        .O(\c6[6]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h6A8A)) 
    \c6[6]_i_2 
       (.I0(tx_xgmii_data_reg2[51]),
        .I1(tx_xgmii_data_reg2[53]),
        .I2(tx_xgmii_data_reg2[54]),
        .I3(tx_xgmii_data_reg2[55]),
        .O(\c6[6]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h6AFEFFFFFFFFFFFF)) 
    \c6[6]_i_3 
       (.I0(tx_xgmii_data_reg2[54]),
        .I1(tx_xgmii_data_reg2[53]),
        .I2(tx_xgmii_data_reg2[55]),
        .I3(tx_xgmii_data_reg2[52]),
        .I4(tx_xgmii_ctrl_reg2[6]),
        .I5(tx_xgmii_data_reg2[50]),
        .O(\c6[6]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'h090000C0)) 
    \c6[6]_i_4 
       (.I0(tx_xgmii_data_reg2[54]),
        .I1(tx_xgmii_data_reg2[49]),
        .I2(tx_xgmii_data_reg2[48]),
        .I3(tx_xgmii_data_reg2[51]),
        .I4(tx_xgmii_data_reg2[52]),
        .O(\c6[6]_i_4_n_0 ));
  FDRE \c6_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\c6[0]_i_1_n_0 ),
        .Q(c6[0]),
        .R(1'b0));
  FDRE \c6_reg[1] 
       (.C(coreclk),
        .CE(tx_xgmii_ctrl_reg2[6]),
        .D(\c6[1]_i_1_n_0 ),
        .Q(c6[1]),
        .R(\c6[2]_i_1_n_0 ));
  FDRE \c6_reg[2] 
       (.C(coreclk),
        .CE(tx_xgmii_ctrl_reg2[6]),
        .D(\c6[2]_i_2_n_0 ),
        .Q(c6[2]),
        .R(\c6[2]_i_1_n_0 ));
  FDRE \c6_reg[3] 
       (.C(coreclk),
        .CE(tx_xgmii_ctrl_reg2[6]),
        .D(\c6[3]_i_1_n_0 ),
        .Q(c6[3]),
        .R(1'b0));
  FDRE \c6_reg[4] 
       (.C(coreclk),
        .CE(tx_xgmii_ctrl_reg2[6]),
        .D(\c6[4]_i_1_n_0 ),
        .Q(c6[4]),
        .R(1'b0));
  FDRE \c6_reg[5] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\c6[5]_i_1_n_0 ),
        .Q(c6[5]),
        .R(1'b0));
  FDRE \c6_reg[6] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\c6[6]_i_1_n_0 ),
        .Q(c6[6]),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h2)) 
    \c7[0]_i_1 
       (.I0(\c7[0]_i_2_n_0 ),
        .I1(\c7[5]_i_3_n_0 ),
        .O(\c7[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h005DFFFF005D0000)) 
    \c7[0]_i_2 
       (.I0(tx_xgmii_data_reg2[62]),
        .I1(tx_xgmii_data_reg2[61]),
        .I2(tx_xgmii_data_reg2[63]),
        .I3(\c7[4]_i_3_n_0 ),
        .I4(tx_xgmii_ctrl_reg2[7]),
        .I5(data7[59]),
        .O(\c7[0]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hFF3D)) 
    \c7[1]_i_1 
       (.I0(tx_xgmii_data_reg2[59]),
        .I1(tx_xgmii_data_reg2[61]),
        .I2(tx_xgmii_data_reg2[63]),
        .I3(\c7[1]_i_2_n_0 ),
        .O(\c7[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFF7FEFFFFFFFFFFF)) 
    \c7[1]_i_2 
       (.I0(tx_xgmii_data_reg2[56]),
        .I1(tx_xgmii_data_reg2[57]),
        .I2(tx_xgmii_data_reg2[58]),
        .I3(tx_xgmii_data_reg2[59]),
        .I4(tx_xgmii_data_reg2[62]),
        .I5(tx_xgmii_data_reg2[60]),
        .O(\c7[1]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0002000000000000)) 
    \c7[2]_i_1 
       (.I0(\c7[4]_i_2_n_0 ),
        .I1(tx_xgmii_data_reg2[62]),
        .I2(tx_xgmii_data_reg2[61]),
        .I3(tx_xgmii_data_reg2[63]),
        .I4(tx_xgmii_ctrl_reg2[7]),
        .I5(tx_xgmii_data_reg2[58]),
        .O(\c7[2]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFBBFFFBF)) 
    \c7[2]_i_2 
       (.I0(\c7[2]_i_3_n_0 ),
        .I1(tx_xgmii_data_reg2[61]),
        .I2(tx_xgmii_data_reg2[59]),
        .I3(tx_xgmii_data_reg2[63]),
        .I4(tx_xgmii_data_reg2[62]),
        .O(\c7[2]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFF7FF7FF)) 
    \c7[2]_i_3 
       (.I0(tx_xgmii_data_reg2[60]),
        .I1(tx_xgmii_data_reg2[58]),
        .I2(tx_xgmii_data_reg2[57]),
        .I3(tx_xgmii_data_reg2[59]),
        .I4(tx_xgmii_data_reg2[56]),
        .O(\c7[2]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFDFFFFC3CDC3CF)) 
    \c7[3]_i_1 
       (.I0(\c7[4]_i_2_n_0 ),
        .I1(tx_xgmii_data_reg2[62]),
        .I2(tx_xgmii_data_reg2[61]),
        .I3(tx_xgmii_data_reg2[63]),
        .I4(tx_xgmii_data_reg2[58]),
        .I5(\c7[4]_i_3_n_0 ),
        .O(\c7[3]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFDFFFFF33CF33C)) 
    \c7[4]_i_1 
       (.I0(\c7[4]_i_2_n_0 ),
        .I1(tx_xgmii_data_reg2[62]),
        .I2(tx_xgmii_data_reg2[61]),
        .I3(tx_xgmii_data_reg2[63]),
        .I4(tx_xgmii_data_reg2[58]),
        .I5(\c7[4]_i_3_n_0 ),
        .O(\c7[4]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h0040)) 
    \c7[4]_i_2 
       (.I0(tx_xgmii_data_reg2[60]),
        .I1(tx_xgmii_data_reg2[57]),
        .I2(tx_xgmii_data_reg2[56]),
        .I3(tx_xgmii_data_reg2[59]),
        .O(\c7[4]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFF7F)) 
    \c7[4]_i_3 
       (.I0(tx_xgmii_data_reg2[59]),
        .I1(tx_xgmii_data_reg2[58]),
        .I2(tx_xgmii_data_reg2[60]),
        .I3(tx_xgmii_data_reg2[56]),
        .I4(tx_xgmii_data_reg2[57]),
        .O(\c7[4]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'h00E2)) 
    \c7[5]_i_1 
       (.I0(data7[64]),
        .I1(tx_xgmii_ctrl_reg2[7]),
        .I2(\c7[5]_i_2_n_0 ),
        .I3(\c7[5]_i_3_n_0 ),
        .O(\c7[5]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h0000600A)) 
    \c7[5]_i_2 
       (.I0(tx_xgmii_data_reg2[59]),
        .I1(tx_xgmii_data_reg2[61]),
        .I2(tx_xgmii_data_reg2[63]),
        .I3(tx_xgmii_data_reg2[62]),
        .I4(\c7[2]_i_3_n_0 ),
        .O(\c7[5]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000018100008)) 
    \c7[5]_i_3 
       (.I0(tx_xgmii_data_reg2[60]),
        .I1(tx_xgmii_data_reg2[59]),
        .I2(tx_xgmii_data_reg2[56]),
        .I3(tx_xgmii_data_reg2[61]),
        .I4(tx_xgmii_data_reg2[57]),
        .I5(\c7[5]_i_4_n_0 ),
        .O(\c7[5]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFFFFFF7FF7)) 
    \c7[5]_i_4 
       (.I0(tx_xgmii_ctrl_reg2[7]),
        .I1(tx_xgmii_data_reg2[58]),
        .I2(tx_xgmii_data_reg2[60]),
        .I3(tx_xgmii_data_reg2[63]),
        .I4(tx_xgmii_data_reg2[62]),
        .I5(tx_xgmii_data_reg2[61]),
        .O(\c7[5]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h2E2200002E222E22)) 
    \c7[6]_i_1 
       (.I0(data7[65]),
        .I1(tx_xgmii_ctrl_reg2[7]),
        .I2(\c7[2]_i_3_n_0 ),
        .I3(\c7[6]_i_2_n_0 ),
        .I4(\c7[6]_i_3_n_0 ),
        .I5(\c7[6]_i_4_n_0 ),
        .O(\c7[6]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h6A8A)) 
    \c7[6]_i_2 
       (.I0(tx_xgmii_data_reg2[59]),
        .I1(tx_xgmii_data_reg2[61]),
        .I2(tx_xgmii_data_reg2[62]),
        .I3(tx_xgmii_data_reg2[63]),
        .O(\c7[6]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h6AFEFFFFFFFFFFFF)) 
    \c7[6]_i_3 
       (.I0(tx_xgmii_data_reg2[62]),
        .I1(tx_xgmii_data_reg2[61]),
        .I2(tx_xgmii_data_reg2[63]),
        .I3(tx_xgmii_data_reg2[60]),
        .I4(tx_xgmii_ctrl_reg2[7]),
        .I5(tx_xgmii_data_reg2[58]),
        .O(\c7[6]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'h090000C0)) 
    \c7[6]_i_4 
       (.I0(tx_xgmii_data_reg2[62]),
        .I1(tx_xgmii_data_reg2[57]),
        .I2(tx_xgmii_data_reg2[56]),
        .I3(tx_xgmii_data_reg2[59]),
        .I4(tx_xgmii_data_reg2[60]),
        .O(\c7[6]_i_4_n_0 ));
  FDRE \c7_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\c7[0]_i_1_n_0 ),
        .Q(data7[59]),
        .R(1'b0));
  FDRE \c7_reg[1] 
       (.C(coreclk),
        .CE(tx_xgmii_ctrl_reg2[7]),
        .D(\c7[1]_i_1_n_0 ),
        .Q(data7[60]),
        .R(\c7[2]_i_1_n_0 ));
  FDRE \c7_reg[2] 
       (.C(coreclk),
        .CE(tx_xgmii_ctrl_reg2[7]),
        .D(\c7[2]_i_2_n_0 ),
        .Q(data7[61]),
        .R(\c7[2]_i_1_n_0 ));
  FDRE \c7_reg[3] 
       (.C(coreclk),
        .CE(tx_xgmii_ctrl_reg2[7]),
        .D(\c7[3]_i_1_n_0 ),
        .Q(data7[62]),
        .R(1'b0));
  FDRE \c7_reg[4] 
       (.C(coreclk),
        .CE(tx_xgmii_ctrl_reg2[7]),
        .D(\c7[4]_i_1_n_0 ),
        .Q(data7[63]),
        .R(1'b0));
  FDRE \c7_reg[5] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\c7[5]_i_1_n_0 ),
        .Q(data7[64]),
        .R(1'b0));
  FDRE \c7_reg[6] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\c7[6]_i_1_n_0 ),
        .Q(data7[65]),
        .R(1'b0));
  LUT1 #(
    .INIT(2'h1)) 
    \d0[7]_i_1 
       (.I0(tx_xgmii_ctrl_reg2[0]),
        .O(\d0[7]_i_1_n_0 ));
  FDRE \d0_reg[0] 
       (.C(coreclk),
        .CE(\d0[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[0]),
        .Q(data7[10]),
        .R(1'b0));
  FDRE \d0_reg[1] 
       (.C(coreclk),
        .CE(\d0[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[1]),
        .Q(data7[11]),
        .R(1'b0));
  FDRE \d0_reg[2] 
       (.C(coreclk),
        .CE(\d0[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[2]),
        .Q(data7[12]),
        .R(1'b0));
  FDRE \d0_reg[3] 
       (.C(coreclk),
        .CE(\d0[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[3]),
        .Q(data7[13]),
        .R(1'b0));
  FDRE \d0_reg[4] 
       (.C(coreclk),
        .CE(\d0[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[4]),
        .Q(data7[14]),
        .R(1'b0));
  FDRE \d0_reg[5] 
       (.C(coreclk),
        .CE(\d0[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[5]),
        .Q(data7[15]),
        .R(1'b0));
  FDRE \d0_reg[6] 
       (.C(coreclk),
        .CE(\d0[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[6]),
        .Q(data7[16]),
        .R(1'b0));
  FDRE \d0_reg[7] 
       (.C(coreclk),
        .CE(\d0[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[7]),
        .Q(data7[17]),
        .R(1'b0));
  LUT1 #(
    .INIT(2'h1)) 
    \d1[7]_i_1 
       (.I0(tx_xgmii_ctrl_reg2[1]),
        .O(\d1[7]_i_1_n_0 ));
  FDRE \d1_reg[0] 
       (.C(coreclk),
        .CE(\d1[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[8]),
        .Q(data7[18]),
        .R(1'b0));
  FDRE \d1_reg[1] 
       (.C(coreclk),
        .CE(\d1[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[9]),
        .Q(data7[19]),
        .R(1'b0));
  FDRE \d1_reg[2] 
       (.C(coreclk),
        .CE(\d1[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[10]),
        .Q(data7[20]),
        .R(1'b0));
  FDRE \d1_reg[3] 
       (.C(coreclk),
        .CE(\d1[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[11]),
        .Q(data7[21]),
        .R(1'b0));
  FDRE \d1_reg[4] 
       (.C(coreclk),
        .CE(\d1[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[12]),
        .Q(data7[22]),
        .R(1'b0));
  FDRE \d1_reg[5] 
       (.C(coreclk),
        .CE(\d1[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[13]),
        .Q(data7[23]),
        .R(1'b0));
  FDRE \d1_reg[6] 
       (.C(coreclk),
        .CE(\d1[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[14]),
        .Q(data7[24]),
        .R(1'b0));
  FDRE \d1_reg[7] 
       (.C(coreclk),
        .CE(\d1[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[15]),
        .Q(data7[25]),
        .R(1'b0));
  LUT1 #(
    .INIT(2'h1)) 
    \d2[7]_i_1 
       (.I0(tx_xgmii_ctrl_reg2[2]),
        .O(\d2[7]_i_1_n_0 ));
  FDRE \d2_reg[0] 
       (.C(coreclk),
        .CE(\d2[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[16]),
        .Q(data7[26]),
        .R(1'b0));
  FDRE \d2_reg[1] 
       (.C(coreclk),
        .CE(\d2[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[17]),
        .Q(data7[27]),
        .R(1'b0));
  FDRE \d2_reg[2] 
       (.C(coreclk),
        .CE(\d2[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[18]),
        .Q(data7[28]),
        .R(1'b0));
  FDRE \d2_reg[3] 
       (.C(coreclk),
        .CE(\d2[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[19]),
        .Q(data7[29]),
        .R(1'b0));
  FDRE \d2_reg[4] 
       (.C(coreclk),
        .CE(\d2[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[20]),
        .Q(data7[30]),
        .R(1'b0));
  FDRE \d2_reg[5] 
       (.C(coreclk),
        .CE(\d2[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[21]),
        .Q(data7[31]),
        .R(1'b0));
  FDRE \d2_reg[6] 
       (.C(coreclk),
        .CE(\d2[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[22]),
        .Q(data7[32]),
        .R(1'b0));
  FDRE \d2_reg[7] 
       (.C(coreclk),
        .CE(\d2[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[23]),
        .Q(data7[33]),
        .R(1'b0));
  LUT1 #(
    .INIT(2'h1)) 
    \d3[7]_i_1 
       (.I0(tx_xgmii_ctrl_reg2[3]),
        .O(\d3[7]_i_1_n_0 ));
  FDRE \d3_reg[0] 
       (.C(coreclk),
        .CE(\d3[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[24]),
        .Q(data7[34]),
        .R(1'b0));
  FDRE \d3_reg[1] 
       (.C(coreclk),
        .CE(\d3[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[25]),
        .Q(data7[35]),
        .R(1'b0));
  FDRE \d3_reg[2] 
       (.C(coreclk),
        .CE(\d3[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[26]),
        .Q(data7[36]),
        .R(1'b0));
  FDRE \d3_reg[3] 
       (.C(coreclk),
        .CE(\d3[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[27]),
        .Q(data7[37]),
        .R(1'b0));
  FDRE \d3_reg[4] 
       (.C(coreclk),
        .CE(\d3[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[28]),
        .Q(data7[38]),
        .R(1'b0));
  FDRE \d3_reg[5] 
       (.C(coreclk),
        .CE(\d3[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[29]),
        .Q(data7[39]),
        .R(1'b0));
  FDRE \d3_reg[6] 
       (.C(coreclk),
        .CE(\d3[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[30]),
        .Q(data7[40]),
        .R(1'b0));
  FDRE \d3_reg[7] 
       (.C(coreclk),
        .CE(\d3[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[31]),
        .Q(data7[41]),
        .R(1'b0));
  LUT1 #(
    .INIT(2'h1)) 
    \d4[7]_i_1 
       (.I0(tx_xgmii_ctrl_reg2[4]),
        .O(\d4[7]_i_1_n_0 ));
  FDRE \d4_reg[0] 
       (.C(coreclk),
        .CE(\d4[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[32]),
        .Q(data7[42]),
        .R(1'b0));
  FDRE \d4_reg[1] 
       (.C(coreclk),
        .CE(\d4[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[33]),
        .Q(data7[43]),
        .R(1'b0));
  FDRE \d4_reg[2] 
       (.C(coreclk),
        .CE(\d4[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[34]),
        .Q(data7[44]),
        .R(1'b0));
  FDRE \d4_reg[3] 
       (.C(coreclk),
        .CE(\d4[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[35]),
        .Q(data7[45]),
        .R(1'b0));
  FDRE \d4_reg[4] 
       (.C(coreclk),
        .CE(\d4[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[36]),
        .Q(data7[46]),
        .R(1'b0));
  FDRE \d4_reg[5] 
       (.C(coreclk),
        .CE(\d4[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[37]),
        .Q(data7[47]),
        .R(1'b0));
  FDRE \d4_reg[6] 
       (.C(coreclk),
        .CE(\d4[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[38]),
        .Q(data7[48]),
        .R(1'b0));
  FDRE \d4_reg[7] 
       (.C(coreclk),
        .CE(\d4[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[39]),
        .Q(data7[49]),
        .R(1'b0));
  LUT1 #(
    .INIT(2'h1)) 
    \d5[7]_i_1 
       (.I0(tx_xgmii_ctrl_reg2[5]),
        .O(\d5[7]_i_1_n_0 ));
  FDRE \d5_reg[0] 
       (.C(coreclk),
        .CE(\d5[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[40]),
        .Q(data7[50]),
        .R(1'b0));
  FDRE \d5_reg[1] 
       (.C(coreclk),
        .CE(\d5[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[41]),
        .Q(data7[51]),
        .R(1'b0));
  FDRE \d5_reg[2] 
       (.C(coreclk),
        .CE(\d5[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[42]),
        .Q(data7[52]),
        .R(1'b0));
  FDRE \d5_reg[3] 
       (.C(coreclk),
        .CE(\d5[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[43]),
        .Q(data7[53]),
        .R(1'b0));
  FDRE \d5_reg[4] 
       (.C(coreclk),
        .CE(\d5[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[44]),
        .Q(data7[54]),
        .R(1'b0));
  FDRE \d5_reg[5] 
       (.C(coreclk),
        .CE(\d5[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[45]),
        .Q(data7[55]),
        .R(1'b0));
  FDRE \d5_reg[6] 
       (.C(coreclk),
        .CE(\d5[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[46]),
        .Q(data7[56]),
        .R(1'b0));
  FDRE \d5_reg[7] 
       (.C(coreclk),
        .CE(\d5[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[47]),
        .Q(data7[57]),
        .R(1'b0));
  LUT1 #(
    .INIT(2'h1)) 
    \d6[7]_i_1 
       (.I0(tx_xgmii_ctrl_reg2[6]),
        .O(\d6[7]_i_1_n_0 ));
  FDRE \d6_reg[0] 
       (.C(coreclk),
        .CE(\d6[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[48]),
        .Q(d6[0]),
        .R(1'b0));
  FDRE \d6_reg[1] 
       (.C(coreclk),
        .CE(\d6[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[49]),
        .Q(d6[1]),
        .R(1'b0));
  FDRE \d6_reg[2] 
       (.C(coreclk),
        .CE(\d6[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[50]),
        .Q(d6[2]),
        .R(1'b0));
  FDRE \d6_reg[3] 
       (.C(coreclk),
        .CE(\d6[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[51]),
        .Q(d6[3]),
        .R(1'b0));
  FDRE \d6_reg[4] 
       (.C(coreclk),
        .CE(\d6[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[52]),
        .Q(d6[4]),
        .R(1'b0));
  FDRE \d6_reg[5] 
       (.C(coreclk),
        .CE(\d6[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[53]),
        .Q(d6[5]),
        .R(1'b0));
  FDRE \d6_reg[6] 
       (.C(coreclk),
        .CE(\d6[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[54]),
        .Q(d6[6]),
        .R(1'b0));
  FDRE \d6_reg[7] 
       (.C(coreclk),
        .CE(\d6[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[55]),
        .Q(d6[7]),
        .R(1'b0));
  LUT1 #(
    .INIT(2'h1)) 
    \d7[7]_i_1 
       (.I0(tx_xgmii_ctrl_reg2[7]),
        .O(\d7[7]_i_1_n_0 ));
  FDRE \d7_reg[0] 
       (.C(coreclk),
        .CE(\d7[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[56]),
        .Q(d7[0]),
        .R(1'b0));
  FDRE \d7_reg[1] 
       (.C(coreclk),
        .CE(\d7[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[57]),
        .Q(d7[1]),
        .R(1'b0));
  FDRE \d7_reg[2] 
       (.C(coreclk),
        .CE(\d7[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[58]),
        .Q(d7[2]),
        .R(1'b0));
  FDRE \d7_reg[3] 
       (.C(coreclk),
        .CE(\d7[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[59]),
        .Q(d7[3]),
        .R(1'b0));
  FDRE \d7_reg[4] 
       (.C(coreclk),
        .CE(\d7[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[60]),
        .Q(d7[4]),
        .R(1'b0));
  FDRE \d7_reg[5] 
       (.C(coreclk),
        .CE(\d7[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[61]),
        .Q(d7[5]),
        .R(1'b0));
  FDRE \d7_reg[6] 
       (.C(coreclk),
        .CE(\d7[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[62]),
        .Q(d7[6]),
        .R(1'b0));
  FDRE \d7_reg[7] 
       (.C(coreclk),
        .CE(\d7[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[63]),
        .Q(d7[7]),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hAAAAAAAA8EAAAAAA)) 
    \o0[3]_i_1 
       (.I0(\o0_reg_n_0_[3] ),
        .I1(tx_xgmii_data_reg2[6]),
        .I2(tx_xgmii_data_reg2[7]),
        .I3(\c0[4]_i_6_n_0 ),
        .I4(tx_xgmii_ctrl_reg2[0]),
        .I5(tx_xgmii_data_reg2[5]),
        .O(\o0[3]_i_1_n_0 ));
  FDRE \o0_reg[3] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\o0[3]_i_1_n_0 ),
        .Q(\o0_reg_n_0_[3] ),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hAAAAAAAA8EAAAAAA)) 
    \o4[3]_i_1 
       (.I0(\o4_reg_n_0_[3] ),
        .I1(tx_xgmii_data_reg2[38]),
        .I2(tx_xgmii_data_reg2[39]),
        .I3(\c4[4]_i_6_n_0 ),
        .I4(tx_xgmii_ctrl_reg2[4]),
        .I5(tx_xgmii_data_reg2[37]),
        .O(\o4[3]_i_1_n_0 ));
  FDRE \o4_reg[3] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\o4[3]_i_1_n_0 ),
        .Q(\o4_reg_n_0_[3] ),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair261" *) 
  LUT4 #(
    .INIT(16'h1400)) 
    o_code_c0_i_1
       (.I0(\tx_xgmii_data_reg2_reg[63]_0 [5]),
        .I1(\tx_xgmii_data_reg2_reg[63]_0 [6]),
        .I2(\tx_xgmii_data_reg2_reg[63]_0 [7]),
        .I3(o_code_c0_i_2_n_0),
        .O(o_code_c00));
  LUT5 #(
    .INIT(32'h00004000)) 
    o_code_c0_i_2
       (.I0(\tx_xgmii_data_reg2_reg[63]_0 [1]),
        .I1(\tx_xgmii_data_reg2_reg[63]_0 [3]),
        .I2(\tx_xgmii_data_reg2_reg[63]_0 [4]),
        .I3(\tx_xgmii_data_reg2_reg[63]_0 [2]),
        .I4(\tx_xgmii_data_reg2_reg[63]_0 [0]),
        .O(o_code_c0_i_2_n_0));
  FDRE #(
    .INIT(1'b0)) 
    o_code_c0_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(o_code_c00),
        .Q(o_code_c0),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair260" *) 
  LUT4 #(
    .INIT(16'h1400)) 
    o_code_c4_i_1
       (.I0(\tx_xgmii_data_reg2_reg[63]_0 [37]),
        .I1(\tx_xgmii_data_reg2_reg[63]_0 [39]),
        .I2(\tx_xgmii_data_reg2_reg[63]_0 [38]),
        .I3(o_code_c4_i_2_n_0),
        .O(o_code_c40));
  (* SOFT_HLUTNM = "soft_lutpair243" *) 
  LUT5 #(
    .INIT(32'h00004000)) 
    o_code_c4_i_2
       (.I0(\tx_xgmii_data_reg2_reg[63]_0 [33]),
        .I1(\tx_xgmii_data_reg2_reg[63]_0 [36]),
        .I2(\tx_xgmii_data_reg2_reg[63]_0 [35]),
        .I3(\tx_xgmii_data_reg2_reg[63]_0 [34]),
        .I4(\tx_xgmii_data_reg2_reg[63]_0 [32]),
        .O(o_code_c4_i_2_n_0));
  FDRE #(
    .INIT(1'b0)) 
    o_code_c4_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(o_code_c40),
        .Q(o_code_c4),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h0800000000000000)) 
    s_code_c0_i_1
       (.I0(\tx_xgmii_data_reg2_reg[63]_0 [4]),
        .I1(\tx_xgmii_data_reg2_reg[63]_0 [3]),
        .I2(\tx_xgmii_data_reg2_reg[63]_0 [2]),
        .I3(\tx_xgmii_data_reg2_reg[63]_0 [1]),
        .I4(\tx_xgmii_data_reg2_reg[63]_0 [0]),
        .I5(\t_code[0]_i_2_n_0 ),
        .O(s_code_c0_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    s_code_c0_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(s_code_c0_i_1_n_0),
        .Q(s_code_c0_reg_n_0),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h0000400000000000)) 
    s_code_c4_i_1
       (.I0(s_code_c4_i_2_n_0),
        .I1(\tx_xgmii_data_reg2_reg[63]_0 [35]),
        .I2(\tx_xgmii_data_reg2_reg[63]_0 [36]),
        .I3(\tx_xgmii_data_reg2_reg[63]_0 [37]),
        .I4(\tx_xgmii_data_reg2_reg[63]_0 [34]),
        .I5(s_code_c4_i_3_n_0),
        .O(s_code_c4_i_1_n_0));
  (* SOFT_HLUTNM = "soft_lutpair244" *) 
  LUT2 #(
    .INIT(4'h7)) 
    s_code_c4_i_2
       (.I0(\tx_xgmii_data_reg2_reg[63]_0 [39]),
        .I1(\tx_xgmii_data_reg2_reg[63]_0 [38]),
        .O(s_code_c4_i_2_n_0));
  LUT2 #(
    .INIT(4'h8)) 
    s_code_c4_i_3
       (.I0(\tx_xgmii_data_reg2_reg[63]_0 [32]),
        .I1(\tx_xgmii_data_reg2_reg[63]_0 [33]),
        .O(s_code_c4_i_3_n_0));
  FDRE #(
    .INIT(1'b0)) 
    s_code_c4_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(s_code_c4_i_1_n_0),
        .Q(s_code_c4_reg_n_0),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h0800000000000000)) 
    \t_code[0]_i_1 
       (.I0(\tx_xgmii_data_reg2_reg[63]_0 [0]),
        .I1(\t_code[0]_i_2_n_0 ),
        .I2(\tx_xgmii_data_reg2_reg[63]_0 [1]),
        .I3(\tx_xgmii_data_reg2_reg[63]_0 [3]),
        .I4(\tx_xgmii_data_reg2_reg[63]_0 [4]),
        .I5(\tx_xgmii_data_reg2_reg[63]_0 [2]),
        .O(\t_code[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair261" *) 
  LUT3 #(
    .INIT(8'h80)) 
    \t_code[0]_i_2 
       (.I0(\tx_xgmii_data_reg2_reg[63]_0 [5]),
        .I1(\tx_xgmii_data_reg2_reg[63]_0 [7]),
        .I2(\tx_xgmii_data_reg2_reg[63]_0 [6]),
        .O(\t_code[0]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0800000000000000)) 
    \t_code[1]_i_1 
       (.I0(\tx_xgmii_data_reg2_reg[63]_0 [15]),
        .I1(\tx_xgmii_data_reg2_reg[63]_0 [14]),
        .I2(\tx_xgmii_data_reg2_reg[63]_0 [9]),
        .I3(\tx_xgmii_data_reg2_reg[63]_0 [13]),
        .I4(\tx_xgmii_data_reg2_reg[63]_0 [8]),
        .I5(\t_code[1]_i_2_n_0 ),
        .O(\t_code[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair241" *) 
  LUT3 #(
    .INIT(8'h80)) 
    \t_code[1]_i_2 
       (.I0(\tx_xgmii_data_reg2_reg[63]_0 [12]),
        .I1(\tx_xgmii_data_reg2_reg[63]_0 [11]),
        .I2(\tx_xgmii_data_reg2_reg[63]_0 [10]),
        .O(\t_code[1]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0800000000000000)) 
    \t_code[2]_i_1 
       (.I0(\tx_xgmii_data_reg2_reg[63]_0 [23]),
        .I1(\tx_xgmii_data_reg2_reg[63]_0 [22]),
        .I2(\tx_xgmii_data_reg2_reg[63]_0 [17]),
        .I3(\tx_xgmii_data_reg2_reg[63]_0 [21]),
        .I4(\tx_xgmii_data_reg2_reg[63]_0 [16]),
        .I5(\t_code[2]_i_2_n_0 ),
        .O(\t_code[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair240" *) 
  LUT3 #(
    .INIT(8'h80)) 
    \t_code[2]_i_2 
       (.I0(\tx_xgmii_data_reg2_reg[63]_0 [20]),
        .I1(\tx_xgmii_data_reg2_reg[63]_0 [19]),
        .I2(\tx_xgmii_data_reg2_reg[63]_0 [18]),
        .O(\t_code[2]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0800000000000000)) 
    \t_code[3]_i_1 
       (.I0(\tx_xgmii_data_reg2_reg[63]_0 [31]),
        .I1(\tx_xgmii_data_reg2_reg[63]_0 [30]),
        .I2(\tx_xgmii_data_reg2_reg[63]_0 [25]),
        .I3(\tx_xgmii_data_reg2_reg[63]_0 [29]),
        .I4(\tx_xgmii_data_reg2_reg[63]_0 [24]),
        .I5(\t_code[3]_i_2_n_0 ),
        .O(\t_code[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair245" *) 
  LUT3 #(
    .INIT(8'h80)) 
    \t_code[3]_i_2 
       (.I0(\tx_xgmii_data_reg2_reg[63]_0 [28]),
        .I1(\tx_xgmii_data_reg2_reg[63]_0 [27]),
        .I2(\tx_xgmii_data_reg2_reg[63]_0 [26]),
        .O(\t_code[3]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair244" *) 
  LUT5 #(
    .INIT(32'h80000000)) 
    \t_code[4]_i_1 
       (.I0(\tx_xgmii_data_reg2_reg[63]_0 [39]),
        .I1(\tx_xgmii_data_reg2_reg[63]_0 [38]),
        .I2(\tx_xgmii_data_reg2_reg[63]_0 [32]),
        .I3(\tx_xgmii_data_reg2_reg[63]_0 [37]),
        .I4(\t_code[4]_i_2_n_0 ),
        .O(\t_code[4]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair243" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \t_code[4]_i_2 
       (.I0(\tx_xgmii_data_reg2_reg[63]_0 [34]),
        .I1(\tx_xgmii_data_reg2_reg[63]_0 [35]),
        .I2(\tx_xgmii_data_reg2_reg[63]_0 [36]),
        .I3(\tx_xgmii_data_reg2_reg[63]_0 [33]),
        .O(\t_code[4]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0800000000000000)) 
    \t_code[5]_i_1 
       (.I0(\tx_xgmii_data_reg2_reg[63]_0 [47]),
        .I1(\tx_xgmii_data_reg2_reg[63]_0 [46]),
        .I2(\tx_xgmii_data_reg2_reg[63]_0 [41]),
        .I3(\tx_xgmii_data_reg2_reg[63]_0 [45]),
        .I4(\tx_xgmii_data_reg2_reg[63]_0 [40]),
        .I5(\t_code[5]_i_2_n_0 ),
        .O(\t_code[5]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair248" *) 
  LUT3 #(
    .INIT(8'h80)) 
    \t_code[5]_i_2 
       (.I0(\tx_xgmii_data_reg2_reg[63]_0 [44]),
        .I1(\tx_xgmii_data_reg2_reg[63]_0 [43]),
        .I2(\tx_xgmii_data_reg2_reg[63]_0 [42]),
        .O(\t_code[5]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0800000000000000)) 
    \t_code[6]_i_1 
       (.I0(\tx_xgmii_data_reg2_reg[63]_0 [55]),
        .I1(\tx_xgmii_data_reg2_reg[63]_0 [54]),
        .I2(\tx_xgmii_data_reg2_reg[63]_0 [49]),
        .I3(\tx_xgmii_data_reg2_reg[63]_0 [53]),
        .I4(\tx_xgmii_data_reg2_reg[63]_0 [48]),
        .I5(\t_code[6]_i_2_n_0 ),
        .O(\t_code[6]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair246" *) 
  LUT3 #(
    .INIT(8'h80)) 
    \t_code[6]_i_2 
       (.I0(\tx_xgmii_data_reg2_reg[63]_0 [52]),
        .I1(\tx_xgmii_data_reg2_reg[63]_0 [51]),
        .I2(\tx_xgmii_data_reg2_reg[63]_0 [50]),
        .O(\t_code[6]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0800000000000000)) 
    \t_code[7]_i_1 
       (.I0(\tx_xgmii_data_reg2_reg[63]_0 [63]),
        .I1(\tx_xgmii_data_reg2_reg[63]_0 [62]),
        .I2(\tx_xgmii_data_reg2_reg[63]_0 [57]),
        .I3(\tx_xgmii_data_reg2_reg[63]_0 [61]),
        .I4(\tx_xgmii_data_reg2_reg[63]_0 [56]),
        .I5(\t_code[7]_i_2_n_0 ),
        .O(\t_code[7]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair253" *) 
  LUT3 #(
    .INIT(8'h80)) 
    \t_code[7]_i_2 
       (.I0(\tx_xgmii_data_reg2_reg[63]_0 [58]),
        .I1(\tx_xgmii_data_reg2_reg[63]_0 [60]),
        .I2(\tx_xgmii_data_reg2_reg[63]_0 [59]),
        .O(\t_code[7]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \t_code_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\t_code[0]_i_1_n_0 ),
        .Q(\t_code_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \t_code_reg[1] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\t_code[1]_i_1_n_0 ),
        .Q(p_20_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \t_code_reg[2] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\t_code[2]_i_1_n_0 ),
        .Q(p_17_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \t_code_reg[3] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\t_code[3]_i_1_n_0 ),
        .Q(p_14_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \t_code_reg[4] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\t_code[4]_i_1_n_0 ),
        .Q(p_12_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \t_code_reg[5] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\t_code[5]_i_1_n_0 ),
        .Q(p_9_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \t_code_reg[6] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\t_code[6]_i_1_n_0 ),
        .Q(\t_code_reg_n_0_[6] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \t_code_reg[7] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\t_code[7]_i_1_n_0 ),
        .Q(p_3_in),
        .R(1'b0));
  FDRE \t_type_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\t_type_reg_reg_n_0_[0] ),
        .Q(\t_type_reg[2]_0 [0]),
        .R(out));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFAEFFAA)) 
    \t_type_reg[0]_i_1 
       (.I0(\t_type_reg[1]_i_6_n_0 ),
        .I1(\t_type_reg[1]_i_5_n_0 ),
        .I2(\t_type_reg[0]_i_2_n_0 ),
        .I3(\t_type_reg[0]_i_3_n_0 ),
        .I4(\t_type_reg[1]_i_3_n_0 ),
        .I5(\t_type_reg[1]_i_2_n_0 ),
        .O(\t_type_reg[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \t_type_reg[0]_i_2 
       (.I0(tx_xgmii_ctrl_reg1[0]),
        .I1(\block_field[5]_i_3_n_0 ),
        .O(\t_type_reg[0]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h00000001)) 
    \t_type_reg[0]_i_3 
       (.I0(tx_xgmii_ctrl_reg1[6]),
        .I1(tx_xgmii_ctrl_reg1[7]),
        .I2(tx_xgmii_ctrl_reg1[5]),
        .I3(tx_xgmii_ctrl_reg1[4]),
        .I4(\t_type_reg[0]_i_4_n_0 ),
        .O(\t_type_reg[0]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \t_type_reg[0]_i_4 
       (.I0(tx_xgmii_ctrl_reg1[0]),
        .I1(tx_xgmii_ctrl_reg1[1]),
        .I2(tx_xgmii_ctrl_reg1[2]),
        .I3(tx_xgmii_ctrl_reg1[3]),
        .O(\t_type_reg[0]_i_4_n_0 ));
  FDSE \t_type_reg[1] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\t_type_reg_reg_n_0_[1] ),
        .Q(\t_type_reg[2]_0 [1]),
        .S(out));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFEAAA)) 
    \t_type_reg[1]_i_1 
       (.I0(\t_type_reg[1]_i_2_n_0 ),
        .I1(\t_type_reg[1]_i_3_n_0 ),
        .I2(\t_type_reg[1]_i_4_n_0 ),
        .I3(\t_type_reg[1]_i_5_n_0 ),
        .I4(\t_type_reg[1]_i_6_n_0 ),
        .I5(\t_type_reg[1]_i_7_n_0 ),
        .O(\t_type_reg[1]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hF7)) 
    \t_type_reg[1]_i_10 
       (.I0(tx_xgmii_ctrl_reg1[6]),
        .I1(tx_xgmii_ctrl_reg1[5]),
        .I2(\block_field[0]_i_10_n_0 ),
        .O(\t_type_reg[1]_i_10_n_0 ));
  LUT4 #(
    .INIT(16'h7FFF)) 
    \t_type_reg[1]_i_11 
       (.I0(tx_xgmii_ctrl_reg1[6]),
        .I1(tx_xgmii_ctrl_reg1[7]),
        .I2(tx_xgmii_ctrl_reg1[4]),
        .I3(tx_xgmii_ctrl_reg1[5]),
        .O(\t_type_reg[1]_i_11_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair250" *) 
  LUT4 #(
    .INIT(16'h7FFF)) 
    \t_type_reg[1]_i_12 
       (.I0(\tx_xgmii_valid_code_reg_n_0_[6] ),
        .I1(p_5_in),
        .I2(\tx_xgmii_valid_code_reg_n_0_[4] ),
        .I3(\tx_xgmii_valid_code_reg_n_0_[5] ),
        .O(\t_type_reg[1]_i_12_n_0 ));
  LUT5 #(
    .INIT(32'hEFFFFFAA)) 
    \t_type_reg[1]_i_13 
       (.I0(\t_type_reg[1]_i_15_n_0 ),
        .I1(\t_type_reg[1]_i_12_n_0 ),
        .I2(o_code_c0),
        .I3(tx_xgmii_ctrl_reg1[6]),
        .I4(tx_xgmii_ctrl_reg1[7]),
        .O(\t_type_reg[1]_i_13_n_0 ));
  LUT6 #(
    .INIT(64'hDFFFFFFFFFFFFFFF)) 
    \t_type_reg[1]_i_14 
       (.I0(o_code_c4),
        .I1(s_code_c4_reg_n_0),
        .I2(\tx_xgmii_valid_code_reg_n_0_[1] ),
        .I3(\tx_xgmii_valid_code_reg_n_0_[0] ),
        .I4(\tx_xgmii_valid_code_reg_n_0_[3] ),
        .I5(\tx_xgmii_valid_code_reg_n_0_[2] ),
        .O(\t_type_reg[1]_i_14_n_0 ));
  LUT6 #(
    .INIT(64'hF0FFFFFFFFFFFFF2)) 
    \t_type_reg[1]_i_15 
       (.I0(\t_type_reg[1]_i_16_n_0 ),
        .I1(tx_xgmii_ctrl_reg1[5]),
        .I2(\t_type_reg[1]_i_17_n_0 ),
        .I3(tx_xgmii_ctrl_reg1[3]),
        .I4(tx_xgmii_ctrl_reg1[2]),
        .I5(tx_xgmii_ctrl_reg1[1]),
        .O(\t_type_reg[1]_i_15_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair264" *) 
  LUT3 #(
    .INIT(8'hDF)) 
    \t_type_reg[1]_i_16 
       (.I0(o_code_c4),
        .I1(s_code_c4_reg_n_0),
        .I2(o_code_c0),
        .O(\t_type_reg[1]_i_16_n_0 ));
  LUT4 #(
    .INIT(16'h6FFF)) 
    \t_type_reg[1]_i_17 
       (.I0(tx_xgmii_ctrl_reg1[6]),
        .I1(tx_xgmii_ctrl_reg1[5]),
        .I2(tx_xgmii_ctrl_reg1[0]),
        .I3(tx_xgmii_ctrl_reg1[4]),
        .O(\t_type_reg[1]_i_17_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAAABBBBAABA)) 
    \t_type_reg[1]_i_2 
       (.I0(\block_field[0]_i_5_n_0 ),
        .I1(\t_type_reg[1]_i_8_n_0 ),
        .I2(p_9_in),
        .I3(\t_type_reg[1]_i_9_n_0 ),
        .I4(tx_xgmii_ctrl_reg1[4]),
        .I5(\t_type_reg[1]_i_10_n_0 ),
        .O(\t_type_reg[1]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h0D010000)) 
    \t_type_reg[1]_i_3 
       (.I0(tx_xgmii_ctrl_reg1[0]),
        .I1(tx_xgmii_ctrl_reg1[1]),
        .I2(\t_type_reg[1]_i_11_n_0 ),
        .I3(tx_xgmii_ctrl_reg1[2]),
        .I4(tx_xgmii_ctrl_reg1[3]),
        .O(\t_type_reg[1]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair236" *) 
  LUT2 #(
    .INIT(4'h1)) 
    \t_type_reg[1]_i_4 
       (.I0(\t_type_reg[0]_i_2_n_0 ),
        .I1(\t_type_reg[0]_i_3_n_0 ),
        .O(\t_type_reg[1]_i_4_n_0 ));
  LUT4 #(
    .INIT(16'h002F)) 
    \t_type_reg[1]_i_5 
       (.I0(p_14_in),
        .I1(\t_type_reg[1]_i_12_n_0 ),
        .I2(\block_field[2]_i_3_n_0 ),
        .I3(\block_field[2]_i_2_n_0 ),
        .O(\t_type_reg[1]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h2000000000000000)) 
    \t_type_reg[1]_i_6 
       (.I0(\block_field[4]_i_6_n_0 ),
        .I1(\t_type_reg[1]_i_12_n_0 ),
        .I2(\tx_xgmii_valid_code_reg_n_0_[1] ),
        .I3(\tx_xgmii_valid_code_reg_n_0_[3] ),
        .I4(\tx_xgmii_valid_code_reg_n_0_[2] ),
        .I5(\t_code_reg_n_0_[0] ),
        .O(\t_type_reg[1]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF111511151115)) 
    \t_type_reg[1]_i_7 
       (.I0(\t_type_reg[1]_i_13_n_0 ),
        .I1(tx_xgmii_ctrl_reg1[3]),
        .I2(\t_type_reg[1]_i_14_n_0 ),
        .I3(tx_xgmii_ctrl_reg1[5]),
        .I4(\t_type_reg[2]_i_3_n_0 ),
        .I5(\t_type_reg[0]_i_2_n_0 ),
        .O(\t_type_reg[1]_i_7_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair233" *) 
  LUT5 #(
    .INIT(32'h7FFF0000)) 
    \t_type_reg[1]_i_8 
       (.I0(\tx_xgmii_valid_code_reg_n_0_[5] ),
        .I1(\tx_xgmii_valid_code_reg_n_0_[6] ),
        .I2(p_5_in),
        .I3(p_12_in),
        .I4(\block_field[4]_i_7_n_0 ),
        .O(\t_type_reg[1]_i_8_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair233" *) 
  LUT2 #(
    .INIT(4'h7)) 
    \t_type_reg[1]_i_9 
       (.I0(p_5_in),
        .I1(\tx_xgmii_valid_code_reg_n_0_[6] ),
        .O(\t_type_reg[1]_i_9_n_0 ));
  FDRE \t_type_reg[2] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\t_type_reg_reg_n_0_[2] ),
        .Q(\t_type_reg[2]_0 [2]),
        .R(out));
  LUT6 #(
    .INIT(64'h080808080808082A)) 
    \t_type_reg[2]_i_1 
       (.I0(\t_type_reg[2]_i_2_n_0 ),
        .I1(\t_type_reg[0]_i_2_n_0 ),
        .I2(\t_type_reg[2]_i_3_n_0 ),
        .I3(\t_type_reg[2]_i_4_n_0 ),
        .I4(\t_type_reg[0]_i_3_n_0 ),
        .I5(\t_type_reg[1]_i_5_n_0 ),
        .O(\t_type_reg[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h1FFFFFFFFFFFFFFF)) 
    \t_type_reg[2]_i_10 
       (.I0(o_code_c4),
        .I1(s_code_c4_reg_n_0),
        .I2(\tx_xgmii_valid_code_reg_n_0_[1] ),
        .I3(\tx_xgmii_valid_code_reg_n_0_[0] ),
        .I4(\tx_xgmii_valid_code_reg_n_0_[3] ),
        .I5(\tx_xgmii_valid_code_reg_n_0_[2] ),
        .O(\t_type_reg[2]_i_10_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair264" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    \t_type_reg[2]_i_11 
       (.I0(o_code_c0),
        .I1(o_code_c4),
        .I2(s_code_c4_reg_n_0),
        .O(\t_type_reg[2]_i_11_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair265" *) 
  LUT3 #(
    .INIT(8'h01)) 
    \t_type_reg[2]_i_2 
       (.I0(\block_field[0]_i_7_n_0 ),
        .I1(\t_type_reg[0]_i_3_n_0 ),
        .I2(out),
        .O(\t_type_reg[2]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000040000000)) 
    \t_type_reg[2]_i_3 
       (.I0(\t_type_reg[1]_i_12_n_0 ),
        .I1(\tx_xgmii_valid_code_reg_n_0_[2] ),
        .I2(\tx_xgmii_valid_code_reg_n_0_[3] ),
        .I3(\tx_xgmii_valid_code_reg_n_0_[0] ),
        .I4(\tx_xgmii_valid_code_reg_n_0_[1] ),
        .I5(\t_code_reg_n_0_[0] ),
        .O(\t_type_reg[2]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h000000000000BBFB)) 
    \t_type_reg[2]_i_4 
       (.I0(\t_type_reg[2]_i_5_n_0 ),
        .I1(\block_field[2]_i_9_n_0 ),
        .I2(\t_type_reg[2]_i_6_n_0 ),
        .I3(\t_type_reg[2]_i_7_n_0 ),
        .I4(\block_field[4]_i_11_n_0 ),
        .I5(\t_type_reg[2]_i_8_n_0 ),
        .O(\t_type_reg[2]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'h00000002)) 
    \t_type_reg[2]_i_5 
       (.I0(p_3_in),
        .I1(\block_field[0]_i_10_n_0 ),
        .I2(tx_xgmii_ctrl_reg1[4]),
        .I3(tx_xgmii_ctrl_reg1[6]),
        .I4(tx_xgmii_ctrl_reg1[5]),
        .O(\t_type_reg[2]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h80008000000F000A)) 
    \t_type_reg[2]_i_6 
       (.I0(tx_xgmii_ctrl_reg1[4]),
        .I1(\t_type_reg[2]_i_9_n_0 ),
        .I2(tx_xgmii_ctrl_reg1[5]),
        .I3(tx_xgmii_ctrl_reg1[6]),
        .I4(s_code_c0_reg_n_0),
        .I5(tx_xgmii_ctrl_reg1[7]),
        .O(\t_type_reg[2]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFB00FB0C)) 
    \t_type_reg[2]_i_7 
       (.I0(\t_type_reg[2]_i_10_n_0 ),
        .I1(tx_xgmii_ctrl_reg1[4]),
        .I2(tx_xgmii_ctrl_reg1[5]),
        .I3(tx_xgmii_ctrl_reg1[3]),
        .I4(\t_type_reg[2]_i_11_n_0 ),
        .I5(\block_field[2]_i_10_n_0 ),
        .O(\t_type_reg[2]_i_7_n_0 ));
  LUT4 #(
    .INIT(16'h2AAA)) 
    \t_type_reg[2]_i_8 
       (.I0(\block_field[3]_i_5_n_0 ),
        .I1(p_5_in),
        .I2(\tx_xgmii_valid_code_reg_n_0_[6] ),
        .I3(p_9_in),
        .O(\t_type_reg[2]_i_8_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair250" *) 
  LUT5 #(
    .INIT(32'h80000000)) 
    \t_type_reg[2]_i_9 
       (.I0(o_code_c0),
        .I1(\tx_xgmii_valid_code_reg_n_0_[5] ),
        .I2(\tx_xgmii_valid_code_reg_n_0_[4] ),
        .I3(p_5_in),
        .I4(\tx_xgmii_valid_code_reg_n_0_[6] ),
        .O(\t_type_reg[2]_i_9_n_0 ));
  FDRE \t_type_reg_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\t_type_reg[0]_i_1_n_0 ),
        .Q(\t_type_reg_reg_n_0_[0] ),
        .R(out));
  FDSE \t_type_reg_reg[1] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\t_type_reg[1]_i_1_n_0 ),
        .Q(\t_type_reg_reg_n_0_[1] ),
        .S(out));
  FDRE \t_type_reg_reg[2] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\t_type_reg[2]_i_1_n_0 ),
        .Q(\t_type_reg_reg_n_0_[2] ),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair267" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \tx_66_enc_out[0]_i_1 
       (.I0(tx_66_enc[0]),
        .I1(\tx_66_enc_out_reg[0] ),
        .O(D[0]));
  (* SOFT_HLUTNM = "soft_lutpair277" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \tx_66_enc_out[10]_i_1 
       (.I0(tx_66_enc[10]),
        .I1(\tx_66_enc_out_reg[0] ),
        .O(D[10]));
  (* SOFT_HLUTNM = "soft_lutpair278" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \tx_66_enc_out[11]_i_1 
       (.I0(tx_66_enc[11]),
        .I1(\tx_66_enc_out_reg[0] ),
        .O(D[11]));
  (* SOFT_HLUTNM = "soft_lutpair279" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \tx_66_enc_out[12]_i_1 
       (.I0(tx_66_enc[12]),
        .I1(\tx_66_enc_out_reg[0] ),
        .O(D[12]));
  (* SOFT_HLUTNM = "soft_lutpair280" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \tx_66_enc_out[13]_i_1 
       (.I0(tx_66_enc[13]),
        .I1(\tx_66_enc_out_reg[0] ),
        .O(D[13]));
  (* SOFT_HLUTNM = "soft_lutpair281" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \tx_66_enc_out[14]_i_1 
       (.I0(tx_66_enc[14]),
        .I1(\tx_66_enc_out_reg[0] ),
        .O(D[14]));
  (* SOFT_HLUTNM = "soft_lutpair282" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \tx_66_enc_out[15]_i_1 
       (.I0(tx_66_enc[15]),
        .I1(\tx_66_enc_out_reg[0] ),
        .O(D[15]));
  (* SOFT_HLUTNM = "soft_lutpair283" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \tx_66_enc_out[16]_i_1 
       (.I0(tx_66_enc[16]),
        .I1(\tx_66_enc_out_reg[0] ),
        .O(D[16]));
  (* SOFT_HLUTNM = "soft_lutpair284" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \tx_66_enc_out[17]_i_1 
       (.I0(tx_66_enc[17]),
        .I1(\tx_66_enc_out_reg[0] ),
        .O(D[17]));
  (* SOFT_HLUTNM = "soft_lutpair285" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \tx_66_enc_out[18]_i_1 
       (.I0(tx_66_enc[18]),
        .I1(\tx_66_enc_out_reg[0] ),
        .O(D[18]));
  (* SOFT_HLUTNM = "soft_lutpair286" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \tx_66_enc_out[19]_i_1 
       (.I0(tx_66_enc[19]),
        .I1(\tx_66_enc_out_reg[0] ),
        .O(D[19]));
  (* SOFT_HLUTNM = "soft_lutpair268" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \tx_66_enc_out[1]_i_1 
       (.I0(tx_66_enc[1]),
        .I1(\tx_66_enc_out_reg[0] ),
        .O(D[1]));
  (* SOFT_HLUTNM = "soft_lutpair287" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \tx_66_enc_out[20]_i_1 
       (.I0(tx_66_enc[20]),
        .I1(\tx_66_enc_out_reg[0] ),
        .O(D[20]));
  (* SOFT_HLUTNM = "soft_lutpair288" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \tx_66_enc_out[21]_i_1 
       (.I0(tx_66_enc[21]),
        .I1(\tx_66_enc_out_reg[0] ),
        .O(D[21]));
  (* SOFT_HLUTNM = "soft_lutpair289" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \tx_66_enc_out[22]_i_1 
       (.I0(tx_66_enc[22]),
        .I1(\tx_66_enc_out_reg[0] ),
        .O(D[22]));
  (* SOFT_HLUTNM = "soft_lutpair290" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \tx_66_enc_out[23]_i_1 
       (.I0(tx_66_enc[23]),
        .I1(\tx_66_enc_out_reg[0] ),
        .O(D[23]));
  (* SOFT_HLUTNM = "soft_lutpair291" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \tx_66_enc_out[24]_i_1 
       (.I0(tx_66_enc[24]),
        .I1(\tx_66_enc_out_reg[0] ),
        .O(D[24]));
  (* SOFT_HLUTNM = "soft_lutpair292" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \tx_66_enc_out[25]_i_1 
       (.I0(tx_66_enc[25]),
        .I1(\tx_66_enc_out_reg[0] ),
        .O(D[25]));
  (* SOFT_HLUTNM = "soft_lutpair293" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \tx_66_enc_out[26]_i_1 
       (.I0(tx_66_enc[26]),
        .I1(\tx_66_enc_out_reg[0] ),
        .O(D[26]));
  (* SOFT_HLUTNM = "soft_lutpair294" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \tx_66_enc_out[27]_i_1 
       (.I0(tx_66_enc[27]),
        .I1(\tx_66_enc_out_reg[0] ),
        .O(D[27]));
  (* SOFT_HLUTNM = "soft_lutpair295" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \tx_66_enc_out[28]_i_1 
       (.I0(tx_66_enc[28]),
        .I1(\tx_66_enc_out_reg[0] ),
        .O(D[28]));
  (* SOFT_HLUTNM = "soft_lutpair296" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \tx_66_enc_out[29]_i_1 
       (.I0(tx_66_enc[29]),
        .I1(\tx_66_enc_out_reg[0] ),
        .O(D[29]));
  (* SOFT_HLUTNM = "soft_lutpair269" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \tx_66_enc_out[2]_i_1 
       (.I0(tx_66_enc[2]),
        .I1(\tx_66_enc_out_reg[0] ),
        .O(D[2]));
  (* SOFT_HLUTNM = "soft_lutpair280" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \tx_66_enc_out[30]_i_1 
       (.I0(tx_66_enc[30]),
        .I1(\tx_66_enc_out_reg[0] ),
        .O(D[30]));
  (* SOFT_HLUTNM = "soft_lutpair279" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \tx_66_enc_out[31]_i_1 
       (.I0(tx_66_enc[31]),
        .I1(\tx_66_enc_out_reg[0] ),
        .O(D[31]));
  (* SOFT_HLUTNM = "soft_lutpair278" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \tx_66_enc_out[32]_i_1 
       (.I0(tx_66_enc[32]),
        .I1(\tx_66_enc_out_reg[0] ),
        .O(D[32]));
  (* SOFT_HLUTNM = "soft_lutpair277" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \tx_66_enc_out[33]_i_1 
       (.I0(tx_66_enc[33]),
        .I1(\tx_66_enc_out_reg[0] ),
        .O(D[33]));
  (* SOFT_HLUTNM = "soft_lutpair267" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \tx_66_enc_out[34]_i_1 
       (.I0(tx_66_enc[34]),
        .I1(\tx_66_enc_out_reg[0] ),
        .O(D[34]));
  (* SOFT_HLUTNM = "soft_lutpair270" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \tx_66_enc_out[35]_i_1 
       (.I0(tx_66_enc[35]),
        .I1(\tx_66_enc_out_reg[0] ),
        .O(D[35]));
  (* SOFT_HLUTNM = "soft_lutpair281" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \tx_66_enc_out[36]_i_1 
       (.I0(tx_66_enc[36]),
        .I1(\tx_66_enc_out_reg[0] ),
        .O(D[36]));
  (* SOFT_HLUTNM = "soft_lutpair283" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \tx_66_enc_out[37]_i_1 
       (.I0(tx_66_enc[37]),
        .I1(\tx_66_enc_out_reg[0] ),
        .O(D[37]));
  (* SOFT_HLUTNM = "soft_lutpair284" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \tx_66_enc_out[38]_i_1 
       (.I0(tx_66_enc[38]),
        .I1(\tx_66_enc_out_reg[0] ),
        .O(D[38]));
  (* SOFT_HLUTNM = "soft_lutpair285" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \tx_66_enc_out[39]_i_1 
       (.I0(tx_66_enc[39]),
        .I1(\tx_66_enc_out_reg[0] ),
        .O(D[39]));
  (* SOFT_HLUTNM = "soft_lutpair270" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \tx_66_enc_out[3]_i_1 
       (.I0(tx_66_enc[3]),
        .I1(\tx_66_enc_out_reg[0] ),
        .O(D[3]));
  (* SOFT_HLUTNM = "soft_lutpair286" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \tx_66_enc_out[40]_i_1 
       (.I0(tx_66_enc[40]),
        .I1(\tx_66_enc_out_reg[0] ),
        .O(D[40]));
  (* SOFT_HLUTNM = "soft_lutpair287" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \tx_66_enc_out[41]_i_1 
       (.I0(tx_66_enc[41]),
        .I1(\tx_66_enc_out_reg[0] ),
        .O(D[41]));
  (* SOFT_HLUTNM = "soft_lutpair289" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \tx_66_enc_out[42]_i_1 
       (.I0(tx_66_enc[42]),
        .I1(\tx_66_enc_out_reg[0] ),
        .O(D[42]));
  (* SOFT_HLUTNM = "soft_lutpair296" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \tx_66_enc_out[43]_i_1 
       (.I0(tx_66_enc[43]),
        .I1(\tx_66_enc_out_reg[0] ),
        .O(D[43]));
  (* SOFT_HLUTNM = "soft_lutpair295" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \tx_66_enc_out[44]_i_1 
       (.I0(tx_66_enc[44]),
        .I1(\tx_66_enc_out_reg[0] ),
        .O(D[44]));
  (* SOFT_HLUTNM = "soft_lutpair282" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \tx_66_enc_out[45]_i_1 
       (.I0(tx_66_enc[45]),
        .I1(\tx_66_enc_out_reg[0] ),
        .O(D[45]));
  (* SOFT_HLUTNM = "soft_lutpair297" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \tx_66_enc_out[46]_i_1 
       (.I0(tx_66_enc[46]),
        .I1(\tx_66_enc_out_reg[0] ),
        .O(D[46]));
  (* SOFT_HLUTNM = "soft_lutpair297" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \tx_66_enc_out[47]_i_1 
       (.I0(tx_66_enc[47]),
        .I1(\tx_66_enc_out_reg[0] ),
        .O(D[47]));
  (* SOFT_HLUTNM = "soft_lutpair298" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \tx_66_enc_out[48]_i_1 
       (.I0(tx_66_enc[48]),
        .I1(\tx_66_enc_out_reg[0] ),
        .O(D[48]));
  (* SOFT_HLUTNM = "soft_lutpair298" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \tx_66_enc_out[49]_i_1 
       (.I0(tx_66_enc[49]),
        .I1(\tx_66_enc_out_reg[0] ),
        .O(D[49]));
  (* SOFT_HLUTNM = "soft_lutpair271" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \tx_66_enc_out[4]_i_1 
       (.I0(tx_66_enc[4]),
        .I1(\tx_66_enc_out_reg[0] ),
        .O(D[4]));
  (* SOFT_HLUTNM = "soft_lutpair268" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \tx_66_enc_out[50]_i_1 
       (.I0(tx_66_enc[50]),
        .I1(\tx_66_enc_out_reg[0] ),
        .O(D[50]));
  (* SOFT_HLUTNM = "soft_lutpair269" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \tx_66_enc_out[51]_i_1 
       (.I0(tx_66_enc[51]),
        .I1(\tx_66_enc_out_reg[0] ),
        .O(D[51]));
  (* SOFT_HLUTNM = "soft_lutpair288" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \tx_66_enc_out[52]_i_1 
       (.I0(tx_66_enc[52]),
        .I1(\tx_66_enc_out_reg[0] ),
        .O(D[52]));
  (* SOFT_HLUTNM = "soft_lutpair271" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \tx_66_enc_out[53]_i_1 
       (.I0(tx_66_enc[53]),
        .I1(\tx_66_enc_out_reg[0] ),
        .O(D[53]));
  (* SOFT_HLUTNM = "soft_lutpair272" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \tx_66_enc_out[54]_i_1 
       (.I0(tx_66_enc[54]),
        .I1(\tx_66_enc_out_reg[0] ),
        .O(D[54]));
  (* SOFT_HLUTNM = "soft_lutpair273" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \tx_66_enc_out[55]_i_1 
       (.I0(tx_66_enc[55]),
        .I1(\tx_66_enc_out_reg[0] ),
        .O(D[55]));
  (* SOFT_HLUTNM = "soft_lutpair274" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \tx_66_enc_out[56]_i_1 
       (.I0(tx_66_enc[56]),
        .I1(\tx_66_enc_out_reg[0] ),
        .O(D[56]));
  (* SOFT_HLUTNM = "soft_lutpair275" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \tx_66_enc_out[57]_i_1 
       (.I0(tx_66_enc[57]),
        .I1(\tx_66_enc_out_reg[0] ),
        .O(D[57]));
  (* SOFT_HLUTNM = "soft_lutpair276" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \tx_66_enc_out[58]_i_1 
       (.I0(tx_66_enc[58]),
        .I1(\tx_66_enc_out_reg[0] ),
        .O(D[58]));
  (* SOFT_HLUTNM = "soft_lutpair299" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \tx_66_enc_out[59]_i_1 
       (.I0(tx_66_enc[59]),
        .I1(\tx_66_enc_out_reg[0] ),
        .O(D[59]));
  (* SOFT_HLUTNM = "soft_lutpair272" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \tx_66_enc_out[5]_i_1 
       (.I0(tx_66_enc[5]),
        .I1(\tx_66_enc_out_reg[0] ),
        .O(D[5]));
  (* SOFT_HLUTNM = "soft_lutpair299" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \tx_66_enc_out[60]_i_1 
       (.I0(tx_66_enc[60]),
        .I1(\tx_66_enc_out_reg[0] ),
        .O(D[60]));
  (* SOFT_HLUTNM = "soft_lutpair294" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \tx_66_enc_out[61]_i_1 
       (.I0(tx_66_enc[61]),
        .I1(\tx_66_enc_out_reg[0] ),
        .O(D[61]));
  (* SOFT_HLUTNM = "soft_lutpair293" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \tx_66_enc_out[62]_i_1 
       (.I0(tx_66_enc[62]),
        .I1(\tx_66_enc_out_reg[0] ),
        .O(D[62]));
  (* SOFT_HLUTNM = "soft_lutpair292" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \tx_66_enc_out[63]_i_1 
       (.I0(tx_66_enc[63]),
        .I1(\tx_66_enc_out_reg[0] ),
        .O(D[63]));
  (* SOFT_HLUTNM = "soft_lutpair291" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \tx_66_enc_out[64]_i_1 
       (.I0(tx_66_enc[64]),
        .I1(\tx_66_enc_out_reg[0] ),
        .O(D[64]));
  (* SOFT_HLUTNM = "soft_lutpair290" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \tx_66_enc_out[65]_i_1 
       (.I0(tx_66_enc[65]),
        .I1(\tx_66_enc_out_reg[0] ),
        .O(D[65]));
  (* SOFT_HLUTNM = "soft_lutpair273" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \tx_66_enc_out[6]_i_1 
       (.I0(tx_66_enc[6]),
        .I1(\tx_66_enc_out_reg[0] ),
        .O(D[6]));
  (* SOFT_HLUTNM = "soft_lutpair274" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \tx_66_enc_out[7]_i_1 
       (.I0(tx_66_enc[7]),
        .I1(\tx_66_enc_out_reg[0] ),
        .O(D[7]));
  (* SOFT_HLUTNM = "soft_lutpair275" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \tx_66_enc_out[8]_i_1 
       (.I0(tx_66_enc[8]),
        .I1(\tx_66_enc_out_reg[0] ),
        .O(D[8]));
  (* SOFT_HLUTNM = "soft_lutpair276" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \tx_66_enc_out[9]_i_1 
       (.I0(tx_66_enc[9]),
        .I1(\tx_66_enc_out_reg[0] ),
        .O(D[9]));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \tx_encoded_data[0]_i_1 
       (.I0(tx_xgmii_ctrl_reg2_reg[4]),
        .I1(tx_xgmii_ctrl_reg2_reg[7]),
        .I2(tx_xgmii_ctrl_reg2_reg[5]),
        .I3(tx_xgmii_ctrl_reg2_reg[6]),
        .I4(\tx_encoded_data[1]_i_2_n_0 ),
        .I5(tx_xgmii_ctrl_reg2_reg[0]),
        .O(\tx_encoded_data[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \tx_encoded_data[10]_i_1 
       (.I0(data7[10]),
        .I1(\tx_encoded_data[17]_i_2_n_0 ),
        .I2(\tx_encoded_data[10]_i_2_n_0 ),
        .I3(\tx_encoded_data[16]_i_3_n_0 ),
        .I4(\tx_encoded_data[31]_i_2_n_0 ),
        .I5(data7[18]),
        .O(\tx_encoded_data[10]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \tx_encoded_data[10]_i_2 
       (.I0(tx_xgmii_ctrl_reg2_reg[3]),
        .I1(tx_xgmii_ctrl_reg2_reg[2]),
        .I2(tx_xgmii_ctrl_reg2_reg[1]),
        .I3(tx_xgmii_ctrl_reg2_reg[0]),
        .I4(tx_xgmii_ctrl_reg2_reg[4]),
        .I5(c0[0]),
        .O(\tx_encoded_data[10]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFF2E00)) 
    \tx_encoded_data[11]_i_1 
       (.I0(tx_xgmii_ctrl_reg2_reg[7]),
        .I1(tx_xgmii_ctrl_reg2_reg[5]),
        .I2(tx_xgmii_ctrl_reg2_reg[0]),
        .I3(data7[11]),
        .I4(\tx_encoded_data[11]_i_2_n_0 ),
        .I5(\tx_encoded_data[63]_i_2_n_0 ),
        .O(\tx_encoded_data[11]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF00A200A200A2)) 
    \tx_encoded_data[11]_i_2 
       (.I0(data7[19]),
        .I1(tx_xgmii_ctrl_reg2_reg[7]),
        .I2(tx_xgmii_ctrl_reg2_reg[0]),
        .I3(tx_xgmii_ctrl_reg2_reg[1]),
        .I4(c0[1]),
        .I5(\tx_encoded_data[14]_i_3_n_0 ),
        .O(\tx_encoded_data[11]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFF2E00)) 
    \tx_encoded_data[12]_i_1 
       (.I0(tx_xgmii_ctrl_reg2_reg[7]),
        .I1(tx_xgmii_ctrl_reg2_reg[5]),
        .I2(tx_xgmii_ctrl_reg2_reg[0]),
        .I3(data7[12]),
        .I4(\tx_encoded_data[12]_i_2_n_0 ),
        .I5(\tx_encoded_data[63]_i_2_n_0 ),
        .O(\tx_encoded_data[12]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF00A200A200A2)) 
    \tx_encoded_data[12]_i_2 
       (.I0(data7[20]),
        .I1(tx_xgmii_ctrl_reg2_reg[7]),
        .I2(tx_xgmii_ctrl_reg2_reg[0]),
        .I3(tx_xgmii_ctrl_reg2_reg[1]),
        .I4(c0[2]),
        .I5(\tx_encoded_data[14]_i_3_n_0 ),
        .O(\tx_encoded_data[12]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFF2E00)) 
    \tx_encoded_data[13]_i_1 
       (.I0(tx_xgmii_ctrl_reg2_reg[7]),
        .I1(tx_xgmii_ctrl_reg2_reg[5]),
        .I2(tx_xgmii_ctrl_reg2_reg[0]),
        .I3(data7[13]),
        .I4(\tx_encoded_data[13]_i_2_n_0 ),
        .I5(\tx_encoded_data[63]_i_2_n_0 ),
        .O(\tx_encoded_data[13]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF00A200A200A2)) 
    \tx_encoded_data[13]_i_2 
       (.I0(data7[21]),
        .I1(tx_xgmii_ctrl_reg2_reg[7]),
        .I2(tx_xgmii_ctrl_reg2_reg[0]),
        .I3(tx_xgmii_ctrl_reg2_reg[1]),
        .I4(c0[3]),
        .I5(\tx_encoded_data[14]_i_3_n_0 ),
        .O(\tx_encoded_data[13]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFF2E00)) 
    \tx_encoded_data[14]_i_1 
       (.I0(tx_xgmii_ctrl_reg2_reg[7]),
        .I1(tx_xgmii_ctrl_reg2_reg[5]),
        .I2(tx_xgmii_ctrl_reg2_reg[0]),
        .I3(data7[14]),
        .I4(\tx_encoded_data[14]_i_2_n_0 ),
        .I5(\tx_encoded_data[63]_i_2_n_0 ),
        .O(\tx_encoded_data[14]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF00A200A200A2)) 
    \tx_encoded_data[14]_i_2 
       (.I0(data7[22]),
        .I1(tx_xgmii_ctrl_reg2_reg[7]),
        .I2(tx_xgmii_ctrl_reg2_reg[0]),
        .I3(tx_xgmii_ctrl_reg2_reg[1]),
        .I4(c0[4]),
        .I5(\tx_encoded_data[14]_i_3_n_0 ),
        .O(\tx_encoded_data[14]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h5D00)) 
    \tx_encoded_data[14]_i_3 
       (.I0(tx_xgmii_ctrl_reg2_reg[5]),
        .I1(tx_xgmii_ctrl_reg2_reg[0]),
        .I2(\t_type_reg_reg_n_0_[0] ),
        .I3(tx_xgmii_ctrl_reg2_reg[1]),
        .O(\tx_encoded_data[14]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \tx_encoded_data[15]_i_1 
       (.I0(data7[15]),
        .I1(\tx_encoded_data[17]_i_2_n_0 ),
        .I2(\tx_encoded_data[15]_i_2_n_0 ),
        .I3(\tx_encoded_data[16]_i_3_n_0 ),
        .I4(\tx_encoded_data[31]_i_2_n_0 ),
        .I5(data7[23]),
        .O(\tx_encoded_data[15]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \tx_encoded_data[15]_i_2 
       (.I0(tx_xgmii_ctrl_reg2_reg[3]),
        .I1(tx_xgmii_ctrl_reg2_reg[2]),
        .I2(tx_xgmii_ctrl_reg2_reg[1]),
        .I3(tx_xgmii_ctrl_reg2_reg[0]),
        .I4(tx_xgmii_ctrl_reg2_reg[4]),
        .I5(c0[5]),
        .O(\tx_encoded_data[15]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \tx_encoded_data[16]_i_1 
       (.I0(data7[16]),
        .I1(\tx_encoded_data[17]_i_2_n_0 ),
        .I2(\tx_encoded_data[16]_i_2_n_0 ),
        .I3(\tx_encoded_data[16]_i_3_n_0 ),
        .I4(\tx_encoded_data[31]_i_2_n_0 ),
        .I5(data7[24]),
        .O(\tx_encoded_data[16]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \tx_encoded_data[16]_i_2 
       (.I0(tx_xgmii_ctrl_reg2_reg[3]),
        .I1(tx_xgmii_ctrl_reg2_reg[2]),
        .I2(tx_xgmii_ctrl_reg2_reg[1]),
        .I3(tx_xgmii_ctrl_reg2_reg[0]),
        .I4(tx_xgmii_ctrl_reg2_reg[4]),
        .I5(c0[6]),
        .O(\tx_encoded_data[16]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h02000000000000FF)) 
    \tx_encoded_data[16]_i_3 
       (.I0(\t_type_reg_reg_n_0_[1] ),
        .I1(\t_type_reg_reg_n_0_[2] ),
        .I2(\t_type_reg_reg_n_0_[0] ),
        .I3(tx_xgmii_ctrl_reg2_reg[7]),
        .I4(tx_xgmii_ctrl_reg2_reg[5]),
        .I5(tx_xgmii_ctrl_reg2_reg[6]),
        .O(\tx_encoded_data[16]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \tx_encoded_data[17]_i_1 
       (.I0(data7[17]),
        .I1(\tx_encoded_data[17]_i_2_n_0 ),
        .I2(\tx_encoded_data[17]_i_3_n_0 ),
        .I3(\tx_encoded_data[23]_i_3_n_0 ),
        .I4(\tx_encoded_data[31]_i_2_n_0 ),
        .I5(data7[25]),
        .O(\tx_encoded_data[17]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair234" *) 
  LUT5 #(
    .INIT(32'hFFFF8B00)) 
    \tx_encoded_data[17]_i_2 
       (.I0(tx_xgmii_ctrl_reg2_reg[3]),
        .I1(tx_xgmii_ctrl_reg2_reg[2]),
        .I2(tx_xgmii_ctrl_reg2_reg[1]),
        .I3(\tx_encoded_data[37]_i_6_n_0 ),
        .I4(\tx_encoded_data[38]_i_4_n_0 ),
        .O(\tx_encoded_data[17]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \tx_encoded_data[17]_i_3 
       (.I0(tx_xgmii_ctrl_reg2_reg[3]),
        .I1(tx_xgmii_ctrl_reg2_reg[2]),
        .I2(tx_xgmii_ctrl_reg2_reg[1]),
        .I3(tx_xgmii_ctrl_reg2_reg[0]),
        .I4(tx_xgmii_ctrl_reg2_reg[4]),
        .I5(c1[0]),
        .O(\tx_encoded_data[17]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair258" *) 
  LUT4 #(
    .INIT(16'hFFF8)) 
    \tx_encoded_data[18]_i_1 
       (.I0(\tx_encoded_data[21]_i_2_n_0 ),
        .I1(data7[18]),
        .I2(\tx_encoded_data[18]_i_2_n_0 ),
        .I3(\tx_encoded_data[63]_i_2_n_0 ),
        .O(\tx_encoded_data[18]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hAA00CC0C)) 
    \tx_encoded_data[18]_i_2 
       (.I0(c1[1]),
        .I1(data7[26]),
        .I2(tx_xgmii_ctrl_reg2_reg[7]),
        .I3(tx_xgmii_ctrl_reg2_reg[0]),
        .I4(tx_xgmii_ctrl_reg2_reg[1]),
        .O(\tx_encoded_data[18]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair255" *) 
  LUT4 #(
    .INIT(16'hFFF8)) 
    \tx_encoded_data[19]_i_1 
       (.I0(\tx_encoded_data[21]_i_2_n_0 ),
        .I1(data7[19]),
        .I2(\tx_encoded_data[19]_i_2_n_0 ),
        .I3(\tx_encoded_data[63]_i_2_n_0 ),
        .O(\tx_encoded_data[19]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hAA00CC0C)) 
    \tx_encoded_data[19]_i_2 
       (.I0(c1[2]),
        .I1(data7[27]),
        .I2(tx_xgmii_ctrl_reg2_reg[7]),
        .I3(tx_xgmii_ctrl_reg2_reg[0]),
        .I4(tx_xgmii_ctrl_reg2_reg[1]),
        .O(\tx_encoded_data[19]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    \tx_encoded_data[1]_i_1 
       (.I0(tx_xgmii_ctrl_reg2_reg[0]),
        .I1(\tx_encoded_data[1]_i_2_n_0 ),
        .I2(tx_xgmii_ctrl_reg2_reg[6]),
        .I3(tx_xgmii_ctrl_reg2_reg[5]),
        .I4(tx_xgmii_ctrl_reg2_reg[7]),
        .I5(tx_xgmii_ctrl_reg2_reg[4]),
        .O(\tx_encoded_data[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair234" *) 
  LUT3 #(
    .INIT(8'hFE)) 
    \tx_encoded_data[1]_i_2 
       (.I0(tx_xgmii_ctrl_reg2_reg[2]),
        .I1(tx_xgmii_ctrl_reg2_reg[1]),
        .I2(tx_xgmii_ctrl_reg2_reg[3]),
        .O(\tx_encoded_data[1]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair256" *) 
  LUT4 #(
    .INIT(16'hFFF8)) 
    \tx_encoded_data[20]_i_1 
       (.I0(\tx_encoded_data[21]_i_2_n_0 ),
        .I1(data7[20]),
        .I2(\tx_encoded_data[20]_i_2_n_0 ),
        .I3(\tx_encoded_data[63]_i_2_n_0 ),
        .O(\tx_encoded_data[20]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hAA00CC0C)) 
    \tx_encoded_data[20]_i_2 
       (.I0(c1[3]),
        .I1(data7[28]),
        .I2(tx_xgmii_ctrl_reg2_reg[7]),
        .I3(tx_xgmii_ctrl_reg2_reg[0]),
        .I4(tx_xgmii_ctrl_reg2_reg[1]),
        .O(\tx_encoded_data[20]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair254" *) 
  LUT4 #(
    .INIT(16'hFFF8)) 
    \tx_encoded_data[21]_i_1 
       (.I0(\tx_encoded_data[21]_i_2_n_0 ),
        .I1(data7[21]),
        .I2(\tx_encoded_data[21]_i_3_n_0 ),
        .I3(\tx_encoded_data[63]_i_2_n_0 ),
        .O(\tx_encoded_data[21]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair242" *) 
  LUT4 #(
    .INIT(16'h1F10)) 
    \tx_encoded_data[21]_i_2 
       (.I0(tx_xgmii_ctrl_reg2_reg[1]),
        .I1(tx_xgmii_ctrl_reg2_reg[0]),
        .I2(tx_xgmii_ctrl_reg2_reg[5]),
        .I3(tx_xgmii_ctrl_reg2_reg[7]),
        .O(\tx_encoded_data[21]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair239" *) 
  LUT5 #(
    .INIT(32'hAA00CC0C)) 
    \tx_encoded_data[21]_i_3 
       (.I0(c1[4]),
        .I1(data7[29]),
        .I2(tx_xgmii_ctrl_reg2_reg[7]),
        .I3(tx_xgmii_ctrl_reg2_reg[0]),
        .I4(tx_xgmii_ctrl_reg2_reg[1]),
        .O(\tx_encoded_data[21]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \tx_encoded_data[22]_i_1 
       (.I0(data7[22]),
        .I1(\tx_encoded_data[24]_i_2_n_0 ),
        .I2(\tx_encoded_data[22]_i_2_n_0 ),
        .I3(\tx_encoded_data[23]_i_3_n_0 ),
        .I4(\tx_encoded_data[31]_i_2_n_0 ),
        .I5(data7[30]),
        .O(\tx_encoded_data[22]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \tx_encoded_data[22]_i_2 
       (.I0(tx_xgmii_ctrl_reg2_reg[3]),
        .I1(tx_xgmii_ctrl_reg2_reg[2]),
        .I2(tx_xgmii_ctrl_reg2_reg[1]),
        .I3(tx_xgmii_ctrl_reg2_reg[0]),
        .I4(tx_xgmii_ctrl_reg2_reg[4]),
        .I5(c1[5]),
        .O(\tx_encoded_data[22]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \tx_encoded_data[23]_i_1 
       (.I0(data7[23]),
        .I1(\tx_encoded_data[24]_i_2_n_0 ),
        .I2(\tx_encoded_data[23]_i_2_n_0 ),
        .I3(\tx_encoded_data[23]_i_3_n_0 ),
        .I4(\tx_encoded_data[31]_i_2_n_0 ),
        .I5(data7[31]),
        .O(\tx_encoded_data[23]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \tx_encoded_data[23]_i_2 
       (.I0(tx_xgmii_ctrl_reg2_reg[3]),
        .I1(tx_xgmii_ctrl_reg2_reg[2]),
        .I2(tx_xgmii_ctrl_reg2_reg[1]),
        .I3(tx_xgmii_ctrl_reg2_reg[0]),
        .I4(tx_xgmii_ctrl_reg2_reg[4]),
        .I5(c1[6]),
        .O(\tx_encoded_data[23]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair237" *) 
  LUT5 #(
    .INIT(32'h2000000F)) 
    \tx_encoded_data[23]_i_3 
       (.I0(\t_type_reg_reg_n_0_[1] ),
        .I1(\t_type_reg_reg_n_0_[2] ),
        .I2(tx_xgmii_ctrl_reg2_reg[7]),
        .I3(tx_xgmii_ctrl_reg2_reg[5]),
        .I4(tx_xgmii_ctrl_reg2_reg[6]),
        .O(\tx_encoded_data[23]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hFFF8F8F8)) 
    \tx_encoded_data[24]_i_1 
       (.I0(data7[24]),
        .I1(\tx_encoded_data[24]_i_2_n_0 ),
        .I2(\tx_encoded_data[24]_i_3_n_0 ),
        .I3(\tx_encoded_data[31]_i_2_n_0 ),
        .I4(data7[32]),
        .O(\tx_encoded_data[24]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF00000800)) 
    \tx_encoded_data[24]_i_2 
       (.I0(\tx_encoded_data[45]_i_3_n_0 ),
        .I1(tx_xgmii_ctrl_reg2_reg[4]),
        .I2(tx_xgmii_ctrl_reg2_reg[0]),
        .I3(tx_xgmii_ctrl_reg2_reg[3]),
        .I4(tx_xgmii_ctrl_reg2_reg[1]),
        .I5(\tx_encoded_data[38]_i_4_n_0 ),
        .O(\tx_encoded_data[24]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h80000000)) 
    \tx_encoded_data[24]_i_3 
       (.I0(c2[0]),
        .I1(tx_xgmii_ctrl_reg2_reg[3]),
        .I2(tx_xgmii_ctrl_reg2_reg[2]),
        .I3(tx_xgmii_ctrl_reg2_reg[1]),
        .I4(\tx_encoded_data[30]_i_3_n_0 ),
        .O(\tx_encoded_data[24]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFEAEAEA)) 
    \tx_encoded_data[25]_i_1 
       (.I0(\tx_encoded_data[25]_i_2_n_0 ),
        .I1(c2[1]),
        .I2(tx_xgmii_ctrl_reg2_reg[1]),
        .I3(data7[33]),
        .I4(\tx_encoded_data[33]_i_3_n_0 ),
        .I5(\tx_encoded_data[63]_i_2_n_0 ),
        .O(\tx_encoded_data[25]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair242" *) 
  LUT5 #(
    .INIT(32'h222E0000)) 
    \tx_encoded_data[25]_i_2 
       (.I0(tx_xgmii_ctrl_reg2_reg[7]),
        .I1(tx_xgmii_ctrl_reg2_reg[5]),
        .I2(tx_xgmii_ctrl_reg2_reg[0]),
        .I3(tx_xgmii_ctrl_reg2_reg[1]),
        .I4(data7[25]),
        .O(\tx_encoded_data[25]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFEAEAEA)) 
    \tx_encoded_data[26]_i_1 
       (.I0(\tx_encoded_data[26]_i_2_n_0 ),
        .I1(c2[2]),
        .I2(tx_xgmii_ctrl_reg2_reg[1]),
        .I3(data7[34]),
        .I4(\tx_encoded_data[33]_i_3_n_0 ),
        .I5(\tx_encoded_data[63]_i_2_n_0 ),
        .O(\tx_encoded_data[26]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h222E0000)) 
    \tx_encoded_data[26]_i_2 
       (.I0(tx_xgmii_ctrl_reg2_reg[7]),
        .I1(tx_xgmii_ctrl_reg2_reg[5]),
        .I2(tx_xgmii_ctrl_reg2_reg[0]),
        .I3(tx_xgmii_ctrl_reg2_reg[2]),
        .I4(data7[26]),
        .O(\tx_encoded_data[26]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFEAEAEA)) 
    \tx_encoded_data[27]_i_1 
       (.I0(\tx_encoded_data[27]_i_2_n_0 ),
        .I1(c2[3]),
        .I2(tx_xgmii_ctrl_reg2_reg[1]),
        .I3(data7[35]),
        .I4(\tx_encoded_data[33]_i_3_n_0 ),
        .I5(\tx_encoded_data[63]_i_2_n_0 ),
        .O(\tx_encoded_data[27]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h222E0000)) 
    \tx_encoded_data[27]_i_2 
       (.I0(tx_xgmii_ctrl_reg2_reg[7]),
        .I1(tx_xgmii_ctrl_reg2_reg[5]),
        .I2(tx_xgmii_ctrl_reg2_reg[0]),
        .I3(tx_xgmii_ctrl_reg2_reg[2]),
        .I4(data7[27]),
        .O(\tx_encoded_data[27]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFEAEAEA)) 
    \tx_encoded_data[28]_i_1 
       (.I0(\tx_encoded_data[28]_i_2_n_0 ),
        .I1(c2[4]),
        .I2(tx_xgmii_ctrl_reg2_reg[1]),
        .I3(data7[36]),
        .I4(\tx_encoded_data[33]_i_3_n_0 ),
        .I5(\tx_encoded_data[63]_i_2_n_0 ),
        .O(\tx_encoded_data[28]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h222E0000)) 
    \tx_encoded_data[28]_i_2 
       (.I0(tx_xgmii_ctrl_reg2_reg[7]),
        .I1(tx_xgmii_ctrl_reg2_reg[5]),
        .I2(tx_xgmii_ctrl_reg2_reg[0]),
        .I3(tx_xgmii_ctrl_reg2_reg[2]),
        .I4(data7[28]),
        .O(\tx_encoded_data[28]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFF8F8F8)) 
    \tx_encoded_data[29]_i_1 
       (.I0(data7[29]),
        .I1(\tx_encoded_data[31]_i_3_n_0 ),
        .I2(\tx_encoded_data[29]_i_2_n_0 ),
        .I3(\tx_encoded_data[31]_i_2_n_0 ),
        .I4(data7[37]),
        .O(\tx_encoded_data[29]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h80000000)) 
    \tx_encoded_data[29]_i_2 
       (.I0(c2[5]),
        .I1(tx_xgmii_ctrl_reg2_reg[3]),
        .I2(tx_xgmii_ctrl_reg2_reg[2]),
        .I3(tx_xgmii_ctrl_reg2_reg[1]),
        .I4(\tx_encoded_data[30]_i_3_n_0 ),
        .O(\tx_encoded_data[29]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h8F88)) 
    \tx_encoded_data[2]_i_1 
       (.I0(data7[2]),
        .I1(\tx_encoded_data[9]_i_2_n_0 ),
        .I2(\tx_encoded_data[0]_i_1_n_0 ),
        .I3(data7[10]),
        .O(\tx_encoded_data[2]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFF8F8F8)) 
    \tx_encoded_data[30]_i_1 
       (.I0(data7[30]),
        .I1(\tx_encoded_data[31]_i_3_n_0 ),
        .I2(\tx_encoded_data[30]_i_2_n_0 ),
        .I3(\tx_encoded_data[31]_i_2_n_0 ),
        .I4(data7[38]),
        .O(\tx_encoded_data[30]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h80000000)) 
    \tx_encoded_data[30]_i_2 
       (.I0(c2[6]),
        .I1(tx_xgmii_ctrl_reg2_reg[3]),
        .I2(tx_xgmii_ctrl_reg2_reg[2]),
        .I3(tx_xgmii_ctrl_reg2_reg[1]),
        .I4(\tx_encoded_data[30]_i_3_n_0 ),
        .O(\tx_encoded_data[30]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hB0000000000000C0)) 
    \tx_encoded_data[30]_i_3 
       (.I0(\tx_encoded_data[45]_i_5_n_0 ),
        .I1(tx_xgmii_ctrl_reg2_reg[0]),
        .I2(tx_xgmii_ctrl_reg2_reg[4]),
        .I3(tx_xgmii_ctrl_reg2_reg[6]),
        .I4(tx_xgmii_ctrl_reg2_reg[5]),
        .I5(tx_xgmii_ctrl_reg2_reg[7]),
        .O(\tx_encoded_data[30]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \tx_encoded_data[31]_i_1 
       (.I0(\tx_encoded_data[37]_i_2_n_0 ),
        .I1(c3[0]),
        .I2(\tx_encoded_data[31]_i_2_n_0 ),
        .I3(data7[39]),
        .I4(data7[31]),
        .I5(\tx_encoded_data[31]_i_3_n_0 ),
        .O(\tx_encoded_data[31]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000081010001)) 
    \tx_encoded_data[31]_i_2 
       (.I0(tx_xgmii_ctrl_reg2_reg[5]),
        .I1(tx_xgmii_ctrl_reg2_reg[6]),
        .I2(tx_xgmii_ctrl_reg2_reg[7]),
        .I3(tx_xgmii_ctrl_reg2_reg[4]),
        .I4(tx_xgmii_ctrl_reg2_reg[0]),
        .I5(\tx_encoded_data[1]_i_2_n_0 ),
        .O(\tx_encoded_data[31]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF00001000)) 
    \tx_encoded_data[31]_i_3 
       (.I0(tx_xgmii_ctrl_reg2_reg[1]),
        .I1(tx_xgmii_ctrl_reg2_reg[2]),
        .I2(\tx_encoded_data[45]_i_3_n_0 ),
        .I3(tx_xgmii_ctrl_reg2_reg[4]),
        .I4(tx_xgmii_ctrl_reg2_reg[0]),
        .I5(\tx_encoded_data[38]_i_4_n_0 ),
        .O(\tx_encoded_data[31]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFEAEAEA)) 
    \tx_encoded_data[32]_i_1 
       (.I0(\tx_encoded_data[32]_i_2_n_0 ),
        .I1(c3[1]),
        .I2(tx_xgmii_ctrl_reg2_reg[2]),
        .I3(data7[40]),
        .I4(\tx_encoded_data[33]_i_3_n_0 ),
        .I5(\tx_encoded_data[63]_i_2_n_0 ),
        .O(\tx_encoded_data[32]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h222E0000)) 
    \tx_encoded_data[32]_i_2 
       (.I0(tx_xgmii_ctrl_reg2_reg[7]),
        .I1(tx_xgmii_ctrl_reg2_reg[5]),
        .I2(tx_xgmii_ctrl_reg2_reg[0]),
        .I3(tx_xgmii_ctrl_reg2_reg[2]),
        .I4(data7[32]),
        .O(\tx_encoded_data[32]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFEAEAEA)) 
    \tx_encoded_data[33]_i_1 
       (.I0(\tx_encoded_data[33]_i_2_n_0 ),
        .I1(c3[2]),
        .I2(tx_xgmii_ctrl_reg2_reg[2]),
        .I3(data7[41]),
        .I4(\tx_encoded_data[33]_i_3_n_0 ),
        .I5(\tx_encoded_data[63]_i_2_n_0 ),
        .O(\tx_encoded_data[33]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h222E0000)) 
    \tx_encoded_data[33]_i_2 
       (.I0(tx_xgmii_ctrl_reg2_reg[7]),
        .I1(tx_xgmii_ctrl_reg2_reg[5]),
        .I2(tx_xgmii_ctrl_reg2_reg[0]),
        .I3(tx_xgmii_ctrl_reg2_reg[2]),
        .I4(data7[33]),
        .O(\tx_encoded_data[33]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair239" *) 
  LUT3 #(
    .INIT(8'h0D)) 
    \tx_encoded_data[33]_i_3 
       (.I0(tx_xgmii_ctrl_reg2_reg[7]),
        .I1(tx_xgmii_ctrl_reg2_reg[0]),
        .I2(tx_xgmii_ctrl_reg2_reg[1]),
        .O(\tx_encoded_data[33]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'hFFF8)) 
    \tx_encoded_data[34]_i_1 
       (.I0(\tx_encoded_data[41]_i_2_n_0 ),
        .I1(data7[34]),
        .I2(\tx_encoded_data[34]_i_2_n_0 ),
        .I3(\tx_encoded_data[35]_i_3_n_0 ),
        .O(\tx_encoded_data[34]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair247" *) 
  LUT5 #(
    .INIT(32'h888888F8)) 
    \tx_encoded_data[34]_i_2 
       (.I0(c3[3]),
        .I1(tx_xgmii_ctrl_reg2_reg[2]),
        .I2(data7[42]),
        .I3(tx_xgmii_ctrl_reg2_reg[4]),
        .I4(tx_xgmii_ctrl_reg2_reg[7]),
        .O(\tx_encoded_data[34]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hFFF8)) 
    \tx_encoded_data[35]_i_1 
       (.I0(\tx_encoded_data[41]_i_2_n_0 ),
        .I1(data7[35]),
        .I2(\tx_encoded_data[35]_i_2_n_0 ),
        .I3(\tx_encoded_data[35]_i_3_n_0 ),
        .O(\tx_encoded_data[35]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h888888F8)) 
    \tx_encoded_data[35]_i_2 
       (.I0(c3[4]),
        .I1(tx_xgmii_ctrl_reg2_reg[2]),
        .I2(data7[43]),
        .I3(tx_xgmii_ctrl_reg2_reg[4]),
        .I4(tx_xgmii_ctrl_reg2_reg[7]),
        .O(\tx_encoded_data[35]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF0000B800)) 
    \tx_encoded_data[35]_i_3 
       (.I0(tx_xgmii_ctrl_reg2_reg[0]),
        .I1(tx_xgmii_ctrl_reg2_reg[5]),
        .I2(tx_xgmii_ctrl_reg2_reg[4]),
        .I3(\o0_reg_n_0_[3] ),
        .I4(tx_xgmii_ctrl_reg2_reg[1]),
        .I5(\tx_encoded_data[63]_i_2_n_0 ),
        .O(\tx_encoded_data[35]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFF8FFF8FFF8)) 
    \tx_encoded_data[36]_i_1 
       (.I0(c3[5]),
        .I1(\tx_encoded_data[37]_i_2_n_0 ),
        .I2(\tx_encoded_data[37]_i_3_n_0 ),
        .I3(\tx_encoded_data[36]_i_2_n_0 ),
        .I4(data7[36]),
        .I5(\tx_encoded_data[38]_i_4_n_0 ),
        .O(\tx_encoded_data[36]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000002)) 
    \tx_encoded_data[36]_i_2 
       (.I0(data7[44]),
        .I1(tx_xgmii_ctrl_reg2_reg[4]),
        .I2(tx_xgmii_ctrl_reg2_reg[7]),
        .I3(tx_xgmii_ctrl_reg2_reg[5]),
        .I4(tx_xgmii_ctrl_reg2_reg[6]),
        .I5(\tx_encoded_data[1]_i_2_n_0 ),
        .O(\tx_encoded_data[36]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFF8FFF8FFF8)) 
    \tx_encoded_data[37]_i_1 
       (.I0(c3[6]),
        .I1(\tx_encoded_data[37]_i_2_n_0 ),
        .I2(\tx_encoded_data[37]_i_3_n_0 ),
        .I3(\tx_encoded_data[37]_i_4_n_0 ),
        .I4(data7[37]),
        .I5(\tx_encoded_data[38]_i_4_n_0 ),
        .O(\tx_encoded_data[37]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFF00000080000000)) 
    \tx_encoded_data[37]_i_2 
       (.I0(\tx_encoded_data[37]_i_5_n_0 ),
        .I1(tx_xgmii_ctrl_reg2_reg[1]),
        .I2(tx_xgmii_ctrl_reg2_reg[4]),
        .I3(tx_xgmii_ctrl_reg2_reg[2]),
        .I4(tx_xgmii_ctrl_reg2_reg[3]),
        .I5(\tx_encoded_data[37]_i_6_n_0 ),
        .O(\tx_encoded_data[37]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000080000008)) 
    \tx_encoded_data[37]_i_3 
       (.I0(\o0_reg_n_0_[3] ),
        .I1(\tx_encoded_data[37]_i_7_n_0 ),
        .I2(tx_xgmii_ctrl_reg2_reg[7]),
        .I3(tx_xgmii_ctrl_reg2_reg[5]),
        .I4(tx_xgmii_ctrl_reg2_reg[6]),
        .I5(\tx_encoded_data[1]_i_2_n_0 ),
        .O(\tx_encoded_data[37]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000002)) 
    \tx_encoded_data[37]_i_4 
       (.I0(data7[45]),
        .I1(tx_xgmii_ctrl_reg2_reg[4]),
        .I2(tx_xgmii_ctrl_reg2_reg[7]),
        .I3(tx_xgmii_ctrl_reg2_reg[5]),
        .I4(tx_xgmii_ctrl_reg2_reg[6]),
        .I5(\tx_encoded_data[1]_i_2_n_0 ),
        .O(\tx_encoded_data[37]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h20002000000F0000)) 
    \tx_encoded_data[37]_i_5 
       (.I0(\t_type_reg_reg_n_0_[1] ),
        .I1(\t_type_reg_reg_n_0_[2] ),
        .I2(tx_xgmii_ctrl_reg2_reg[5]),
        .I3(tx_xgmii_ctrl_reg2_reg[6]),
        .I4(tx_xgmii_ctrl_reg2_reg[0]),
        .I5(tx_xgmii_ctrl_reg2_reg[7]),
        .O(\tx_encoded_data[37]_i_5_n_0 ));
  LUT5 #(
    .INIT(32'h00008000)) 
    \tx_encoded_data[37]_i_6 
       (.I0(tx_xgmii_ctrl_reg2_reg[7]),
        .I1(tx_xgmii_ctrl_reg2_reg[5]),
        .I2(tx_xgmii_ctrl_reg2_reg[6]),
        .I3(tx_xgmii_ctrl_reg2_reg[4]),
        .I4(tx_xgmii_ctrl_reg2_reg[0]),
        .O(\tx_encoded_data[37]_i_6_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair238" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \tx_encoded_data[37]_i_7 
       (.I0(tx_xgmii_ctrl_reg2_reg[0]),
        .I1(tx_xgmii_ctrl_reg2_reg[4]),
        .O(\tx_encoded_data[37]_i_7_n_0 ));
  LUT5 #(
    .INIT(32'hFFAEAEAE)) 
    \tx_encoded_data[38]_i_1 
       (.I0(\tx_encoded_data[38]_i_2_n_0 ),
        .I1(data7[46]),
        .I2(\tx_encoded_data[38]_i_3_n_0 ),
        .I3(data7[38]),
        .I4(\tx_encoded_data[38]_i_4_n_0 ),
        .O(\tx_encoded_data[38]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hF8888888)) 
    \tx_encoded_data[38]_i_2 
       (.I0(c4[0]),
        .I1(\tx_encoded_data[44]_i_3_n_0 ),
        .I2(\tx_encoded_data[38]_i_5_n_0 ),
        .I3(\tx_encoded_data[41]_i_6_n_0 ),
        .I4(\o4_reg_n_0_[3] ),
        .O(\tx_encoded_data[38]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair230" *) 
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \tx_encoded_data[38]_i_3 
       (.I0(\tx_encoded_data[1]_i_2_n_0 ),
        .I1(tx_xgmii_ctrl_reg2_reg[6]),
        .I2(tx_xgmii_ctrl_reg2_reg[5]),
        .I3(tx_xgmii_ctrl_reg2_reg[7]),
        .I4(tx_xgmii_ctrl_reg2_reg[4]),
        .O(\tx_encoded_data[38]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h0404000400000004)) 
    \tx_encoded_data[38]_i_4 
       (.I0(tx_xgmii_ctrl_reg2_reg[0]),
        .I1(tx_xgmii_ctrl_reg2_reg[7]),
        .I2(\tx_encoded_data[1]_i_2_n_0 ),
        .I3(tx_xgmii_ctrl_reg2_reg[4]),
        .I4(tx_xgmii_ctrl_reg2_reg[5]),
        .I5(tx_xgmii_ctrl_reg2_reg[6]),
        .O(\tx_encoded_data[38]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h4000000000000040)) 
    \tx_encoded_data[38]_i_5 
       (.I0(\tx_encoded_data[65]_i_5_n_0 ),
        .I1(tx_xgmii_ctrl_reg2_reg[4]),
        .I2(tx_xgmii_ctrl_reg2_reg[0]),
        .I3(tx_xgmii_ctrl_reg2_reg[1]),
        .I4(tx_xgmii_ctrl_reg2_reg[2]),
        .I5(tx_xgmii_ctrl_reg2_reg[3]),
        .O(\tx_encoded_data[38]_i_5_n_0 ));
  LUT4 #(
    .INIT(16'hFFF8)) 
    \tx_encoded_data[39]_i_1 
       (.I0(\tx_encoded_data[41]_i_2_n_0 ),
        .I1(data7[39]),
        .I2(\tx_encoded_data[39]_i_2_n_0 ),
        .I3(\tx_encoded_data[41]_i_4_n_0 ),
        .O(\tx_encoded_data[39]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFA800A800A800)) 
    \tx_encoded_data[39]_i_2 
       (.I0(c4[1]),
        .I1(tx_xgmii_ctrl_reg2_reg[3]),
        .I2(tx_xgmii_ctrl_reg2_reg[0]),
        .I3(tx_xgmii_ctrl_reg2_reg[5]),
        .I4(data7[47]),
        .I5(\tx_encoded_data[41]_i_5_n_0 ),
        .O(\tx_encoded_data[39]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFAFAFAEE)) 
    \tx_encoded_data[3]_i_1 
       (.I0(\tx_encoded_data[63]_i_2_n_0 ),
        .I1(data7[11]),
        .I2(data7[3]),
        .I3(tx_xgmii_ctrl_reg2_reg[0]),
        .I4(tx_xgmii_ctrl_reg2_reg[7]),
        .O(\tx_encoded_data[3]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFFF8)) 
    \tx_encoded_data[40]_i_1 
       (.I0(\tx_encoded_data[41]_i_2_n_0 ),
        .I1(data7[40]),
        .I2(\tx_encoded_data[40]_i_2_n_0 ),
        .I3(\tx_encoded_data[41]_i_4_n_0 ),
        .O(\tx_encoded_data[40]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFA800A800A800)) 
    \tx_encoded_data[40]_i_2 
       (.I0(c4[2]),
        .I1(tx_xgmii_ctrl_reg2_reg[3]),
        .I2(tx_xgmii_ctrl_reg2_reg[0]),
        .I3(tx_xgmii_ctrl_reg2_reg[5]),
        .I4(data7[48]),
        .I5(\tx_encoded_data[41]_i_5_n_0 ),
        .O(\tx_encoded_data[40]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hFFF8)) 
    \tx_encoded_data[41]_i_1 
       (.I0(\tx_encoded_data[41]_i_2_n_0 ),
        .I1(data7[41]),
        .I2(\tx_encoded_data[41]_i_3_n_0 ),
        .I3(\tx_encoded_data[41]_i_4_n_0 ),
        .O(\tx_encoded_data[41]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair259" *) 
  LUT4 #(
    .INIT(16'h1F10)) 
    \tx_encoded_data[41]_i_2 
       (.I0(tx_xgmii_ctrl_reg2_reg[3]),
        .I1(tx_xgmii_ctrl_reg2_reg[0]),
        .I2(tx_xgmii_ctrl_reg2_reg[5]),
        .I3(tx_xgmii_ctrl_reg2_reg[7]),
        .O(\tx_encoded_data[41]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFA800A800A800)) 
    \tx_encoded_data[41]_i_3 
       (.I0(c4[3]),
        .I1(tx_xgmii_ctrl_reg2_reg[3]),
        .I2(tx_xgmii_ctrl_reg2_reg[0]),
        .I3(tx_xgmii_ctrl_reg2_reg[5]),
        .I4(data7[49]),
        .I5(\tx_encoded_data[41]_i_5_n_0 ),
        .O(\tx_encoded_data[41]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hFFFF2000)) 
    \tx_encoded_data[41]_i_4 
       (.I0(\tx_encoded_data[41]_i_6_n_0 ),
        .I1(tx_xgmii_ctrl_reg2_reg[5]),
        .I2(\o4_reg_n_0_[3] ),
        .I3(tx_xgmii_ctrl_reg2_reg[4]),
        .I4(\tx_encoded_data[63]_i_2_n_0 ),
        .O(\tx_encoded_data[41]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair247" *) 
  LUT2 #(
    .INIT(4'h1)) 
    \tx_encoded_data[41]_i_5 
       (.I0(tx_xgmii_ctrl_reg2_reg[4]),
        .I1(tx_xgmii_ctrl_reg2_reg[7]),
        .O(\tx_encoded_data[41]_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair266" *) 
  LUT3 #(
    .INIT(8'hFE)) 
    \tx_encoded_data[41]_i_6 
       (.I0(\t_type_reg_reg_n_0_[2] ),
        .I1(\t_type_reg_reg_n_0_[0] ),
        .I2(\t_type_reg_reg_n_0_[1] ),
        .O(\tx_encoded_data[41]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFA800)) 
    \tx_encoded_data[42]_i_1 
       (.I0(tx_xgmii_ctrl_reg2_reg[5]),
        .I1(tx_xgmii_ctrl_reg2_reg[0]),
        .I2(tx_xgmii_ctrl_reg2_reg[3]),
        .I3(c4[4]),
        .I4(\tx_encoded_data[42]_i_2_n_0 ),
        .I5(\tx_encoded_data[63]_i_2_n_0 ),
        .O(\tx_encoded_data[42]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h2AFF2A20)) 
    \tx_encoded_data[42]_i_2 
       (.I0(data7[42]),
        .I1(tx_xgmii_ctrl_reg2_reg[4]),
        .I2(tx_xgmii_ctrl_reg2_reg[5]),
        .I3(tx_xgmii_ctrl_reg2_reg[7]),
        .I4(data7[50]),
        .O(\tx_encoded_data[42]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFF8F8F8)) 
    \tx_encoded_data[43]_i_1 
       (.I0(data7[51]),
        .I1(\tx_encoded_data[65]_i_2_n_0 ),
        .I2(\tx_encoded_data[43]_i_2_n_0 ),
        .I3(\tx_encoded_data[44]_i_3_n_0 ),
        .I4(c4[5]),
        .O(\tx_encoded_data[43]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair251" *) 
  LUT4 #(
    .INIT(16'hD000)) 
    \tx_encoded_data[43]_i_2 
       (.I0(tx_xgmii_ctrl_reg2_reg[5]),
        .I1(tx_xgmii_ctrl_reg2_reg[6]),
        .I2(data7[43]),
        .I3(\tx_encoded_data[51]_i_2_n_0 ),
        .O(\tx_encoded_data[43]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFF8F8F8)) 
    \tx_encoded_data[44]_i_1 
       (.I0(data7[52]),
        .I1(\tx_encoded_data[65]_i_2_n_0 ),
        .I2(\tx_encoded_data[44]_i_2_n_0 ),
        .I3(\tx_encoded_data[44]_i_3_n_0 ),
        .I4(c4[6]),
        .O(\tx_encoded_data[44]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair252" *) 
  LUT4 #(
    .INIT(16'hD000)) 
    \tx_encoded_data[44]_i_2 
       (.I0(tx_xgmii_ctrl_reg2_reg[5]),
        .I1(tx_xgmii_ctrl_reg2_reg[6]),
        .I2(data7[44]),
        .I3(\tx_encoded_data[51]_i_2_n_0 ),
        .O(\tx_encoded_data[44]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFEEEEEEEEEEEEEEE)) 
    \tx_encoded_data[44]_i_3 
       (.I0(\tx_encoded_data[44]_i_4_n_0 ),
        .I1(\tx_encoded_data[44]_i_5_n_0 ),
        .I2(\tx_encoded_data[45]_i_3_n_0 ),
        .I3(\tx_encoded_data[45]_i_5_n_0 ),
        .I4(tx_xgmii_ctrl_reg2_reg[4]),
        .I5(\tx_encoded_data[44]_i_6_n_0 ),
        .O(\tx_encoded_data[44]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h01000000C0000000)) 
    \tx_encoded_data[44]_i_4 
       (.I0(tx_xgmii_ctrl_reg2_reg[1]),
        .I1(tx_xgmii_ctrl_reg2_reg[2]),
        .I2(tx_xgmii_ctrl_reg2_reg[3]),
        .I3(\tx_encoded_data[45]_i_3_n_0 ),
        .I4(tx_xgmii_ctrl_reg2_reg[4]),
        .I5(tx_xgmii_ctrl_reg2_reg[0]),
        .O(\tx_encoded_data[44]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair238" *) 
  LUT5 #(
    .INIT(32'h04000000)) 
    \tx_encoded_data[44]_i_5 
       (.I0(tx_xgmii_ctrl_reg2_reg[1]),
        .I1(tx_xgmii_ctrl_reg2_reg[3]),
        .I2(tx_xgmii_ctrl_reg2_reg[0]),
        .I3(tx_xgmii_ctrl_reg2_reg[4]),
        .I4(\tx_encoded_data[45]_i_3_n_0 ),
        .O(\tx_encoded_data[44]_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair249" *) 
  LUT3 #(
    .INIT(8'h80)) 
    \tx_encoded_data[44]_i_6 
       (.I0(tx_xgmii_ctrl_reg2_reg[3]),
        .I1(tx_xgmii_ctrl_reg2_reg[2]),
        .I2(tx_xgmii_ctrl_reg2_reg[1]),
        .O(\tx_encoded_data[44]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hFFF8F8F8F8F8F8F8)) 
    \tx_encoded_data[45]_i_1 
       (.I0(data7[53]),
        .I1(\tx_encoded_data[65]_i_2_n_0 ),
        .I2(\tx_encoded_data[45]_i_2_n_0 ),
        .I3(c5[0]),
        .I4(\tx_encoded_data[45]_i_3_n_0 ),
        .I5(\tx_encoded_data[45]_i_4_n_0 ),
        .O(\tx_encoded_data[45]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair251" *) 
  LUT4 #(
    .INIT(16'hD000)) 
    \tx_encoded_data[45]_i_2 
       (.I0(tx_xgmii_ctrl_reg2_reg[5]),
        .I1(tx_xgmii_ctrl_reg2_reg[6]),
        .I2(data7[45]),
        .I3(\tx_encoded_data[51]_i_2_n_0 ),
        .O(\tx_encoded_data[45]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair237" *) 
  LUT3 #(
    .INIT(8'h80)) 
    \tx_encoded_data[45]_i_3 
       (.I0(tx_xgmii_ctrl_reg2_reg[6]),
        .I1(tx_xgmii_ctrl_reg2_reg[5]),
        .I2(tx_xgmii_ctrl_reg2_reg[7]),
        .O(\tx_encoded_data[45]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hC4440044000000CC)) 
    \tx_encoded_data[45]_i_4 
       (.I0(tx_xgmii_ctrl_reg2_reg[0]),
        .I1(tx_xgmii_ctrl_reg2_reg[4]),
        .I2(\tx_encoded_data[45]_i_5_n_0 ),
        .I3(tx_xgmii_ctrl_reg2_reg[1]),
        .I4(tx_xgmii_ctrl_reg2_reg[2]),
        .I5(tx_xgmii_ctrl_reg2_reg[3]),
        .O(\tx_encoded_data[45]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair266" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \tx_encoded_data[45]_i_5 
       (.I0(\t_type_reg_reg_n_0_[1] ),
        .I1(\t_type_reg_reg_n_0_[2] ),
        .O(\tx_encoded_data[45]_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair254" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \tx_encoded_data[46]_i_1 
       (.I0(\tx_encoded_data[46]_i_2_n_0 ),
        .I1(\tx_encoded_data[63]_i_2_n_0 ),
        .O(\tx_encoded_data[46]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hCCF0F0F0EEFAAAAA)) 
    \tx_encoded_data[46]_i_2 
       (.I0(data7[54]),
        .I1(c5[1]),
        .I2(data7[46]),
        .I3(tx_xgmii_ctrl_reg2_reg[4]),
        .I4(tx_xgmii_ctrl_reg2_reg[5]),
        .I5(tx_xgmii_ctrl_reg2_reg[7]),
        .O(\tx_encoded_data[46]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair255" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \tx_encoded_data[47]_i_1 
       (.I0(\tx_encoded_data[47]_i_2_n_0 ),
        .I1(\tx_encoded_data[63]_i_2_n_0 ),
        .O(\tx_encoded_data[47]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hCCF0F0F0EEFAAAAA)) 
    \tx_encoded_data[47]_i_2 
       (.I0(data7[55]),
        .I1(c5[2]),
        .I2(data7[47]),
        .I3(tx_xgmii_ctrl_reg2_reg[4]),
        .I4(tx_xgmii_ctrl_reg2_reg[5]),
        .I5(tx_xgmii_ctrl_reg2_reg[7]),
        .O(\tx_encoded_data[47]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair256" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \tx_encoded_data[48]_i_1 
       (.I0(\tx_encoded_data[48]_i_2_n_0 ),
        .I1(\tx_encoded_data[63]_i_2_n_0 ),
        .O(\tx_encoded_data[48]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hCCF0F0F0EEFAAAAA)) 
    \tx_encoded_data[48]_i_2 
       (.I0(data7[56]),
        .I1(c5[3]),
        .I2(data7[48]),
        .I3(tx_xgmii_ctrl_reg2_reg[4]),
        .I4(tx_xgmii_ctrl_reg2_reg[5]),
        .I5(tx_xgmii_ctrl_reg2_reg[7]),
        .O(\tx_encoded_data[48]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair258" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \tx_encoded_data[49]_i_1 
       (.I0(\tx_encoded_data[49]_i_2_n_0 ),
        .I1(\tx_encoded_data[63]_i_2_n_0 ),
        .O(\tx_encoded_data[49]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hCCF0F0F0EEFAAAAA)) 
    \tx_encoded_data[49]_i_2 
       (.I0(data7[57]),
        .I1(c5[4]),
        .I2(data7[49]),
        .I3(tx_xgmii_ctrl_reg2_reg[4]),
        .I4(tx_xgmii_ctrl_reg2_reg[5]),
        .I5(tx_xgmii_ctrl_reg2_reg[7]),
        .O(\tx_encoded_data[49]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFAFAFAEE)) 
    \tx_encoded_data[4]_i_1 
       (.I0(\tx_encoded_data[63]_i_2_n_0 ),
        .I1(data7[12]),
        .I2(data7[4]),
        .I3(tx_xgmii_ctrl_reg2_reg[0]),
        .I4(tx_xgmii_ctrl_reg2_reg[7]),
        .O(\tx_encoded_data[4]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFF08FF08FF08)) 
    \tx_encoded_data[50]_i_1 
       (.I0(data7[50]),
        .I1(\tx_encoded_data[51]_i_2_n_0 ),
        .I2(tx_xgmii_ctrl_reg2_reg[5]),
        .I3(\tx_encoded_data[50]_i_2_n_0 ),
        .I4(\tx_encoded_data[65]_i_2_n_0 ),
        .I5(d6[0]),
        .O(\tx_encoded_data[50]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h80000000)) 
    \tx_encoded_data[50]_i_2 
       (.I0(c5[5]),
        .I1(tx_xgmii_ctrl_reg2_reg[6]),
        .I2(tx_xgmii_ctrl_reg2_reg[5]),
        .I3(tx_xgmii_ctrl_reg2_reg[7]),
        .I4(\tx_encoded_data[45]_i_4_n_0 ),
        .O(\tx_encoded_data[50]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFF08FF08FF08)) 
    \tx_encoded_data[51]_i_1 
       (.I0(data7[51]),
        .I1(\tx_encoded_data[51]_i_2_n_0 ),
        .I2(tx_xgmii_ctrl_reg2_reg[5]),
        .I3(\tx_encoded_data[51]_i_3_n_0 ),
        .I4(\tx_encoded_data[65]_i_2_n_0 ),
        .I5(d6[1]),
        .O(\tx_encoded_data[51]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000004)) 
    \tx_encoded_data[51]_i_2 
       (.I0(tx_xgmii_ctrl_reg2_reg[0]),
        .I1(tx_xgmii_ctrl_reg2_reg[7]),
        .I2(tx_xgmii_ctrl_reg2_reg[2]),
        .I3(tx_xgmii_ctrl_reg2_reg[1]),
        .I4(tx_xgmii_ctrl_reg2_reg[3]),
        .I5(tx_xgmii_ctrl_reg2_reg[4]),
        .O(\tx_encoded_data[51]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h80000000)) 
    \tx_encoded_data[51]_i_3 
       (.I0(c5[6]),
        .I1(tx_xgmii_ctrl_reg2_reg[6]),
        .I2(tx_xgmii_ctrl_reg2_reg[5]),
        .I3(tx_xgmii_ctrl_reg2_reg[7]),
        .I4(\tx_encoded_data[45]_i_4_n_0 ),
        .O(\tx_encoded_data[51]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \tx_encoded_data[52]_i_1 
       (.I0(\tx_encoded_data[65]_i_2_n_0 ),
        .I1(d6[2]),
        .I2(\tx_encoded_data[57]_i_2_n_0 ),
        .I3(data7[52]),
        .I4(c6[0]),
        .I5(\tx_encoded_data[58]_i_2_n_0 ),
        .O(\tx_encoded_data[52]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFB73EA40)) 
    \tx_encoded_data[53]_i_1 
       (.I0(tx_xgmii_ctrl_reg2_reg[5]),
        .I1(tx_xgmii_ctrl_reg2_reg[7]),
        .I2(data7[53]),
        .I3(c6[1]),
        .I4(d6[3]),
        .I5(\tx_encoded_data[63]_i_2_n_0 ),
        .O(\tx_encoded_data[53]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFB73EA40)) 
    \tx_encoded_data[54]_i_1 
       (.I0(tx_xgmii_ctrl_reg2_reg[5]),
        .I1(tx_xgmii_ctrl_reg2_reg[7]),
        .I2(data7[54]),
        .I3(c6[2]),
        .I4(d6[4]),
        .I5(\tx_encoded_data[63]_i_2_n_0 ),
        .O(\tx_encoded_data[54]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFB73EA40)) 
    \tx_encoded_data[55]_i_1 
       (.I0(tx_xgmii_ctrl_reg2_reg[5]),
        .I1(tx_xgmii_ctrl_reg2_reg[7]),
        .I2(data7[55]),
        .I3(c6[3]),
        .I4(d6[5]),
        .I5(\tx_encoded_data[63]_i_2_n_0 ),
        .O(\tx_encoded_data[55]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFB73EA40)) 
    \tx_encoded_data[56]_i_1 
       (.I0(tx_xgmii_ctrl_reg2_reg[5]),
        .I1(tx_xgmii_ctrl_reg2_reg[7]),
        .I2(data7[56]),
        .I3(c6[4]),
        .I4(d6[6]),
        .I5(\tx_encoded_data[63]_i_2_n_0 ),
        .O(\tx_encoded_data[56]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \tx_encoded_data[57]_i_1 
       (.I0(\tx_encoded_data[65]_i_2_n_0 ),
        .I1(d6[7]),
        .I2(\tx_encoded_data[57]_i_2_n_0 ),
        .I3(data7[57]),
        .I4(c6[5]),
        .I5(\tx_encoded_data[58]_i_2_n_0 ),
        .O(\tx_encoded_data[57]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair259" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \tx_encoded_data[57]_i_2 
       (.I0(\tx_encoded_data[51]_i_2_n_0 ),
        .I1(tx_xgmii_ctrl_reg2_reg[5]),
        .O(\tx_encoded_data[57]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \tx_encoded_data[58]_i_1 
       (.I0(\tx_encoded_data[65]_i_2_n_0 ),
        .I1(d7[0]),
        .I2(\tx_encoded_data[65]_i_3_n_0 ),
        .I3(d6[0]),
        .I4(c6[6]),
        .I5(\tx_encoded_data[58]_i_2_n_0 ),
        .O(\tx_encoded_data[58]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hF100000000000000)) 
    \tx_encoded_data[58]_i_2 
       (.I0(\tx_encoded_data[1]_i_2_n_0 ),
        .I1(tx_xgmii_ctrl_reg2_reg[0]),
        .I2(\tx_encoded_data[45]_i_4_n_0 ),
        .I3(tx_xgmii_ctrl_reg2_reg[6]),
        .I4(tx_xgmii_ctrl_reg2_reg[5]),
        .I5(tx_xgmii_ctrl_reg2_reg[7]),
        .O(\tx_encoded_data[58]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \tx_encoded_data[59]_i_1 
       (.I0(\tx_encoded_data[65]_i_2_n_0 ),
        .I1(d7[1]),
        .I2(\tx_encoded_data[65]_i_3_n_0 ),
        .I3(d6[1]),
        .I4(data7[59]),
        .I5(\tx_encoded_data[65]_i_4_n_0 ),
        .O(\tx_encoded_data[59]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFAFAFAEE)) 
    \tx_encoded_data[5]_i_1 
       (.I0(\tx_encoded_data[63]_i_2_n_0 ),
        .I1(data7[13]),
        .I2(data7[5]),
        .I3(tx_xgmii_ctrl_reg2_reg[0]),
        .I4(tx_xgmii_ctrl_reg2_reg[7]),
        .O(\tx_encoded_data[5]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFB73EA40)) 
    \tx_encoded_data[60]_i_1 
       (.I0(tx_xgmii_ctrl_reg2_reg[6]),
        .I1(tx_xgmii_ctrl_reg2_reg[7]),
        .I2(d6[2]),
        .I3(data7[60]),
        .I4(d7[2]),
        .I5(\tx_encoded_data[63]_i_2_n_0 ),
        .O(\tx_encoded_data[60]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFB73EA40)) 
    \tx_encoded_data[61]_i_1 
       (.I0(tx_xgmii_ctrl_reg2_reg[6]),
        .I1(tx_xgmii_ctrl_reg2_reg[7]),
        .I2(d6[3]),
        .I3(data7[61]),
        .I4(d7[3]),
        .I5(\tx_encoded_data[63]_i_2_n_0 ),
        .O(\tx_encoded_data[61]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFB73EA40)) 
    \tx_encoded_data[62]_i_1 
       (.I0(tx_xgmii_ctrl_reg2_reg[6]),
        .I1(tx_xgmii_ctrl_reg2_reg[7]),
        .I2(d6[4]),
        .I3(data7[62]),
        .I4(d7[4]),
        .I5(\tx_encoded_data[63]_i_2_n_0 ),
        .O(\tx_encoded_data[62]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFB73EA40)) 
    \tx_encoded_data[63]_i_1 
       (.I0(tx_xgmii_ctrl_reg2_reg[6]),
        .I1(tx_xgmii_ctrl_reg2_reg[7]),
        .I2(d6[5]),
        .I3(data7[63]),
        .I4(d7[5]),
        .I5(\tx_encoded_data[63]_i_2_n_0 ),
        .O(\tx_encoded_data[63]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hFE)) 
    \tx_encoded_data[63]_i_2 
       (.I0(\tx_encoded_data[63]_i_3_n_0 ),
        .I1(\tx_encoded_data[63]_i_4_n_0 ),
        .I2(\tx_encoded_data[63]_i_5_n_0 ),
        .O(\tx_encoded_data[63]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h88F000FF88F00000)) 
    \tx_encoded_data[63]_i_3 
       (.I0(tx_xgmii_ctrl_reg2_reg[1]),
        .I1(\t_type_reg_reg_n_0_[2] ),
        .I2(tx_xgmii_ctrl_reg2_reg[7]),
        .I3(tx_xgmii_ctrl_reg2_reg[5]),
        .I4(tx_xgmii_ctrl_reg2_reg[0]),
        .I5(tx_xgmii_ctrl_reg2_reg[4]),
        .O(\tx_encoded_data[63]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h08AAFFAAFFFFFF00)) 
    \tx_encoded_data[63]_i_4 
       (.I0(tx_xgmii_ctrl_reg2_reg[0]),
        .I1(tx_xgmii_ctrl_reg2_reg[5]),
        .I2(\t_type_reg_reg_n_0_[1] ),
        .I3(tx_xgmii_ctrl_reg2_reg[1]),
        .I4(tx_xgmii_ctrl_reg2_reg[2]),
        .I5(tx_xgmii_ctrl_reg2_reg[3]),
        .O(\tx_encoded_data[63]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h3FFF0CAE3FBF0CAE)) 
    \tx_encoded_data[63]_i_5 
       (.I0(tx_xgmii_ctrl_reg2_reg[3]),
        .I1(tx_xgmii_ctrl_reg2_reg[6]),
        .I2(tx_xgmii_ctrl_reg2_reg[7]),
        .I3(tx_xgmii_ctrl_reg2_reg[4]),
        .I4(tx_xgmii_ctrl_reg2_reg[5]),
        .I5(tx_xgmii_ctrl_reg2_reg[0]),
        .O(\tx_encoded_data[63]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \tx_encoded_data[64]_i_1 
       (.I0(\tx_encoded_data[65]_i_2_n_0 ),
        .I1(d7[6]),
        .I2(\tx_encoded_data[65]_i_3_n_0 ),
        .I3(d6[6]),
        .I4(data7[64]),
        .I5(\tx_encoded_data[65]_i_4_n_0 ),
        .O(\tx_encoded_data[64]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \tx_encoded_data[65]_i_1 
       (.I0(\tx_encoded_data[65]_i_2_n_0 ),
        .I1(d7[7]),
        .I2(\tx_encoded_data[65]_i_3_n_0 ),
        .I3(d6[7]),
        .I4(data7[65]),
        .I5(\tx_encoded_data[65]_i_4_n_0 ),
        .O(\tx_encoded_data[65]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000081010001)) 
    \tx_encoded_data[65]_i_2 
       (.I0(tx_xgmii_ctrl_reg2_reg[1]),
        .I1(tx_xgmii_ctrl_reg2_reg[2]),
        .I2(tx_xgmii_ctrl_reg2_reg[3]),
        .I3(tx_xgmii_ctrl_reg2_reg[4]),
        .I4(tx_xgmii_ctrl_reg2_reg[0]),
        .I5(\tx_encoded_data[65]_i_5_n_0 ),
        .O(\tx_encoded_data[65]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair252" *) 
  LUT3 #(
    .INIT(8'h02)) 
    \tx_encoded_data[65]_i_3 
       (.I0(\tx_encoded_data[51]_i_2_n_0 ),
        .I1(tx_xgmii_ctrl_reg2_reg[6]),
        .I2(tx_xgmii_ctrl_reg2_reg[5]),
        .O(\tx_encoded_data[65]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair232" *) 
  LUT5 #(
    .INIT(32'hFF008000)) 
    \tx_encoded_data[65]_i_4 
       (.I0(\tx_encoded_data[45]_i_4_n_0 ),
        .I1(tx_xgmii_ctrl_reg2_reg[5]),
        .I2(tx_xgmii_ctrl_reg2_reg[7]),
        .I3(tx_xgmii_ctrl_reg2_reg[6]),
        .I4(\tx_encoded_data[51]_i_2_n_0 ),
        .O(\tx_encoded_data[65]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair230" *) 
  LUT3 #(
    .INIT(8'hFE)) 
    \tx_encoded_data[65]_i_5 
       (.I0(tx_xgmii_ctrl_reg2_reg[6]),
        .I1(tx_xgmii_ctrl_reg2_reg[5]),
        .I2(tx_xgmii_ctrl_reg2_reg[7]),
        .O(\tx_encoded_data[65]_i_5_n_0 ));
  LUT5 #(
    .INIT(32'hFAFAFAEE)) 
    \tx_encoded_data[6]_i_1 
       (.I0(\tx_encoded_data[63]_i_2_n_0 ),
        .I1(data7[14]),
        .I2(data7[6]),
        .I3(tx_xgmii_ctrl_reg2_reg[0]),
        .I4(tx_xgmii_ctrl_reg2_reg[7]),
        .O(\tx_encoded_data[6]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h8F88)) 
    \tx_encoded_data[7]_i_1 
       (.I0(data7[7]),
        .I1(\tx_encoded_data[9]_i_2_n_0 ),
        .I2(\tx_encoded_data[0]_i_1_n_0 ),
        .I3(data7[15]),
        .O(\tx_encoded_data[7]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h8F88)) 
    \tx_encoded_data[8]_i_1 
       (.I0(data7[8]),
        .I1(\tx_encoded_data[9]_i_2_n_0 ),
        .I2(\tx_encoded_data[0]_i_1_n_0 ),
        .I3(data7[16]),
        .O(\tx_encoded_data[8]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h8F88)) 
    \tx_encoded_data[9]_i_1 
       (.I0(data7[9]),
        .I1(\tx_encoded_data[9]_i_2_n_0 ),
        .I2(\tx_encoded_data[0]_i_1_n_0 ),
        .I3(data7[17]),
        .O(\tx_encoded_data[9]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFAAAAFFAE)) 
    \tx_encoded_data[9]_i_2 
       (.I0(\tx_encoded_data[9]_i_3_n_0 ),
        .I1(tx_xgmii_ctrl_reg2_reg[0]),
        .I2(\tx_encoded_data[1]_i_2_n_0 ),
        .I3(\tx_encoded_data[9]_i_4_n_0 ),
        .I4(\tx_encoded_data[65]_i_5_n_0 ),
        .I5(\tx_encoded_data[38]_i_4_n_0 ),
        .O(\tx_encoded_data[9]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair232" *) 
  LUT4 #(
    .INIT(16'h8000)) 
    \tx_encoded_data[9]_i_3 
       (.I0(tx_xgmii_ctrl_reg2_reg[7]),
        .I1(tx_xgmii_ctrl_reg2_reg[5]),
        .I2(tx_xgmii_ctrl_reg2_reg[6]),
        .I3(\tx_encoded_data[45]_i_4_n_0 ),
        .O(\tx_encoded_data[9]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair249" *) 
  LUT5 #(
    .INIT(32'h80000000)) 
    \tx_encoded_data[9]_i_4 
       (.I0(tx_xgmii_ctrl_reg2_reg[4]),
        .I1(tx_xgmii_ctrl_reg2_reg[0]),
        .I2(tx_xgmii_ctrl_reg2_reg[1]),
        .I3(tx_xgmii_ctrl_reg2_reg[2]),
        .I4(tx_xgmii_ctrl_reg2_reg[3]),
        .O(\tx_encoded_data[9]_i_4_n_0 ));
  FDSE \tx_encoded_data_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_encoded_data[0]_i_1_n_0 ),
        .Q(tx_66_enc[0]),
        .S(out));
  FDRE \tx_encoded_data_reg[10] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_encoded_data[10]_i_1_n_0 ),
        .Q(tx_66_enc[10]),
        .R(out));
  FDRE \tx_encoded_data_reg[11] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_encoded_data[11]_i_1_n_0 ),
        .Q(tx_66_enc[11]),
        .R(out));
  FDRE \tx_encoded_data_reg[12] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_encoded_data[12]_i_1_n_0 ),
        .Q(tx_66_enc[12]),
        .R(out));
  FDRE \tx_encoded_data_reg[13] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_encoded_data[13]_i_1_n_0 ),
        .Q(tx_66_enc[13]),
        .R(out));
  FDRE \tx_encoded_data_reg[14] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_encoded_data[14]_i_1_n_0 ),
        .Q(tx_66_enc[14]),
        .R(out));
  FDRE \tx_encoded_data_reg[15] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_encoded_data[15]_i_1_n_0 ),
        .Q(tx_66_enc[15]),
        .R(out));
  FDRE \tx_encoded_data_reg[16] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_encoded_data[16]_i_1_n_0 ),
        .Q(tx_66_enc[16]),
        .R(out));
  FDRE \tx_encoded_data_reg[17] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_encoded_data[17]_i_1_n_0 ),
        .Q(tx_66_enc[17]),
        .R(out));
  FDRE \tx_encoded_data_reg[18] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_encoded_data[18]_i_1_n_0 ),
        .Q(tx_66_enc[18]),
        .R(out));
  FDRE \tx_encoded_data_reg[19] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_encoded_data[19]_i_1_n_0 ),
        .Q(tx_66_enc[19]),
        .R(out));
  FDRE \tx_encoded_data_reg[1] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_encoded_data[1]_i_1_n_0 ),
        .Q(tx_66_enc[1]),
        .R(out));
  FDRE \tx_encoded_data_reg[20] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_encoded_data[20]_i_1_n_0 ),
        .Q(tx_66_enc[20]),
        .R(out));
  FDRE \tx_encoded_data_reg[21] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_encoded_data[21]_i_1_n_0 ),
        .Q(tx_66_enc[21]),
        .R(out));
  FDRE \tx_encoded_data_reg[22] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_encoded_data[22]_i_1_n_0 ),
        .Q(tx_66_enc[22]),
        .R(out));
  FDRE \tx_encoded_data_reg[23] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_encoded_data[23]_i_1_n_0 ),
        .Q(tx_66_enc[23]),
        .R(out));
  FDRE \tx_encoded_data_reg[24] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_encoded_data[24]_i_1_n_0 ),
        .Q(tx_66_enc[24]),
        .R(out));
  FDRE \tx_encoded_data_reg[25] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_encoded_data[25]_i_1_n_0 ),
        .Q(tx_66_enc[25]),
        .R(out));
  FDSE \tx_encoded_data_reg[26] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_encoded_data[26]_i_1_n_0 ),
        .Q(tx_66_enc[26]),
        .S(out));
  FDRE \tx_encoded_data_reg[27] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_encoded_data[27]_i_1_n_0 ),
        .Q(tx_66_enc[27]),
        .R(out));
  FDRE \tx_encoded_data_reg[28] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_encoded_data[28]_i_1_n_0 ),
        .Q(tx_66_enc[28]),
        .R(out));
  FDRE \tx_encoded_data_reg[29] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_encoded_data[29]_i_1_n_0 ),
        .Q(tx_66_enc[29]),
        .R(out));
  FDSE \tx_encoded_data_reg[2] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_encoded_data[2]_i_1_n_0 ),
        .Q(tx_66_enc[2]),
        .S(out));
  FDRE \tx_encoded_data_reg[30] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_encoded_data[30]_i_1_n_0 ),
        .Q(tx_66_enc[30]),
        .R(out));
  FDRE \tx_encoded_data_reg[31] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_encoded_data[31]_i_1_n_0 ),
        .Q(tx_66_enc[31]),
        .R(out));
  FDRE \tx_encoded_data_reg[32] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_encoded_data[32]_i_1_n_0 ),
        .Q(tx_66_enc[32]),
        .R(out));
  FDRE \tx_encoded_data_reg[33] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_encoded_data[33]_i_1_n_0 ),
        .Q(tx_66_enc[33]),
        .R(out));
  FDRE \tx_encoded_data_reg[34] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_encoded_data[34]_i_1_n_0 ),
        .Q(tx_66_enc[34]),
        .R(out));
  FDRE \tx_encoded_data_reg[35] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_encoded_data[35]_i_1_n_0 ),
        .Q(tx_66_enc[35]),
        .R(out));
  FDRE \tx_encoded_data_reg[36] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_encoded_data[36]_i_1_n_0 ),
        .Q(tx_66_enc[36]),
        .R(out));
  FDRE \tx_encoded_data_reg[37] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_encoded_data[37]_i_1_n_0 ),
        .Q(tx_66_enc[37]),
        .R(out));
  FDRE \tx_encoded_data_reg[38] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_encoded_data[38]_i_1_n_0 ),
        .Q(tx_66_enc[38]),
        .R(out));
  FDRE \tx_encoded_data_reg[39] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_encoded_data[39]_i_1_n_0 ),
        .Q(tx_66_enc[39]),
        .R(out));
  FDRE \tx_encoded_data_reg[3] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_encoded_data[3]_i_1_n_0 ),
        .Q(tx_66_enc[3]),
        .R(out));
  FDRE \tx_encoded_data_reg[40] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_encoded_data[40]_i_1_n_0 ),
        .Q(tx_66_enc[40]),
        .R(out));
  FDRE \tx_encoded_data_reg[41] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_encoded_data[41]_i_1_n_0 ),
        .Q(tx_66_enc[41]),
        .R(out));
  FDRE \tx_encoded_data_reg[42] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_encoded_data[42]_i_1_n_0 ),
        .Q(tx_66_enc[42]),
        .R(out));
  FDRE \tx_encoded_data_reg[43] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_encoded_data[43]_i_1_n_0 ),
        .Q(tx_66_enc[43]),
        .R(out));
  FDRE \tx_encoded_data_reg[44] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_encoded_data[44]_i_1_n_0 ),
        .Q(tx_66_enc[44]),
        .R(out));
  FDRE \tx_encoded_data_reg[45] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_encoded_data[45]_i_1_n_0 ),
        .Q(tx_66_enc[45]),
        .R(out));
  FDRE \tx_encoded_data_reg[46] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_encoded_data[46]_i_1_n_0 ),
        .Q(tx_66_enc[46]),
        .R(out));
  FDRE \tx_encoded_data_reg[47] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_encoded_data[47]_i_1_n_0 ),
        .Q(tx_66_enc[47]),
        .R(out));
  FDRE \tx_encoded_data_reg[48] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_encoded_data[48]_i_1_n_0 ),
        .Q(tx_66_enc[48]),
        .R(out));
  FDRE \tx_encoded_data_reg[49] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_encoded_data[49]_i_1_n_0 ),
        .Q(tx_66_enc[49]),
        .R(out));
  FDSE \tx_encoded_data_reg[4] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_encoded_data[4]_i_1_n_0 ),
        .Q(tx_66_enc[4]),
        .S(out));
  FDRE \tx_encoded_data_reg[50] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_encoded_data[50]_i_1_n_0 ),
        .Q(tx_66_enc[50]),
        .R(out));
  FDRE \tx_encoded_data_reg[51] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_encoded_data[51]_i_1_n_0 ),
        .Q(tx_66_enc[51]),
        .R(out));
  FDRE \tx_encoded_data_reg[52] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_encoded_data[52]_i_1_n_0 ),
        .Q(tx_66_enc[52]),
        .R(out));
  FDRE \tx_encoded_data_reg[53] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_encoded_data[53]_i_1_n_0 ),
        .Q(tx_66_enc[53]),
        .R(out));
  FDRE \tx_encoded_data_reg[54] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_encoded_data[54]_i_1_n_0 ),
        .Q(tx_66_enc[54]),
        .R(out));
  FDRE \tx_encoded_data_reg[55] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_encoded_data[55]_i_1_n_0 ),
        .Q(tx_66_enc[55]),
        .R(out));
  FDRE \tx_encoded_data_reg[56] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_encoded_data[56]_i_1_n_0 ),
        .Q(tx_66_enc[56]),
        .R(out));
  FDRE \tx_encoded_data_reg[57] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_encoded_data[57]_i_1_n_0 ),
        .Q(tx_66_enc[57]),
        .R(out));
  FDSE \tx_encoded_data_reg[58] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_encoded_data[58]_i_1_n_0 ),
        .Q(tx_66_enc[58]),
        .S(out));
  FDRE \tx_encoded_data_reg[59] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_encoded_data[59]_i_1_n_0 ),
        .Q(tx_66_enc[59]),
        .R(out));
  FDRE \tx_encoded_data_reg[5] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_encoded_data[5]_i_1_n_0 ),
        .Q(tx_66_enc[5]),
        .R(out));
  FDRE \tx_encoded_data_reg[60] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_encoded_data[60]_i_1_n_0 ),
        .Q(tx_66_enc[60]),
        .R(out));
  FDRE \tx_encoded_data_reg[61] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_encoded_data[61]_i_1_n_0 ),
        .Q(tx_66_enc[61]),
        .R(out));
  FDRE \tx_encoded_data_reg[62] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_encoded_data[62]_i_1_n_0 ),
        .Q(tx_66_enc[62]),
        .R(out));
  FDRE \tx_encoded_data_reg[63] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_encoded_data[63]_i_1_n_0 ),
        .Q(tx_66_enc[63]),
        .R(out));
  FDRE \tx_encoded_data_reg[64] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_encoded_data[64]_i_1_n_0 ),
        .Q(tx_66_enc[64]),
        .R(out));
  FDRE \tx_encoded_data_reg[65] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_encoded_data[65]_i_1_n_0 ),
        .Q(tx_66_enc[65]),
        .R(out));
  FDSE \tx_encoded_data_reg[6] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_encoded_data[6]_i_1_n_0 ),
        .Q(tx_66_enc[6]),
        .S(out));
  FDRE \tx_encoded_data_reg[7] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_encoded_data[7]_i_1_n_0 ),
        .Q(tx_66_enc[7]),
        .R(out));
  FDSE \tx_encoded_data_reg[8] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_encoded_data[8]_i_1_n_0 ),
        .Q(tx_66_enc[8]),
        .S(out));
  FDRE \tx_encoded_data_reg[9] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_encoded_data[9]_i_1_n_0 ),
        .Q(tx_66_enc[9]),
        .R(out));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_ctrl_reg1_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_xgmii_ctrl_reg2_reg[7]_0 [0]),
        .Q(tx_xgmii_ctrl_reg1[0]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_ctrl_reg1_reg[1] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_xgmii_ctrl_reg2_reg[7]_0 [1]),
        .Q(tx_xgmii_ctrl_reg1[1]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_ctrl_reg1_reg[2] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_xgmii_ctrl_reg2_reg[7]_0 [2]),
        .Q(tx_xgmii_ctrl_reg1[2]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_ctrl_reg1_reg[3] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_xgmii_ctrl_reg2_reg[7]_0 [3]),
        .Q(tx_xgmii_ctrl_reg1[3]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_ctrl_reg1_reg[4] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_xgmii_ctrl_reg2_reg[7]_0 [4]),
        .Q(tx_xgmii_ctrl_reg1[4]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_ctrl_reg1_reg[5] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_xgmii_ctrl_reg2_reg[7]_0 [5]),
        .Q(tx_xgmii_ctrl_reg1[5]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_ctrl_reg1_reg[6] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_xgmii_ctrl_reg2_reg[7]_0 [6]),
        .Q(tx_xgmii_ctrl_reg1[6]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_ctrl_reg1_reg[7] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_xgmii_ctrl_reg2_reg[7]_0 [7]),
        .Q(tx_xgmii_ctrl_reg1[7]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_ctrl_reg2_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_xgmii_ctrl_reg2_reg[7]_0 [0]),
        .Q(tx_xgmii_ctrl_reg2[0]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_ctrl_reg2_reg[1] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_xgmii_ctrl_reg2_reg[7]_0 [1]),
        .Q(tx_xgmii_ctrl_reg2[1]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_ctrl_reg2_reg[2] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_xgmii_ctrl_reg2_reg[7]_0 [2]),
        .Q(tx_xgmii_ctrl_reg2[2]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_ctrl_reg2_reg[3] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_xgmii_ctrl_reg2_reg[7]_0 [3]),
        .Q(tx_xgmii_ctrl_reg2[3]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_ctrl_reg2_reg[4] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_xgmii_ctrl_reg2_reg[7]_0 [4]),
        .Q(tx_xgmii_ctrl_reg2[4]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_ctrl_reg2_reg[5] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_xgmii_ctrl_reg2_reg[7]_0 [5]),
        .Q(tx_xgmii_ctrl_reg2[5]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_ctrl_reg2_reg[6] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_xgmii_ctrl_reg2_reg[7]_0 [6]),
        .Q(tx_xgmii_ctrl_reg2[6]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_ctrl_reg2_reg[7] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_xgmii_ctrl_reg2_reg[7]_0 [7]),
        .Q(tx_xgmii_ctrl_reg2[7]),
        .R(1'b0));
  FDRE \tx_xgmii_ctrl_reg2_reg_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_xgmii_ctrl_reg2[0]),
        .Q(tx_xgmii_ctrl_reg2_reg[0]),
        .R(1'b0));
  FDRE \tx_xgmii_ctrl_reg2_reg_reg[1] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_xgmii_ctrl_reg2[1]),
        .Q(tx_xgmii_ctrl_reg2_reg[1]),
        .R(1'b0));
  FDRE \tx_xgmii_ctrl_reg2_reg_reg[2] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_xgmii_ctrl_reg2[2]),
        .Q(tx_xgmii_ctrl_reg2_reg[2]),
        .R(1'b0));
  FDRE \tx_xgmii_ctrl_reg2_reg_reg[3] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_xgmii_ctrl_reg2[3]),
        .Q(tx_xgmii_ctrl_reg2_reg[3]),
        .R(1'b0));
  FDRE \tx_xgmii_ctrl_reg2_reg_reg[4] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_xgmii_ctrl_reg2[4]),
        .Q(tx_xgmii_ctrl_reg2_reg[4]),
        .R(1'b0));
  FDRE \tx_xgmii_ctrl_reg2_reg_reg[5] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_xgmii_ctrl_reg2[5]),
        .Q(tx_xgmii_ctrl_reg2_reg[5]),
        .R(1'b0));
  FDRE \tx_xgmii_ctrl_reg2_reg_reg[6] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_xgmii_ctrl_reg2[6]),
        .Q(tx_xgmii_ctrl_reg2_reg[6]),
        .R(1'b0));
  FDRE \tx_xgmii_ctrl_reg2_reg_reg[7] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_xgmii_ctrl_reg2[7]),
        .Q(tx_xgmii_ctrl_reg2_reg[7]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_xgmii_data_reg2_reg[63]_0 [0]),
        .Q(tx_xgmii_data_reg2[0]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[10] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_xgmii_data_reg2_reg[63]_0 [10]),
        .Q(tx_xgmii_data_reg2[10]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[11] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_xgmii_data_reg2_reg[63]_0 [11]),
        .Q(tx_xgmii_data_reg2[11]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[12] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_xgmii_data_reg2_reg[63]_0 [12]),
        .Q(tx_xgmii_data_reg2[12]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[13] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_xgmii_data_reg2_reg[63]_0 [13]),
        .Q(tx_xgmii_data_reg2[13]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[14] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_xgmii_data_reg2_reg[63]_0 [14]),
        .Q(tx_xgmii_data_reg2[14]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[15] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_xgmii_data_reg2_reg[63]_0 [15]),
        .Q(tx_xgmii_data_reg2[15]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[16] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_xgmii_data_reg2_reg[63]_0 [16]),
        .Q(tx_xgmii_data_reg2[16]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[17] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_xgmii_data_reg2_reg[63]_0 [17]),
        .Q(tx_xgmii_data_reg2[17]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[18] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_xgmii_data_reg2_reg[63]_0 [18]),
        .Q(tx_xgmii_data_reg2[18]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[19] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_xgmii_data_reg2_reg[63]_0 [19]),
        .Q(tx_xgmii_data_reg2[19]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[1] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_xgmii_data_reg2_reg[63]_0 [1]),
        .Q(tx_xgmii_data_reg2[1]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[20] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_xgmii_data_reg2_reg[63]_0 [20]),
        .Q(tx_xgmii_data_reg2[20]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[21] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_xgmii_data_reg2_reg[63]_0 [21]),
        .Q(tx_xgmii_data_reg2[21]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[22] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_xgmii_data_reg2_reg[63]_0 [22]),
        .Q(tx_xgmii_data_reg2[22]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[23] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_xgmii_data_reg2_reg[63]_0 [23]),
        .Q(tx_xgmii_data_reg2[23]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[24] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_xgmii_data_reg2_reg[63]_0 [24]),
        .Q(tx_xgmii_data_reg2[24]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[25] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_xgmii_data_reg2_reg[63]_0 [25]),
        .Q(tx_xgmii_data_reg2[25]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[26] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_xgmii_data_reg2_reg[63]_0 [26]),
        .Q(tx_xgmii_data_reg2[26]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[27] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_xgmii_data_reg2_reg[63]_0 [27]),
        .Q(tx_xgmii_data_reg2[27]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[28] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_xgmii_data_reg2_reg[63]_0 [28]),
        .Q(tx_xgmii_data_reg2[28]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[29] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_xgmii_data_reg2_reg[63]_0 [29]),
        .Q(tx_xgmii_data_reg2[29]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[2] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_xgmii_data_reg2_reg[63]_0 [2]),
        .Q(tx_xgmii_data_reg2[2]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[30] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_xgmii_data_reg2_reg[63]_0 [30]),
        .Q(tx_xgmii_data_reg2[30]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[31] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_xgmii_data_reg2_reg[63]_0 [31]),
        .Q(tx_xgmii_data_reg2[31]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[32] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_xgmii_data_reg2_reg[63]_0 [32]),
        .Q(tx_xgmii_data_reg2[32]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[33] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_xgmii_data_reg2_reg[63]_0 [33]),
        .Q(tx_xgmii_data_reg2[33]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[34] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_xgmii_data_reg2_reg[63]_0 [34]),
        .Q(tx_xgmii_data_reg2[34]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[35] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_xgmii_data_reg2_reg[63]_0 [35]),
        .Q(tx_xgmii_data_reg2[35]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[36] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_xgmii_data_reg2_reg[63]_0 [36]),
        .Q(tx_xgmii_data_reg2[36]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[37] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_xgmii_data_reg2_reg[63]_0 [37]),
        .Q(tx_xgmii_data_reg2[37]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[38] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_xgmii_data_reg2_reg[63]_0 [38]),
        .Q(tx_xgmii_data_reg2[38]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[39] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_xgmii_data_reg2_reg[63]_0 [39]),
        .Q(tx_xgmii_data_reg2[39]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[3] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_xgmii_data_reg2_reg[63]_0 [3]),
        .Q(tx_xgmii_data_reg2[3]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[40] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_xgmii_data_reg2_reg[63]_0 [40]),
        .Q(tx_xgmii_data_reg2[40]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[41] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_xgmii_data_reg2_reg[63]_0 [41]),
        .Q(tx_xgmii_data_reg2[41]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[42] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_xgmii_data_reg2_reg[63]_0 [42]),
        .Q(tx_xgmii_data_reg2[42]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[43] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_xgmii_data_reg2_reg[63]_0 [43]),
        .Q(tx_xgmii_data_reg2[43]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[44] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_xgmii_data_reg2_reg[63]_0 [44]),
        .Q(tx_xgmii_data_reg2[44]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[45] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_xgmii_data_reg2_reg[63]_0 [45]),
        .Q(tx_xgmii_data_reg2[45]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[46] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_xgmii_data_reg2_reg[63]_0 [46]),
        .Q(tx_xgmii_data_reg2[46]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[47] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_xgmii_data_reg2_reg[63]_0 [47]),
        .Q(tx_xgmii_data_reg2[47]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[48] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_xgmii_data_reg2_reg[63]_0 [48]),
        .Q(tx_xgmii_data_reg2[48]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[49] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_xgmii_data_reg2_reg[63]_0 [49]),
        .Q(tx_xgmii_data_reg2[49]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[4] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_xgmii_data_reg2_reg[63]_0 [4]),
        .Q(tx_xgmii_data_reg2[4]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[50] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_xgmii_data_reg2_reg[63]_0 [50]),
        .Q(tx_xgmii_data_reg2[50]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[51] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_xgmii_data_reg2_reg[63]_0 [51]),
        .Q(tx_xgmii_data_reg2[51]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[52] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_xgmii_data_reg2_reg[63]_0 [52]),
        .Q(tx_xgmii_data_reg2[52]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[53] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_xgmii_data_reg2_reg[63]_0 [53]),
        .Q(tx_xgmii_data_reg2[53]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[54] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_xgmii_data_reg2_reg[63]_0 [54]),
        .Q(tx_xgmii_data_reg2[54]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[55] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_xgmii_data_reg2_reg[63]_0 [55]),
        .Q(tx_xgmii_data_reg2[55]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[56] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_xgmii_data_reg2_reg[63]_0 [56]),
        .Q(tx_xgmii_data_reg2[56]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[57] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_xgmii_data_reg2_reg[63]_0 [57]),
        .Q(tx_xgmii_data_reg2[57]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[58] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_xgmii_data_reg2_reg[63]_0 [58]),
        .Q(tx_xgmii_data_reg2[58]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[59] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_xgmii_data_reg2_reg[63]_0 [59]),
        .Q(tx_xgmii_data_reg2[59]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[5] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_xgmii_data_reg2_reg[63]_0 [5]),
        .Q(tx_xgmii_data_reg2[5]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[60] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_xgmii_data_reg2_reg[63]_0 [60]),
        .Q(tx_xgmii_data_reg2[60]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[61] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_xgmii_data_reg2_reg[63]_0 [61]),
        .Q(tx_xgmii_data_reg2[61]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[62] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_xgmii_data_reg2_reg[63]_0 [62]),
        .Q(tx_xgmii_data_reg2[62]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[63] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_xgmii_data_reg2_reg[63]_0 [63]),
        .Q(tx_xgmii_data_reg2[63]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[6] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_xgmii_data_reg2_reg[63]_0 [6]),
        .Q(tx_xgmii_data_reg2[6]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[7] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_xgmii_data_reg2_reg[63]_0 [7]),
        .Q(tx_xgmii_data_reg2[7]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[8] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_xgmii_data_reg2_reg[63]_0 [8]),
        .Q(tx_xgmii_data_reg2[8]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[9] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_xgmii_data_reg2_reg[63]_0 [9]),
        .Q(tx_xgmii_data_reg2[9]),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFFF488C00000000)) 
    \tx_xgmii_valid_code[0]_i_1 
       (.I0(\tx_xgmii_data_reg2_reg[63]_0 [5]),
        .I1(o_code_c0_i_2_n_0),
        .I2(\tx_xgmii_data_reg2_reg[63]_0 [6]),
        .I3(\tx_xgmii_data_reg2_reg[63]_0 [7]),
        .I4(\tx_xgmii_valid_code[0]_i_2_n_0 ),
        .I5(\tx_xgmii_ctrl_reg2_reg[7]_0 [0]),
        .O(\tx_xgmii_valid_code[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF00800000)) 
    \tx_xgmii_valid_code[0]_i_2 
       (.I0(\tx_xgmii_valid_code[0]_i_3_n_0 ),
        .I1(\tx_xgmii_data_reg2_reg[63]_0 [1]),
        .I2(\tx_xgmii_data_reg2_reg[63]_0 [0]),
        .I3(\tx_xgmii_data_reg2_reg[63]_0 [3]),
        .I4(\tx_xgmii_data_reg2_reg[63]_0 [2]),
        .I5(tx_xgmii_valid_code76_in),
        .O(\tx_xgmii_valid_code[0]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h8001)) 
    \tx_xgmii_valid_code[0]_i_3 
       (.I0(\tx_xgmii_data_reg2_reg[63]_0 [6]),
        .I1(\tx_xgmii_data_reg2_reg[63]_0 [7]),
        .I2(\tx_xgmii_data_reg2_reg[63]_0 [4]),
        .I3(\tx_xgmii_data_reg2_reg[63]_0 [5]),
        .O(\tx_xgmii_valid_code[0]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF2A8200000000)) 
    \tx_xgmii_valid_code[1]_i_1 
       (.I0(\tx_xgmii_valid_code[1]_i_2_n_0 ),
        .I1(\tx_xgmii_data_reg2_reg[63]_0 [14]),
        .I2(\tx_xgmii_data_reg2_reg[63]_0 [15]),
        .I3(\tx_xgmii_data_reg2_reg[63]_0 [13]),
        .I4(\tx_xgmii_valid_code[1]_i_3_n_0 ),
        .I5(\tx_xgmii_ctrl_reg2_reg[7]_0 [1]),
        .O(\tx_xgmii_valid_code[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair241" *) 
  LUT5 #(
    .INIT(32'h10000000)) 
    \tx_xgmii_valid_code[1]_i_2 
       (.I0(\tx_xgmii_data_reg2_reg[63]_0 [9]),
        .I1(\tx_xgmii_data_reg2_reg[63]_0 [8]),
        .I2(\tx_xgmii_data_reg2_reg[63]_0 [10]),
        .I3(\tx_xgmii_data_reg2_reg[63]_0 [11]),
        .I4(\tx_xgmii_data_reg2_reg[63]_0 [12]),
        .O(\tx_xgmii_valid_code[1]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF00800000)) 
    \tx_xgmii_valid_code[1]_i_3 
       (.I0(\tx_xgmii_valid_code[1]_i_4_n_0 ),
        .I1(\tx_xgmii_data_reg2_reg[63]_0 [9]),
        .I2(\tx_xgmii_data_reg2_reg[63]_0 [8]),
        .I3(\tx_xgmii_data_reg2_reg[63]_0 [11]),
        .I4(\tx_xgmii_data_reg2_reg[63]_0 [10]),
        .I5(tx_xgmii_valid_code7__5),
        .O(\tx_xgmii_valid_code[1]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'h8001)) 
    \tx_xgmii_valid_code[1]_i_4 
       (.I0(\tx_xgmii_data_reg2_reg[63]_0 [15]),
        .I1(\tx_xgmii_data_reg2_reg[63]_0 [14]),
        .I2(\tx_xgmii_data_reg2_reg[63]_0 [12]),
        .I3(\tx_xgmii_data_reg2_reg[63]_0 [13]),
        .O(\tx_xgmii_valid_code[1]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF2A8200000000)) 
    \tx_xgmii_valid_code[2]_i_1 
       (.I0(\tx_xgmii_valid_code[2]_i_2_n_0 ),
        .I1(\tx_xgmii_data_reg2_reg[63]_0 [22]),
        .I2(\tx_xgmii_data_reg2_reg[63]_0 [23]),
        .I3(\tx_xgmii_data_reg2_reg[63]_0 [21]),
        .I4(\tx_xgmii_valid_code[2]_i_3_n_0 ),
        .I5(\tx_xgmii_ctrl_reg2_reg[7]_0 [2]),
        .O(\tx_xgmii_valid_code[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair240" *) 
  LUT5 #(
    .INIT(32'h10000000)) 
    \tx_xgmii_valid_code[2]_i_2 
       (.I0(\tx_xgmii_data_reg2_reg[63]_0 [17]),
        .I1(\tx_xgmii_data_reg2_reg[63]_0 [16]),
        .I2(\tx_xgmii_data_reg2_reg[63]_0 [18]),
        .I3(\tx_xgmii_data_reg2_reg[63]_0 [19]),
        .I4(\tx_xgmii_data_reg2_reg[63]_0 [20]),
        .O(\tx_xgmii_valid_code[2]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF00800000)) 
    \tx_xgmii_valid_code[2]_i_3 
       (.I0(\tx_xgmii_valid_code[2]_i_4_n_0 ),
        .I1(\tx_xgmii_data_reg2_reg[63]_0 [17]),
        .I2(\tx_xgmii_data_reg2_reg[63]_0 [16]),
        .I3(\tx_xgmii_data_reg2_reg[63]_0 [19]),
        .I4(\tx_xgmii_data_reg2_reg[63]_0 [18]),
        .I5(tx_xgmii_valid_code70_in),
        .O(\tx_xgmii_valid_code[2]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'h8001)) 
    \tx_xgmii_valid_code[2]_i_4 
       (.I0(\tx_xgmii_data_reg2_reg[63]_0 [23]),
        .I1(\tx_xgmii_data_reg2_reg[63]_0 [22]),
        .I2(\tx_xgmii_data_reg2_reg[63]_0 [20]),
        .I3(\tx_xgmii_data_reg2_reg[63]_0 [21]),
        .O(\tx_xgmii_valid_code[2]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF2A8200000000)) 
    \tx_xgmii_valid_code[3]_i_1 
       (.I0(\tx_xgmii_valid_code[3]_i_2_n_0 ),
        .I1(\tx_xgmii_data_reg2_reg[63]_0 [30]),
        .I2(\tx_xgmii_data_reg2_reg[63]_0 [31]),
        .I3(\tx_xgmii_data_reg2_reg[63]_0 [29]),
        .I4(\tx_xgmii_valid_code[3]_i_3_n_0 ),
        .I5(\tx_xgmii_ctrl_reg2_reg[7]_0 [3]),
        .O(\tx_xgmii_valid_code[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair245" *) 
  LUT5 #(
    .INIT(32'h10000000)) 
    \tx_xgmii_valid_code[3]_i_2 
       (.I0(\tx_xgmii_data_reg2_reg[63]_0 [25]),
        .I1(\tx_xgmii_data_reg2_reg[63]_0 [24]),
        .I2(\tx_xgmii_data_reg2_reg[63]_0 [26]),
        .I3(\tx_xgmii_data_reg2_reg[63]_0 [27]),
        .I4(\tx_xgmii_data_reg2_reg[63]_0 [28]),
        .O(\tx_xgmii_valid_code[3]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF00800000)) 
    \tx_xgmii_valid_code[3]_i_3 
       (.I0(\tx_xgmii_valid_code[3]_i_4_n_0 ),
        .I1(\tx_xgmii_data_reg2_reg[63]_0 [25]),
        .I2(\tx_xgmii_data_reg2_reg[63]_0 [24]),
        .I3(\tx_xgmii_data_reg2_reg[63]_0 [27]),
        .I4(\tx_xgmii_data_reg2_reg[63]_0 [26]),
        .I5(tx_xgmii_valid_code71_in),
        .O(\tx_xgmii_valid_code[3]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'h8001)) 
    \tx_xgmii_valid_code[3]_i_4 
       (.I0(\tx_xgmii_data_reg2_reg[63]_0 [31]),
        .I1(\tx_xgmii_data_reg2_reg[63]_0 [30]),
        .I2(\tx_xgmii_data_reg2_reg[63]_0 [28]),
        .I3(\tx_xgmii_data_reg2_reg[63]_0 [29]),
        .O(\tx_xgmii_valid_code[3]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF488C00000000)) 
    \tx_xgmii_valid_code[4]_i_1 
       (.I0(\tx_xgmii_data_reg2_reg[63]_0 [37]),
        .I1(o_code_c4_i_2_n_0),
        .I2(\tx_xgmii_data_reg2_reg[63]_0 [38]),
        .I3(\tx_xgmii_data_reg2_reg[63]_0 [39]),
        .I4(\tx_xgmii_valid_code[4]_i_2_n_0 ),
        .I5(\tx_xgmii_ctrl_reg2_reg[7]_0 [4]),
        .O(\tx_xgmii_valid_code[4]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF00800000)) 
    \tx_xgmii_valid_code[4]_i_2 
       (.I0(\tx_xgmii_valid_code[4]_i_3_n_0 ),
        .I1(\tx_xgmii_data_reg2_reg[63]_0 [33]),
        .I2(\tx_xgmii_data_reg2_reg[63]_0 [32]),
        .I3(\tx_xgmii_data_reg2_reg[63]_0 [35]),
        .I4(\tx_xgmii_data_reg2_reg[63]_0 [34]),
        .I5(tx_xgmii_valid_code72_in),
        .O(\tx_xgmii_valid_code[4]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair260" *) 
  LUT4 #(
    .INIT(16'h8001)) 
    \tx_xgmii_valid_code[4]_i_3 
       (.I0(\tx_xgmii_data_reg2_reg[63]_0 [39]),
        .I1(\tx_xgmii_data_reg2_reg[63]_0 [38]),
        .I2(\tx_xgmii_data_reg2_reg[63]_0 [36]),
        .I3(\tx_xgmii_data_reg2_reg[63]_0 [37]),
        .O(\tx_xgmii_valid_code[4]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF2A8200000000)) 
    \tx_xgmii_valid_code[5]_i_1 
       (.I0(\tx_xgmii_valid_code[5]_i_2_n_0 ),
        .I1(\tx_xgmii_data_reg2_reg[63]_0 [46]),
        .I2(\tx_xgmii_data_reg2_reg[63]_0 [47]),
        .I3(\tx_xgmii_data_reg2_reg[63]_0 [45]),
        .I4(\tx_xgmii_valid_code[5]_i_3_n_0 ),
        .I5(\tx_xgmii_ctrl_reg2_reg[7]_0 [5]),
        .O(\tx_xgmii_valid_code[5]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair248" *) 
  LUT5 #(
    .INIT(32'h10000000)) 
    \tx_xgmii_valid_code[5]_i_2 
       (.I0(\tx_xgmii_data_reg2_reg[63]_0 [41]),
        .I1(\tx_xgmii_data_reg2_reg[63]_0 [40]),
        .I2(\tx_xgmii_data_reg2_reg[63]_0 [42]),
        .I3(\tx_xgmii_data_reg2_reg[63]_0 [43]),
        .I4(\tx_xgmii_data_reg2_reg[63]_0 [44]),
        .O(\tx_xgmii_valid_code[5]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF00800000)) 
    \tx_xgmii_valid_code[5]_i_3 
       (.I0(\tx_xgmii_valid_code[5]_i_4_n_0 ),
        .I1(\tx_xgmii_data_reg2_reg[63]_0 [41]),
        .I2(\tx_xgmii_data_reg2_reg[63]_0 [40]),
        .I3(\tx_xgmii_data_reg2_reg[63]_0 [43]),
        .I4(\tx_xgmii_data_reg2_reg[63]_0 [42]),
        .I5(tx_xgmii_valid_code73_in),
        .O(\tx_xgmii_valid_code[5]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'h8001)) 
    \tx_xgmii_valid_code[5]_i_4 
       (.I0(\tx_xgmii_data_reg2_reg[63]_0 [47]),
        .I1(\tx_xgmii_data_reg2_reg[63]_0 [46]),
        .I2(\tx_xgmii_data_reg2_reg[63]_0 [44]),
        .I3(\tx_xgmii_data_reg2_reg[63]_0 [45]),
        .O(\tx_xgmii_valid_code[5]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF2A8200000000)) 
    \tx_xgmii_valid_code[6]_i_1 
       (.I0(\tx_xgmii_valid_code[6]_i_2_n_0 ),
        .I1(\tx_xgmii_data_reg2_reg[63]_0 [54]),
        .I2(\tx_xgmii_data_reg2_reg[63]_0 [55]),
        .I3(\tx_xgmii_data_reg2_reg[63]_0 [53]),
        .I4(\tx_xgmii_valid_code[6]_i_3_n_0 ),
        .I5(\tx_xgmii_ctrl_reg2_reg[7]_0 [6]),
        .O(\tx_xgmii_valid_code[6]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair246" *) 
  LUT5 #(
    .INIT(32'h10000000)) 
    \tx_xgmii_valid_code[6]_i_2 
       (.I0(\tx_xgmii_data_reg2_reg[63]_0 [49]),
        .I1(\tx_xgmii_data_reg2_reg[63]_0 [48]),
        .I2(\tx_xgmii_data_reg2_reg[63]_0 [50]),
        .I3(\tx_xgmii_data_reg2_reg[63]_0 [51]),
        .I4(\tx_xgmii_data_reg2_reg[63]_0 [52]),
        .O(\tx_xgmii_valid_code[6]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF00800000)) 
    \tx_xgmii_valid_code[6]_i_3 
       (.I0(\tx_xgmii_valid_code[6]_i_4_n_0 ),
        .I1(\tx_xgmii_data_reg2_reg[63]_0 [49]),
        .I2(\tx_xgmii_data_reg2_reg[63]_0 [48]),
        .I3(\tx_xgmii_data_reg2_reg[63]_0 [51]),
        .I4(\tx_xgmii_data_reg2_reg[63]_0 [50]),
        .I5(tx_xgmii_valid_code74_in),
        .O(\tx_xgmii_valid_code[6]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'h8001)) 
    \tx_xgmii_valid_code[6]_i_4 
       (.I0(\tx_xgmii_data_reg2_reg[63]_0 [55]),
        .I1(\tx_xgmii_data_reg2_reg[63]_0 [54]),
        .I2(\tx_xgmii_data_reg2_reg[63]_0 [52]),
        .I3(\tx_xgmii_data_reg2_reg[63]_0 [53]),
        .O(\tx_xgmii_valid_code[6]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'hAAAAAAA8)) 
    \tx_xgmii_valid_code[7]_i_1 
       (.I0(\tx_xgmii_valid_code[7]_i_3_n_0 ),
        .I1(\tx_xgmii_valid_code[7]_i_4_n_0 ),
        .I2(\tx_xgmii_valid_code[7]_i_5_n_0 ),
        .I3(tx_xgmii_valid_code72_in),
        .I4(tx_xgmii_valid_code7__5),
        .O(tx_xgmii_valid_code1__11));
  LUT4 #(
    .INIT(16'h8000)) 
    \tx_xgmii_valid_code[7]_i_10 
       (.I0(\tx_xgmii_ctrl_reg2_reg[7]_0 [1]),
        .I1(\tx_xgmii_ctrl_reg2_reg[7]_0 [0]),
        .I2(\tx_xgmii_ctrl_reg2_reg[7]_0 [3]),
        .I3(\tx_xgmii_ctrl_reg2_reg[7]_0 [2]),
        .O(\tx_xgmii_valid_code[7]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'h0000800000000000)) 
    \tx_xgmii_valid_code[7]_i_11 
       (.I0(\tx_xgmii_data_reg2_reg[63]_0 [55]),
        .I1(\tx_xgmii_data_reg2_reg[63]_0 [54]),
        .I2(\tx_xgmii_data_reg2_reg[63]_0 [53]),
        .I3(\tx_xgmii_data_reg2_reg[63]_0 [49]),
        .I4(\tx_xgmii_data_reg2_reg[63]_0 [48]),
        .I5(\t_code[6]_i_2_n_0 ),
        .O(tx_xgmii_valid_code74_in));
  LUT6 #(
    .INIT(64'h0000800000000000)) 
    \tx_xgmii_valid_code[7]_i_12 
       (.I0(\tx_xgmii_data_reg2_reg[63]_0 [31]),
        .I1(\tx_xgmii_data_reg2_reg[63]_0 [30]),
        .I2(\tx_xgmii_data_reg2_reg[63]_0 [29]),
        .I3(\tx_xgmii_data_reg2_reg[63]_0 [25]),
        .I4(\tx_xgmii_data_reg2_reg[63]_0 [24]),
        .I5(\t_code[3]_i_2_n_0 ),
        .O(tx_xgmii_valid_code71_in));
  LUT6 #(
    .INIT(64'h0000800000000000)) 
    \tx_xgmii_valid_code[7]_i_13 
       (.I0(\tx_xgmii_data_reg2_reg[63]_0 [3]),
        .I1(\tx_xgmii_data_reg2_reg[63]_0 [4]),
        .I2(\tx_xgmii_data_reg2_reg[63]_0 [2]),
        .I3(\tx_xgmii_data_reg2_reg[63]_0 [1]),
        .I4(\tx_xgmii_data_reg2_reg[63]_0 [0]),
        .I5(\t_code[0]_i_2_n_0 ),
        .O(tx_xgmii_valid_code76_in));
  LUT6 #(
    .INIT(64'h0000800000000000)) 
    \tx_xgmii_valid_code[7]_i_14 
       (.I0(\tx_xgmii_data_reg2_reg[63]_0 [47]),
        .I1(\tx_xgmii_data_reg2_reg[63]_0 [46]),
        .I2(\tx_xgmii_data_reg2_reg[63]_0 [45]),
        .I3(\tx_xgmii_data_reg2_reg[63]_0 [41]),
        .I4(\tx_xgmii_data_reg2_reg[63]_0 [40]),
        .I5(\t_code[5]_i_2_n_0 ),
        .O(tx_xgmii_valid_code73_in));
  (* SOFT_HLUTNM = "soft_lutpair253" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \tx_xgmii_valid_code[7]_i_15 
       (.I0(\tx_xgmii_data_reg2_reg[63]_0 [59]),
        .I1(\tx_xgmii_data_reg2_reg[63]_0 [60]),
        .I2(\tx_xgmii_data_reg2_reg[63]_0 [58]),
        .I3(\tx_xgmii_data_reg2_reg[63]_0 [56]),
        .O(\tx_xgmii_valid_code[7]_i_15_n_0 ));
  LUT6 #(
    .INIT(64'h0000800000000000)) 
    \tx_xgmii_valid_code[7]_i_16 
       (.I0(\tx_xgmii_data_reg2_reg[63]_0 [23]),
        .I1(\tx_xgmii_data_reg2_reg[63]_0 [22]),
        .I2(\tx_xgmii_data_reg2_reg[63]_0 [21]),
        .I3(\tx_xgmii_data_reg2_reg[63]_0 [17]),
        .I4(\tx_xgmii_data_reg2_reg[63]_0 [16]),
        .I5(\t_code[2]_i_2_n_0 ),
        .O(tx_xgmii_valid_code70_in));
  LUT3 #(
    .INIT(8'h80)) 
    \tx_xgmii_valid_code[7]_i_17 
       (.I0(\tx_xgmii_data_reg2_reg[63]_0 [36]),
        .I1(\tx_xgmii_data_reg2_reg[63]_0 [35]),
        .I2(\tx_xgmii_data_reg2_reg[63]_0 [34]),
        .O(\tx_xgmii_valid_code[7]_i_17_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF080000000000)) 
    \tx_xgmii_valid_code[7]_i_2 
       (.I0(\tx_xgmii_data_reg2_reg[63]_0 [57]),
        .I1(\tx_xgmii_data_reg2_reg[63]_0 [56]),
        .I2(\tx_xgmii_data_reg2_reg[63]_0 [59]),
        .I3(\tx_xgmii_valid_code[7]_i_8_n_0 ),
        .I4(\tx_xgmii_valid_code[7]_i_9_n_0 ),
        .I5(\tx_xgmii_ctrl_reg2_reg[7]_0 [7]),
        .O(\tx_xgmii_valid_code[7]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000080000000)) 
    \tx_xgmii_valid_code[7]_i_3 
       (.I0(\tx_xgmii_valid_code[7]_i_10_n_0 ),
        .I1(\tx_xgmii_ctrl_reg2_reg[7]_0 [7]),
        .I2(\tx_xgmii_ctrl_reg2_reg[7]_0 [6]),
        .I3(\tx_xgmii_ctrl_reg2_reg[7]_0 [5]),
        .I4(\tx_xgmii_ctrl_reg2_reg[7]_0 [4]),
        .I5(\t_code[0]_i_1_n_0 ),
        .O(\tx_xgmii_valid_code[7]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \tx_xgmii_valid_code[7]_i_4 
       (.I0(tx_xgmii_valid_code74_in),
        .I1(tx_xgmii_valid_code71_in),
        .I2(tx_xgmii_valid_code76_in),
        .I3(tx_xgmii_valid_code73_in),
        .O(\tx_xgmii_valid_code[7]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF80000000)) 
    \tx_xgmii_valid_code[7]_i_5 
       (.I0(\tx_xgmii_valid_code[7]_i_15_n_0 ),
        .I1(\tx_xgmii_data_reg2_reg[63]_0 [61]),
        .I2(\tx_xgmii_data_reg2_reg[63]_0 [57]),
        .I3(\tx_xgmii_data_reg2_reg[63]_0 [62]),
        .I4(\tx_xgmii_data_reg2_reg[63]_0 [63]),
        .I5(tx_xgmii_valid_code70_in),
        .O(\tx_xgmii_valid_code[7]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h0000800000000000)) 
    \tx_xgmii_valid_code[7]_i_6 
       (.I0(\tx_xgmii_data_reg2_reg[63]_0 [39]),
        .I1(\tx_xgmii_data_reg2_reg[63]_0 [38]),
        .I2(\tx_xgmii_data_reg2_reg[63]_0 [37]),
        .I3(\tx_xgmii_data_reg2_reg[63]_0 [33]),
        .I4(\tx_xgmii_data_reg2_reg[63]_0 [32]),
        .I5(\tx_xgmii_valid_code[7]_i_17_n_0 ),
        .O(tx_xgmii_valid_code72_in));
  LUT6 #(
    .INIT(64'h0000800000000000)) 
    \tx_xgmii_valid_code[7]_i_7 
       (.I0(\tx_xgmii_data_reg2_reg[63]_0 [15]),
        .I1(\tx_xgmii_data_reg2_reg[63]_0 [14]),
        .I2(\tx_xgmii_data_reg2_reg[63]_0 [13]),
        .I3(\tx_xgmii_data_reg2_reg[63]_0 [9]),
        .I4(\tx_xgmii_data_reg2_reg[63]_0 [8]),
        .I5(\t_code[1]_i_2_n_0 ),
        .O(tx_xgmii_valid_code7__5));
  LUT5 #(
    .INIT(32'h80000004)) 
    \tx_xgmii_valid_code[7]_i_8 
       (.I0(\tx_xgmii_data_reg2_reg[63]_0 [60]),
        .I1(\tx_xgmii_data_reg2_reg[63]_0 [58]),
        .I2(\tx_xgmii_data_reg2_reg[63]_0 [61]),
        .I3(\tx_xgmii_data_reg2_reg[63]_0 [62]),
        .I4(\tx_xgmii_data_reg2_reg[63]_0 [63]),
        .O(\tx_xgmii_valid_code[7]_i_8_n_0 ));
  LUT5 #(
    .INIT(32'h80002A82)) 
    \tx_xgmii_valid_code[7]_i_9 
       (.I0(\tx_xgmii_valid_code[7]_i_15_n_0 ),
        .I1(\tx_xgmii_data_reg2_reg[63]_0 [63]),
        .I2(\tx_xgmii_data_reg2_reg[63]_0 [62]),
        .I3(\tx_xgmii_data_reg2_reg[63]_0 [61]),
        .I4(\tx_xgmii_data_reg2_reg[63]_0 [57]),
        .O(\tx_xgmii_valid_code[7]_i_9_n_0 ));
  FDRE \tx_xgmii_valid_code_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_xgmii_valid_code[0]_i_1_n_0 ),
        .Q(\tx_xgmii_valid_code_reg_n_0_[0] ),
        .R(tx_xgmii_valid_code1__11));
  FDRE \tx_xgmii_valid_code_reg[1] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_xgmii_valid_code[1]_i_1_n_0 ),
        .Q(\tx_xgmii_valid_code_reg_n_0_[1] ),
        .R(tx_xgmii_valid_code1__11));
  FDRE \tx_xgmii_valid_code_reg[2] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_xgmii_valid_code[2]_i_1_n_0 ),
        .Q(\tx_xgmii_valid_code_reg_n_0_[2] ),
        .R(tx_xgmii_valid_code1__11));
  FDRE \tx_xgmii_valid_code_reg[3] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_xgmii_valid_code[3]_i_1_n_0 ),
        .Q(\tx_xgmii_valid_code_reg_n_0_[3] ),
        .R(tx_xgmii_valid_code1__11));
  FDRE \tx_xgmii_valid_code_reg[4] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_xgmii_valid_code[4]_i_1_n_0 ),
        .Q(\tx_xgmii_valid_code_reg_n_0_[4] ),
        .R(tx_xgmii_valid_code1__11));
  FDRE \tx_xgmii_valid_code_reg[5] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_xgmii_valid_code[5]_i_1_n_0 ),
        .Q(\tx_xgmii_valid_code_reg_n_0_[5] ),
        .R(tx_xgmii_valid_code1__11));
  FDRE \tx_xgmii_valid_code_reg[6] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_xgmii_valid_code[6]_i_1_n_0 ),
        .Q(\tx_xgmii_valid_code_reg_n_0_[6] ),
        .R(tx_xgmii_valid_code1__11));
  FDRE \tx_xgmii_valid_code_reg[7] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_xgmii_valid_code[7]_i_2_n_0 ),
        .Q(p_5_in),
        .R(tx_xgmii_valid_code1__11));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_15_tx_pcs" *) 
module ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_tx_pcs
   (new_tx_test_seed,
    Q,
    tx_66_fifo,
    tx_66_enc_out,
    coreclk,
    out,
    new_tx_test_seed_reg,
    pseudo_rand_seeds_int,
    \scr_reg_reg[56] ,
    \rd_data_reg[7] ,
    D,
    \tx_xgmii_data_reg2_reg[63] );
  output new_tx_test_seed;
  output [0:0]Q;
  output [64:0]tx_66_fifo;
  output [0:0]tx_66_enc_out;
  input coreclk;
  input out;
  input [1:0]new_tx_test_seed_reg;
  input [115:0]pseudo_rand_seeds_int;
  input \scr_reg_reg[56] ;
  input \rd_data_reg[7] ;
  input [7:0]D;
  input [63:0]\tx_xgmii_data_reg2_reg[63] ;

  wire [7:0]D;
  wire [0:0]Q;
  wire coreclk;
  wire new_tx_test_seed;
  wire [1:0]new_tx_test_seed_reg;
  wire [2:2]next_state__0;
  wire out;
  wire [115:0]pseudo_rand_seeds_int;
  wire \rd_data_reg[7] ;
  wire \scr_reg_reg[56] ;
  wire [2:0]state;
  wire [2:0]t_type;
  wire [65:2]tx_66_enc_fsm;
  wire [0:0]tx_66_enc_out;
  wire [65:0]tx_66_enc_out_t;
  wire [64:0]tx_66_fifo;
  wire tx_pcs_fsm_i_n_66;
  wire [63:0]\tx_xgmii_data_reg2_reg[63] ;

  ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_pcs_scramble pcs_scramble_i
       (.Q(Q),
        .coreclk(coreclk),
        .new_tx_test_seed(new_tx_test_seed),
        .new_tx_test_seed_reg_0(new_tx_test_seed_reg),
        .out(out),
        .pseudo_rand_seeds_int(pseudo_rand_seeds_int),
        .\rd_data_reg[61] (tx_66_enc_fsm),
        .\rd_data_reg[7] (\rd_data_reg[7] ),
        .\scr_reg_reg[56]_0 (\scr_reg_reg[56] ),
        .tx_66_fifo(tx_66_fifo[64:1]));
  ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_tx_encoder tx_encoder_i
       (.D(tx_66_enc_out_t),
        .\FSM_sequential_state_reg[0] (next_state__0),
        .Q({state[2],state[0]}),
        .coreclk(coreclk),
        .out(out),
        .\t_type_reg[2]_0 (t_type),
        .\tx_66_enc_out_reg[0] (tx_pcs_fsm_i_n_66),
        .\tx_xgmii_ctrl_reg2_reg[7]_0 (D),
        .\tx_xgmii_data_reg2_reg[63]_0 (\tx_xgmii_data_reg2_reg[63] ));
  ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_tx_pcs_fsm tx_pcs_fsm_i
       (.D(next_state__0),
        .\FSM_sequential_state_reg[0]_0 (t_type),
        .\FSM_sequential_state_reg[1]_0 (tx_pcs_fsm_i_n_66),
        .\FSM_sequential_state_reg[2]_0 ({state[2],state[0]}),
        .Q({tx_66_enc_fsm,tx_66_enc_out}),
        .coreclk(coreclk),
        .out(out),
        .\rd_data_reg[1] (new_tx_test_seed_reg[1]),
        .\tx_66_enc_out_reg[65]_0 (tx_66_enc_out_t),
        .tx_66_fifo(tx_66_fifo[0]));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_15_tx_pcs_fsm" *) 
module ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_tx_pcs_fsm
   (tx_66_fifo,
    Q,
    \FSM_sequential_state_reg[1]_0 ,
    \FSM_sequential_state_reg[2]_0 ,
    \rd_data_reg[1] ,
    \FSM_sequential_state_reg[0]_0 ,
    D,
    out,
    coreclk,
    \tx_66_enc_out_reg[65]_0 );
  output [0:0]tx_66_fifo;
  output [64:0]Q;
  output \FSM_sequential_state_reg[1]_0 ;
  output [1:0]\FSM_sequential_state_reg[2]_0 ;
  input [0:0]\rd_data_reg[1] ;
  input [2:0]\FSM_sequential_state_reg[0]_0 ;
  input [0:0]D;
  input out;
  input coreclk;
  input [65:0]\tx_66_enc_out_reg[65]_0 ;

  wire [0:0]D;
  wire [2:0]\FSM_sequential_state_reg[0]_0 ;
  wire \FSM_sequential_state_reg[1]_0 ;
  wire [1:0]\FSM_sequential_state_reg[2]_0 ;
  wire [64:0]Q;
  wire coreclk;
  wire [1:0]next_state__0;
  wire out;
  wire [0:0]\rd_data_reg[1] ;
  wire [1:1]state;
  wire [1:1]tx_66_enc_fsm;
  wire [65:0]\tx_66_enc_out_reg[65]_0 ;
  wire [0:0]tx_66_fifo;

  LUT6 #(
    .INIT(64'hFFF3FF3BFFF3FFF3)) 
    \FSM_sequential_state[0]_i_1 
       (.I0(state),
        .I1(\FSM_sequential_state_reg[0]_0 [1]),
        .I2(\FSM_sequential_state_reg[0]_0 [0]),
        .I3(\FSM_sequential_state_reg[0]_0 [2]),
        .I4(\FSM_sequential_state_reg[2]_0 [1]),
        .I5(\FSM_sequential_state_reg[2]_0 [0]),
        .O(next_state__0[0]));
  LUT6 #(
    .INIT(64'h000000FF00000A75)) 
    \FSM_sequential_state[1]_i_1 
       (.I0(\FSM_sequential_state_reg[2]_0 [0]),
        .I1(state),
        .I2(\FSM_sequential_state_reg[0]_0 [1]),
        .I3(\FSM_sequential_state_reg[0]_0 [0]),
        .I4(\FSM_sequential_state_reg[0]_0 [2]),
        .I5(\FSM_sequential_state_reg[2]_0 [1]),
        .O(next_state__0[1]));
  (* FSM_ENCODED_STATES = "TX_INIT:000,TX_D:011,TX_T:100,TX_E:001,TX_C:010" *) 
  FDRE \FSM_sequential_state_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(next_state__0[0]),
        .Q(\FSM_sequential_state_reg[2]_0 [0]),
        .R(out));
  (* FSM_ENCODED_STATES = "TX_INIT:000,TX_D:011,TX_T:100,TX_E:001,TX_C:010" *) 
  FDRE \FSM_sequential_state_reg[1] 
       (.C(coreclk),
        .CE(1'b1),
        .D(next_state__0[1]),
        .Q(state),
        .R(out));
  (* FSM_ENCODED_STATES = "TX_INIT:000,TX_D:011,TX_T:100,TX_E:001,TX_C:010" *) 
  FDRE \FSM_sequential_state_reg[2] 
       (.C(coreclk),
        .CE(1'b1),
        .D(D),
        .Q(\FSM_sequential_state_reg[2]_0 [1]),
        .R(out));
  LUT2 #(
    .INIT(4'h2)) 
    asynch_fifo_i_i_65
       (.I0(tx_66_enc_fsm),
        .I1(\rd_data_reg[1] ),
        .O(tx_66_fifo));
  LUT6 #(
    .INIT(64'hFFF0FF0BFFF0FFF0)) 
    \tx_66_enc_out[65]_i_2 
       (.I0(state),
        .I1(\FSM_sequential_state_reg[0]_0 [1]),
        .I2(\FSM_sequential_state_reg[0]_0 [0]),
        .I3(\FSM_sequential_state_reg[0]_0 [2]),
        .I4(\FSM_sequential_state_reg[2]_0 [1]),
        .I5(\FSM_sequential_state_reg[2]_0 [0]),
        .O(\FSM_sequential_state_reg[1]_0 ));
  FDSE \tx_66_enc_out_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_66_enc_out_reg[65]_0 [0]),
        .Q(Q[0]),
        .S(out));
  FDRE \tx_66_enc_out_reg[10] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_66_enc_out_reg[65]_0 [10]),
        .Q(Q[9]),
        .R(out));
  FDRE \tx_66_enc_out_reg[11] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_66_enc_out_reg[65]_0 [11]),
        .Q(Q[10]),
        .R(out));
  FDRE \tx_66_enc_out_reg[12] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_66_enc_out_reg[65]_0 [12]),
        .Q(Q[11]),
        .R(out));
  FDRE \tx_66_enc_out_reg[13] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_66_enc_out_reg[65]_0 [13]),
        .Q(Q[12]),
        .R(out));
  FDRE \tx_66_enc_out_reg[14] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_66_enc_out_reg[65]_0 [14]),
        .Q(Q[13]),
        .R(out));
  FDRE \tx_66_enc_out_reg[15] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_66_enc_out_reg[65]_0 [15]),
        .Q(Q[14]),
        .R(out));
  FDRE \tx_66_enc_out_reg[16] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_66_enc_out_reg[65]_0 [16]),
        .Q(Q[15]),
        .R(out));
  FDRE \tx_66_enc_out_reg[17] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_66_enc_out_reg[65]_0 [17]),
        .Q(Q[16]),
        .R(out));
  FDRE \tx_66_enc_out_reg[18] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_66_enc_out_reg[65]_0 [18]),
        .Q(Q[17]),
        .R(out));
  FDRE \tx_66_enc_out_reg[19] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_66_enc_out_reg[65]_0 [19]),
        .Q(Q[18]),
        .R(out));
  FDRE \tx_66_enc_out_reg[1] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_66_enc_out_reg[65]_0 [1]),
        .Q(tx_66_enc_fsm),
        .R(out));
  FDRE \tx_66_enc_out_reg[20] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_66_enc_out_reg[65]_0 [20]),
        .Q(Q[19]),
        .R(out));
  FDRE \tx_66_enc_out_reg[21] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_66_enc_out_reg[65]_0 [21]),
        .Q(Q[20]),
        .R(out));
  FDRE \tx_66_enc_out_reg[22] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_66_enc_out_reg[65]_0 [22]),
        .Q(Q[21]),
        .R(out));
  FDRE \tx_66_enc_out_reg[23] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_66_enc_out_reg[65]_0 [23]),
        .Q(Q[22]),
        .R(out));
  FDRE \tx_66_enc_out_reg[24] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_66_enc_out_reg[65]_0 [24]),
        .Q(Q[23]),
        .R(out));
  FDRE \tx_66_enc_out_reg[25] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_66_enc_out_reg[65]_0 [25]),
        .Q(Q[24]),
        .R(out));
  FDSE \tx_66_enc_out_reg[26] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_66_enc_out_reg[65]_0 [26]),
        .Q(Q[25]),
        .S(out));
  FDRE \tx_66_enc_out_reg[27] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_66_enc_out_reg[65]_0 [27]),
        .Q(Q[26]),
        .R(out));
  FDRE \tx_66_enc_out_reg[28] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_66_enc_out_reg[65]_0 [28]),
        .Q(Q[27]),
        .R(out));
  FDRE \tx_66_enc_out_reg[29] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_66_enc_out_reg[65]_0 [29]),
        .Q(Q[28]),
        .R(out));
  FDSE \tx_66_enc_out_reg[2] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_66_enc_out_reg[65]_0 [2]),
        .Q(Q[1]),
        .S(out));
  FDRE \tx_66_enc_out_reg[30] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_66_enc_out_reg[65]_0 [30]),
        .Q(Q[29]),
        .R(out));
  FDRE \tx_66_enc_out_reg[31] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_66_enc_out_reg[65]_0 [31]),
        .Q(Q[30]),
        .R(out));
  FDRE \tx_66_enc_out_reg[32] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_66_enc_out_reg[65]_0 [32]),
        .Q(Q[31]),
        .R(out));
  FDRE \tx_66_enc_out_reg[33] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_66_enc_out_reg[65]_0 [33]),
        .Q(Q[32]),
        .R(out));
  FDRE \tx_66_enc_out_reg[34] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_66_enc_out_reg[65]_0 [34]),
        .Q(Q[33]),
        .R(out));
  FDRE \tx_66_enc_out_reg[35] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_66_enc_out_reg[65]_0 [35]),
        .Q(Q[34]),
        .R(out));
  FDRE \tx_66_enc_out_reg[36] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_66_enc_out_reg[65]_0 [36]),
        .Q(Q[35]),
        .R(out));
  FDRE \tx_66_enc_out_reg[37] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_66_enc_out_reg[65]_0 [37]),
        .Q(Q[36]),
        .R(out));
  FDRE \tx_66_enc_out_reg[38] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_66_enc_out_reg[65]_0 [38]),
        .Q(Q[37]),
        .R(out));
  FDRE \tx_66_enc_out_reg[39] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_66_enc_out_reg[65]_0 [39]),
        .Q(Q[38]),
        .R(out));
  FDRE \tx_66_enc_out_reg[3] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_66_enc_out_reg[65]_0 [3]),
        .Q(Q[2]),
        .R(out));
  FDRE \tx_66_enc_out_reg[40] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_66_enc_out_reg[65]_0 [40]),
        .Q(Q[39]),
        .R(out));
  FDRE \tx_66_enc_out_reg[41] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_66_enc_out_reg[65]_0 [41]),
        .Q(Q[40]),
        .R(out));
  FDRE \tx_66_enc_out_reg[42] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_66_enc_out_reg[65]_0 [42]),
        .Q(Q[41]),
        .R(out));
  FDRE \tx_66_enc_out_reg[43] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_66_enc_out_reg[65]_0 [43]),
        .Q(Q[42]),
        .R(out));
  FDRE \tx_66_enc_out_reg[44] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_66_enc_out_reg[65]_0 [44]),
        .Q(Q[43]),
        .R(out));
  FDRE \tx_66_enc_out_reg[45] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_66_enc_out_reg[65]_0 [45]),
        .Q(Q[44]),
        .R(out));
  FDRE \tx_66_enc_out_reg[46] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_66_enc_out_reg[65]_0 [46]),
        .Q(Q[45]),
        .R(out));
  FDRE \tx_66_enc_out_reg[47] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_66_enc_out_reg[65]_0 [47]),
        .Q(Q[46]),
        .R(out));
  FDRE \tx_66_enc_out_reg[48] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_66_enc_out_reg[65]_0 [48]),
        .Q(Q[47]),
        .R(out));
  FDRE \tx_66_enc_out_reg[49] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_66_enc_out_reg[65]_0 [49]),
        .Q(Q[48]),
        .R(out));
  FDSE \tx_66_enc_out_reg[4] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_66_enc_out_reg[65]_0 [4]),
        .Q(Q[3]),
        .S(out));
  FDRE \tx_66_enc_out_reg[50] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_66_enc_out_reg[65]_0 [50]),
        .Q(Q[49]),
        .R(out));
  FDRE \tx_66_enc_out_reg[51] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_66_enc_out_reg[65]_0 [51]),
        .Q(Q[50]),
        .R(out));
  FDRE \tx_66_enc_out_reg[52] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_66_enc_out_reg[65]_0 [52]),
        .Q(Q[51]),
        .R(out));
  FDRE \tx_66_enc_out_reg[53] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_66_enc_out_reg[65]_0 [53]),
        .Q(Q[52]),
        .R(out));
  FDRE \tx_66_enc_out_reg[54] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_66_enc_out_reg[65]_0 [54]),
        .Q(Q[53]),
        .R(out));
  FDRE \tx_66_enc_out_reg[55] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_66_enc_out_reg[65]_0 [55]),
        .Q(Q[54]),
        .R(out));
  FDRE \tx_66_enc_out_reg[56] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_66_enc_out_reg[65]_0 [56]),
        .Q(Q[55]),
        .R(out));
  FDRE \tx_66_enc_out_reg[57] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_66_enc_out_reg[65]_0 [57]),
        .Q(Q[56]),
        .R(out));
  FDSE \tx_66_enc_out_reg[58] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_66_enc_out_reg[65]_0 [58]),
        .Q(Q[57]),
        .S(out));
  FDRE \tx_66_enc_out_reg[59] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_66_enc_out_reg[65]_0 [59]),
        .Q(Q[58]),
        .R(out));
  FDRE \tx_66_enc_out_reg[5] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_66_enc_out_reg[65]_0 [5]),
        .Q(Q[4]),
        .R(out));
  FDRE \tx_66_enc_out_reg[60] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_66_enc_out_reg[65]_0 [60]),
        .Q(Q[59]),
        .R(out));
  FDRE \tx_66_enc_out_reg[61] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_66_enc_out_reg[65]_0 [61]),
        .Q(Q[60]),
        .R(out));
  FDRE \tx_66_enc_out_reg[62] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_66_enc_out_reg[65]_0 [62]),
        .Q(Q[61]),
        .R(out));
  FDRE \tx_66_enc_out_reg[63] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_66_enc_out_reg[65]_0 [63]),
        .Q(Q[62]),
        .R(out));
  FDRE \tx_66_enc_out_reg[64] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_66_enc_out_reg[65]_0 [64]),
        .Q(Q[63]),
        .R(out));
  FDRE \tx_66_enc_out_reg[65] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_66_enc_out_reg[65]_0 [65]),
        .Q(Q[64]),
        .R(out));
  FDSE \tx_66_enc_out_reg[6] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_66_enc_out_reg[65]_0 [6]),
        .Q(Q[5]),
        .S(out));
  FDRE \tx_66_enc_out_reg[7] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_66_enc_out_reg[65]_0 [7]),
        .Q(Q[6]),
        .R(out));
  FDSE \tx_66_enc_out_reg[8] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_66_enc_out_reg[65]_0 [8]),
        .Q(Q[7]),
        .S(out));
  FDRE \tx_66_enc_out_reg[9] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_66_enc_out_reg[65]_0 [9]),
        .Q(Q[8]),
        .R(out));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_15_txratefifo" *) 
module ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_txratefifo
   (Q,
    D,
    \txsequence_int_reg[6]_0 ,
    fifo_full,
    q,
    coreclk,
    reset,
    tx_66_fifo,
    txusrclk2,
    txreset_txusrclk2);
  output [5:0]Q;
  output [31:0]D;
  output [1:0]\txsequence_int_reg[6]_0 ;
  output fifo_full;
  input q;
  input coreclk;
  input reset;
  input [65:0]tx_66_fifo;
  input txusrclk2;
  input txreset_txusrclk2;

  wire [31:0]D;
  wire [5:0]Q;
  wire coreclk;
  wire fifo_full;
  wire \gt_txd[22]_i_2_n_0 ;
  wire \gt_txd[26]_i_2_n_0 ;
  wire \gt_txd[27]_i_2_n_0 ;
  wire \gt_txd[29]_i_2_n_0 ;
  wire \gt_txd[30]_i_2_n_0 ;
  wire \gt_txd[31]_i_2_n_0 ;
  wire gt_txd_mux0;
  wire q;
  wire [65:2]rd_data;
  wire read_enable;
  wire read_enable_i_1_n_0;
  wire read_enable_i_2_n_0;
  wire reset;
  wire [65:0]tx_66_fifo;
  wire [1:0]tx_gt;
  wire txreset_txusrclk2;
  wire [6:0]txsequence_int;
  wire txsequence_int0;
  wire \txsequence_int[1]_i_2_n_0 ;
  wire \txsequence_int[6]_i_3_n_0 ;
  wire \txsequence_int[6]_i_4_n_0 ;
  wire \txsequence_int[6]_i_5_n_0 ;
  wire [1:0]\txsequence_int_reg[6]_0 ;
  wire \txsequence_int_reg_n_0_[0] ;
  wire txusrclk2;
  wire NLW_asynch_fifo_i_empty_UNCONNECTED;
  wire [4:0]NLW_asynch_fifo_i_fifo_rd_addr_UNCONNECTED;
  wire [4:0]NLW_asynch_fifo_i_fifo_wr_addr_UNCONNECTED;
  wire [4:0]NLW_asynch_fifo_i_status_UNCONNECTED;

  (* DowngradeIPIdentifiedWarnings = "yes" *) 
  (* WIDTH = "66" *) 
  ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_asynch_fifo asynch_fifo_i
       (.empty(NLW_asynch_fifo_i_empty_UNCONNECTED),
        .fifo_rd_addr(NLW_asynch_fifo_i_fifo_rd_addr_UNCONNECTED[4:0]),
        .fifo_wr_addr(NLW_asynch_fifo_i_fifo_wr_addr_UNCONNECTED[4:0]),
        .full(fifo_full),
        .rd_clk(txusrclk2),
        .rd_clk_en(1'b1),
        .rd_data({rd_data,tx_gt}),
        .rd_en(read_enable),
        .rd_reset(txreset_txusrclk2),
        .status(NLW_asynch_fifo_i_status_UNCONNECTED[4:0]),
        .wr_clk(coreclk),
        .wr_clk_en(1'b1),
        .wr_data(tx_66_fifo),
        .wr_en(1'b1),
        .wr_reset(reset));
  LUT6 #(
    .INIT(64'h4441FFFF44410000)) 
    \gt_txc[0]_i_1 
       (.I0(Q[5]),
        .I1(Q[2]),
        .I2(Q[1]),
        .I3(Q[0]),
        .I4(q),
        .I5(tx_gt[0]),
        .O(\txsequence_int_reg[6]_0 [0]));
  LUT6 #(
    .INIT(64'hFAEBFFFFFAEB0000)) 
    \gt_txc[1]_i_1 
       (.I0(Q[5]),
        .I1(Q[1]),
        .I2(Q[2]),
        .I3(Q[0]),
        .I4(q),
        .I5(tx_gt[1]),
        .O(\txsequence_int_reg[6]_0 [1]));
  LUT6 #(
    .INIT(64'hEFE0EFEFEFE0E0E0)) 
    \gt_txd[0]_i_1 
       (.I0(Q[5]),
        .I1(Q[2]),
        .I2(q),
        .I3(rd_data[34]),
        .I4(\txsequence_int_reg_n_0_[0] ),
        .I5(rd_data[2]),
        .O(D[0]));
  LUT5 #(
    .INIT(32'h74777444)) 
    \gt_txd[10]_i_1 
       (.I0(\gt_txd[26]_i_2_n_0 ),
        .I1(q),
        .I2(rd_data[44]),
        .I3(\txsequence_int_reg_n_0_[0] ),
        .I4(rd_data[12]),
        .O(D[10]));
  LUT5 #(
    .INIT(32'h74777444)) 
    \gt_txd[11]_i_1 
       (.I0(\gt_txd[27]_i_2_n_0 ),
        .I1(q),
        .I2(rd_data[45]),
        .I3(\txsequence_int_reg_n_0_[0] ),
        .I4(rd_data[13]),
        .O(D[11]));
  LUT6 #(
    .INIT(64'hBFB0BFBFBFB0B0B0)) 
    \gt_txd[12]_i_1 
       (.I0(Q[5]),
        .I1(\gt_txd[29]_i_2_n_0 ),
        .I2(q),
        .I3(rd_data[46]),
        .I4(\txsequence_int_reg_n_0_[0] ),
        .I5(rd_data[14]),
        .O(D[12]));
  LUT6 #(
    .INIT(64'h1F101F1F1F101010)) 
    \gt_txd[13]_i_1 
       (.I0(\gt_txd[29]_i_2_n_0 ),
        .I1(Q[5]),
        .I2(q),
        .I3(rd_data[47]),
        .I4(\txsequence_int_reg_n_0_[0] ),
        .I5(rd_data[15]),
        .O(D[13]));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \gt_txd[14]_i_1 
       (.I0(\gt_txd[30]_i_2_n_0 ),
        .I1(q),
        .I2(rd_data[48]),
        .I3(\txsequence_int_reg_n_0_[0] ),
        .I4(rd_data[16]),
        .O(D[14]));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \gt_txd[15]_i_1 
       (.I0(\gt_txd[31]_i_2_n_0 ),
        .I1(q),
        .I2(rd_data[49]),
        .I3(\txsequence_int_reg_n_0_[0] ),
        .I4(rd_data[17]),
        .O(D[15]));
  LUT6 #(
    .INIT(64'hEFE0EFEFEFE0E0E0)) 
    \gt_txd[16]_i_1 
       (.I0(Q[5]),
        .I1(Q[2]),
        .I2(q),
        .I3(rd_data[50]),
        .I4(\txsequence_int_reg_n_0_[0] ),
        .I5(rd_data[18]),
        .O(D[16]));
  LUT6 #(
    .INIT(64'h2F202F2F2F202020)) 
    \gt_txd[17]_i_1 
       (.I0(Q[2]),
        .I1(Q[5]),
        .I2(q),
        .I3(rd_data[51]),
        .I4(\txsequence_int_reg_n_0_[0] ),
        .I5(rd_data[19]),
        .O(D[17]));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \gt_txd[18]_i_1 
       (.I0(\gt_txd[27]_i_2_n_0 ),
        .I1(q),
        .I2(rd_data[52]),
        .I3(\txsequence_int_reg_n_0_[0] ),
        .I4(rd_data[20]),
        .O(D[18]));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \gt_txd[19]_i_1 
       (.I0(\gt_txd[26]_i_2_n_0 ),
        .I1(q),
        .I2(rd_data[53]),
        .I3(\txsequence_int_reg_n_0_[0] ),
        .I4(rd_data[21]),
        .O(D[19]));
  LUT6 #(
    .INIT(64'h2F202F2F2F202020)) 
    \gt_txd[1]_i_1 
       (.I0(Q[2]),
        .I1(Q[5]),
        .I2(q),
        .I3(rd_data[35]),
        .I4(\txsequence_int_reg_n_0_[0] ),
        .I5(rd_data[3]),
        .O(D[1]));
  LUT6 #(
    .INIT(64'hEFE0EFEFEFE0E0E0)) 
    \gt_txd[20]_i_1 
       (.I0(Q[5]),
        .I1(\gt_txd[29]_i_2_n_0 ),
        .I2(q),
        .I3(rd_data[54]),
        .I4(\txsequence_int_reg_n_0_[0] ),
        .I5(rd_data[22]),
        .O(D[20]));
  LUT6 #(
    .INIT(64'h2F202F2F2F202020)) 
    \gt_txd[21]_i_1 
       (.I0(\gt_txd[29]_i_2_n_0 ),
        .I1(Q[5]),
        .I2(q),
        .I3(rd_data[55]),
        .I4(\txsequence_int_reg_n_0_[0] ),
        .I5(rd_data[23]),
        .O(D[21]));
  LUT5 #(
    .INIT(32'h74777444)) 
    \gt_txd[22]_i_1 
       (.I0(\gt_txd[22]_i_2_n_0 ),
        .I1(q),
        .I2(rd_data[56]),
        .I3(\txsequence_int_reg_n_0_[0] ),
        .I4(rd_data[24]),
        .O(D[22]));
  LUT4 #(
    .INIT(16'h4441)) 
    \gt_txd[22]_i_2 
       (.I0(Q[5]),
        .I1(Q[2]),
        .I2(Q[1]),
        .I3(Q[0]),
        .O(\gt_txd[22]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \gt_txd[23]_i_1 
       (.I0(gt_txd_mux0),
        .I1(q),
        .I2(rd_data[57]),
        .I3(\txsequence_int_reg_n_0_[0] ),
        .I4(rd_data[25]),
        .O(D[23]));
  LUT4 #(
    .INIT(16'h0056)) 
    \gt_txd[23]_i_2 
       (.I0(Q[2]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[5]),
        .O(gt_txd_mux0));
  LUT6 #(
    .INIT(64'hBFB0BFBFBFB0B0B0)) 
    \gt_txd[24]_i_1 
       (.I0(Q[5]),
        .I1(Q[2]),
        .I2(q),
        .I3(rd_data[58]),
        .I4(\txsequence_int_reg_n_0_[0] ),
        .I5(rd_data[26]),
        .O(D[24]));
  LUT6 #(
    .INIT(64'h1F101F1F1F101010)) 
    \gt_txd[25]_i_1 
       (.I0(Q[2]),
        .I1(Q[5]),
        .I2(q),
        .I3(rd_data[59]),
        .I4(\txsequence_int_reg_n_0_[0] ),
        .I5(rd_data[27]),
        .O(D[25]));
  LUT5 #(
    .INIT(32'h74777444)) 
    \gt_txd[26]_i_1 
       (.I0(\gt_txd[26]_i_2_n_0 ),
        .I1(q),
        .I2(rd_data[60]),
        .I3(\txsequence_int_reg_n_0_[0] ),
        .I4(rd_data[28]),
        .O(D[26]));
  LUT4 #(
    .INIT(16'h006A)) 
    \gt_txd[26]_i_2 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[5]),
        .O(\gt_txd[26]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h74777444)) 
    \gt_txd[27]_i_1 
       (.I0(\gt_txd[27]_i_2_n_0 ),
        .I1(q),
        .I2(rd_data[61]),
        .I3(\txsequence_int_reg_n_0_[0] ),
        .I4(rd_data[29]),
        .O(D[27]));
  LUT4 #(
    .INIT(16'hBEEE)) 
    \gt_txd[27]_i_2 
       (.I0(Q[5]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(Q[1]),
        .O(\gt_txd[27]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hBFB0BFBFBFB0B0B0)) 
    \gt_txd[28]_i_1 
       (.I0(Q[5]),
        .I1(\gt_txd[29]_i_2_n_0 ),
        .I2(q),
        .I3(rd_data[62]),
        .I4(\txsequence_int_reg_n_0_[0] ),
        .I5(rd_data[30]),
        .O(D[28]));
  LUT6 #(
    .INIT(64'h1F101F1F1F101010)) 
    \gt_txd[29]_i_1 
       (.I0(\gt_txd[29]_i_2_n_0 ),
        .I1(Q[5]),
        .I2(q),
        .I3(rd_data[63]),
        .I4(\txsequence_int_reg_n_0_[0] ),
        .I5(rd_data[31]),
        .O(D[29]));
  LUT2 #(
    .INIT(4'h6)) 
    \gt_txd[29]_i_2 
       (.I0(Q[1]),
        .I1(Q[2]),
        .O(\gt_txd[29]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \gt_txd[2]_i_1 
       (.I0(\gt_txd[27]_i_2_n_0 ),
        .I1(q),
        .I2(rd_data[36]),
        .I3(\txsequence_int_reg_n_0_[0] ),
        .I4(rd_data[4]),
        .O(D[2]));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \gt_txd[30]_i_1 
       (.I0(\gt_txd[30]_i_2_n_0 ),
        .I1(q),
        .I2(rd_data[64]),
        .I3(\txsequence_int_reg_n_0_[0] ),
        .I4(rd_data[32]),
        .O(D[30]));
  LUT4 #(
    .INIT(16'hFAEB)) 
    \gt_txd[30]_i_2 
       (.I0(Q[5]),
        .I1(Q[1]),
        .I2(Q[2]),
        .I3(Q[0]),
        .O(\gt_txd[30]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \gt_txd[31]_i_1 
       (.I0(\gt_txd[31]_i_2_n_0 ),
        .I1(q),
        .I2(rd_data[65]),
        .I3(\txsequence_int_reg_n_0_[0] ),
        .I4(rd_data[33]),
        .O(D[31]));
  LUT4 #(
    .INIT(16'h00C9)) 
    \gt_txd[31]_i_2 
       (.I0(Q[1]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(Q[5]),
        .O(\gt_txd[31]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \gt_txd[3]_i_1 
       (.I0(\gt_txd[26]_i_2_n_0 ),
        .I1(q),
        .I2(rd_data[37]),
        .I3(\txsequence_int_reg_n_0_[0] ),
        .I4(rd_data[5]),
        .O(D[3]));
  LUT6 #(
    .INIT(64'hEFE0EFEFEFE0E0E0)) 
    \gt_txd[4]_i_1 
       (.I0(Q[5]),
        .I1(\gt_txd[29]_i_2_n_0 ),
        .I2(q),
        .I3(rd_data[38]),
        .I4(\txsequence_int_reg_n_0_[0] ),
        .I5(rd_data[6]),
        .O(D[4]));
  LUT6 #(
    .INIT(64'h2F202F2F2F202020)) 
    \gt_txd[5]_i_1 
       (.I0(\gt_txd[29]_i_2_n_0 ),
        .I1(Q[5]),
        .I2(q),
        .I3(rd_data[39]),
        .I4(\txsequence_int_reg_n_0_[0] ),
        .I5(rd_data[7]),
        .O(D[5]));
  LUT5 #(
    .INIT(32'h74777444)) 
    \gt_txd[6]_i_1 
       (.I0(\gt_txd[22]_i_2_n_0 ),
        .I1(q),
        .I2(rd_data[40]),
        .I3(\txsequence_int_reg_n_0_[0] ),
        .I4(rd_data[8]),
        .O(D[6]));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \gt_txd[7]_i_1 
       (.I0(gt_txd_mux0),
        .I1(q),
        .I2(rd_data[41]),
        .I3(\txsequence_int_reg_n_0_[0] ),
        .I4(rd_data[9]),
        .O(D[7]));
  LUT6 #(
    .INIT(64'hBFB0BFBFBFB0B0B0)) 
    \gt_txd[8]_i_1 
       (.I0(Q[5]),
        .I1(Q[2]),
        .I2(q),
        .I3(rd_data[42]),
        .I4(\txsequence_int_reg_n_0_[0] ),
        .I5(rd_data[10]),
        .O(D[8]));
  LUT6 #(
    .INIT(64'h1F101F1F1F101010)) 
    \gt_txd[9]_i_1 
       (.I0(Q[2]),
        .I1(Q[5]),
        .I2(q),
        .I3(rd_data[43]),
        .I4(\txsequence_int_reg_n_0_[0] ),
        .I5(rd_data[11]),
        .O(D[9]));
  LUT3 #(
    .INIT(8'h04)) 
    read_enable_i_1
       (.I0(txreset_txusrclk2),
        .I1(read_enable_i_2_n_0),
        .I2(read_enable),
        .O(read_enable_i_1_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFF7FFFFFFF)) 
    read_enable_i_2
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(Q[1]),
        .I4(Q[3]),
        .I5(Q[5]),
        .O(read_enable_i_2_n_0));
  FDRE read_enable_reg
       (.C(txusrclk2),
        .CE(1'b1),
        .D(read_enable_i_1_n_0),
        .Q(read_enable),
        .R(1'b0));
  LUT1 #(
    .INIT(2'h1)) 
    \txsequence_int[0]_i_1 
       (.I0(\txsequence_int_reg_n_0_[0] ),
        .O(txsequence_int[0]));
  LUT4 #(
    .INIT(16'h8BB8)) 
    \txsequence_int[1]_i_1 
       (.I0(\txsequence_int[1]_i_2_n_0 ),
        .I1(Q[5]),
        .I2(\txsequence_int_reg_n_0_[0] ),
        .I3(Q[0]),
        .O(txsequence_int[1]));
  LUT6 #(
    .INIT(64'h0000FFFEFFFF0000)) 
    \txsequence_int[1]_i_2 
       (.I0(Q[4]),
        .I1(Q[3]),
        .I2(Q[2]),
        .I3(Q[1]),
        .I4(Q[0]),
        .I5(\txsequence_int_reg_n_0_[0] ),
        .O(\txsequence_int[1]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'h6A)) 
    \txsequence_int[2]_i_1 
       (.I0(Q[1]),
        .I1(\txsequence_int_reg_n_0_[0] ),
        .I2(Q[0]),
        .O(txsequence_int[2]));
  (* SOFT_HLUTNM = "soft_lutpair4" *) 
  LUT4 #(
    .INIT(16'h6AAA)) 
    \txsequence_int[3]_i_1 
       (.I0(Q[2]),
        .I1(\txsequence_int_reg_n_0_[0] ),
        .I2(Q[0]),
        .I3(Q[1]),
        .O(txsequence_int[3]));
  (* SOFT_HLUTNM = "soft_lutpair4" *) 
  LUT5 #(
    .INIT(32'h6AAAAAAA)) 
    \txsequence_int[4]_i_1 
       (.I0(Q[3]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(\txsequence_int_reg_n_0_[0] ),
        .I4(Q[2]),
        .O(txsequence_int[4]));
  LUT6 #(
    .INIT(64'h6AAAAAAAAAAAAAAA)) 
    \txsequence_int[5]_i_1 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\txsequence_int_reg_n_0_[0] ),
        .I3(Q[0]),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(txsequence_int[5]));
  LUT4 #(
    .INIT(16'hFF40)) 
    \txsequence_int[6]_i_1 
       (.I0(read_enable),
        .I1(Q[5]),
        .I2(\txsequence_int[6]_i_3_n_0 ),
        .I3(txreset_txusrclk2),
        .O(txsequence_int0));
  LUT6 #(
    .INIT(64'h0000000000000010)) 
    \txsequence_int[6]_i_3 
       (.I0(Q[3]),
        .I1(Q[1]),
        .I2(\txsequence_int_reg_n_0_[0] ),
        .I3(Q[0]),
        .I4(Q[2]),
        .I5(Q[4]),
        .O(\txsequence_int[6]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \txsequence_int[6]_i_4 
       (.I0(Q[3]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(\txsequence_int_reg_n_0_[0] ),
        .I4(Q[2]),
        .I5(Q[4]),
        .O(\txsequence_int[6]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFFFFFFFFEF)) 
    \txsequence_int[6]_i_5 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\txsequence_int_reg_n_0_[0] ),
        .I3(Q[0]),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\txsequence_int[6]_i_5_n_0 ));
  FDSE \txsequence_int_reg[0] 
       (.C(txusrclk2),
        .CE(1'b1),
        .D(txsequence_int[0]),
        .Q(\txsequence_int_reg_n_0_[0] ),
        .S(txsequence_int0));
  FDRE \txsequence_int_reg[1] 
       (.C(txusrclk2),
        .CE(1'b1),
        .D(txsequence_int[1]),
        .Q(Q[0]),
        .R(txsequence_int0));
  FDRE \txsequence_int_reg[2] 
       (.C(txusrclk2),
        .CE(1'b1),
        .D(txsequence_int[2]),
        .Q(Q[1]),
        .R(txsequence_int0));
  FDRE \txsequence_int_reg[3] 
       (.C(txusrclk2),
        .CE(1'b1),
        .D(txsequence_int[3]),
        .Q(Q[2]),
        .R(txsequence_int0));
  FDRE \txsequence_int_reg[4] 
       (.C(txusrclk2),
        .CE(1'b1),
        .D(txsequence_int[4]),
        .Q(Q[3]),
        .R(txsequence_int0));
  FDRE \txsequence_int_reg[5] 
       (.C(txusrclk2),
        .CE(1'b1),
        .D(txsequence_int[5]),
        .Q(Q[4]),
        .R(txsequence_int0));
  FDSE \txsequence_int_reg[6] 
       (.C(txusrclk2),
        .CE(1'b1),
        .D(txsequence_int[6]),
        .Q(Q[5]),
        .S(txsequence_int0));
  MUXF7 \txsequence_int_reg[6]_i_2 
       (.I0(\txsequence_int[6]_i_4_n_0 ),
        .I1(\txsequence_int[6]_i_5_n_0 ),
        .O(txsequence_int[6]),
        .S(Q[5]));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_15_wrapper" *) 
module ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_wrapper
   (drp_den,
    drp_di,
    drp_daddr,
    data_out_reg,
    loopback_ctrl,
    cable_pull,
    core_status,
    mdio_out,
    mdio_tri,
    pma_resetout,
    drp_req,
    drp_dwe,
    rx_prbs31_en,
    tx_disable,
    tx_prbs31_en,
    gt_txd,
    gt_txc,
    gt_slip,
    core_in_testmode,
    clear_rx_prbs_err_count,
    xgmii_rxd,
    xgmii_rxc,
    reset,
    coreclk,
    txusrclk2,
    txreset_txusrclk2,
    rxreset_rxusrclk2,
    rxusrclk2,
    signal_detect,
    areset_coreclk,
    drp_gnt,
    drp_drdy,
    dclk_reset,
    dclk,
    drp_drpdo,
    mdc,
    mdio_in,
    prtad,
    pma_pmd_type,
    resetdone,
    xgmii_txd,
    xgmii_txc,
    gt_rxd,
    gt_rxc);
  output drp_den;
  output [15:0]drp_di;
  output [15:0]drp_daddr;
  output data_out_reg;
  output [0:0]loopback_ctrl;
  output cable_pull;
  output [0:0]core_status;
  output mdio_out;
  output mdio_tri;
  output pma_resetout;
  output drp_req;
  output drp_dwe;
  output rx_prbs31_en;
  output tx_disable;
  output tx_prbs31_en;
  output [31:0]gt_txd;
  output [7:0]gt_txc;
  output gt_slip;
  output core_in_testmode;
  output clear_rx_prbs_err_count;
  output [63:0]xgmii_rxd;
  output [7:0]xgmii_rxc;
  input reset;
  input coreclk;
  input txusrclk2;
  input txreset_txusrclk2;
  input rxreset_rxusrclk2;
  input rxusrclk2;
  input signal_detect;
  input areset_coreclk;
  input drp_gnt;
  input drp_drdy;
  input dclk_reset;
  input dclk;
  input [15:0]drp_drpdo;
  input mdc;
  input mdio_in;
  input [4:0]prtad;
  input [2:0]pma_pmd_type;
  input resetdone;
  input [63:0]xgmii_txd;
  input [7:0]xgmii_txc;
  input [31:0]gt_rxd;
  input [3:0]gt_rxc;

  wire areset_coreclk;
  wire cable_pull;
  wire clear_rx_prbs_err_count;
  wire core_in_testmode;
  wire [0:0]core_status;
  wire coreclk;
  wire data_out_reg;
  wire dclk;
  wire dclk_reset;
  wire [15:0]drp_daddr;
  wire drp_den;
  wire [15:0]drp_di;
  wire drp_drdy;
  wire [15:0]drp_drpdo;
  wire drp_dwe;
  wire drp_gnt;
  wire drp_req;
  wire [3:0]gt_rxc;
  wire [31:0]gt_rxd;
  wire gt_slip;
  wire [7:0]gt_txc;
  wire [31:0]gt_txd;
  wire [0:0]loopback_ctrl;
  wire mdc;
  wire mdio_in;
  wire mdio_out;
  wire mdio_tri;
  wire [2:0]pma_pmd_type;
  wire pma_resetout;
  wire [4:0]prtad;
  wire reset;
  wire resetdone;
  wire rx_prbs31_en;
  wire rxreset_rxusrclk2;
  wire rxusrclk2;
  wire signal_detect;
  wire tx_disable;
  wire tx_prbs31_en;
  wire txreset_txusrclk2;
  wire txusrclk2;
  wire [7:0]xgmii_rxc;
  wire [63:0]xgmii_rxd;
  wire [7:0]xgmii_txc;
  wire [63:0]xgmii_txd;

  ten_gig_eth_pcs_pmaten_gig_eth_pcs_pma_v6_0_15_baser_gen \G_IS_BASER.ten_gig_eth_pcs_pma_inst 
       (.D({gt_rxd,gt_rxc[1:0]}),
        .SR(data_out_reg),
        .areset_coreclk(areset_coreclk),
        .cable_pull(cable_pull),
        .clear_rx_prbs_err_count(clear_rx_prbs_err_count),
        .core_in_testmode(core_in_testmode),
        .core_status(core_status),
        .coreclk(coreclk),
        .dclk(dclk),
        .dclk_reset(dclk_reset),
        .drp_daddr(drp_daddr),
        .drp_den(drp_den),
        .drp_di(drp_di),
        .drp_drdy(drp_drdy),
        .drp_drpdo(drp_drpdo),
        .drp_dwe(drp_dwe),
        .drp_gnt(drp_gnt),
        .drp_req(drp_req),
        .gt_rxc(gt_rxc[3:2]),
        .gt_slip(gt_slip),
        .gt_txc(gt_txc),
        .gt_txd(gt_txd),
        .loopback_ctrl(loopback_ctrl),
        .mdc(mdc),
        .mdio_in(mdio_in),
        .mdio_out(mdio_out),
        .mdio_tri(mdio_tri),
        .pma_pmd_type(pma_pmd_type),
        .pma_resetout(pma_resetout),
        .prtad(prtad),
        .reset(reset),
        .resetdone(resetdone),
        .rx_prbs31_en(rx_prbs31_en),
        .rxreset_rxusrclk2(rxreset_rxusrclk2),
        .rxusrclk2(rxusrclk2),
        .signal_detect(signal_detect),
        .tx_disable(tx_disable),
        .tx_prbs31_en(tx_prbs31_en),
        .txreset_txusrclk2(txreset_txusrclk2),
        .txusrclk2(txusrclk2),
        .xgmii_rxc(xgmii_rxc),
        .xgmii_rxd(xgmii_rxd),
        .xgmii_txc(xgmii_txc),
        .xgmii_txd(xgmii_txd));
endmodule
`ifndef GLBL
`define GLBL
`timescale  1 ps / 1 ps

module glbl ();

    parameter ROC_WIDTH = 100000;
    parameter TOC_WIDTH = 0;

//--------   STARTUP Globals --------------
    wire GSR;
    wire GTS;
    wire GWE;
    wire PRLD;
    tri1 p_up_tmp;
    tri (weak1, strong0) PLL_LOCKG = p_up_tmp;

    wire PROGB_GLBL;
    wire CCLKO_GLBL;
    wire FCSBO_GLBL;
    wire [3:0] DO_GLBL;
    wire [3:0] DI_GLBL;
   
    reg GSR_int;
    reg GTS_int;
    reg PRLD_int;

//--------   JTAG Globals --------------
    wire JTAG_TDO_GLBL;
    wire JTAG_TCK_GLBL;
    wire JTAG_TDI_GLBL;
    wire JTAG_TMS_GLBL;
    wire JTAG_TRST_GLBL;

    reg JTAG_CAPTURE_GLBL;
    reg JTAG_RESET_GLBL;
    reg JTAG_SHIFT_GLBL;
    reg JTAG_UPDATE_GLBL;
    reg JTAG_RUNTEST_GLBL;

    reg JTAG_SEL1_GLBL = 0;
    reg JTAG_SEL2_GLBL = 0 ;
    reg JTAG_SEL3_GLBL = 0;
    reg JTAG_SEL4_GLBL = 0;

    reg JTAG_USER_TDO1_GLBL = 1'bz;
    reg JTAG_USER_TDO2_GLBL = 1'bz;
    reg JTAG_USER_TDO3_GLBL = 1'bz;
    reg JTAG_USER_TDO4_GLBL = 1'bz;

    assign (strong1, weak0) GSR = GSR_int;
    assign (strong1, weak0) GTS = GTS_int;
    assign (weak1, weak0) PRLD = PRLD_int;

    initial begin
	GSR_int = 1'b1;
	PRLD_int = 1'b1;
	#(ROC_WIDTH)
	GSR_int = 1'b0;
	PRLD_int = 1'b0;
    end

    initial begin
	GTS_int = 1'b1;
	#(TOC_WIDTH)
	GTS_int = 1'b0;
    end

endmodule
`endif
